/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400BF0();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// int listen(int fd, int n);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int connect(int fd, const struct sockaddr *addr, socklen_t len);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int bind(int fd, const struct sockaddr *addr, socklen_t len);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// in_addr_t inet_addr(const char *cp);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_bad();
int goodG2B();
int goodB2G();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53c_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_51b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_rand_preinc_61_bad();
int goodG2B_0();
int goodB2G_0();
int CWE190_Integer_Overflow__int_rand_preinc_61_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_16_bad();
int goodB2G_1();
int goodG2B_1();
int CWE190_Integer_Overflow__short_fscanf_preinc_16_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_68b_badSink();
int CWE190_Integer_Overflow__int_listen_socket_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_listen_socket_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_rand_preinc_07_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1();
int goodG2B2();
int CWE190_Integer_Overflow__int_rand_preinc_07_good();
int __fastcall badSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_21_bad();
int __fastcall goodB2G1Sink(int a1);
int goodB2G1_0();
int __fastcall goodB2G2Sink(int a1);
int goodB2G2_0();
int __fastcall goodG2BSink(int a1);
int goodG2B_2();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_21_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_0();
int goodG2B2_0();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_03_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_31_bad();
int goodG2B_3();
int goodB2G_2();
int CWE190_Integer_Overflow__char_fscanf_preinc_31_good();
__int64 __fastcall badSource(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_42_bad();
__int64 goodG2BSource();
int goodG2B_4();
__int64 __fastcall goodB2GSource(unsigned int a1);
int goodB2G_3();
int CWE190_Integer_Overflow__int_fscanf_preinc_42_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_1();
int goodG2B2_1();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_good();
int CWE190_Integer_Overflow__short_max_preinc_66_bad();
int goodG2B_5();
int goodB2G_4();
int CWE190_Integer_Overflow__short_max_preinc_66_good();
int CWE190_Integer_Overflow__int_fgets_preinc_06_bad();
int goodB2G1_3();
int goodB2G2_3();
int goodG2B1_2();
int goodG2B2_2();
int CWE190_Integer_Overflow__int_fgets_preinc_06_good();
int __fastcall badSink_0(int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_21_bad();
int __fastcall goodB2G1Sink_0(int a1);
int goodB2G1_4();
int __fastcall goodB2G2Sink_0(int a1);
int goodB2G2_4();
int __fastcall goodG2BSink_0(int a1);
int goodG2B_6();
int CWE190_Integer_Overflow__int_fgets_preinc_21_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_51_bad();
int goodG2B_7();
int goodB2G_5();
int CWE190_Integer_Overflow__short_fscanf_preinc_51_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_17_bad();
int goodB2G_6();
int goodG2B_8();
int CWE190_Integer_Overflow__int64_t_max_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_18_bad();
int goodB2G_7();
int goodG2B_9();
int CWE190_Integer_Overflow__int64_t_rand_preinc_18_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_12_bad();
int goodB2G_8();
int goodG2B_10();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_12_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_64b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_64b_goodB2GSink(_BYTE *a1);
int badSink_1();
int CWE190_Integer_Overflow__short_fscanf_preinc_45_bad();
int goodG2BSink_1();
int goodG2B_11();
int goodB2GSink();
int goodB2G_9();
int CWE190_Integer_Overflow__short_fscanf_preinc_45_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_05_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_3();
int goodG2B2_3();
int CWE190_Integer_Overflow__int_fscanf_preinc_05_good();
int __fastcall badSink_2(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_41_bad();
int __fastcall goodG2BSink_2(int a1);
int goodG2B_12();
int __fastcall goodB2GSink_0(int a1);
int goodB2G_10();
int CWE190_Integer_Overflow__int_fscanf_preinc_41_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_06_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_4();
int goodG2B2_4();
int CWE190_Integer_Overflow__short_fscanf_preinc_06_good();
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__int_listen_socket_preinc_53_bad();
int goodG2B_13();
int goodB2G_11();
int CWE190_Integer_Overflow__int_listen_socket_preinc_53_good();
int CWE190_Integer_Overflow__char_rand_preinc_63_bad();
int goodG2B_14();
int goodB2G_12();
int CWE190_Integer_Overflow__char_rand_preinc_63_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_bad();
int goodG2B_15();
int goodB2G_13();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_22_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B_16();
int CWE190_Integer_Overflow__char_fscanf_preinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_02_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_5();
int goodG2B2_5();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_02_good();
int CWE190_Integer_Overflow__char_max_preinc_64_bad();
int goodG2B_17();
int goodB2G_14();
int CWE190_Integer_Overflow__char_max_preinc_64_good();
int CWE190_Integer_Overflow__int_max_preinc_65_bad();
int goodG2B_18();
int goodB2G_15();
int CWE190_Integer_Overflow__int_max_preinc_65_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_61_bad();
int goodG2B_19();
int goodB2G_16();
int CWE190_Integer_Overflow__int64_t_max_preinc_61_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_10_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_6();
int goodG2B2_6();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_07_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_7();
int goodG2B2_7();
int CWE190_Integer_Overflow__int64_t_max_preinc_07_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_13_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_8();
int goodG2B2_8();
int CWE190_Integer_Overflow__char_fscanf_preinc_13_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_66_bad();
int goodG2B_20();
int goodB2G_17();
int CWE190_Integer_Overflow__int_fscanf_preinc_66_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_01_bad();
int goodG2B_21();
int goodB2G_18();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_01_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_9();
int goodG2B2_9();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54c_goodB2GSink(__int64 a1);
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad();
void goodB2G_19();
int goodG2B_22();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_67b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_67b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_67b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_fgets_preinc_02_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_10();
int goodG2B2_10();
int CWE190_Integer_Overflow__int_fgets_preinc_02_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_52_bad();
int goodG2B_23();
int goodB2G_20();
int CWE190_Integer_Overflow__int_listen_socket_preinc_52_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_51_bad();
int goodG2B_24();
int goodB2G_21();
int CWE190_Integer_Overflow__int_connect_socket_preinc_51_good();
int __fastcall badSink_3(char a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_21_bad();
int __fastcall goodB2G1Sink_1(char a1);
int goodB2G1_14();
int __fastcall goodB2G2Sink_1(char a1);
int goodB2G2_14();
int __fastcall goodG2BSink_3(char a1);
int goodG2B_25();
int CWE190_Integer_Overflow__char_fscanf_preinc_21_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_03_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_11();
int goodG2B2_11();
int CWE190_Integer_Overflow__char_fscanf_preinc_03_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_16_bad();
int goodB2G_22();
int goodG2B_26();
int CWE190_Integer_Overflow__int_listen_socket_preinc_16_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_54_bad();
int goodG2B_27();
int goodB2G_23();
int CWE190_Integer_Overflow__int_listen_socket_preinc_54_good();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_goodB2GSource();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_bad();
int goodG2B_28();
__int64 goodB2G_24();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_good();
__int64 badSource_0();
int CWE190_Integer_Overflow__char_max_preinc_42_bad();
__int64 goodG2BSource_0();
int goodG2B_29();
__int64 goodB2GSource_0();
int goodB2G_25();
int CWE190_Integer_Overflow__char_max_preinc_42_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_bad();
int goodG2B_30();
int goodB2G_26();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad();
int goodB2G_27();
int goodG2B_31();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_good();
int CWE190_Integer_Overflow__int_max_preinc_14_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_12();
int goodG2B2_12();
int CWE190_Integer_Overflow__int_max_preinc_14_good();
int CWE190_Integer_Overflow__char_max_preinc_09_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_13();
int goodG2B2_13();
int CWE190_Integer_Overflow__char_max_preinc_09_good();
int CWE190_Integer_Overflow__int_max_preinc_32_bad();
int goodG2B_32();
int goodB2G_28();
int CWE190_Integer_Overflow__int_max_preinc_32_good();
int CWE190_Integer_Overflow__int_rand_preinc_32_bad();
int goodG2B_33();
int goodB2G_29();
int CWE190_Integer_Overflow__int_rand_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54c_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_preinc_13_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B1_14();
int goodG2B2_14();
int CWE190_Integer_Overflow__short_rand_preinc_13_good();
void CWE190_Integer_Overflow__int_connect_socket_preinc_17_bad();
void goodB2G_30();
int goodG2B_34();
int CWE190_Integer_Overflow__int_connect_socket_preinc_17_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_66_bad();
int goodG2B_35();
int goodB2G_31();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_66_good();
int CWE190_Integer_Overflow__int_fgets_preinc_14_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_15();
int goodG2B2_15();
int CWE190_Integer_Overflow__int_fgets_preinc_14_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_bad();
int goodG2B_36();
int goodB2G_32();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_bad();
int goodG2B_37();
int goodB2G_33();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_good();
int CWE190_Integer_Overflow__int_fgets_preinc_32_bad();
int goodG2B_38();
int goodB2G_34();
int CWE190_Integer_Overflow__int_fgets_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_rand_preinc_61_bad();
int goodG2B_39();
int goodB2G_35();
int CWE190_Integer_Overflow__char_rand_preinc_61_good();
int CWE190_Integer_Overflow__int_max_preinc_04_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_16();
int goodG2B2_16();
int CWE190_Integer_Overflow__int_max_preinc_04_good();
int CWE190_Integer_Overflow__int_max_preinc_31_bad();
int goodG2B_40();
int goodB2G_36();
int CWE190_Integer_Overflow__int_max_preinc_31_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_64b_goodB2GSink(_DWORD *a1);
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE190_Integer_Overflow__short_fscanf_preinc_08_bad();
int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_17();
int goodG2B2_17();
int CWE190_Integer_Overflow__short_fscanf_preinc_08_good();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_61b_goodB2GSource(unsigned int a1);
int badSink_4();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_bad();
int goodG2BSink_4();
int goodG2B_41();
int goodB2GSink_1();
int goodB2G_37();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_good();
int CWE190_Integer_Overflow__short_rand_preinc_03_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_18();
int goodG2B2_18();
int CWE190_Integer_Overflow__short_rand_preinc_03_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B1_19();
int goodG2B2_19();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_good();
int CWE190_Integer_Overflow__char_rand_preinc_07_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_20();
int goodG2B2_20();
int CWE190_Integer_Overflow__char_rand_preinc_07_good();
int CWE190_Integer_Overflow__int_fgets_preinc_04_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_21();
int goodG2B2_21();
int CWE190_Integer_Overflow__int_fgets_preinc_04_good();
int CWE190_Integer_Overflow__int_fgets_preinc_31_bad();
int goodG2B_42();
int goodB2G_38();
int CWE190_Integer_Overflow__int_fgets_preinc_31_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_22();
int goodG2B2_22();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_bad();
int goodG2B_43();
int goodB2G_39();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_18_bad();
int goodB2G_40();
int goodG2B_44();
int CWE190_Integer_Overflow__int_listen_socket_preinc_18_good();
int CWE190_Integer_Overflow__int_rand_preinc_64_bad();
int goodG2B_45();
int goodB2G_41();
int CWE190_Integer_Overflow__int_rand_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_61_bad();
int goodG2B_46();
int goodB2G_42();
int CWE190_Integer_Overflow__int_connect_socket_preinc_61_good();
int CWE190_Integer_Overflow__short_rand_preinc_12_bad();
int goodB2G_43();
int goodG2B_47();
int CWE190_Integer_Overflow__short_rand_preinc_12_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_bad();
int goodG2B_48();
int goodB2G_44();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_good();
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_65_bad();
int goodG2B_49();
__int64 goodB2G_45();
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_65b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_65b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_65b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_05_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B1_23();
int goodG2B2_23();
int CWE190_Integer_Overflow__char_fscanf_preinc_05_good();
int __fastcall badSink_5(char a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_41_bad();
int __fastcall goodG2BSink_5(char a1);
int goodG2B_50();
int __fastcall goodB2GSink_2(char a1);
int goodB2G_46();
int CWE190_Integer_Overflow__char_fscanf_preinc_41_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_07_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_24();
int goodG2B2_24();
int CWE190_Integer_Overflow__int_connect_socket_preinc_07_good();
int CWE190_Integer_Overflow__int_max_preinc_22_bad();
int goodB2G1_29();
int goodB2G2_29();
int goodG2B_51();
int CWE190_Integer_Overflow__int_max_preinc_22_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_25();
int goodG2B2_25();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_bad();
int goodG2B_52();
int goodB2G_47();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_34_bad();
int goodG2B_53();
int goodB2G_48();
int CWE190_Integer_Overflow__char_fscanf_preinc_34_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_54_bad();
int goodG2B_54();
int goodB2G_49();
int CWE190_Integer_Overflow__short_fscanf_preinc_54_good();
int CWE190_Integer_Overflow__short_rand_preinc_11_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_26();
int goodG2B2_26();
int CWE190_Integer_Overflow__short_rand_preinc_11_good();
int CWE190_Integer_Overflow__short_rand_preinc_02_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B1_27();
int goodG2B2_27();
int CWE190_Integer_Overflow__short_rand_preinc_02_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_preinc_22_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B_55();
int CWE190_Integer_Overflow__int_fgets_preinc_22_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_11_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_28();
int goodG2B2_28();
int CWE190_Integer_Overflow__int_fscanf_preinc_11_good();
int CWE190_Integer_Overflow__char_max_preinc_65_bad();
int goodG2B_56();
int goodB2G_50();
int CWE190_Integer_Overflow__char_max_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__short_rand_preinc_10_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B1_29();
int goodG2B2_29();
int CWE190_Integer_Overflow__short_rand_preinc_10_good();
int CWE190_Integer_Overflow__int_max_preinc_13_bad();
int goodB2G1_36();
int goodB2G2_36();
int goodG2B1_30();
int goodG2B2_30();
int CWE190_Integer_Overflow__int_max_preinc_13_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_64b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int_rand_preinc_52_bad();
int goodG2B_57();
int goodB2G_51();
int CWE190_Integer_Overflow__int_rand_preinc_52_good();
int __fastcall badSink_6(int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_44_bad();
int __fastcall goodG2BSink_6(int a1);
int goodG2B_58();
int __fastcall goodB2GSink_3(int a1);
__int64 goodB2G_52();
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_44_good();
int CWE190_Integer_Overflow__short_rand_preinc_01_bad();
int goodG2B_59();
int goodB2G_53();
int CWE190_Integer_Overflow__short_rand_preinc_01_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_31();
int goodG2B2_31();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_good();
int CWE190_Integer_Overflow__int_fgets_preinc_13_bad();
int goodB2G1_38();
int goodB2G2_38();
int goodG2B1_32();
int goodG2B2_32();
int CWE190_Integer_Overflow__int_fgets_preinc_13_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B_60();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_good();
int CWE190_Integer_Overflow__int_max_preinc_03_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_33();
int goodG2B2_33();
int CWE190_Integer_Overflow__int_max_preinc_03_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_preinc_09_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_34();
int goodG2B2_34();
int CWE190_Integer_Overflow__short_rand_preinc_09_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_35();
int goodG2B2_35();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_14_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_32_bad();
int goodG2B_61();
int goodB2G_54();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_63b_goodB2GSink(_DWORD *a1);
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE190_Integer_Overflow__int_listen_socket_preinc_08_bad();
int goodB2G1_43();
int goodB2G2_43();
int goodG2B1_36();
int goodG2B2_36();
int CWE190_Integer_Overflow__int_listen_socket_preinc_08_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_16_bad();
int goodB2G_55();
int goodG2B_62();
int CWE190_Integer_Overflow__char_fscanf_preinc_16_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_37();
int goodG2B2_37();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_68b_badSink();
int CWE190_Integer_Overflow__short_fscanf_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_fscanf_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_max_preinc_12_bad();
int goodB2G_56();
int goodG2B_63();
int CWE190_Integer_Overflow__int_max_preinc_12_good();
int CWE190_Integer_Overflow__short_rand_preinc_34_bad();
int goodG2B_64();
int goodB2G_57();
int CWE190_Integer_Overflow__short_rand_preinc_34_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B1_38();
int goodG2B2_38();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_04_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_31_bad();
int goodG2B_65();
int goodB2G_58();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_31_good();
int CWE190_Integer_Overflow__int_rand_preinc_63_bad();
int goodG2B_66();
int goodB2G_59();
int CWE190_Integer_Overflow__int_rand_preinc_63_good();
int CWE190_Integer_Overflow__int_fgets_preinc_12_bad();
int goodB2G_60();
int goodG2B_67();
int CWE190_Integer_Overflow__int_fgets_preinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_39();
int goodG2B2_39();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_good();
int CWE190_Integer_Overflow__int_max_preinc_11_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B1_40();
int goodG2B2_40();
int CWE190_Integer_Overflow__int_max_preinc_11_good();
int CWE190_Integer_Overflow__int_max_preinc_02_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_41();
int goodG2B2_41();
int CWE190_Integer_Overflow__int_max_preinc_02_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_68_bad();
int goodG2B_68();
int goodB2G_61();
int CWE190_Integer_Overflow__short_fscanf_preinc_68_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_67b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_67b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_67b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_12_bad();
int goodB2G_62();
int goodG2B_69();
int CWE190_Integer_Overflow__char_fscanf_preinc_12_good();
int __fastcall badSink_7(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_21_bad();
int __fastcall goodB2G1Sink_2(__int64 a1);
int goodB2G1_49();
int __fastcall goodB2G2Sink_2(__int64 a1);
int goodB2G2_49();
int __fastcall goodG2BSink_7(__int64 a1);
int goodG2B_70();
int CWE190_Integer_Overflow__int64_t_max_preinc_21_good();
int badSink_8();
int CWE190_Integer_Overflow__char_rand_preinc_45_bad();
int goodG2BSink_8();
int goodG2B_71();
int goodB2GSink_4();
int goodB2G_63();
int CWE190_Integer_Overflow__char_rand_preinc_45_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_67_bad();
int goodG2B_72();
int goodB2G_64();
int CWE190_Integer_Overflow__int64_t_rand_preinc_67_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_53_bad();
int goodG2B_73();
int goodB2G_65();
int CWE190_Integer_Overflow__short_fscanf_preinc_53_good();
int CWE190_Integer_Overflow__short_max_preinc_15_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_42();
int goodG2B2_42();
int CWE190_Integer_Overflow__short_max_preinc_15_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_bad();
int goodG2B_74();
int goodB2G_66();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad();
int goodB2G_67();
int goodG2B_75();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_good();
int CWE190_Integer_Overflow__int_max_preinc_01_bad();
int goodG2B_76();
int goodB2G_68();
int CWE190_Integer_Overflow__int_max_preinc_01_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_43();
int goodG2B2_43();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_good();
__int64 badSource_1();
int CWE190_Integer_Overflow__short_max_preinc_42_bad();
__int64 goodG2BSource_1();
int goodG2B_77();
__int64 goodB2GSource_1();
int goodB2G_69();
int CWE190_Integer_Overflow__short_max_preinc_42_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_65b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_fgets_preinc_10_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_44();
int goodG2B2_44();
int CWE190_Integer_Overflow__int_fgets_preinc_10_good();
void CWE190_Integer_Overflow__int_rand_preinc_17_bad();
void goodB2G_70();
int goodG2B_78();
int CWE190_Integer_Overflow__int_rand_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_63b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B_79();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_01_bad();
int goodG2B_80();
int goodB2G_71();
int CWE190_Integer_Overflow__int_fgets_preinc_01_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_45();
int goodG2B2_45();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_good();
int CWE190_Integer_Overflow__int_max_preinc_09_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_46();
int goodG2B2_46();
int CWE190_Integer_Overflow__int_max_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53c_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__int_rand_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int_rand_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_rand_preinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__short_max_preinc_05_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B1_47();
int goodG2B2_47();
int CWE190_Integer_Overflow__short_max_preinc_05_good();
int __fastcall badSink_9(__int16 a1);
int CWE190_Integer_Overflow__short_max_preinc_41_bad();
int __fastcall goodG2BSink_9(__int16 a1);
int goodG2B_81();
int __fastcall goodB2GSink_5(__int16 a1);
int goodB2G_72();
int CWE190_Integer_Overflow__short_max_preinc_41_good();
__int64 CWE190_Integer_Overflow__short_rand_preinc_65_bad();
int goodG2B_82();
__int64 goodB2G_73();
__int64 CWE190_Integer_Overflow__short_rand_preinc_65_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B1_48();
int goodG2B2_48();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_13_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B1_49();
int goodG2B2_49();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_13_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_32_bad();
int goodG2B_83();
int goodB2G_74();
int CWE190_Integer_Overflow__char_fscanf_preinc_32_good();
int CWE190_Integer_Overflow__short_max_preinc_34_bad();
int goodG2B_84();
int goodB2G_75();
int CWE190_Integer_Overflow__short_max_preinc_34_good();
int CWE190_Integer_Overflow__int_fgets_preinc_09_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_50();
int goodG2B2_50();
int CWE190_Integer_Overflow__int_fgets_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54e_goodB2GSink(int a1);
int __fastcall badSink_10(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad();
int __fastcall goodG2BSink_10(int a1);
int goodG2B_85();
int __fastcall goodB2GSink_6(int a1);
__int64 goodB2G_76();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_good();
int CWE190_Integer_Overflow__int_max_preinc_10_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B1_51();
int goodG2B2_51();
int CWE190_Integer_Overflow__int_max_preinc_10_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_14_bad();
int goodB2G1_61();
int goodB2G2_61();
int goodG2B1_52();
int goodG2B2_52();
int CWE190_Integer_Overflow__char_fscanf_preinc_14_good();
int badSink_11();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_bad();
int goodG2BSink_11();
int goodG2B_86();
int goodB2GSink_7();
int goodB2G_77();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_good();
int CWE190_Integer_Overflow__short_max_preinc_18_bad();
int goodB2G_78();
int goodG2B_87();
int CWE190_Integer_Overflow__short_max_preinc_18_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B1_53();
int goodG2B2_53();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_good();
int __fastcall badSink_12(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_bad();
int __fastcall goodG2BSink_12(int a1);
int goodG2B_88();
int __fastcall goodB2GSink_8(int a1);
int goodB2G_79();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__char_rand_preinc_01_bad();
int goodG2B_89();
int goodB2G_80();
int CWE190_Integer_Overflow__char_rand_preinc_01_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_bad();
int goodG2B_90();
int goodB2G_81();
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_02_bad();
int goodB2G1_63();
int goodB2G2_63();
int goodG2B1_54();
int goodG2B2_54();
int CWE190_Integer_Overflow__int_connect_socket_preinc_02_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad();
int goodG2B_91();
int goodB2G_82();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_06_bad();
int goodB2G1_64();
int goodB2G2_64();
int goodG2B1_55();
int goodG2B2_55();
int CWE190_Integer_Overflow__int_connect_socket_preinc_06_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_07_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_56();
int goodG2B2_56();
int CWE190_Integer_Overflow__short_fscanf_preinc_07_good();
int CWE190_Integer_Overflow__char_rand_preinc_09_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_57();
int goodG2B2_57();
int CWE190_Integer_Overflow__char_rand_preinc_09_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_01_bad();
int goodG2B_92();
int goodB2G_83();
int CWE190_Integer_Overflow__int_connect_socket_preinc_01_good();
int __fastcall badSink_13(int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_41_bad();
int __fastcall goodG2BSink_13(int a1);
int goodG2B_93();
int __fastcall goodB2GSink_9(int a1);
int goodB2G_84();
int CWE190_Integer_Overflow__int_fgets_preinc_41_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_68b_badSink();
int CWE190_Integer_Overflow__char_fscanf_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__char_fscanf_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_rand_preinc_14_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_58();
int goodG2B2_58();
int CWE190_Integer_Overflow__int64_t_rand_preinc_14_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_bad();
int goodG2B_94();
int goodB2G_85();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_16_bad();
int goodB2G_86();
int goodG2B_95();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_16_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_51b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_rand_preinc_04_bad();
int goodB2G1_68();
int goodB2G2_68();
int goodG2B1_59();
int goodG2B2_59();
int CWE190_Integer_Overflow__int_rand_preinc_04_good();
int CWE190_Integer_Overflow__int_rand_preinc_31_bad();
int goodG2B_96();
int goodB2G_87();
int CWE190_Integer_Overflow__int_rand_preinc_31_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_09_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B1_60();
int goodG2B2_60();
int CWE190_Integer_Overflow__int_connect_socket_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_18_bad();
int goodB2G_88();
int goodG2B_97();
int CWE190_Integer_Overflow__int_fscanf_preinc_18_good();
int badSink_14();
int CWE190_Integer_Overflow__int64_t_max_preinc_45_bad();
int goodG2BSink_14();
int goodG2B_98();
int goodB2GSink_10();
int goodB2G_89();
int CWE190_Integer_Overflow__int64_t_max_preinc_45_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_68_bad();
int goodG2B_99();
int goodB2G_90();
int CWE190_Integer_Overflow__char_fscanf_preinc_68_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_51_bad();
int goodG2B_100();
int goodB2G_91();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_51_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_goodB2GSink(int a1);
int __fastcall badSink_15(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_bad();
int __fastcall goodB2G1Sink_3(__int64 a1);
int goodB2G1_70();
int __fastcall goodB2G2Sink_3(__int64 a1);
int goodB2G2_70();
int __fastcall goodG2BSink_15(__int64 a1);
int goodG2B_101();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_66_bad();
int goodG2B_102();
int goodB2G_92();
int CWE190_Integer_Overflow__int_listen_socket_preinc_66_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE190_Integer_Overflow__short_max_preinc_08_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_61();
int goodG2B2_61();
int CWE190_Integer_Overflow__short_max_preinc_08_good();
int badSink_16();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_bad();
int goodG2BSink_16();
int goodG2B_103();
int goodB2GSink_11();
int goodB2G_93();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_53_bad();
int goodG2B_104();
int goodB2G_94();
int CWE190_Integer_Overflow__char_fscanf_preinc_53_good();
int CWE190_Integer_Overflow__char_max_preinc_15_bad();
int goodB2G1_72();
int goodB2G2_72();
int goodG2B1_62();
int goodG2B2_62();
int CWE190_Integer_Overflow__char_max_preinc_15_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B_105();
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_06_bad();
int goodB2G1_74();
int goodB2G2_74();
int goodG2B1_63();
int goodG2B2_63();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_06_good();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_14_bad();
int goodB2G1_75();
int goodB2G2_75();
int goodG2B1_64();
int goodG2B2_64();
int CWE190_Integer_Overflow__int64_t_max_preinc_14_good();
int CWE190_Integer_Overflow__char_rand_preinc_53_bad();
int goodG2B_106();
int goodB2G_95();
int CWE190_Integer_Overflow__char_rand_preinc_53_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_32_bad();
int goodG2B_107();
int goodB2G_96();
int CWE190_Integer_Overflow__int64_t_max_preinc_32_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_bad();
int goodG2B_108();
int goodB2G_97();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54b_goodB2GSink(__int16 a1);
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_65_bad();
int goodG2B_109();
__int64 goodB2G_98();
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_65_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_10_bad();
int goodB2G1_76();
int goodB2G2_76();
int goodG2B1_65();
int goodG2B2_65();
int CWE190_Integer_Overflow__int_connect_socket_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52b_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_61_bad();
int goodG2B_110();
int goodB2G_99();
int CWE190_Integer_Overflow__int_listen_socket_preinc_61_good();
int CWE190_Integer_Overflow__char_max_preinc_05_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_66();
int goodG2B2_66();
int CWE190_Integer_Overflow__char_max_preinc_05_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_bad();
int goodG2B_111();
int goodB2G_100();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54c_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__char_rand_preinc_65_bad();
int goodG2B_112();
__int64 goodB2G_101();
__int64 CWE190_Integer_Overflow__char_rand_preinc_65_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_04_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B1_67();
int goodG2B2_67();
int CWE190_Integer_Overflow__int64_t_max_preinc_04_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_31_bad();
int goodG2B_113();
int goodB2G_102();
int CWE190_Integer_Overflow__int64_t_max_preinc_31_good();
int CWE190_Integer_Overflow__int_rand_preinc_13_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_68();
int goodG2B2_68();
int CWE190_Integer_Overflow__int_rand_preinc_13_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_64b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_07_bad();
int goodB2G1_80();
int goodB2G2_80();
int goodG2B1_69();
int goodG2B2_69();
int CWE190_Integer_Overflow__int_listen_socket_preinc_07_good();
int CWE190_Integer_Overflow__int_fgets_preinc_05_bad();
int goodB2G1_81();
int goodB2G2_81();
int goodG2B1_70();
int goodG2B2_70();
int CWE190_Integer_Overflow__int_fgets_preinc_05_good();
int CWE190_Integer_Overflow__short_max_preinc_54_bad();
int goodG2B_114();
int goodB2G_103();
int CWE190_Integer_Overflow__short_max_preinc_54_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_52_bad();
int goodG2B_115();
int goodB2G_104();
int CWE190_Integer_Overflow__char_fscanf_preinc_52_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_09_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B1_71();
int goodG2B2_71();
int CWE190_Integer_Overflow__char_fscanf_preinc_09_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_64_bad();
int goodG2B_116();
int goodB2G_105();
int CWE190_Integer_Overflow__char_fscanf_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_31_bad();
int goodG2B_117();
int goodB2G_106();
int CWE190_Integer_Overflow__int64_t_rand_preinc_31_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE190_Integer_Overflow__int_fscanf_preinc_08_bad();
int goodB2G1_83();
int goodB2G2_83();
int goodG2B1_72();
int goodG2B2_72();
int CWE190_Integer_Overflow__int_fscanf_preinc_08_good();
int __fastcall badSink_17(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_21_bad();
int __fastcall goodB2G1Sink_4(int a1);
int goodB2G1_84();
int __fastcall goodB2G2Sink_4(int a1);
int goodB2G2_84();
int __fastcall goodG2BSink_17(int a1);
int goodG2B_118();
int CWE190_Integer_Overflow__int_rand_preinc_21_good();
int CWE190_Integer_Overflow__int_rand_preinc_03_bad();
int goodB2G1_85();
int goodB2G2_85();
int goodG2B1_73();
int goodG2B2_73();
int CWE190_Integer_Overflow__int_rand_preinc_03_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_64_bad();
int goodG2B_119();
int goodB2G_107();
int CWE190_Integer_Overflow__int64_t_rand_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54e_goodB2GSink(__int64 a1);
int __fastcall badSink_18(int a1);
int CWE190_Integer_Overflow__int_max_preinc_44_bad();
int __fastcall goodG2BSink_18(int a1);
int goodG2B_120();
int __fastcall goodB2GSink_12(int a1);
int goodB2G_108();
int CWE190_Integer_Overflow__int_max_preinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_74();
int goodG2B2_74();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_51_bad();
int goodG2B_121();
int goodB2G_109();
int CWE190_Integer_Overflow__char_fscanf_preinc_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad();
int goodG2B_122();
int goodB2G_110();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_22_bad();
int goodB2G1_87();
int goodB2G2_87();
int goodG2B_123();
int CWE190_Integer_Overflow__int64_t_max_preinc_22_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_75();
int goodG2B2_75();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_good();
int CWE190_Integer_Overflow__char_rand_preinc_31_bad();
int goodG2B_124();
int goodB2G_111();
int CWE190_Integer_Overflow__char_rand_preinc_31_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_34_bad();
int goodG2B_125();
int goodB2G_112();
int CWE190_Integer_Overflow__int_fgets_preinc_34_good();
int CWE190_Integer_Overflow__int_rand_preinc_12_bad();
int goodB2G_113();
int goodG2B_126();
int CWE190_Integer_Overflow__int_rand_preinc_12_good();
int __fastcall badSink_19(int a1);
__int64 CWE190_Integer_Overflow__int_fgets_preinc_44_bad();
int __fastcall goodG2BSink_19(int a1);
int goodG2B_127();
int __fastcall goodB2GSink_13(int a1);
__int64 goodB2G_114();
__int64 CWE190_Integer_Overflow__int_fgets_preinc_44_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_02_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_76();
int goodG2B2_76();
int CWE190_Integer_Overflow__char_fscanf_preinc_02_good();
int badSink_20();
int CWE190_Integer_Overflow__char_fscanf_preinc_45_bad();
int goodG2BSink_20();
int goodG2B_128();
int goodB2GSink_14();
int goodB2G_115();
int CWE190_Integer_Overflow__char_fscanf_preinc_45_good();
int __fastcall badSink_21(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_41_bad();
int __fastcall goodG2BSink_21(int a1);
int goodG2B_129();
int __fastcall goodB2GSink_15(int a1);
int goodB2G_116();
int CWE190_Integer_Overflow__int_rand_preinc_41_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B1_77();
int goodG2B2_77();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_bad();
int goodG2B_130();
int goodB2G_117();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54e_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_13_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_78();
int goodG2B2_78();
int CWE190_Integer_Overflow__int64_t_max_preinc_13_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_51b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_51b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_51b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__short_max_preinc_68b_badSink();
int CWE190_Integer_Overflow__short_max_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_max_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_bad();
int goodB2G_118();
int goodG2B_131();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_54_bad();
int goodG2B_132();
int goodB2G_119();
int CWE190_Integer_Overflow__int_fscanf_preinc_54_good();
int CWE190_Integer_Overflow__int_rand_preinc_11_bad();
int goodB2G1_92();
int goodB2G2_92();
int goodG2B1_79();
int goodG2B2_79();
int CWE190_Integer_Overflow__int_rand_preinc_11_good();
int CWE190_Integer_Overflow__int_rand_preinc_02_bad();
int goodB2G1_93();
int goodB2G2_93();
int goodG2B1_80();
int goodG2B2_80();
int CWE190_Integer_Overflow__int_rand_preinc_02_good();
int __fastcall badSink_22(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_bad();
int __fastcall goodG2BSink_22(__int64 a1);
int goodG2B_133();
int __fastcall goodB2GSink_16(__int64 a1);
__int64 goodB2G_120();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_good();
int CWE190_Integer_Overflow__char_rand_preinc_52_bad();
int goodG2B_134();
int goodB2G_121();
int CWE190_Integer_Overflow__char_rand_preinc_52_good();
int CWE190_Integer_Overflow__int_rand_preinc_10_bad();
int goodB2G1_94();
int goodB2G2_94();
int goodG2B1_81();
int goodG2B2_81();
int CWE190_Integer_Overflow__int_rand_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_preinc_15_bad();
int goodB2G1_95();
int goodB2G2_95();
int goodG2B1_82();
int goodG2B2_82();
int CWE190_Integer_Overflow__short_rand_preinc_15_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_03_bad();
int goodB2G1_96();
int goodB2G2_96();
int goodG2B1_83();
int goodG2B2_83();
int CWE190_Integer_Overflow__int64_t_max_preinc_03_good();
int CWE190_Integer_Overflow__int_rand_preinc_01_bad();
int goodG2B_135();
int goodB2G_122();
int CWE190_Integer_Overflow__int_rand_preinc_01_good();
int CWE190_Integer_Overflow__short_max_preinc_68_bad();
int goodG2B_136();
int goodB2G_123();
int CWE190_Integer_Overflow__short_max_preinc_68_good();
__int64 badSource_2();
int CWE190_Integer_Overflow__short_rand_preinc_42_bad();
__int64 goodG2BSource_2();
int goodG2B_137();
__int64 goodB2GSource_2();
int goodB2G_124();
int CWE190_Integer_Overflow__short_rand_preinc_42_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_63b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_bad();
int goodB2G1_97();
int goodB2G2_97();
int goodG2B_138();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_good();
int CWE190_Integer_Overflow__short_max_preinc_53_bad();
int goodG2B_139();
int goodB2G_125();
int CWE190_Integer_Overflow__short_max_preinc_53_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_12_bad();
int goodB2G_126();
int goodG2B_140();
int CWE190_Integer_Overflow__int64_t_max_preinc_12_good();
int CWE190_Integer_Overflow__int_rand_preinc_09_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_84();
int goodG2B2_84();
int CWE190_Integer_Overflow__int_rand_preinc_09_good();
int CWE190_Integer_Overflow__short_rand_preinc_05_bad();
int goodB2G1_99();
int goodB2G2_99();
int goodG2B1_85();
int goodG2B2_85();
int CWE190_Integer_Overflow__short_rand_preinc_05_good();
int __fastcall badSink_23(__int16 a1);
int CWE190_Integer_Overflow__short_rand_preinc_41_bad();
int __fastcall goodG2BSink_23(__int16 a1);
int goodG2B_141();
int __fastcall goodB2GSink_17(__int16 a1);
int goodB2G_127();
int CWE190_Integer_Overflow__short_rand_preinc_41_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_68b_badSink();
int CWE190_Integer_Overflow__int_fscanf_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fscanf_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad();
int goodB2G1_100();
int goodB2G2_100();
int goodG2B1_86();
int goodG2B2_86();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_bad();
int goodG2B_142();
int goodB2G_128();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_good();
int __fastcall badSink_24(__int16 a1);
__int64 CWE190_Integer_Overflow__short_rand_preinc_44_bad();
int __fastcall goodG2BSink_24(__int16 a1);
int goodG2B_143();
int __fastcall goodB2GSink_18(__int16 a1);
__int64 goodB2G_129();
__int64 CWE190_Integer_Overflow__short_rand_preinc_44_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_11_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_87();
int goodG2B2_87();
int CWE190_Integer_Overflow__int64_t_max_preinc_11_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_02_bad();
int goodB2G1_102();
int goodB2G2_102();
int goodG2B1_88();
int goodG2B2_88();
int CWE190_Integer_Overflow__int64_t_max_preinc_02_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_preinc_13_bad();
int goodB2G1_103();
int goodB2G2_103();
int goodG2B1_89();
int goodG2B2_89();
int CWE190_Integer_Overflow__char_rand_preinc_13_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_10_bad();
int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_90();
int goodG2B2_90();
int CWE190_Integer_Overflow__int64_t_max_preinc_10_good();
int CWE190_Integer_Overflow__char_max_preinc_14_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B1_91();
int goodG2B2_91();
int CWE190_Integer_Overflow__char_max_preinc_14_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B1_92();
int goodG2B2_92();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_good();
int CWE190_Integer_Overflow__char_max_preinc_32_bad();
int goodG2B_144();
int goodB2G_130();
int CWE190_Integer_Overflow__char_max_preinc_32_good();
int __fastcall badSink_25(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_bad();
int __fastcall goodB2G1Sink_5(int a1);
int goodB2G1_107();
int __fastcall goodB2G2Sink_5(int a1);
int goodB2G2_107();
int __fastcall goodG2BSink_25(int a1);
int goodG2B_145();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_93();
int goodG2B2_93();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_68_bad();
int goodG2B_146();
int goodB2G_131();
int CWE190_Integer_Overflow__int_fscanf_preinc_68_good();
int __fastcall badSink_26(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_44_bad();
int __fastcall goodG2BSink_26(int a1);
int goodG2B_147();
int __fastcall goodB2GSink_19(int a1);
int goodB2G_132();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_44_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_01_bad();
int goodG2B_148();
int goodB2G_133();
int CWE190_Integer_Overflow__int64_t_max_preinc_01_good();
int CWE190_Integer_Overflow__short_max_preinc_52_bad();
int goodG2B_149();
int goodB2G_134();
int CWE190_Integer_Overflow__short_max_preinc_52_good();
void CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad();
void goodB2G_135();
int goodG2B_150();
int CWE190_Integer_Overflow__int_listen_socket_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_goodB2GSink(int a1);
void CWE190_Integer_Overflow__int64_t_rand_preinc_17_bad();
void goodB2G_136();
int goodG2B_151();
int CWE190_Integer_Overflow__int64_t_rand_preinc_17_good();
int CWE190_Integer_Overflow__short_max_preinc_16_bad();
int goodB2G_137();
int goodG2B_152();
int CWE190_Integer_Overflow__short_max_preinc_16_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_53_bad();
int goodG2B_153();
int goodB2G_138();
int CWE190_Integer_Overflow__int_fscanf_preinc_53_good();
int CWE190_Integer_Overflow__int_max_preinc_15_bad();
int goodB2G1_109();
int goodB2G2_109();
int goodG2B1_94();
int goodG2B2_94();
int CWE190_Integer_Overflow__int_max_preinc_15_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_preinc_04_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_95();
int goodG2B2_95();
int CWE190_Integer_Overflow__char_max_preinc_04_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_64b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_64b_goodB2GSink(_BYTE *a1);
__int64 badSource_3();
int CWE190_Integer_Overflow__int_max_preinc_42_bad();
__int64 goodG2BSource_3();
int goodG2B_154();
__int64 goodB2GSource_3();
int goodB2G_139();
int CWE190_Integer_Overflow__int_max_preinc_42_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_09_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_96();
int goodG2B2_96();
int CWE190_Integer_Overflow__int64_t_max_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53d_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__short_max_preinc_51_bad();
int goodG2B_155();
int goodB2G_140();
int CWE190_Integer_Overflow__short_max_preinc_51_good();
int CWE190_Integer_Overflow__int_fgets_preinc_15_bad();
int goodB2G1_112();
int goodB2G2_112();
int goodG2B1_97();
int goodG2B2_97();
int CWE190_Integer_Overflow__int_fgets_preinc_15_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_67b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_goodG2BSink(char a1);
__int64 __fastcall badSource_4(unsigned int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_42_bad();
__int64 goodG2BSource_4();
int goodG2B_156();
__int64 __fastcall goodB2GSource_4(unsigned int a1);
int goodB2G_141();
int CWE190_Integer_Overflow__int_fgets_preinc_42_good();
int CWE190_Integer_Overflow__char_max_preinc_66_bad();
int goodG2B_157();
int goodB2G_142();
int CWE190_Integer_Overflow__char_max_preinc_66_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_bad();
int goodG2B_158();
int goodB2G_143();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_bad();
int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_98();
int goodG2B2_98();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_bad();
int goodB2G1_114();
int goodB2G2_114();
int goodG2B1_99();
int goodG2B2_99();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_good();
int badSink_27();
int CWE190_Integer_Overflow__short_max_preinc_45_bad();
int goodG2BSink_27();
int goodG2B_159();
int goodB2GSink_20();
int goodB2G_144();
int CWE190_Integer_Overflow__short_max_preinc_45_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_bad();
int goodG2B_160();
int goodB2G_145();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_good();
int CWE190_Integer_Overflow__int_max_preinc_05_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_100();
int goodG2B2_100();
int CWE190_Integer_Overflow__int_max_preinc_05_good();
int CWE190_Integer_Overflow__char_rand_preinc_64_bad();
int goodG2B_161();
int goodB2G_146();
int CWE190_Integer_Overflow__char_rand_preinc_64_good();
int CWE190_Integer_Overflow__short_max_preinc_06_bad();
int goodB2G1_116();
int goodB2G2_116();
int goodG2B1_101();
int goodG2B2_101();
int CWE190_Integer_Overflow__short_max_preinc_06_good();
__int64 CWE190_Integer_Overflow__int_rand_preinc_65_bad();
int goodG2B_162();
__int64 goodB2G_147();
__int64 CWE190_Integer_Overflow__int_rand_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_61_bad();
int goodG2B_163();
int goodB2G_148();
int CWE190_Integer_Overflow__int64_t_rand_preinc_61_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad();
int goodB2G1_117();
int goodB2G2_117();
int goodG2B1_102();
int goodG2B2_102();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_67_bad();
int goodG2B_164();
int goodB2G_149();
int CWE190_Integer_Overflow__short_fscanf_preinc_67_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_07_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_103();
int goodG2B2_103();
int CWE190_Integer_Overflow__int64_t_rand_preinc_07_good();
int CWE190_Integer_Overflow__char_max_preinc_22_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B_165();
int CWE190_Integer_Overflow__char_max_preinc_22_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_52_bad();
int goodG2B_166();
int goodB2G_150();
int CWE190_Integer_Overflow__int_fscanf_preinc_52_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_bad();
int goodG2B_167();
int goodB2G_151();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54d_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_16_bad();
int goodB2G_152();
int goodG2B_168();
int CWE190_Integer_Overflow__int_fscanf_preinc_16_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_64_bad();
int goodG2B_169();
int goodB2G_153();
int CWE190_Integer_Overflow__int_connect_socket_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_max_preinc_13_bad();
int goodB2G1_120();
int goodB2G2_120();
int goodG2B1_104();
int goodG2B2_104();
int CWE190_Integer_Overflow__char_max_preinc_13_good();
__int64 CWE190_Integer_Overflow__int_fgets_preinc_65_bad();
int goodG2B_170();
__int64 goodB2G_154();
__int64 CWE190_Integer_Overflow__int_fgets_preinc_65_good();
int CWE190_Integer_Overflow__int_max_preinc_66_bad();
int goodG2B_171();
int goodB2G_155();
int CWE190_Integer_Overflow__int_max_preinc_66_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad();
int goodB2G1_121();
int goodB2G2_121();
int goodG2B1_105();
int goodG2B2_105();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_bad();
int goodB2G1_122();
int goodB2G2_122();
int goodG2B1_106();
int goodG2B2_106();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_bad();
int goodG2B_172();
int goodB2G_156();
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_65b_goodB2GSink(__int16 a1);
int __fastcall badSink_28(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_bad();
int __fastcall goodG2BSink_28(__int64 a1);
int goodG2B_173();
int __fastcall goodB2GSink_21(__int64 a1);
int goodB2G_157();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_good();
int __fastcall badSink_29(char a1);
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_44_bad();
int __fastcall goodG2BSink_29(char a1);
int goodG2B_174();
int __fastcall goodB2GSink_22(char a1);
__int64 goodB2G_158();
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_fscanf_preinc_51_bad();
int goodG2B_175();
int goodB2G_159();
int CWE190_Integer_Overflow__int_fscanf_preinc_51_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad();
int goodG2B_176();
int goodB2G_160();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_66_bad();
int goodG2B_177();
int goodB2G_161();
int CWE190_Integer_Overflow__int_fgets_preinc_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54d_goodB2GSink(__int16 a1);
int __fastcall badSink_30(char a1);
int CWE190_Integer_Overflow__char_max_preinc_21_bad();
int __fastcall goodB2G1Sink_6(char a1);
int goodB2G1_123();
int __fastcall goodB2G2Sink_6(char a1);
int goodB2G2_123();
int __fastcall goodG2BSink_30(char a1);
int goodG2B_178();
int CWE190_Integer_Overflow__char_max_preinc_21_good();
int CWE190_Integer_Overflow__char_max_preinc_03_bad();
int goodB2G1_124();
int goodB2G2_124();
int goodG2B1_107();
int goodG2B2_107();
int CWE190_Integer_Overflow__char_max_preinc_03_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_bad();
int goodB2G1_125();
int goodB2G2_125();
int goodG2B_179();
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_65_bad();
int goodG2B_180();
int goodB2G_162();
int CWE190_Integer_Overflow__int64_t_max_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_bad();
int goodG2B_181();
int goodB2G_163();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_good();
int CWE190_Integer_Overflow__short_rand_preinc_32_bad();
int goodG2B_182();
int goodB2G_164();
int CWE190_Integer_Overflow__short_rand_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_63b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_63b_goodB2GSink(_BYTE *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_bad();
int goodG2B_183();
int goodB2G_165();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_preinc_12_bad();
int goodB2G_166();
int goodG2B_184();
int CWE190_Integer_Overflow__char_max_preinc_12_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_11_bad();
int goodB2G1_126();
int goodB2G2_126();
int goodG2B1_108();
int goodG2B2_108();
int CWE190_Integer_Overflow__int64_t_rand_preinc_11_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_bad();
int goodG2B_185();
int goodB2G_167();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_15_bad();
int goodB2G1_127();
int goodB2G2_127();
int goodG2B1_109();
int goodG2B2_109();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_15_good();
int CWE190_Integer_Overflow__short_rand_preinc_04_bad();
int goodB2G1_128();
int goodB2G2_128();
int goodG2B1_110();
int goodG2B2_110();
int CWE190_Integer_Overflow__short_rand_preinc_04_good();
int CWE190_Integer_Overflow__short_rand_preinc_31_bad();
int goodG2B_186();
int goodB2G_168();
int CWE190_Integer_Overflow__short_rand_preinc_31_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_18_bad();
int goodB2G_169();
int goodG2B_187();
int CWE190_Integer_Overflow__short_fscanf_preinc_18_good();
__int64 badSource_5();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_42_bad();
__int64 goodG2BSource_5();
int goodG2B_188();
__int64 goodB2GSource_5();
int goodB2G_170();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__char_max_preinc_11_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_111();
int goodG2B2_111();
int CWE190_Integer_Overflow__char_max_preinc_11_good();
int CWE190_Integer_Overflow__char_max_preinc_02_bad();
int goodB2G1_130();
int goodB2G2_130();
int goodG2B1_112();
int goodG2B2_112();
int CWE190_Integer_Overflow__char_max_preinc_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_34_bad();
int goodG2B_189();
int goodB2G_171();
int CWE190_Integer_Overflow__int_rand_preinc_34_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_68b_badSink();
int CWE190_Integer_Overflow__int64_t_max_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_max_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_listen_socket_preinc_67_bad();
int goodG2B_190();
int goodB2G_172();
int CWE190_Integer_Overflow__int_listen_socket_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BSink(__int16 a1);
int __fastcall badSink_31(char a1);
int CWE190_Integer_Overflow__char_rand_preinc_21_bad();
int __fastcall goodB2G1Sink_7(char a1);
int goodB2G1_131();
int __fastcall goodB2G2Sink_7(char a1);
int goodB2G2_131();
int __fastcall goodG2BSink_31(char a1);
int goodG2B_191();
int CWE190_Integer_Overflow__char_rand_preinc_21_good();
int CWE190_Integer_Overflow__char_max_preinc_10_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B1_113();
int goodG2B2_113();
int CWE190_Integer_Overflow__char_max_preinc_10_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_03_bad();
int goodB2G1_133();
int goodB2G2_133();
int goodG2B1_114();
int goodG2B2_114();
int CWE190_Integer_Overflow__int_fscanf_preinc_03_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad();
int goodB2G1_134();
int goodB2G2_134();
int goodG2B1_115();
int goodG2B2_115();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good();
int __fastcall badSink_32(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_41_bad();
int __fastcall goodG2BSink_32(int a1);
int goodG2B_192();
int __fastcall goodB2GSink_23(int a1);
int goodB2G_173();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_41_good();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_bad();
int goodG2B_193();
__int64 goodB2G_174();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_63_bad();
int goodG2B_194();
int goodB2G_175();
int CWE190_Integer_Overflow__int_connect_socket_preinc_63_good();
int CWE190_Integer_Overflow__char_max_preinc_01_bad();
int goodG2B_195();
int goodB2G_176();
int CWE190_Integer_Overflow__char_max_preinc_01_good();
int CWE190_Integer_Overflow__char_max_preinc_68b_badSink();
int CWE190_Integer_Overflow__char_max_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__char_max_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_fgets_preinc_07_bad();
int goodB2G1_135();
int goodB2G2_135();
int goodG2B1_116();
int goodG2B2_116();
int CWE190_Integer_Overflow__int_fgets_preinc_07_good();
void CWE190_Integer_Overflow__char_rand_preinc_17_bad();
void goodB2G_177();
int goodG2B_196();
int CWE190_Integer_Overflow__char_rand_preinc_17_good();
int CWE190_Integer_Overflow__short_rand_preinc_22_bad();
int goodB2G1_136();
int goodB2G2_136();
int goodG2B_197();
int CWE190_Integer_Overflow__short_rand_preinc_22_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_bad();
int goodG2B_198();
int goodB2G_178();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_goodB2GSink(_DWORD *a1);
int __fastcall badSink_33(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_21_bad();
int __fastcall goodB2G1Sink_8(int a1);
int goodB2G1_137();
int __fastcall goodB2G2Sink_8(int a1);
int goodB2G2_137();
int __fastcall goodG2BSink_33(int a1);
int goodG2B_199();
int CWE190_Integer_Overflow__int_fscanf_preinc_21_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_04_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_117();
int goodG2B2_117();
int CWE190_Integer_Overflow__int_fscanf_preinc_04_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_31_bad();
int goodG2B_200();
int goodB2G_179();
int CWE190_Integer_Overflow__int_fscanf_preinc_31_good();
int CWE190_Integer_Overflow__short_max_preinc_13_bad();
int goodB2G1_139();
int goodB2G2_139();
int goodG2B1_118();
int goodG2B2_118();
int CWE190_Integer_Overflow__short_max_preinc_13_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_12_bad();
int goodB2G_180();
int goodG2B_201();
int CWE190_Integer_Overflow__int_connect_socket_preinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_54_bad();
int goodG2B_202();
int goodB2G_181();
int CWE190_Integer_Overflow__int64_t_max_preinc_54_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_52_bad();
int goodG2B_203();
int goodB2G_182();
int CWE190_Integer_Overflow__short_fscanf_preinc_52_good();
int CWE190_Integer_Overflow__char_rand_preinc_10_bad();
int goodB2G1_140();
int goodB2G2_140();
int goodG2B1_119();
int goodG2B2_119();
int CWE190_Integer_Overflow__char_rand_preinc_10_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_68_bad();
int goodG2B_204();
int goodB2G_183();
int CWE190_Integer_Overflow__int64_t_rand_preinc_68_good();
int __fastcall badSink_34(__int16 a1);
int CWE190_Integer_Overflow__short_max_preinc_21_bad();
int __fastcall goodB2G1Sink_9(__int16 a1);
int goodB2G1_141();
int __fastcall goodB2G2Sink_9(__int16 a1);
int goodB2G2_141();
int __fastcall goodG2BSink_34(__int16 a1);
int goodG2B_205();
int CWE190_Integer_Overflow__short_max_preinc_21_good();
int CWE190_Integer_Overflow__char_max_preinc_07_bad();
int goodB2G1_142();
int goodB2G2_142();
int goodG2B1_120();
int goodG2B2_120();
int CWE190_Integer_Overflow__char_max_preinc_07_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_65b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_65b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_65b_goodB2GSink(char a1);
int badSink_35();
int CWE190_Integer_Overflow__int_max_preinc_45_bad();
int goodG2BSink_35();
int goodG2B_206();
int goodB2GSink_24();
int goodB2G_184();
int CWE190_Integer_Overflow__int_max_preinc_45_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_53_bad();
int goodG2B_207();
int goodB2G_185();
int CWE190_Integer_Overflow__int64_t_rand_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_22_bad();
int goodB2G1_143();
int goodB2G2_143();
int goodG2B_208();
int CWE190_Integer_Overflow__int_fscanf_preinc_22_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_63b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_34_bad();
int goodG2B_209();
int goodB2G_186();
int CWE190_Integer_Overflow__int_connect_socket_preinc_34_good();
int CWE190_Integer_Overflow__int_fgets_preinc_67_bad();
int goodG2B_210();
int goodB2G_187();
int CWE190_Integer_Overflow__int_fgets_preinc_67_good();
int CWE190_Integer_Overflow__short_max_preinc_12_bad();
int goodB2G_188();
int goodG2B_211();
int CWE190_Integer_Overflow__short_max_preinc_12_good();
int CWE190_Integer_Overflow__int_fgets_preinc_11_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B1_121();
int goodG2B2_121();
int CWE190_Integer_Overflow__int_fgets_preinc_11_good();
int CWE190_Integer_Overflow__int_fgets_preinc_64_bad();
int goodG2B_212();
int goodB2G_189();
int CWE190_Integer_Overflow__int_fgets_preinc_64_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_13_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B1_122();
int goodG2B2_122();
int CWE190_Integer_Overflow__int_fscanf_preinc_13_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_11_bad();
int goodB2G1_146();
int goodB2G2_146();
int goodG2B1_123();
int goodG2B2_123();
int CWE190_Integer_Overflow__int_connect_socket_preinc_11_good();
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE190_Integer_Overflow__char_rand_preinc_08_bad();
int goodB2G1_147();
int goodB2G2_147();
int goodG2B1_124();
int goodG2B2_124();
int CWE190_Integer_Overflow__char_rand_preinc_08_good();
int CWE190_Integer_Overflow__short_rand_preinc_63_bad();
int goodG2B_213();
int goodB2G_190();
int CWE190_Integer_Overflow__short_rand_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_preinc_11_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B1_125();
int goodG2B2_125();
int CWE190_Integer_Overflow__short_max_preinc_11_good();
int CWE190_Integer_Overflow__short_max_preinc_02_bad();
int goodB2G1_149();
int goodB2G2_149();
int goodG2B1_126();
int goodG2B2_126();
int CWE190_Integer_Overflow__short_max_preinc_02_good();
int __fastcall badSink_36(__int16 a1);
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_44_bad();
int __fastcall goodG2BSink_36(__int16 a1);
int goodG2B_214();
int __fastcall goodB2GSink_25(__int16 a1);
__int64 goodB2G_191();
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_44_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_preinc_10_bad();
int goodB2G1_150();
int goodB2G2_150();
int goodG2B1_127();
int goodG2B2_127();
int CWE190_Integer_Overflow__short_max_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54b_goodB2GSink(char a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_rand_preinc_52_bad();
int goodG2B_215();
int goodB2G_192();
int CWE190_Integer_Overflow__int64_t_rand_preinc_52_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_51b_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE190_Integer_Overflow__int_connect_socket_preinc_08_bad();
int goodB2G1_151();
int goodB2G2_151();
int goodG2B1_128();
int goodG2B2_128();
int CWE190_Integer_Overflow__int_connect_socket_preinc_08_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_16_bad();
int goodB2G_193();
int goodG2B_216();
int CWE190_Integer_Overflow__int64_t_rand_preinc_16_good();
int CWE190_Integer_Overflow__short_max_preinc_01_bad();
int goodG2B_217();
int goodB2G_194();
int CWE190_Integer_Overflow__short_max_preinc_01_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_bad();
int goodB2G1_152();
int goodB2G2_152();
int goodG2B1_129();
int goodG2B2_129();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54e_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54e_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54e_goodB2GSink(char a1);
void CWE190_Integer_Overflow__short_rand_preinc_17_bad();
void goodB2G_195();
int goodG2B_218();
int CWE190_Integer_Overflow__short_rand_preinc_17_good();
int CWE190_Integer_Overflow__int_rand_preinc_67_bad();
int goodG2B_219();
int goodB2G_196();
int CWE190_Integer_Overflow__int_rand_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_12_bad();
int goodB2G_197();
int goodG2B_220();
int CWE190_Integer_Overflow__int_fscanf_preinc_12_good();
int __fastcall badSink_37(int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_44_bad();
int __fastcall goodG2BSink_37(int a1);
int goodG2B_221();
int __fastcall goodB2GSink_26(int a1);
__int64 goodB2G_198();
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_44_good();
int CWE190_Integer_Overflow__char_rand_preinc_54_bad();
int goodG2B_222();
int goodB2G_199();
int CWE190_Integer_Overflow__char_rand_preinc_54_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_51_bad();
int goodG2B_223();
int goodB2G_200();
int CWE190_Integer_Overflow__int64_t_rand_preinc_51_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_preinc_09_bad();
int goodB2G1_153();
int goodB2G2_153();
int goodG2B1_130();
int goodG2B2_130();
int CWE190_Integer_Overflow__short_max_preinc_09_good();
__int64 CWE190_Integer_Overflow__short_rand_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__short_rand_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__short_rand_preinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_bad();
int goodB2G1_154();
int goodB2G2_154();
int goodG2B1_131();
int goodG2B2_131();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_bad();
int goodG2B_224();
int goodB2G_201();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_good();
int badSink_38();
int CWE190_Integer_Overflow__int64_t_rand_preinc_45_bad();
int goodG2BSink_38();
int goodG2B_225();
int goodB2GSink_27();
int goodB2G_202();
int CWE190_Integer_Overflow__int64_t_rand_preinc_45_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_06_bad();
int goodB2G1_155();
int goodB2G2_155();
int goodG2B1_132();
int goodG2B2_132();
int CWE190_Integer_Overflow__int_fscanf_preinc_06_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_06_bad();
int goodB2G1_156();
int goodB2G2_156();
int goodG2B1_133();
int goodG2B2_133();
int CWE190_Integer_Overflow__int64_t_rand_preinc_06_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_02_bad();
int goodB2G1_157();
int goodB2G2_157();
int goodG2B1_134();
int goodG2B2_134();
int CWE190_Integer_Overflow__int_fscanf_preinc_02_good();
int CWE190_Integer_Overflow__char_rand_preinc_03_bad();
int goodB2G1_158();
int goodB2G2_158();
int goodG2B1_135();
int goodG2B2_135();
int CWE190_Integer_Overflow__char_rand_preinc_03_good();
int badSink_39();
int CWE190_Integer_Overflow__int_fscanf_preinc_45_bad();
int goodG2BSink_39();
int goodG2B_226();
int goodB2GSink_28();
int goodB2G_203();
int CWE190_Integer_Overflow__int_fscanf_preinc_45_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_54_bad();
int goodG2B_227();
int goodB2G_204();
int CWE190_Integer_Overflow__int_connect_socket_preinc_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_rand_preinc_61_bad();
int goodG2B_228();
int goodB2G_205();
int CWE190_Integer_Overflow__short_rand_preinc_61_good();
int CWE190_Integer_Overflow__int_max_preinc_63_bad();
int goodG2B_229();
int goodB2G_206();
int CWE190_Integer_Overflow__int_max_preinc_63_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_10_bad();
int goodB2G1_159();
int goodB2G2_159();
int goodG2B1_136();
int goodG2B2_136();
int CWE190_Integer_Overflow__int_fscanf_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_15_bad();
int goodB2G1_160();
int goodB2G2_160();
int goodG2B1_137();
int goodG2B2_137();
int CWE190_Integer_Overflow__short_fscanf_preinc_15_good();
int CWE190_Integer_Overflow__short_rand_preinc_07_bad();
int goodB2G1_161();
int goodB2G2_161();
int goodG2B1_138();
int goodG2B2_138();
int CWE190_Integer_Overflow__short_rand_preinc_07_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_01_bad();
int goodG2B_230();
int goodB2G_207();
int CWE190_Integer_Overflow__int_fscanf_preinc_01_good();
__int64 __fastcall badSource_6(unsigned __int16 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_42_bad();
__int64 goodG2BSource_6();
int goodG2B_231();
__int64 __fastcall goodB2GSource_6(unsigned __int16 a1);
int goodB2G_208();
int CWE190_Integer_Overflow__short_fscanf_preinc_42_good();
int CWE190_Integer_Overflow__int_fgets_preinc_63_bad();
int goodG2B_232();
int goodB2G_209();
int CWE190_Integer_Overflow__int_fgets_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_67_bad();
int goodG2B_233();
int goodB2G_210();
int CWE190_Integer_Overflow__int64_t_max_preinc_67_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_bad();
int goodB2G1_162();
int goodB2G2_162();
int goodG2B_234();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_09_bad();
int goodB2G1_163();
int goodB2G2_163();
int goodG2B1_139();
int goodG2B2_139();
int CWE190_Integer_Overflow__int_fscanf_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_65b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_05_bad();
int goodB2G1_164();
int goodB2G2_164();
int goodG2B1_140();
int goodG2B2_140();
int CWE190_Integer_Overflow__short_fscanf_preinc_05_good();
int __fastcall badSink_40(__int16 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_41_bad();
int __fastcall goodG2BSink_40(__int16 a1);
int goodG2B_235();
int __fastcall goodB2GSink_29(__int16 a1);
int goodB2G_211();
int CWE190_Integer_Overflow__short_fscanf_preinc_41_good();
int CWE190_Integer_Overflow__int_max_preinc_17_bad();
int goodB2G_212();
int goodG2B_236();
int CWE190_Integer_Overflow__int_max_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_rand_preinc_18_bad();
int goodB2G_213();
int goodG2B_237();
int CWE190_Integer_Overflow__int_rand_preinc_18_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54e_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54e_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54e_goodB2GSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad();
int goodB2G1_165();
int goodB2G2_165();
int goodG2B1_141();
int goodG2B2_141();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_34_bad();
int goodG2B_238();
int goodB2G_214();
int CWE190_Integer_Overflow__short_fscanf_preinc_34_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_preinc_61_bad();
int goodG2B_239();
int goodB2G_215();
int CWE190_Integer_Overflow__int_fgets_preinc_61_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_68b_badSink();
int CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodB2GSink();
void CWE190_Integer_Overflow__int_fgets_preinc_17_bad();
void goodB2G_216();
int goodG2B_240();
int CWE190_Integer_Overflow__int_fgets_preinc_17_good();
__int64 CWE190_Integer_Overflow__int_max_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int_max_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_max_preinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_preinc_65_bad();
int goodG2B_241();
int goodB2G_217();
int CWE190_Integer_Overflow__short_max_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54d_goodB2GSink(__int64 a1);
int __fastcall badSink_41(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_bad();
int __fastcall goodB2G1Sink_10(int a1);
int goodB2G1_166();
int __fastcall goodB2G2Sink_10(int a1);
int goodB2G2_166();
int __fastcall goodG2BSink_41(int a1);
int goodG2B_242();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_bad();
int goodB2G1_167();
int goodB2G2_167();
int goodG2B1_142();
int goodG2B2_142();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_53_bad();
int goodG2B_243();
int goodB2G_218();
int CWE190_Integer_Overflow__int64_t_max_preinc_53_good();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_preinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fgets_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_preinc_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_66_bad();
int goodG2B_244();
int goodB2G_219();
int CWE190_Integer_Overflow__short_fscanf_preinc_66_good();
int CWE190_Integer_Overflow__int_max_preinc_61_bad();
int goodG2B_245();
int goodB2G_220();
int CWE190_Integer_Overflow__int_max_preinc_61_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_bad();
int goodB2G_221();
int goodG2B_246();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_bad();
int goodG2B_247();
int goodB2G_222();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_preinc_07_bad();
int goodB2G1_168();
int goodB2G2_168();
int goodG2B1_143();
int goodG2B2_143();
int CWE190_Integer_Overflow__int_max_preinc_07_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad();
int goodB2G_223();
int goodG2B_248();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_64b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_64b_goodB2GSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__char_max_preinc_53_bad();
int goodG2B_249();
int goodB2G_224();
int CWE190_Integer_Overflow__char_max_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_53_bad();
int goodG2B_250();
int goodB2G_225();
int CWE190_Integer_Overflow__int_connect_socket_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54c_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_badSource(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_goodB2GSource(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_15_bad();
int goodB2G1_169();
int goodB2G2_169();
int goodG2B1_144();
int goodG2B2_144();
int CWE190_Integer_Overflow__int_listen_socket_preinc_15_good();
int __fastcall badSink_42(__int16 a1);
int CWE190_Integer_Overflow__short_rand_preinc_21_bad();
int __fastcall goodB2G1Sink_11(__int16 a1);
int goodB2G1_170();
int __fastcall goodB2G2Sink_11(__int16 a1);
int goodB2G2_170();
int __fastcall goodG2BSink_42(__int16 a1);
int goodG2B_251();
int CWE190_Integer_Overflow__short_rand_preinc_21_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_18_bad();
int goodB2G_226();
int goodG2B_252();
int CWE190_Integer_Overflow__int64_t_max_preinc_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52b_goodB2GSink(__int64 a1);
__int64 __fastcall badSource_7(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_42_bad();
__int64 goodG2BSource_7();
int goodG2B_253();
__int64 __fastcall goodB2GSource_7(unsigned int a1);
int goodB2G_227();
int CWE190_Integer_Overflow__int_listen_socket_preinc_42_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_bad();
int goodB2G1_171();
int goodB2G2_171();
int goodG2B1_145();
int goodG2B2_145();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_06_bad();
int goodB2G1_172();
int goodB2G2_172();
int goodG2B1_146();
int goodG2B2_146();
int CWE190_Integer_Overflow__char_fscanf_preinc_06_good();
int CWE190_Integer_Overflow__char_rand_preinc_16_bad();
int goodB2G_228();
int goodG2B_254();
int CWE190_Integer_Overflow__char_rand_preinc_16_good();
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE190_Integer_Overflow__int_rand_preinc_08_bad();
int goodB2G1_173();
int goodB2G2_173();
int goodG2B1_147();
int goodG2B2_147();
int CWE190_Integer_Overflow__int_rand_preinc_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad();
int goodB2G1_174();
int goodB2G2_174();
int goodG2B1_148();
int goodG2B2_148();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_bad();
int goodB2G1_175();
int goodB2G2_175();
int goodG2B1_149();
int goodG2B2_149();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_05_bad();
int goodB2G1_176();
int goodB2G2_176();
int goodG2B1_150();
int goodG2B2_150();
int CWE190_Integer_Overflow__int_listen_socket_preinc_05_good();
int __fastcall badSink_43(int a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_41_bad();
int __fastcall goodG2BSink_43(int a1);
int goodG2B_255();
int __fastcall goodB2GSink_30(int a1);
int goodB2G_229();
int CWE190_Integer_Overflow__int_listen_socket_preinc_41_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_bad();
int goodG2B_256();
int goodB2G_230();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_good();
int CWE190_Integer_Overflow__char_rand_preinc_51_bad();
int goodG2B_257();
int goodB2G_231();
int CWE190_Integer_Overflow__char_rand_preinc_51_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_52_bad();
int goodG2B_258();
int goodB2G_232();
int CWE190_Integer_Overflow__int_connect_socket_preinc_52_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_34_bad();
int goodG2B_259();
int goodB2G_233();
int CWE190_Integer_Overflow__int_listen_socket_preinc_34_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_16_bad();
int goodB2G_234();
int goodG2B_260();
int CWE190_Integer_Overflow__int_connect_socket_preinc_16_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_03_bad();
int goodB2G1_177();
int goodB2G2_177();
int goodG2B1_151();
int goodG2B2_151();
int CWE190_Integer_Overflow__int_listen_socket_preinc_03_good();
int CWE190_Integer_Overflow__int_max_preinc_34_bad();
int goodG2B_261();
int goodB2G_235();
int CWE190_Integer_Overflow__int_max_preinc_34_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_bad();
int goodB2G1_178();
int goodB2G2_178();
int goodG2B1_152();
int goodG2B2_152();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_good();
int CWE190_Integer_Overflow__char_rand_preinc_06_bad();
int goodB2G1_179();
int goodB2G2_179();
int goodG2B1_153();
int goodG2B2_153();
int CWE190_Integer_Overflow__char_rand_preinc_06_good();
int CWE190_Integer_Overflow__char_max_preinc_31_bad();
int goodG2B_262();
int goodB2G_236();
int CWE190_Integer_Overflow__char_max_preinc_31_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad();
int goodB2G_237();
int goodG2B_263();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54e_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_67b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_67b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_67b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_bad();
int goodB2G_238();
int goodG2B_264();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_bad();
int goodB2G_239();
int goodG2B_265();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_good();
int CWE190_Integer_Overflow__int_rand_preinc_54_bad();
int goodG2B_266();
int goodB2G_240();
int CWE190_Integer_Overflow__int_rand_preinc_54_good();
int CWE190_Integer_Overflow__short_max_preinc_32_bad();
int goodG2B_267();
int goodB2G_241();
int CWE190_Integer_Overflow__short_max_preinc_32_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_34_bad();
int goodG2B_268();
int goodB2G_242();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_34_good();
int __fastcall badSink_44(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_44_bad();
int __fastcall goodG2BSink_44(__int64 a1);
int goodG2B_269();
int __fastcall goodB2GSink_31(__int64 a1);
__int64 goodB2G_243();
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_44_good();
int __fastcall badSink_45(int a1);
int CWE190_Integer_Overflow__int_max_preinc_41_bad();
int __fastcall goodG2BSink_45(int a1);
int goodG2B_270();
int __fastcall goodB2GSink_32(int a1);
int goodB2G_244();
int CWE190_Integer_Overflow__int_max_preinc_41_good();
__int64 CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_51b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_51b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_51b_goodB2GSink(char a1);
int badSink_46();
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_bad();
int goodG2BSink_46();
int goodG2B_271();
int goodB2GSink_33();
int goodB2G_245();
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_14_bad();
int goodB2G1_180();
int goodB2G2_180();
int goodG2B1_154();
int goodG2B2_154();
int CWE190_Integer_Overflow__short_fscanf_preinc_14_good();
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE190_Integer_Overflow__int64_t_max_preinc_08_bad();
int goodB2G1_181();
int goodB2G2_181();
int goodG2B1_155();
int goodG2B2_155();
int CWE190_Integer_Overflow__int64_t_max_preinc_08_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_32_bad();
int goodG2B_272();
int goodB2G_246();
int CWE190_Integer_Overflow__short_fscanf_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53c_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_63b_goodB2GSink(_BYTE *a1);
int CWE190_Integer_Overflow__char_max_preinc_67_bad();
int goodG2B_273();
int goodB2G_247();
int CWE190_Integer_Overflow__char_max_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_61_bad();
int goodG2B_274();
int goodB2G_248();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_61_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_04_bad();
int goodB2G1_182();
int goodB2G2_182();
int goodG2B1_156();
int goodG2B2_156();
int CWE190_Integer_Overflow__short_fscanf_preinc_04_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_31_bad();
int goodG2B_275();
int goodB2G_249();
int CWE190_Integer_Overflow__short_fscanf_preinc_31_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad();
int goodB2G1_183();
int goodB2G2_183();
int goodG2B1_157();
int goodG2B2_157();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_07_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_63_bad();
int goodG2B_276();
int goodB2G_250();
int CWE190_Integer_Overflow__char_fscanf_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_68b_badSink();
int CWE190_Integer_Overflow__int_rand_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_rand_preinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54d_goodB2GSink(char a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_bad();
int goodG2B_277();
__int64 goodB2G_251();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54e_goodB2GSink(int a1);
int __fastcall badSink_47(__int16 a1);
int CWE190_Integer_Overflow__short_max_preinc_44_bad();
int __fastcall goodG2BSink_47(__int16 a1);
int goodG2B_278();
int __fastcall goodB2GSink_34(__int16 a1);
int goodB2G_252();
int CWE190_Integer_Overflow__short_max_preinc_44_good();
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_bad();
int goodB2G1_184();
int goodB2G2_184();
int goodG2B1_158();
int goodG2B2_158();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_17_bad();
int goodB2G_253();
int goodG2B_279();
int CWE190_Integer_Overflow__char_fscanf_preinc_17_good();
int CWE190_Integer_Overflow__int_rand_preinc_68_bad();
int goodG2B_280();
int goodB2G_254();
int CWE190_Integer_Overflow__int_rand_preinc_68_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_61_bad();
int goodG2B_281();
int goodB2G_255();
int CWE190_Integer_Overflow__short_fscanf_preinc_61_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_22_bad();
int goodB2G1_185();
int goodB2G2_185();
int goodG2B_282();
int CWE190_Integer_Overflow__short_fscanf_preinc_22_good();
int CWE190_Integer_Overflow__short_max_preinc_64_bad();
int goodG2B_283();
int goodB2G_256();
int CWE190_Integer_Overflow__short_max_preinc_64_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_bad();
int goodB2G1_186();
int goodB2G2_186();
int goodG2B1_159();
int goodG2B2_159();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_53_bad();
int goodG2B_284();
int goodB2G_257();
int CWE190_Integer_Overflow__int_rand_preinc_53_good();
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_61b_badSource(unsigned __int8 a1);
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_61b_goodB2GSource(unsigned __int8 a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_11_bad();
int goodB2G1_187();
int goodB2G2_187();
int goodG2B1_160();
int goodG2B2_160();
int CWE190_Integer_Overflow__int_listen_socket_preinc_11_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_13_bad();
int goodB2G1_188();
int goodB2G2_188();
int goodG2B1_161();
int goodG2B2_161();
int CWE190_Integer_Overflow__short_fscanf_preinc_13_good();
int CWE190_Integer_Overflow__char_max_preinc_18_bad();
int goodB2G_258();
int goodG2B_285();
int CWE190_Integer_Overflow__char_max_preinc_18_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_15_bad();
int goodB2G1_189();
int goodB2G2_189();
int goodG2B1_162();
int goodG2B2_162();
int CWE190_Integer_Overflow__char_fscanf_preinc_15_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_14_bad();
int goodB2G1_190();
int goodB2G2_190();
int goodG2B1_163();
int goodG2B2_163();
int CWE190_Integer_Overflow__int_listen_socket_preinc_14_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_32_bad();
int goodG2B_286();
int goodB2G_259();
int CWE190_Integer_Overflow__int_listen_socket_preinc_32_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_67b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_61_bad();
int goodG2B_287();
int goodB2G_260();
int CWE190_Integer_Overflow__char_fscanf_preinc_61_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_bad();
int goodG2B_288();
int goodB2G_261();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_good();
int CWE190_Integer_Overflow__char_rand_preinc_68_bad();
int goodG2B_289();
int goodB2G_262();
int CWE190_Integer_Overflow__char_rand_preinc_68_good();
int __fastcall badSink_48(__int16 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_21_bad();
int __fastcall goodB2G1Sink_12(__int16 a1);
int goodB2G1_191();
int __fastcall goodB2G2Sink_12(__int16 a1);
int goodB2G2_191();
int __fastcall goodG2BSink_48(__int16 a1);
int goodG2B_290();
int CWE190_Integer_Overflow__short_fscanf_preinc_21_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_03_bad();
int goodB2G1_192();
int goodB2G2_192();
int goodG2B1_164();
int goodG2B2_164();
int CWE190_Integer_Overflow__short_fscanf_preinc_03_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_07_bad();
int goodB2G1_193();
int goodB2G2_193();
int goodG2B1_165();
int goodG2B2_165();
int CWE190_Integer_Overflow__char_fscanf_preinc_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_04_bad();
int goodB2G1_194();
int goodB2G2_194();
int goodG2B1_166();
int goodG2B2_166();
int CWE190_Integer_Overflow__int_listen_socket_preinc_04_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_31_bad();
int goodG2B_291();
int goodB2G_263();
int CWE190_Integer_Overflow__int_listen_socket_preinc_31_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_15_bad();
int goodB2G1_195();
int goodB2G2_195();
int goodG2B1_167();
int goodG2B2_167();
int CWE190_Integer_Overflow__int64_t_rand_preinc_15_good();
int CWE190_Integer_Overflow__short_rand_preinc_67_bad();
int goodG2B_292();
int goodB2G_264();
int CWE190_Integer_Overflow__short_rand_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53d_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_68_bad();
int goodG2B_293();
int goodB2G_265();
int CWE190_Integer_Overflow__int64_t_max_preinc_68_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_64_bad();
int goodG2B_294();
int goodB2G_266();
int CWE190_Integer_Overflow__int_fscanf_preinc_64_good();
__int64 __fastcall badSource_8(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_bad();
__int64 goodG2BSource_8();
int goodG2B_295();
__int64 __fastcall goodB2GSource_8(__int64 a1);
int goodB2G_267();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_good();
__int64 badSource_9();
int CWE190_Integer_Overflow__int64_t_rand_preinc_42_bad();
__int64 goodG2BSource_9();
int goodG2B_296();
__int64 goodB2GSource_9();
int goodB2G_268();
int CWE190_Integer_Overflow__int64_t_rand_preinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_12_bad();
int goodB2G_269();
int goodG2B_297();
int CWE190_Integer_Overflow__short_fscanf_preinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_16_bad();
int goodB2G_270();
int goodG2B_298();
int CWE190_Integer_Overflow__int_rand_preinc_16_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54c_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_63b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53d_goodB2GSink(char a1);
__int64 __fastcall badSource_10(unsigned __int8 a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_42_bad();
__int64 goodG2BSource_10();
int goodG2B_299();
__int64 __fastcall goodB2GSource_10(unsigned __int8 a1);
int goodB2G_271();
int CWE190_Integer_Overflow__char_fscanf_preinc_42_good();
int CWE190_Integer_Overflow__int_rand_preinc_51_bad();
int goodG2B_300();
int goodB2G_272();
int CWE190_Integer_Overflow__int_rand_preinc_51_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall badSink_49(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_41_bad();
int __fastcall goodG2BSink_49(__int64 a1);
int goodG2B_301();
int __fastcall goodB2GSink_35(__int64 a1);
int goodB2G_273();
int CWE190_Integer_Overflow__int64_t_rand_preinc_41_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_11_bad();
int goodB2G1_196();
int goodB2G2_196();
int goodG2B1_168();
int goodG2B2_168();
int CWE190_Integer_Overflow__short_fscanf_preinc_11_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_02_bad();
int goodB2G1_197();
int goodB2G2_197();
int goodG2B1_169();
int goodG2B2_169();
int CWE190_Integer_Overflow__short_fscanf_preinc_02_good();
int __fastcall badSink_50(char a1);
__int64 CWE190_Integer_Overflow__char_rand_preinc_44_bad();
int __fastcall goodG2BSink_50(char a1);
int goodG2B_302();
int __fastcall goodB2GSink_36(char a1);
__int64 goodB2G_274();
__int64 CWE190_Integer_Overflow__char_rand_preinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_max_preinc_64_bad();
int goodG2B_303();
int goodB2G_275();
int CWE190_Integer_Overflow__int64_t_max_preinc_64_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_34_bad();
int goodG2B_304();
int goodB2G_276();
int CWE190_Integer_Overflow__int64_t_rand_preinc_34_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_10_bad();
int goodB2G1_198();
int goodB2G2_198();
int goodG2B1_170();
int goodG2B2_170();
int CWE190_Integer_Overflow__short_fscanf_preinc_10_good();
int badSink_51();
int CWE190_Integer_Overflow__int_rand_preinc_45_bad();
int goodG2BSink_51();
int goodG2B_305();
int goodB2GSink_37();
int goodB2G_277();
int CWE190_Integer_Overflow__int_rand_preinc_45_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_66b_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE190_Integer_Overflow__char_max_preinc_08_bad();
int goodB2G1_199();
int goodB2G2_199();
int goodG2B1_171();
int goodG2B2_171();
int CWE190_Integer_Overflow__char_max_preinc_08_good();
int CWE190_Integer_Overflow__short_max_preinc_63_bad();
int goodG2B_306();
int goodB2G_278();
int CWE190_Integer_Overflow__short_max_preinc_63_good();
int CWE190_Integer_Overflow__int_rand_preinc_06_bad();
int goodB2G1_200();
int goodB2G2_200();
int goodG2B1_172();
int goodG2B2_172();
int CWE190_Integer_Overflow__int_rand_preinc_06_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_01_bad();
int goodG2B_307();
int goodB2G_279();
int CWE190_Integer_Overflow__short_fscanf_preinc_01_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_goodB2GSink(int a1);
int __fastcall badSink_52(int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_44_bad();
int __fastcall goodG2BSink_52(int a1);
int goodG2B_308();
int __fastcall goodB2GSink_38(int a1);
__int64 goodB2G_280();
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_44_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_13_bad();
int goodB2G1_201();
int goodB2G2_201();
int goodG2B1_173();
int goodG2B2_173();
int CWE190_Integer_Overflow__int_listen_socket_preinc_13_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_bad();
int goodG2B_309();
int goodB2G_281();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_52_bad();
int goodG2B_310();
int goodB2G_282();
int CWE190_Integer_Overflow__int64_t_max_preinc_52_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_66_bad();
int goodG2B_311();
int goodB2G_283();
int CWE190_Integer_Overflow__int64_t_rand_preinc_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_51b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_16_bad();
int goodB2G_284();
int goodG2B_312();
int CWE190_Integer_Overflow__int64_t_max_preinc_16_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_09_bad();
int goodB2G1_202();
int goodB2G2_202();
int goodG2B1_174();
int goodG2B2_174();
int CWE190_Integer_Overflow__short_fscanf_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_preinc_17_bad();
int goodB2G_285();
int goodG2B_313();
int CWE190_Integer_Overflow__short_max_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_max_preinc_67_bad();
int goodG2B_314();
int goodB2G_286();
int CWE190_Integer_Overflow__int_max_preinc_67_good();
int __fastcall badSink_53(int a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_21_bad();
int __fastcall goodB2G1Sink_13(int a1);
int goodB2G1_203();
int __fastcall goodB2G2Sink_13(int a1);
int goodB2G2_203();
int __fastcall goodG2BSink_53(int a1);
int goodG2B_315();
int CWE190_Integer_Overflow__int_listen_socket_preinc_21_good();
int CWE190_Integer_Overflow__short_rand_preinc_18_bad();
int goodB2G_287();
int goodG2B_316();
int CWE190_Integer_Overflow__short_rand_preinc_18_good();
int CWE190_Integer_Overflow__char_max_preinc_54_bad();
int goodG2B_317();
int goodB2G_288();
int CWE190_Integer_Overflow__char_max_preinc_54_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_51_bad();
int goodG2B_318();
int goodB2G_289();
int CWE190_Integer_Overflow__int64_t_max_preinc_51_good();
__int64 CWE190_Integer_Overflow__short_max_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__short_max_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__short_max_preinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_63_bad();
int goodG2B_319();
int goodB2G_290();
int CWE190_Integer_Overflow__int_fscanf_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_12_bad();
int goodB2G_291();
int goodG2B_320();
int CWE190_Integer_Overflow__int_listen_socket_preinc_12_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_63_bad();
int goodG2B_321();
int goodB2G_292();
int CWE190_Integer_Overflow__int_listen_socket_preinc_63_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_06_bad();
int goodB2G1_204();
int goodB2G2_204();
int goodG2B1_175();
int goodG2B2_175();
int CWE190_Integer_Overflow__int64_t_max_preinc_06_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_01_bad();
int goodG2B_322();
int goodB2G_293();
int CWE190_Integer_Overflow__char_fscanf_preinc_01_good();
int CWE190_Integer_Overflow__short_max_preinc_61_bad();
int goodG2B_323();
int goodB2G_294();
int CWE190_Integer_Overflow__short_max_preinc_61_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_bad();
int goodG2B_324();
int goodB2G_295();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_preinc_68b_badSink();
int CWE190_Integer_Overflow__char_rand_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__char_rand_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_bad();
int goodG2B_325();
int goodB2G_296();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_02_bad();
int goodB2G1_205();
int goodB2G2_205();
int goodG2B1_176();
int goodG2B2_176();
int CWE190_Integer_Overflow__int_listen_socket_preinc_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_preinc_07_bad();
int goodB2G1_206();
int goodB2G2_206();
int goodG2B1_177();
int goodG2B2_177();
int CWE190_Integer_Overflow__short_max_preinc_07_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_bad();
int goodB2G_297();
int goodG2B_326();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_17_bad();
int goodB2G_298();
int goodG2B_327();
int CWE190_Integer_Overflow__int_fscanf_preinc_17_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_10_bad();
int goodB2G1_207();
int goodB2G2_207();
int goodG2B1_178();
int goodG2B2_178();
int CWE190_Integer_Overflow__int_listen_socket_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54c_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54e_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54e_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54e_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_listen_socket_preinc_01_bad();
int goodG2B_328();
int goodB2G_299();
int CWE190_Integer_Overflow__int_listen_socket_preinc_01_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_bad();
int goodG2B_329();
int goodB2G_300();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_15_bad();
int goodB2G1_208();
int goodB2G2_208();
int goodG2B1_179();
int goodG2B2_179();
int CWE190_Integer_Overflow__int64_t_max_preinc_15_good();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_61b_goodB2GSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_65_bad();
int goodG2B_330();
__int64 goodB2G_301();
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_65_good();
int CWE190_Integer_Overflow__short_max_preinc_03_bad();
int goodB2G1_209();
int goodB2G2_209();
int goodG2B1_180();
int goodG2B2_180();
int CWE190_Integer_Overflow__short_max_preinc_03_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_max_preinc_18_bad();
int goodB2G_302();
int goodG2B_331();
int CWE190_Integer_Overflow__int_max_preinc_18_good();
__int64 staticReturnsTrue_10();
__int64 staticReturnsFalse_10();
int CWE190_Integer_Overflow__short_rand_preinc_08_bad();
int goodB2G1_210();
int goodB2G2_210();
int goodG2B1_181();
int goodG2B2_181();
int CWE190_Integer_Overflow__short_rand_preinc_08_good();
int badSink_54();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_bad();
int goodG2BSink_54();
int goodG2B_332();
int goodB2GSink_39();
int goodB2G_303();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_53_bad();
int goodG2B_333();
int goodB2G_304();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_53_good();
int CWE190_Integer_Overflow__char_rand_preinc_15_bad();
int goodB2G1_211();
int goodB2G2_211();
int goodG2B1_182();
int goodG2B2_182();
int CWE190_Integer_Overflow__char_rand_preinc_15_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad();
int goodB2G1_212();
int goodB2G2_212();
int goodG2B1_183();
int goodG2B2_183();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_09_bad();
int goodB2G1_213();
int goodB2G2_213();
int goodG2B1_184();
int goodG2B2_184();
int CWE190_Integer_Overflow__int_listen_socket_preinc_09_good();
int CWE190_Integer_Overflow__char_max_preinc_68_bad();
int goodG2B_334();
int goodB2G_305();
int CWE190_Integer_Overflow__char_max_preinc_68_good();
__int64 badSource_11();
int CWE190_Integer_Overflow__char_rand_preinc_42_bad();
__int64 goodG2BSource_11();
int goodG2B_335();
__int64 goodB2GSource_11();
int goodB2G_306();
int CWE190_Integer_Overflow__char_rand_preinc_42_good();
__int64 staticReturnsTrue_11();
__int64 staticReturnsFalse_11();
int CWE190_Integer_Overflow__char_fscanf_preinc_08_bad();
int goodB2G1_214();
int goodB2G2_214();
int goodG2B1_185();
int goodG2B2_185();
int CWE190_Integer_Overflow__char_fscanf_preinc_08_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_61_bad();
int goodG2B_336();
int goodB2G_307();
int CWE190_Integer_Overflow__int_fscanf_preinc_61_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad();
int goodG2B_337();
int goodB2G_308();
int CWE190_Integer_Overflow__int64_t_rand_preinc_32_good();
int CWE190_Integer_Overflow__int_fgets_preinc_18_bad();
int goodB2G_309();
int goodG2B_338();
int CWE190_Integer_Overflow__int_fgets_preinc_18_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_07_bad();
int goodB2G1_215();
int goodB2G2_215();
int goodG2B1_186();
int goodG2B2_186();
int CWE190_Integer_Overflow__int_fscanf_preinc_07_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_15_bad();
int goodB2G1_216();
int goodB2G2_216();
int goodG2B1_187();
int goodG2B2_187();
int CWE190_Integer_Overflow__int_connect_socket_preinc_15_good();
int CWE190_Integer_Overflow__char_rand_preinc_05_bad();
int goodB2G1_217();
int goodB2G2_217();
int goodG2B1_188();
int goodG2B2_188();
int CWE190_Integer_Overflow__char_rand_preinc_05_good();
int __fastcall badSink_55(char a1);
int CWE190_Integer_Overflow__char_rand_preinc_41_bad();
int __fastcall goodG2BSink_55(char a1);
int goodG2B_339();
int __fastcall goodB2GSink_40(char a1);
int goodB2G_310();
int CWE190_Integer_Overflow__char_rand_preinc_41_good();
__int64 __fastcall badSource_12(unsigned int a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_42_bad();
__int64 goodG2BSource_12();
int goodG2B_340();
__int64 __fastcall goodB2GSource_12(unsigned int a1);
int goodB2G_311();
int CWE190_Integer_Overflow__int_connect_socket_preinc_42_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_04_bad();
int goodB2G1_218();
int goodB2G2_218();
int goodG2B1_189();
int goodG2B2_189();
int CWE190_Integer_Overflow__int64_t_rand_preinc_04_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_67_bad();
int goodG2B_341();
int goodB2G_312();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_67_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_bad();
int goodB2G_313();
int goodG2B_342();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_good();
int CWE190_Integer_Overflow__char_rand_preinc_34_bad();
int goodG2B_343();
int goodB2G_314();
int CWE190_Integer_Overflow__char_rand_preinc_34_good();
int CWE190_Integer_Overflow__short_rand_preinc_54_bad();
int goodG2B_344();
int goodB2G_315();
int CWE190_Integer_Overflow__short_rand_preinc_54_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52b_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_05_bad();
int goodB2G1_219();
int goodB2G2_219();
int goodG2B1_190();
int goodG2B2_190();
int CWE190_Integer_Overflow__int_connect_socket_preinc_05_good();
int __fastcall badSink_56(int a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_41_bad();
int __fastcall goodG2BSink_56(int a1);
int goodG2B_345();
int __fastcall goodB2GSink_41(int a1);
int goodB2G_316();
int CWE190_Integer_Overflow__int_connect_socket_preinc_41_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_bad();
int goodG2B_346();
int goodB2G_317();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_good();
int __fastcall badSink_57(int a1);
__int64 CWE190_Integer_Overflow__int_rand_preinc_44_bad();
int __fastcall goodG2BSink_57(int a1);
int goodG2B_347();
int __fastcall goodB2GSink_42(int a1);
__int64 goodB2G_318();
__int64 CWE190_Integer_Overflow__int_rand_preinc_44_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_preinc_52_bad();
int goodG2B_348();
int goodB2G_319();
int CWE190_Integer_Overflow__char_max_preinc_52_good();
int CWE190_Integer_Overflow__char_rand_preinc_66_bad();
int goodG2B_349();
int goodB2G_320();
int CWE190_Integer_Overflow__char_rand_preinc_66_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_63_bad();
int goodG2B_350();
int goodB2G_321();
int CWE190_Integer_Overflow__int64_t_max_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53c_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_preinc_16_bad();
int goodB2G_322();
int goodG2B_351();
int CWE190_Integer_Overflow__char_max_preinc_16_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53d_goodB2GSink(char a1);
__int64 staticReturnsTrue_12();
__int64 staticReturnsFalse_12();
int CWE190_Integer_Overflow__int_max_preinc_08_bad();
int goodB2G1_220();
int goodB2G2_220();
int goodG2B1_191();
int goodG2B2_191();
int CWE190_Integer_Overflow__int_max_preinc_08_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_bad();
int goodB2G1_221();
int goodB2G2_221();
int goodG2B_352();
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_good();
int CWE190_Integer_Overflow__short_rand_preinc_66_bad();
int goodG2B_353();
int goodB2G_323();
int CWE190_Integer_Overflow__short_rand_preinc_66_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_05_bad();
int goodB2G1_222();
int goodB2G2_222();
int goodG2B1_192();
int goodG2B2_192();
int CWE190_Integer_Overflow__int64_t_rand_preinc_05_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_preinc_06_bad();
int goodB2G1_223();
int goodB2G2_223();
int goodG2B1_193();
int goodG2B2_193();
int CWE190_Integer_Overflow__short_rand_preinc_06_good();
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_65_bad();
int goodG2B_354();
__int64 goodB2G_324();
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_65_good();
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_65_bad();
int goodG2B_355();
__int64 goodB2G_325();
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_65_good();
int CWE190_Integer_Overflow__char_max_preinc_63_bad();
int goodG2B_356();
int goodB2G_326();
int CWE190_Integer_Overflow__char_max_preinc_63_good();
int CWE190_Integer_Overflow__char_max_preinc_51_bad();
int goodG2B_357();
int goodB2G_327();
int CWE190_Integer_Overflow__char_max_preinc_51_good();
__int64 staticReturnsTrue_13();
__int64 staticReturnsFalse_13();
int CWE190_Integer_Overflow__int_fgets_preinc_08_bad();
int goodB2G1_224();
int goodB2G2_224();
int goodG2B1_194();
int goodG2B2_194();
int CWE190_Integer_Overflow__int_fgets_preinc_08_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_bad();
int goodB2G_328();
int goodG2B_358();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_52_bad();
int goodG2B_359();
int goodB2G_329();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_52_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_66_bad();
int goodG2B_360();
int goodB2G_330();
int CWE190_Integer_Overflow__int_connect_socket_preinc_66_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_13_bad();
int goodB2G1_225();
int goodB2G2_225();
int goodG2B1_195();
int goodG2B2_195();
int CWE190_Integer_Overflow__int64_t_rand_preinc_13_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_18_bad();
int goodB2G_331();
int goodG2B_361();
int CWE190_Integer_Overflow__int_connect_socket_preinc_18_good();
int CWE190_Integer_Overflow__short_rand_preinc_68b_badSink();
int CWE190_Integer_Overflow__short_rand_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_rand_preinc_68b_goodB2GSink();
int badSink_58();
int CWE190_Integer_Overflow__char_max_preinc_45_bad();
int goodG2BSink_58();
int goodG2B_362();
int goodB2GSink_43();
int goodB2G_332();
int CWE190_Integer_Overflow__char_max_preinc_45_good();
int CWE190_Integer_Overflow__char_max_preinc_06_bad();
int goodB2G1_226();
int goodB2G2_226();
int goodG2B1_196();
int goodG2B2_196();
int CWE190_Integer_Overflow__char_max_preinc_06_good();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54e_goodB2GSink(__int16 a1);
__int64 staticReturnsTrue_14();
__int64 staticReturnsFalse_14();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_bad();
int goodB2G1_227();
int goodB2G2_227();
int goodG2B1_197();
int goodG2B2_197();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_18_bad();
int goodB2G_333();
int goodG2B_363();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_18_good();
int CWE190_Integer_Overflow__int_max_preinc_54_bad();
int goodG2B_364();
int goodB2G_334();
int CWE190_Integer_Overflow__int_max_preinc_54_good();
int __fastcall badSink_59(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_21_bad();
int __fastcall goodB2G1Sink_14(__int64 a1);
int goodB2G1_228();
int __fastcall goodB2G2Sink_14(__int64 a1);
int goodB2G2_228();
int __fastcall goodG2BSink_59(__int64 a1);
int goodG2B_365();
int CWE190_Integer_Overflow__int64_t_rand_preinc_21_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad();
int goodB2G1_229();
int goodB2G2_229();
int goodG2B1_198();
int goodG2B2_198();
int CWE190_Integer_Overflow__int64_t_rand_preinc_03_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_67_bad();
int goodG2B_366();
int goodB2G_335();
int CWE190_Integer_Overflow__char_fscanf_preinc_67_good();
int CWE190_Integer_Overflow__short_rand_preinc_68_bad();
int goodG2B_367();
int goodB2G_336();
int CWE190_Integer_Overflow__short_rand_preinc_68_good();
int CWE190_Integer_Overflow__int_max_preinc_51_bad();
int goodG2B_368();
int goodB2G_337();
int CWE190_Integer_Overflow__int_max_preinc_51_good();
int __fastcall badSink_60(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_44_bad();
int __fastcall goodG2BSink_60(__int64 a1);
int goodG2B_369();
int __fastcall goodB2GSink_44(__int64 a1);
int goodB2G_338();
int CWE190_Integer_Overflow__int64_t_max_preinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_bad();
int goodG2B_370();
int goodB2G_339();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_good();
int CWE190_Integer_Overflow__int_fgets_preinc_54_bad();
int goodG2B_371();
int goodB2G_340();
int CWE190_Integer_Overflow__int_fgets_preinc_54_good();
int CWE190_Integer_Overflow__short_rand_preinc_53_bad();
int goodG2B_372();
int goodB2G_341();
int CWE190_Integer_Overflow__short_rand_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad();
int goodB2G_342();
int goodG2B_373();
int CWE190_Integer_Overflow__int64_t_rand_preinc_12_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_bad();
int goodB2G1_230();
int goodB2G2_230();
int goodG2B1_199();
int goodG2B2_199();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_bad();
int goodG2B_374();
int goodB2G_343();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_02_bad();
int goodB2G1_231();
int goodB2G2_231();
int goodG2B1_200();
int goodG2B2_200();
int CWE190_Integer_Overflow__int64_t_rand_preinc_02_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_15_bad();
int goodB2G1_232();
int goodB2G2_232();
int goodG2B1_201();
int goodG2B2_201();
int CWE190_Integer_Overflow__int_fscanf_preinc_15_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54d_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad();
int goodB2G1_233();
int goodB2G2_233();
int goodG2B1_202();
int goodG2B2_202();
int CWE190_Integer_Overflow__int64_t_rand_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_preinc_14_bad();
int goodB2G1_234();
int goodB2G2_234();
int goodG2B1_203();
int goodG2B2_203();
int CWE190_Integer_Overflow__char_rand_preinc_14_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_preinc_32_bad();
int goodG2B_375();
int goodB2G_344();
int CWE190_Integer_Overflow__char_rand_preinc_32_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_bad();
int goodB2G1_235();
int goodB2G2_235();
int goodG2B1_204();
int goodG2B2_204();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_good();
int __fastcall badSink_61(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_bad();
int __fastcall goodG2BSink_61(int a1);
int goodG2B_376();
int __fastcall goodB2GSink_45(int a1);
__int64 goodB2G_345();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_01_bad();
int goodG2B_377();
int goodB2G_346();
int CWE190_Integer_Overflow__int64_t_rand_preinc_01_good();
int CWE190_Integer_Overflow__short_rand_preinc_52_bad();
int goodG2B_378();
int goodB2G_347();
int CWE190_Integer_Overflow__short_rand_preinc_52_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_64_bad();
int goodG2B_379();
int goodB2G_348();
int CWE190_Integer_Overflow__short_fscanf_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_51b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_rand_preinc_16_bad();
int goodB2G_349();
int goodG2B_380();
int CWE190_Integer_Overflow__short_rand_preinc_16_good();
int CWE190_Integer_Overflow__int_fgets_preinc_68b_badSink();
int CWE190_Integer_Overflow__int_fgets_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fgets_preinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_preinc_15_bad();
int goodB2G1_236();
int goodB2G2_236();
int goodG2B1_205();
int goodG2B2_205();
int CWE190_Integer_Overflow__int_rand_preinc_15_good();
__int64 staticReturnsTrue_15();
__int64 staticReturnsFalse_15();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_08_bad();
int goodB2G1_237();
int goodB2G2_237();
int goodG2B1_206();
int goodG2B2_206();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_08_good();
int CWE190_Integer_Overflow__char_rand_preinc_04_bad();
int goodB2G1_238();
int goodB2G2_238();
int goodG2B1_207();
int goodG2B2_207();
int CWE190_Integer_Overflow__char_rand_preinc_04_good();
int CWE190_Integer_Overflow__int_max_preinc_68_bad();
int goodG2B_381();
int goodB2G_350();
int CWE190_Integer_Overflow__int_max_preinc_68_good();
__int64 badSource_13();
int CWE190_Integer_Overflow__int_rand_preinc_42_bad();
__int64 goodG2BSource_13();
int goodG2B_382();
__int64 goodB2GSource_13();
int goodB2G_351();
int CWE190_Integer_Overflow__int_rand_preinc_42_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_14_bad();
int goodB2G1_239();
int goodB2G2_239();
int goodG2B1_208();
int goodG2B2_208();
int CWE190_Integer_Overflow__int_connect_socket_preinc_14_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_18_bad();
int goodB2G_352();
int goodG2B_383();
int CWE190_Integer_Overflow__char_fscanf_preinc_18_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_32_bad();
int goodG2B_384();
int goodB2G_353();
int CWE190_Integer_Overflow__int_connect_socket_preinc_32_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_09_bad();
int goodB2G1_240();
int goodB2G2_240();
int goodG2B1_209();
int goodG2B2_209();
int CWE190_Integer_Overflow__int64_t_rand_preinc_09_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_preinc_51_bad();
int goodG2B_385();
int goodB2G_354();
int CWE190_Integer_Overflow__short_rand_preinc_51_good();
int __fastcall badSink_62(int a1);
int CWE190_Integer_Overflow__int_max_preinc_21_bad();
int __fastcall goodB2G1Sink_15(int a1);
int goodB2G1_241();
int __fastcall goodB2G2Sink_15(int a1);
int goodB2G2_241();
int __fastcall goodG2BSink_62(int a1);
int goodG2B_386();
int CWE190_Integer_Overflow__int_max_preinc_21_good();
int CWE190_Integer_Overflow__int_max_preinc_53_bad();
int goodG2B_387();
int goodB2G_355();
int CWE190_Integer_Overflow__int_max_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_preinc_68_bad();
int goodG2B_388();
int goodB2G_356();
int CWE190_Integer_Overflow__int_fgets_preinc_68_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_badSink();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_04_bad();
int goodB2G1_242();
int goodB2G2_242();
int goodG2B1_210();
int goodG2B2_210();
int CWE190_Integer_Overflow__char_fscanf_preinc_04_good();
int CWE190_Integer_Overflow__int64_t_rand_preinc_54_bad();
int goodG2B_389();
int goodB2G_357();
int CWE190_Integer_Overflow__int64_t_rand_preinc_54_good();
int badSink_63();
int CWE190_Integer_Overflow__short_rand_preinc_45_bad();
int goodG2BSink_63();
int goodG2B_390();
int goodB2GSink_46();
int goodB2G_358();
int CWE190_Integer_Overflow__short_rand_preinc_45_good();
int CWE190_Integer_Overflow__int_rand_preinc_05_bad();
int goodB2G1_243();
int goodB2G2_243();
int goodG2B1_211();
int goodG2B2_211();
int CWE190_Integer_Overflow__int_rand_preinc_05_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_04_bad();
int goodB2G1_244();
int goodB2G2_244();
int goodG2B1_212();
int goodG2B2_212();
int CWE190_Integer_Overflow__int_connect_socket_preinc_04_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_31_bad();
int goodG2B_391();
int goodB2G_359();
int CWE190_Integer_Overflow__int_connect_socket_preinc_31_good();
int CWE190_Integer_Overflow__int_fgets_preinc_53_bad();
int goodG2B_392();
int goodB2G_360();
int CWE190_Integer_Overflow__int_fgets_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_67b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__char_max_preinc_61_bad();
int goodG2B_393();
int goodB2G_361();
int CWE190_Integer_Overflow__char_max_preinc_61_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_65b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_66b_goodB2GSink(__int64 a1);
__int64 __fastcall badSource_14(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_bad();
__int64 goodG2BSource_14();
int goodG2B_394();
__int64 __fastcall goodB2GSource_14(unsigned int a1);
int goodB2G_362();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_preinc_22_bad();
int goodB2G1_245();
int goodB2G2_245();
int goodG2B_395();
int CWE190_Integer_Overflow__char_rand_preinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_54_bad();
int goodG2B_396();
int goodB2G_363();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_54_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_bad();
int goodG2B_397();
int goodB2G_364();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_rand_preinc_22_bad();
int goodB2G1_246();
int goodB2G2_246();
int goodG2B_398();
int CWE190_Integer_Overflow__int_rand_preinc_22_good();
int CWE190_Integer_Overflow__int_max_preinc_64_bad();
int goodG2B_399();
int goodB2G_365();
int CWE190_Integer_Overflow__int_max_preinc_64_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_bad();
int goodG2B_400();
int goodB2G_366();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54c_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_34_bad();
int goodG2B_401();
int goodB2G_367();
int CWE190_Integer_Overflow__int_fscanf_preinc_34_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_63b_goodB2GSink(_WORD *a1);
int CWE190_Integer_Overflow__short_max_preinc_67_bad();
int goodG2B_402();
int goodB2G_368();
int CWE190_Integer_Overflow__short_max_preinc_67_good();
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_65b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_65b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_65b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_63_bad();
int goodG2B_403();
int goodB2G_369();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_63_good();
int CWE190_Integer_Overflow__int_max_preinc_52_bad();
int goodG2B_404();
int goodB2G_370();
int CWE190_Integer_Overflow__int_max_preinc_52_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_rand_preinc_66_bad();
int goodG2B_405();
int goodB2G_371();
int CWE190_Integer_Overflow__int_rand_preinc_66_good();
__int64 badSource_15();
int CWE190_Integer_Overflow__int64_t_max_preinc_42_bad();
__int64 goodG2BSource_15();
int goodG2B_406();
__int64 goodB2GSource_15();
int goodB2G_372();
int CWE190_Integer_Overflow__int64_t_max_preinc_42_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_preinc_16_bad();
int goodB2G_373();
int goodG2B_407();
int CWE190_Integer_Overflow__int_max_preinc_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_09_bad();
int goodB2G1_247();
int goodB2G2_247();
int goodG2B1_213();
int goodG2B2_213();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_09_good();
int badSink_64();
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad();
int goodG2BSink_64();
int goodG2B_408();
int goodB2GSink_47();
int goodB2G_374();
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_64_bad();
int goodG2B_409();
int goodB2G_375();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_64_good();
int CWE190_Integer_Overflow__int_fgets_preinc_52_bad();
int goodG2B_410();
int goodB2G_376();
int CWE190_Integer_Overflow__int_fgets_preinc_52_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_bad();
int goodG2B_411();
int goodB2G_377();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_64_bad();
int goodG2B_412();
int goodB2G_378();
int CWE190_Integer_Overflow__int_listen_socket_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_preinc_63_bad();
int goodG2B_413();
int goodB2G_379();
int CWE190_Integer_Overflow__short_fscanf_preinc_63_good();
int CWE190_Integer_Overflow__int_fgets_preinc_16_bad();
int goodB2G_380();
int goodG2B_414();
int CWE190_Integer_Overflow__int_fgets_preinc_16_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_51b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_51b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_51b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_05_bad();
int goodB2G1_248();
int goodB2G2_248();
int goodG2B1_214();
int goodG2B2_214();
int CWE190_Integer_Overflow__int64_t_max_preinc_05_good();
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad();
int goodG2B_415();
__int64 goodB2G_381();
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_65_good();
int __fastcall badSink_65(char a1);
int CWE190_Integer_Overflow__char_max_preinc_44_bad();
int __fastcall goodG2BSink_65(char a1);
int goodG2B_416();
int __fastcall goodB2GSink_48(char a1);
int goodB2G_382();
int CWE190_Integer_Overflow__char_max_preinc_44_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_34_bad();
int goodG2B_417();
int goodB2G_383();
int CWE190_Integer_Overflow__int64_t_max_preinc_34_good();
int CWE190_Integer_Overflow__short_fscanf_preinc_17_bad();
int goodB2G_384();
int goodG2B_418();
int CWE190_Integer_Overflow__short_fscanf_preinc_17_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54d_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_fgets_preinc_51_bad();
int goodG2B_419();
int goodB2G_385();
int CWE190_Integer_Overflow__int_fgets_preinc_51_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_max_preinc_06_bad();
int goodB2G1_249();
int goodB2G2_249();
int goodG2B1_215();
int goodG2B2_215();
int CWE190_Integer_Overflow__int_max_preinc_06_good();
int CWE190_Integer_Overflow__char_rand_preinc_12_bad();
int goodB2G_386();
int goodG2B_420();
int CWE190_Integer_Overflow__char_rand_preinc_12_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_bad();
int goodB2G_387();
int goodG2B_421();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_good();
int __fastcall badSink_66(int a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_21_bad();
int __fastcall goodB2G1Sink_16(int a1);
int goodB2G1_250();
int __fastcall goodB2G2Sink_16(int a1);
int goodB2G2_250();
int __fastcall goodG2BSink_66(int a1);
int goodG2B_422();
int CWE190_Integer_Overflow__int_connect_socket_preinc_21_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_03_bad();
int goodB2G1_251();
int goodB2G2_251();
int goodG2B1_216();
int goodG2B2_216();
int CWE190_Integer_Overflow__int_connect_socket_preinc_03_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_goodB2GSink(int a1);
int badSink_67();
int CWE190_Integer_Overflow__int_fgets_preinc_45_bad();
int goodG2BSink_67();
int goodG2B_423();
int goodB2GSink_49();
int goodB2G_388();
int CWE190_Integer_Overflow__int_fgets_preinc_45_good();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_bad();
int goodB2G1_252();
int goodB2G2_252();
int goodG2B1_217();
int goodG2B2_217();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_67_bad();
int goodG2B_424();
int goodB2G_389();
int CWE190_Integer_Overflow__int_fscanf_preinc_67_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_11_bad();
int goodB2G1_253();
int goodB2G2_253();
int goodG2B1_218();
int goodG2B2_218();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_11_good();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_bad();
int goodG2B_425();
int goodB2G_390();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_good();
__int64 badSource_16();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_bad();
__int64 goodG2BSource_16();
int goodG2B_426();
__int64 goodB2GSource_16();
int goodB2G_391();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_good();
int CWE190_Integer_Overflow__int64_t_max_preinc_66_bad();
int goodG2B_427();
int goodB2G_392();
int CWE190_Integer_Overflow__int64_t_max_preinc_66_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_54_bad();
int goodG2B_428();
int goodB2G_393();
int CWE190_Integer_Overflow__char_fscanf_preinc_54_good();
int CWE190_Integer_Overflow__char_rand_preinc_11_bad();
int goodB2G1_254();
int goodB2G2_254();
int goodG2B1_219();
int goodG2B2_219();
int CWE190_Integer_Overflow__char_rand_preinc_11_good();
int CWE190_Integer_Overflow__char_rand_preinc_02_bad();
int goodB2G1_255();
int goodB2G2_255();
int goodG2B1_220();
int goodG2B2_220();
int CWE190_Integer_Overflow__char_rand_preinc_02_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_bad();
int goodG2B_429();
int goodB2G_394();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_good();
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_61b_badSource(unsigned __int16 a1);
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_61b_goodB2GSource(unsigned __int16 a1);
__int64 staticReturnsTrue_16();
__int64 staticReturnsFalse_16();
int CWE190_Integer_Overflow__int64_t_rand_preinc_08_bad();
int goodB2G1_256();
int goodB2G2_256();
int goodG2B1_221();
int goodG2B2_221();
int CWE190_Integer_Overflow__int64_t_rand_preinc_08_good();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_bad();
int goodG2B_430();
int goodB2G_395();
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_good();
int CWE190_Integer_Overflow__char_rand_preinc_67_bad();
int goodG2B_431();
int goodB2G_396();
int CWE190_Integer_Overflow__char_rand_preinc_67_good();
int CWE190_Integer_Overflow__int_connect_socket_preinc_13_bad();
int goodB2G1_257();
int goodB2G2_257();
int goodG2B1_222();
int goodG2B2_222();
int CWE190_Integer_Overflow__int_connect_socket_preinc_13_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_preinc_68b_badSink();
int CWE190_Integer_Overflow__int_max_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_max_preinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_bad();
int goodG2B_432();
int goodB2G_397();
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_good();
int CWE190_Integer_Overflow__short_max_preinc_14_bad();
int goodB2G1_258();
int goodB2G2_258();
int goodG2B1_223();
int goodG2B2_223();
int CWE190_Integer_Overflow__short_max_preinc_14_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_fscanf_preinc_66_bad();
int goodG2B_433();
int goodB2G_398();
int CWE190_Integer_Overflow__char_fscanf_preinc_66_good();
int __fastcall CWE190_Integer_Overflow__char_max_preinc_63b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_preinc_63b_goodB2GSink(_BYTE *a1);
int CWE190_Integer_Overflow__int_connect_socket_preinc_67_bad();
int goodG2B_434();
int goodB2G_399();
int CWE190_Integer_Overflow__int_connect_socket_preinc_67_good();
int __fastcall badSink_68(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_preinc_41_bad();
int __fastcall goodG2BSink_68(__int64 a1);
int goodG2B_435();
int __fastcall goodB2GSink_50(__int64 a1);
int goodB2G_400();
int CWE190_Integer_Overflow__int64_t_max_preinc_41_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_11_bad();
int goodB2G1_259();
int goodB2G2_259();
int goodG2B1_224();
int goodG2B2_224();
int CWE190_Integer_Overflow__char_fscanf_preinc_11_good();
int CWE190_Integer_Overflow__char_max_preinc_34_bad();
int goodG2B_436();
int goodB2G_401();
int CWE190_Integer_Overflow__char_max_preinc_34_good();
int CWE190_Integer_Overflow__int_rand_preinc_14_bad();
int goodB2G1_260();
int goodB2G2_260();
int goodG2B1_225();
int goodG2B2_225();
int CWE190_Integer_Overflow__int_rand_preinc_14_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__short_max_preinc_04_bad();
int goodB2G1_261();
int goodB2G2_261();
int goodG2B1_226();
int goodG2B2_226();
int CWE190_Integer_Overflow__short_max_preinc_04_good();
int CWE190_Integer_Overflow__short_max_preinc_31_bad();
int goodG2B_437();
int goodB2G_402();
int CWE190_Integer_Overflow__short_max_preinc_31_good();
int CWE190_Integer_Overflow__char_fscanf_preinc_10_bad();
int goodB2G1_262();
int goodB2G2_262();
int goodG2B1_227();
int goodG2B2_227();
int CWE190_Integer_Overflow__char_fscanf_preinc_10_good();
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54d_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_bad();
int goodB2G1_263();
int goodB2G2_263();
int goodG2B1_228();
int goodG2B2_228();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_good();
int __fastcall badSink_69(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_bad();
int __fastcall goodG2BSink_69(int a1);
int goodG2B_438();
int __fastcall goodB2GSink_51(int a1);
int goodB2G_403();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_good();
int CWE190_Integer_Overflow__int_fgets_preinc_03_bad();
int goodB2G1_264();
int goodB2G2_264();
int goodG2B1_229();
int goodG2B2_229();
int CWE190_Integer_Overflow__int_fgets_preinc_03_good();
int __fastcall badSink_70(char a1);
int CWE190_Integer_Overflow__char_max_preinc_41_bad();
int __fastcall goodG2BSink_70(char a1);
int goodG2B_439();
int __fastcall goodB2GSink_52(char a1);
int goodB2G_404();
int CWE190_Integer_Overflow__char_max_preinc_41_good();
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_63_bad();
int goodG2B_440();
int goodB2G_405();
int CWE190_Integer_Overflow__int64_t_rand_preinc_63_good();
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_goodG2BSink(__int16 a1);
__int64 CWE190_Integer_Overflow__char_rand_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__char_rand_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__char_rand_preinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__short_rand_preinc_64_bad();
int goodG2B_441();
int goodB2G_406();
int CWE190_Integer_Overflow__short_rand_preinc_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_preinc_65_bad();
int goodG2B_442();
int goodB2G_407();
int CWE190_Integer_Overflow__unsigned_int_max_preinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_preinc_14_bad();
int goodB2G1_265();
int goodB2G2_265();
int goodG2B1_230();
int goodG2B2_230();
int CWE190_Integer_Overflow__int_fscanf_preinc_14_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_51_bad();
int goodG2B_443();
int goodB2G_408();
int CWE190_Integer_Overflow__int_listen_socket_preinc_51_good();
int CWE190_Integer_Overflow__int_fscanf_preinc_32_bad();
int goodG2B_444();
int goodB2G_409();
int CWE190_Integer_Overflow__int_fscanf_preinc_32_good();
int CWE190_Integer_Overflow__short_rand_preinc_14_bad();
int goodB2G1_266();
int goodB2G2_266();
int goodG2B1_231();
int goodG2B2_231();
int CWE190_Integer_Overflow__short_rand_preinc_14_good();
int CWE190_Integer_Overflow__char_max_preinc_17_bad();
int goodB2G_410();
int goodG2B_445();
int CWE190_Integer_Overflow__char_max_preinc_17_good();
int CWE190_Integer_Overflow__short_max_preinc_22_bad();
int goodB2G1_267();
int goodB2G2_267();
int goodG2B_446();
int CWE190_Integer_Overflow__short_max_preinc_22_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__char_rand_preinc_18_bad();
int goodB2G_411();
int goodG2B_447();
int CWE190_Integer_Overflow__char_rand_preinc_18_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_bad();
int goodG2B_448();
int goodB2G_412();
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_good();
int CWE190_Integer_Overflow__int_listen_socket_preinc_06_bad();
int goodB2G1_268();
int goodB2G2_268();
int goodG2B1_232();
int goodG2B2_232();
int CWE190_Integer_Overflow__int_listen_socket_preinc_06_good();
__int64 CWE190_Integer_Overflow__char_max_preinc_61b_badSource();
__int64 CWE190_Integer_Overflow__char_max_preinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__char_max_preinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int64_t_rand_preinc_68b_badSink();
int CWE190_Integer_Overflow__int64_t_rand_preinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_rand_preinc_68b_goodB2GSink();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_47028C; // weak
_UNKNOWN unk_470C64; // weak
_UNKNOWN unk_4710D0; // weak
_UNKNOWN unk_471C0C; // weak
_UNKNOWN unk_475190; // weak
_UNKNOWN unk_475C28; // weak
_UNKNOWN unk_475CF4; // weak
_UNKNOWN unk_47690C; // weak
_UNKNOWN unk_477178; // weak
_UNKNOWN unk_479C10; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_6A9010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticTrue = 1; // weak
int staticFive_0 = 5; // weak
int staticFive_1 = 5; // weak
int staticFive_2 = 5; // weak
int staticTrue_0 = 1; // weak
int staticFive_3 = 5; // weak
int staticTrue_1 = 1; // weak
int staticTrue_2 = 1; // weak
int staticFive_4 = 5; // weak
int staticTrue_3 = 1; // weak
int staticFive_5 = 5; // weak
int staticTrue_4 = 1; // weak
int staticTrue_5 = 1; // weak
int staticTrue_6 = 1; // weak
int staticFive_6 = 5; // weak
int staticTrue_7 = 1; // weak
int staticTrue_8 = 1; // weak
int staticFive_7 = 5; // weak
int staticFive_8 = 5; // weak
int staticFive_9 = 5; // weak
int staticTrue_9 = 1; // weak
int staticFive_10 = 5; // weak
int staticFive_11 = 5; // weak
int staticTrue_10 = 1; // weak
int staticFive_12 = 5; // weak
int staticFive_13 = 5; // weak
int staticFive_14 = 5; // weak
int staticFive_15 = 5; // weak
int staticTrue_11 = 1; // weak
int staticTrue_12 = 1; // weak
int staticTrue_13 = 1; // weak
int staticFive_16 = 5; // weak
int staticTrue_14 = 1; // weak
int staticTrue_15 = 1; // weak
int staticTrue_16 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_goodB2GData; // weak
int staticFalse; // weak
int CWE190_Integer_Overflow__char_fscanf_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BGlobal; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodB2GData; // weak
int staticFalse_0; // weak
int CWE190_Integer_Overflow__int_max_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_max_preinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
char CWE190_Integer_Overflow__char_rand_preinc_45_badData; // weak
char CWE190_Integer_Overflow__char_rand_preinc_45_goodG2BData; // weak
char CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BGlobal; // weak
int staticFalse_1; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodB2GData; // weak
int staticFalse_2; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_goodB2GData; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BGlobal; // weak
int staticFalse_3; // weak
int staticFalse_4; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
int CWE190_Integer_Overflow__int64_t_max_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BGlobal; // weak
char CWE190_Integer_Overflow__char_fscanf_preinc_45_badData; // weak
char CWE190_Integer_Overflow__char_fscanf_preinc_45_goodG2BData; // weak
char CWE190_Integer_Overflow__char_fscanf_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BGlobal; // weak
int staticFalse_5; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
__int16 CWE190_Integer_Overflow__short_max_preinc_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_max_preinc_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_max_preinc_45_goodB2GData; // weak
int staticFalse_6; // weak
int CWE190_Integer_Overflow__char_max_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal; // weak
int staticFalse_7; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BGlobal; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int staticFalse_8; // weak
int CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BGlobal; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int badStatic_9; // weak
int goodB2G1Static_9; // weak
int goodB2G2Static_9; // weak
int goodG2BStatic_9; // weak
int CWE190_Integer_Overflow__int_max_preinc_45_badData; // weak
int CWE190_Integer_Overflow__int_max_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BGlobal; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_45_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BGlobal; // weak
int staticFalse_9; // weak
int badStatic_10; // weak
int goodB2G1Static_10; // weak
int goodB2G2Static_10; // weak
int goodG2BStatic_10; // weak
int badStatic_11; // weak
int goodB2G1Static_11; // weak
int goodB2G2Static_11; // weak
int goodG2BStatic_11; // weak
int staticFalse_10; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__short_fscanf_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BGlobal; // weak
int badStatic_12; // weak
int goodB2G1Static_12; // weak
int goodB2G2Static_12; // weak
int goodG2BStatic_12; // weak
int CWE190_Integer_Overflow__int_rand_preinc_45_badData; // weak
int CWE190_Integer_Overflow__int_rand_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_rand_preinc_45_goodB2GData; // weak
int badStatic_13; // weak
int goodB2G1Static_13; // weak
int goodB2G2Static_13; // weak
int goodG2BStatic_13; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodB2GData; // weak
int staticFalse_11; // weak
int staticFalse_12; // weak
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BGlobal; // weak
int staticFalse_13; // weak
char CWE190_Integer_Overflow__char_max_preinc_45_badData; // weak
char CWE190_Integer_Overflow__char_max_preinc_45_goodG2BData; // weak
char CWE190_Integer_Overflow__char_max_preinc_45_goodB2GData; // weak
int badStatic_14; // weak
int goodB2G1Static_14; // weak
int goodB2G2Static_14; // weak
int goodG2BStatic_14; // weak
int badStatic_15; // weak
int goodB2G1Static_15; // weak
int goodB2G2Static_15; // weak
int goodG2BStatic_15; // weak
__int16 CWE190_Integer_Overflow__short_rand_preinc_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_preinc_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData; // weak
int staticFalse_14; // weak
int CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_rand_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData; // weak
int staticFalse_15; // weak
int badStatic_16; // weak
int goodB2G1Static_16; // weak
int goodB2G2Static_16; // weak
int goodG2BStatic_16; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_45_badData; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_45_goodB2GData; // weak
int staticFalse_16; // weak
int CWE190_Integer_Overflow__short_max_preinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_max_preinc_22_goodG2BGlobal; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData; // weak
char CWE190_Integer_Overflow__char_fscanf_preinc_68_goodG2BData; // weak
char CWE190_Integer_Overflow__char_fscanf_preinc_68_badData; // weak
char CWE190_Integer_Overflow__char_fscanf_preinc_68_goodB2GData; // weak
__int16 CWE190_Integer_Overflow__short_max_preinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_max_preinc_68_goodB2GData; // weak
__int16 CWE190_Integer_Overflow__short_max_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_68_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_rand_preinc_68_badData; // weak
int CWE190_Integer_Overflow__int_rand_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_rand_preinc_68_goodG2BData; // weak
char CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData; // weak
char CWE190_Integer_Overflow__char_rand_preinc_68_badData; // weak
char CWE190_Integer_Overflow__char_rand_preinc_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodG2BData; // weak
char CWE190_Integer_Overflow__char_max_preinc_68_goodG2BData; // weak
char CWE190_Integer_Overflow__char_max_preinc_68_goodB2GData; // weak
char CWE190_Integer_Overflow__char_max_preinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_preinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData; // weak
__int16 CWE190_Integer_Overflow__short_rand_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_max_preinc_68_badData; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_preinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodG2BData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400BD0) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400E10: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400BF0) ----------------------------------------------------
__int64 sub_400BF0()
{
  return qword_6A9010();
}
// 6A9010: using guessed type __int64 (*qword_6A9010)(void);

//----- (0000000000400E20) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400E26: positive sp value 8 has been found

//----- (0000000000400E50) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6984135LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6984135LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400E80) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400EC0) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6A91C8: using guessed type char completed_6355;

//----- (0000000000400EE0) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400EE0: could not find valid save-restore pair for rbp

//----- (0000000000400F0D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_04_good();");
  CWE190_Integer_Overflow__short_rand_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_32_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_45_good();");
  CWE190_Integer_Overflow__short_rand_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_34_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_42_good();");
  CWE190_Integer_Overflow__char_rand_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_09_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_03_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_14_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_45_good();");
  CWE190_Integer_Overflow__char_max_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_45_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_11_good();");
  CWE190_Integer_Overflow__int_max_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_44_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_09_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_67_good();");
  CWE190_Integer_Overflow__char_rand_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_53_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_64_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_22_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_16_good();");
  CWE190_Integer_Overflow__int_rand_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_03_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_22_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_54_good();");
  CWE190_Integer_Overflow__short_rand_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_44_good();");
  CWE190_Integer_Overflow__char_max_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_13_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_54_good();");
  CWE190_Integer_Overflow__char_rand_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_61_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_11_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_02_good();");
  CWE190_Integer_Overflow__char_max_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_01_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_05_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_10_good();");
  CWE190_Integer_Overflow__char_rand_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_41_good();");
  CWE190_Integer_Overflow__int_max_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_51_good();");
  CWE190_Integer_Overflow__int_rand_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_68_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_04_good();");
  CWE190_Integer_Overflow__short_max_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_09_good();");
  CWE190_Integer_Overflow__int_max_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_14_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_45_good();");
  CWE190_Integer_Overflow__int_rand_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_03_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_04_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_31_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_17_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_42_good();");
  CWE190_Integer_Overflow__char_max_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_02_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_21_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_13_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_66_good();");
  CWE190_Integer_Overflow__short_rand_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_34_good();");
  CWE190_Integer_Overflow__short_rand_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_64_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_53_good();");
  CWE190_Integer_Overflow__int_rand_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_12_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_67_good();");
  CWE190_Integer_Overflow__short_max_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_16_good();");
  CWE190_Integer_Overflow__char_max_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_67_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_65_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_07_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_09_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_09_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_51_good();");
  CWE190_Integer_Overflow__char_rand_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_22_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_11_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_32_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_68_good();");
  CWE190_Integer_Overflow__int_max_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_52_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_10_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_07_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_64_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_53_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_52_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_61_good();");
  CWE190_Integer_Overflow__char_max_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_05_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_53_good();");
  CWE190_Integer_Overflow__int_max_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_31_good();");
  CWE190_Integer_Overflow__int_max_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_18_good();");
  CWE190_Integer_Overflow__char_max_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_63_good();");
  CWE190_Integer_Overflow__int_rand_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_21_good();");
  CWE190_Integer_Overflow__char_max_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_51_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_06_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_07_good();");
  CWE190_Integer_Overflow__int_rand_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_42_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_67_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_13_good();");
  CWE190_Integer_Overflow__int_rand_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_18_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_15_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_05_good();");
  CWE190_Integer_Overflow__char_max_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_64_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_66_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_53_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_67_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_21_good();");
  CWE190_Integer_Overflow__short_max_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_04_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_11_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_52_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_07_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_66_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_45_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_11_good();");
  CWE190_Integer_Overflow__char_max_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_67_good();");
  CWE190_Integer_Overflow__int_rand_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_04_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_08_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_08_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_44_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_65_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_68_good();");
  CWE190_Integer_Overflow__short_rand_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_52_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_22_good();");
  CWE190_Integer_Overflow__short_rand_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_02_good();");
  CWE190_Integer_Overflow__char_rand_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_31_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_08_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_04_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_53_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_01_good();");
  CWE190_Integer_Overflow__char_rand_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_41_good();");
  CWE190_Integer_Overflow__int_rand_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_02_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_16_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_13_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_32_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_52_good();");
  CWE190_Integer_Overflow__short_rand_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_64_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_41_good();");
  CWE190_Integer_Overflow__short_rand_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_18_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_67_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_44_good();");
  CWE190_Integer_Overflow__int_max_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_13_good();");
  CWE190_Integer_Overflow__short_max_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_13_good();");
  CWE190_Integer_Overflow__short_rand_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_41_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_12_good();");
  CWE190_Integer_Overflow__char_rand_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_11_good();");
  CWE190_Integer_Overflow__short_rand_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_67_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_14_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_11_good();");
  CWE190_Integer_Overflow__char_rand_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_34_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_10_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_08_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_09_good();");
  CWE190_Integer_Overflow__int_rand_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_18_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_13_good();");
  CWE190_Integer_Overflow__char_rand_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_12_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_16_good();");
  CWE190_Integer_Overflow__int_max_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_18_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_06_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_54_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_66_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_16_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_07_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_66_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_31_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_42_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_13_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_65_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_21_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_22_good();");
  CWE190_Integer_Overflow__int_max_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_12_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_08_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_06_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_63_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_42_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_17_good();");
  CWE190_Integer_Overflow__short_max_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_65_good();");
  CWE190_Integer_Overflow__short_max_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_41_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_31_good();");
  CWE190_Integer_Overflow__short_max_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_52_good();");
  CWE190_Integer_Overflow__int_max_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_12_good();");
  CWE190_Integer_Overflow__short_rand_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_63_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_10_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_04_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_07_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_16_good();");
  CWE190_Integer_Overflow__char_rand_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_22_good();");
  CWE190_Integer_Overflow__char_rand_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_65_good();");
  CWE190_Integer_Overflow__int_rand_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_44_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_13_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_01_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_01_good();");
  CWE190_Integer_Overflow__int_max_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_04_good();");
  CWE190_Integer_Overflow__int_max_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_01_good();");
  CWE190_Integer_Overflow__int_rand_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_44_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_06_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_07_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_11_good();");
  CWE190_Integer_Overflow__short_max_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_54_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_09_good();");
  CWE190_Integer_Overflow__char_rand_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_54_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_10_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_07_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_18_good();");
  CWE190_Integer_Overflow__char_rand_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_11_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_16_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_34_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_05_good();");
  CWE190_Integer_Overflow__short_max_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_09_good();");
  CWE190_Integer_Overflow__short_max_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_52_good();");
  CWE190_Integer_Overflow__char_max_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_53_good();");
  CWE190_Integer_Overflow__short_max_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_17_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_02_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_16_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_66_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_66_good();");
  CWE190_Integer_Overflow__char_rand_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_63_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_61_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_11_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_08_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_53_good();");
  CWE190_Integer_Overflow__char_rand_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_61_good();");
  CWE190_Integer_Overflow__int_max_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_42_good();");
  CWE190_Integer_Overflow__short_max_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_63_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_06_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_32_good();");
  CWE190_Integer_Overflow__char_rand_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_31_good();");
  CWE190_Integer_Overflow__int_rand_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_54_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_08_good();");
  CWE190_Integer_Overflow__short_rand_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_10_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_66_good();");
  CWE190_Integer_Overflow__int_rand_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_66_good();");
  CWE190_Integer_Overflow__char_max_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_01_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_16_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_05_good();");
  CWE190_Integer_Overflow__int_rand_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_06_good();");
  CWE190_Integer_Overflow__int_rand_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_53_good();");
  CWE190_Integer_Overflow__char_max_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_64_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_08_good();");
  CWE190_Integer_Overflow__short_max_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_14_good();");
  CWE190_Integer_Overflow__short_max_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_10_good();");
  CWE190_Integer_Overflow__short_rand_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_54_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_11_good();");
  CWE190_Integer_Overflow__int_rand_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_53_good();");
  CWE190_Integer_Overflow__short_rand_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_18_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_22_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_65_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_63_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_17_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_03_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_54_good();");
  CWE190_Integer_Overflow__short_max_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_15_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_10_good();");
  CWE190_Integer_Overflow__int_rand_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_51_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_13_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_42_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_32_good();");
  CWE190_Integer_Overflow__int_max_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_02_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_04_good();");
  CWE190_Integer_Overflow__char_rand_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_52_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_10_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_52_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_41_good();");
  CWE190_Integer_Overflow__char_max_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_21_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_34_good();");
  CWE190_Integer_Overflow__int_rand_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_21_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_67_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_65_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_63_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_06_good();");
  CWE190_Integer_Overflow__char_rand_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_41_good();");
  CWE190_Integer_Overflow__char_rand_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_54_good();");
  CWE190_Integer_Overflow__char_max_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_63_good();");
  CWE190_Integer_Overflow__char_rand_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_04_good();");
  CWE190_Integer_Overflow__char_max_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_32_good();");
  CWE190_Integer_Overflow__short_rand_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_03_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_42_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_44_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_01_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_51_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_61_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_11_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_65_good();");
  CWE190_Integer_Overflow__char_max_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_15_good();");
  CWE190_Integer_Overflow__char_max_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_67_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_21_good();");
  CWE190_Integer_Overflow__int_max_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_04_good();");
  CWE190_Integer_Overflow__int_rand_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_32_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_05_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_44_good();");
  CWE190_Integer_Overflow__int_rand_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_44_good();");
  CWE190_Integer_Overflow__short_rand_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_01_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_44_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_66_good();");
  CWE190_Integer_Overflow__short_max_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_61_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_31_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_03_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_17_good();");
  CWE190_Integer_Overflow__char_rand_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_32_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_63_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_15_good();");
  CWE190_Integer_Overflow__short_max_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_67_good();");
  CWE190_Integer_Overflow__short_rand_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_22_good();");
  CWE190_Integer_Overflow__int_rand_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_17_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_22_good();");
  CWE190_Integer_Overflow__short_max_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_16_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_09_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_45_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_16_good();");
  CWE190_Integer_Overflow__short_max_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_44_good();");
  CWE190_Integer_Overflow__char_rand_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_04_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_10_good();");
  CWE190_Integer_Overflow__int_max_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_61_good();");
  CWE190_Integer_Overflow__short_max_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_14_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_06_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_63_good();");
  CWE190_Integer_Overflow__int_max_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_31_good();");
  CWE190_Integer_Overflow__char_max_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_64_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_08_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_31_good();");
  CWE190_Integer_Overflow__short_rand_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_18_good();");
  CWE190_Integer_Overflow__int_rand_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_45_good();");
  CWE190_Integer_Overflow__int_max_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_21_good();");
  CWE190_Integer_Overflow__int_rand_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_68_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_53_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_42_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_01_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_12_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_12_good();");
  CWE190_Integer_Overflow__short_max_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_52_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_05_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_05_good();");
  CWE190_Integer_Overflow__short_rand_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_12_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_61_good();");
  CWE190_Integer_Overflow__short_rand_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_06_good();");
  CWE190_Integer_Overflow__short_max_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_65_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_07_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_53_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_63_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_02_good();");
  CWE190_Integer_Overflow__short_rand_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_21_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_63_good();");
  CWE190_Integer_Overflow__short_rand_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_34_good();");
  CWE190_Integer_Overflow__short_max_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_31_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_12_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_01_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_09_good();");
  CWE190_Integer_Overflow__char_max_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_64_good();");
  CWE190_Integer_Overflow__short_max_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_61_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_15_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_61_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_64_good();");
  CWE190_Integer_Overflow__char_max_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_14_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_65_good();");
  CWE190_Integer_Overflow__char_rand_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_41_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_18_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_32_good();");
  CWE190_Integer_Overflow__int_rand_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_04_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_51_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_53_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_61_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_42_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_44_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_51_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_07_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_03_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_68_good();");
  CWE190_Integer_Overflow__short_max_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_08_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_15_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_61_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_16_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_07_good();");
  CWE190_Integer_Overflow__int_max_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_61_good();");
  CWE190_Integer_Overflow__int_rand_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_16_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_16_good();");
  CWE190_Integer_Overflow__short_rand_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_21_good();");
  CWE190_Integer_Overflow__short_rand_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_66_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_22_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_03_good();");
  CWE190_Integer_Overflow__short_rand_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_67_good();");
  CWE190_Integer_Overflow__int_max_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_21_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_52_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_01_good();");
  CWE190_Integer_Overflow__short_max_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_10_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_68_good();");
  CWE190_Integer_Overflow__char_rand_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_01_good();");
  CWE190_Integer_Overflow__short_rand_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_67_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_04_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_45_good();");
  CWE190_Integer_Overflow__char_rand_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_15_good();");
  CWE190_Integer_Overflow__char_rand_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_54_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_06_good();");
  CWE190_Integer_Overflow__char_max_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_11_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_21_good();");
  CWE190_Integer_Overflow__char_rand_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_51_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_07_good();");
  CWE190_Integer_Overflow__char_max_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_34_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_18_good();");
  CWE190_Integer_Overflow__short_rand_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_07_good();");
  CWE190_Integer_Overflow__short_max_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_07_good();");
  CWE190_Integer_Overflow__short_rand_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_14_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_63_good();");
  CWE190_Integer_Overflow__short_max_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_68_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_32_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_05_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_01_good();");
  CWE190_Integer_Overflow__char_max_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_09_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_52_good();");
  CWE190_Integer_Overflow__char_rand_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_52_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_17_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_54_good();");
  CWE190_Integer_Overflow__int_max_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_34_good();");
  CWE190_Integer_Overflow__char_rand_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_34_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_32_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_45_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_68_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_05_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_22_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_51_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_13_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_17_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_44_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_68_good();");
  CWE190_Integer_Overflow__int_rand_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_08_good();");
  CWE190_Integer_Overflow__int_rand_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_03_good();");
  CWE190_Integer_Overflow__char_max_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_45_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_31_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_18_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_12_good();");
  CWE190_Integer_Overflow__int_max_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_06_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_09_good();");
  CWE190_Integer_Overflow__short_rand_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_05_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_05_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_03_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_68_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_13_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_13_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_14_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_53_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_05_good();");
  CWE190_Integer_Overflow__int_max_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_02_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_04_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_01_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_12_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_51_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_03_good();");
  CWE190_Integer_Overflow__int_max_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_06_good();");
  CWE190_Integer_Overflow__int_max_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_14_good();");
  CWE190_Integer_Overflow__int_max_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_51_good();");
  CWE190_Integer_Overflow__short_max_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_01_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_54_good();");
  CWE190_Integer_Overflow__int_rand_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_65_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_15_good();");
  CWE190_Integer_Overflow__int_max_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_02_good();");
  CWE190_Integer_Overflow__short_max_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_02_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_14_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_15_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_22_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_65_good();");
  CWE190_Integer_Overflow__short_rand_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_03_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_42_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_14_good();");
  CWE190_Integer_Overflow__short_rand_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_34_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_64_good();");
  CWE190_Integer_Overflow__int_rand_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_51_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_64_good();");
  CWE190_Integer_Overflow__short_rand_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_45_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_67_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_45_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_63_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_13_good();");
  CWE190_Integer_Overflow__int_max_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_68_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_15_good();");
  CWE190_Integer_Overflow__int_rand_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_06_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_66_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_14_good();");
  CWE190_Integer_Overflow__char_max_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_02_good();");
  CWE190_Integer_Overflow__int_max_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_41_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_21_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_52_good();");
  CWE190_Integer_Overflow__int_rand_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_14_good();");
  CWE190_Integer_Overflow__int_rand_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_61_good();");
  CWE190_Integer_Overflow__char_rand_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_12_good();");
  CWE190_Integer_Overflow__char_max_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_09_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_54_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_02_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_65_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_45_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_02_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_42_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_64_good();");
  CWE190_Integer_Overflow__char_rand_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_31_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_15_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_07_good();");
  CWE190_Integer_Overflow__char_rand_preinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_21_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_13_good();");
  CWE190_Integer_Overflow__char_max_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_32_good();");
  CWE190_Integer_Overflow__char_max_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_17_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_34_good();");
  CWE190_Integer_Overflow__char_max_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_08_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_31_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_08_good();");
  CWE190_Integer_Overflow__int_max_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_44_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_41_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_65_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_64_good();");
  CWE190_Integer_Overflow__int_max_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_42_good();");
  CWE190_Integer_Overflow__int_rand_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_06_good();");
  CWE190_Integer_Overflow__short_rand_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_66_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_63_good();");
  CWE190_Integer_Overflow__char_max_preinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_05_good();");
  CWE190_Integer_Overflow__char_rand_preinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_51_good();");
  CWE190_Integer_Overflow__short_rand_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_32_good();");
  CWE190_Integer_Overflow__short_max_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_17_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_52_good();");
  CWE190_Integer_Overflow__short_max_preinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_03_good();");
  CWE190_Integer_Overflow__int_rand_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_34_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_12_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_15_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_17_good();");
  CWE190_Integer_Overflow__int_rand_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_68_good();");
  CWE190_Integer_Overflow__char_max_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_11_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_03_good();");
  CWE190_Integer_Overflow__char_rand_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_31_good();");
  CWE190_Integer_Overflow__char_rand_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_34_good();");
  CWE190_Integer_Overflow__int_max_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_02_good();");
  CWE190_Integer_Overflow__int_rand_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_10_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_09_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_34_good();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_67_good();");
  CWE190_Integer_Overflow__char_max_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_17_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_41_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_10_good();");
  CWE190_Integer_Overflow__char_max_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_41_good();");
  CWE190_Integer_Overflow__short_max_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_06_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_14_good();");
  CWE190_Integer_Overflow__char_rand_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_42_good();");
  CWE190_Integer_Overflow__int_max_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_68_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_15_good();");
  CWE190_Integer_Overflow__short_rand_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_02_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_18_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_15_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_22_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_08_good();");
  CWE190_Integer_Overflow__char_max_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_08_good();");
  CWE190_Integer_Overflow__char_rand_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_16_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_32_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_45_good();");
  CWE190_Integer_Overflow__short_max_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_12_good();");
  CWE190_Integer_Overflow__int_rand_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_21_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_53_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_66_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_03_good();");
  CWE190_Integer_Overflow__short_max_preinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_10_good();");
  CWE190_Integer_Overflow__short_max_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_15_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_51_good();");
  CWE190_Integer_Overflow__char_max_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_54_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_18_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_12_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_51_good();");
  CWE190_Integer_Overflow__int_max_preinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_34_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_09_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_68_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_18_good();");
  CWE190_Integer_Overflow__short_max_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_42_good();");
  CWE190_Integer_Overflow__short_rand_preinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_14_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_11_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_64_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_31_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_22_good();");
  CWE190_Integer_Overflow__char_max_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_32_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_66_good();");
  CWE190_Integer_Overflow__int_max_preinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_68_good();");
  CWE190_Integer_Overflow__int_fgets_preinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_44_good();");
  CWE190_Integer_Overflow__short_max_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_17_good();");
  CWE190_Integer_Overflow__char_max_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_41_good();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_22_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_65_good();");
  CWE190_Integer_Overflow__int_max_preinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_41_good();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_18_good();");
  CWE190_Integer_Overflow__int_max_preinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_64_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_41_good();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_17_good();");
  CWE190_Integer_Overflow__int_max_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_54_good();");
  CWE190_Integer_Overflow__int_fscanf_preinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_10_good();");
  CWE190_Integer_Overflow__short_fscanf_preinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_45_good();");
  CWE190_Integer_Overflow__int64_t_max_preinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_17_good();");
  CWE190_Integer_Overflow__short_rand_preinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_61_good();");
  CWE190_Integer_Overflow__char_fscanf_preinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_04_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_32_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_45_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_34_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_42_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_09_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_03_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_14_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_45_bad();");
  CWE190_Integer_Overflow__char_max_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_11_bad();");
  CWE190_Integer_Overflow__int_max_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_44_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_09_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_67_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_53_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_64_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_22_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_16_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_03_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_22_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_54_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_44_bad();");
  CWE190_Integer_Overflow__char_max_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_13_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_54_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_61_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_11_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_02_bad();");
  CWE190_Integer_Overflow__char_max_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_01_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_05_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_10_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_41_bad();");
  CWE190_Integer_Overflow__int_max_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_51_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_68_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_04_bad();");
  CWE190_Integer_Overflow__short_max_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_09_bad();");
  CWE190_Integer_Overflow__int_max_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_45_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_04_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_31_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_42_bad();");
  CWE190_Integer_Overflow__char_max_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_02_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_21_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_66_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_34_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_64_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_53_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_12_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_67_bad();");
  CWE190_Integer_Overflow__short_max_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_16_bad();");
  CWE190_Integer_Overflow__char_max_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_67_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_65_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_07_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_09_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_51_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_22_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_11_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_32_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_68_bad();");
  CWE190_Integer_Overflow__int_max_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_52_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_10_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_07_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_64_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_53_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_52_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_61_bad();");
  CWE190_Integer_Overflow__char_max_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_05_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_53_bad();");
  CWE190_Integer_Overflow__int_max_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_31_bad();");
  CWE190_Integer_Overflow__int_max_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_18_bad();");
  CWE190_Integer_Overflow__char_max_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_63_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_21_bad();");
  CWE190_Integer_Overflow__char_max_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_51_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_06_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_07_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_42_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_67_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_13_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_18_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_15_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_05_bad();");
  CWE190_Integer_Overflow__char_max_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_64_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_66_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_53_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_67_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_21_bad();");
  CWE190_Integer_Overflow__short_max_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_04_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_11_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_52_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_07_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_66_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_45_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_11_bad();");
  CWE190_Integer_Overflow__char_max_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_67_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_04_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_08_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_08_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_68_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_52_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_22_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_02_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_31_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_04_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_01_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_41_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_02_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_16_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_13_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_32_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_52_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_64_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_41_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_18_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_67_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_44_bad();");
  CWE190_Integer_Overflow__int_max_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_13_bad();");
  CWE190_Integer_Overflow__short_max_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_13_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_41_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_12_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_11_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_67_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_14_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_11_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_34_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_10_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_08_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_09_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_18_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_13_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_12_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_16_bad();");
  CWE190_Integer_Overflow__int_max_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_18_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_06_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_66_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_16_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_07_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_66_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_31_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_42_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_13_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_65_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_21_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_22_bad();");
  CWE190_Integer_Overflow__int_max_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_08_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_06_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_63_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_42_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_17_bad();");
  CWE190_Integer_Overflow__short_max_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_65_bad();");
  CWE190_Integer_Overflow__short_max_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_41_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_31_bad();");
  CWE190_Integer_Overflow__short_max_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_52_bad();");
  CWE190_Integer_Overflow__int_max_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_12_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_63_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_10_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_04_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_07_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_16_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_22_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_65_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_44_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_13_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_01_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_01_bad();");
  CWE190_Integer_Overflow__int_max_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_04_bad();");
  CWE190_Integer_Overflow__int_max_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_01_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_44_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_06_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_07_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_11_bad();");
  CWE190_Integer_Overflow__short_max_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_54_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_09_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_54_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_10_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_18_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_11_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_16_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_34_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_05_bad();");
  CWE190_Integer_Overflow__short_max_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_09_bad();");
  CWE190_Integer_Overflow__short_max_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_52_bad();");
  CWE190_Integer_Overflow__char_max_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_53_bad();");
  CWE190_Integer_Overflow__short_max_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_17_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_02_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_16_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_66_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_66_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_63_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_61_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_11_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_08_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_53_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_61_bad();");
  CWE190_Integer_Overflow__int_max_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_42_bad();");
  CWE190_Integer_Overflow__short_max_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_63_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_06_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_32_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_31_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_54_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_08_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_66_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_66_bad();");
  CWE190_Integer_Overflow__char_max_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_01_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_16_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_05_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_06_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_53_bad();");
  CWE190_Integer_Overflow__char_max_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_64_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_08_bad();");
  CWE190_Integer_Overflow__short_max_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_14_bad();");
  CWE190_Integer_Overflow__short_max_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_10_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_54_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_11_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_53_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_18_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_22_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_65_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_63_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_17_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_03_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_54_bad();");
  CWE190_Integer_Overflow__short_max_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_15_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_10_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_51_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_13_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_32_bad();");
  CWE190_Integer_Overflow__int_max_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_02_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_04_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_52_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_41_bad();");
  CWE190_Integer_Overflow__char_max_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_21_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_34_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_67_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_65_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_63_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_06_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_41_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_54_bad();");
  CWE190_Integer_Overflow__char_max_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_63_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_04_bad();");
  CWE190_Integer_Overflow__char_max_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_32_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_03_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_42_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_44_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_01_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_51_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_61_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_65_bad();");
  CWE190_Integer_Overflow__char_max_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_15_bad();");
  CWE190_Integer_Overflow__char_max_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_21_bad();");
  CWE190_Integer_Overflow__int_max_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_04_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_32_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_05_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_44_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_44_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_01_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_44_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_66_bad();");
  CWE190_Integer_Overflow__short_max_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_61_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_31_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_03_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_17_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_32_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_63_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_15_bad();");
  CWE190_Integer_Overflow__short_max_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_67_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_22_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_22_bad();");
  CWE190_Integer_Overflow__short_max_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_16_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_09_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_16_bad();");
  CWE190_Integer_Overflow__short_max_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_44_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_04_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_10_bad();");
  CWE190_Integer_Overflow__int_max_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_61_bad();");
  CWE190_Integer_Overflow__short_max_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_14_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_06_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_63_bad();");
  CWE190_Integer_Overflow__int_max_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_31_bad();");
  CWE190_Integer_Overflow__char_max_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_64_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_08_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_31_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_18_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_45_bad();");
  CWE190_Integer_Overflow__int_max_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_21_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_53_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_42_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_01_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_12_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_12_bad();");
  CWE190_Integer_Overflow__short_max_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_52_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_05_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_05_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_12_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_61_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_06_bad();");
  CWE190_Integer_Overflow__short_max_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_65_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_07_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_53_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_02_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_21_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_63_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_34_bad();");
  CWE190_Integer_Overflow__short_max_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_31_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_12_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_01_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_09_bad();");
  CWE190_Integer_Overflow__char_max_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_64_bad();");
  CWE190_Integer_Overflow__short_max_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_61_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_15_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_61_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_64_bad();");
  CWE190_Integer_Overflow__char_max_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_14_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_65_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_41_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_32_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_51_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_53_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_42_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_44_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_51_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_07_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_03_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_68_bad();");
  CWE190_Integer_Overflow__short_max_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_08_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_61_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_16_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_07_bad();");
  CWE190_Integer_Overflow__int_max_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_61_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_16_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_21_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_66_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_22_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_03_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_67_bad();");
  CWE190_Integer_Overflow__int_max_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_21_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_52_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_01_bad();");
  CWE190_Integer_Overflow__short_max_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_10_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_68_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_01_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_67_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_04_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_45_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_15_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_54_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_06_bad();");
  CWE190_Integer_Overflow__char_max_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_11_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_21_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_51_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_07_bad();");
  CWE190_Integer_Overflow__char_max_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_18_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_07_bad();");
  CWE190_Integer_Overflow__short_max_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_07_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_14_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_63_bad();");
  CWE190_Integer_Overflow__short_max_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_68_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_05_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_01_bad();");
  CWE190_Integer_Overflow__char_max_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_09_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_52_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_52_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_17_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_54_bad();");
  CWE190_Integer_Overflow__int_max_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_34_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_34_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_32_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_45_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_68_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_05_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_22_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_51_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_13_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_17_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_44_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_68_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_08_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_03_bad();");
  CWE190_Integer_Overflow__char_max_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_45_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_31_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_18_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_12_bad();");
  CWE190_Integer_Overflow__int_max_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_09_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_05_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_05_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_68_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_13_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_13_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_14_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_53_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_05_bad();");
  CWE190_Integer_Overflow__int_max_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_02_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_04_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_12_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_51_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_03_bad();");
  CWE190_Integer_Overflow__int_max_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_06_bad();");
  CWE190_Integer_Overflow__int_max_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_14_bad();");
  CWE190_Integer_Overflow__int_max_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_51_bad();");
  CWE190_Integer_Overflow__short_max_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_01_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_54_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_65_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_15_bad();");
  CWE190_Integer_Overflow__int_max_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_02_bad();");
  CWE190_Integer_Overflow__short_max_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_14_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_15_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_22_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_65_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_03_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_42_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_14_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_34_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_64_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_64_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_45_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_67_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_45_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_63_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_13_bad();");
  CWE190_Integer_Overflow__int_max_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_68_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_15_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_06_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_66_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_14_bad();");
  CWE190_Integer_Overflow__char_max_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_02_bad();");
  CWE190_Integer_Overflow__int_max_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_41_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_21_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_52_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_14_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_61_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_12_bad();");
  CWE190_Integer_Overflow__char_max_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_09_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_54_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_02_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_45_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_02_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_42_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_64_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_15_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_07_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_21_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_13_bad();");
  CWE190_Integer_Overflow__char_max_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_32_bad();");
  CWE190_Integer_Overflow__char_max_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_17_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_34_bad();");
  CWE190_Integer_Overflow__char_max_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_08_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_31_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_08_bad();");
  CWE190_Integer_Overflow__int_max_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_44_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_41_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_65_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_64_bad();");
  CWE190_Integer_Overflow__int_max_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_42_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_06_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_63_bad();");
  CWE190_Integer_Overflow__char_max_preinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_05_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_51_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_32_bad();");
  CWE190_Integer_Overflow__short_max_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_17_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_52_bad();");
  CWE190_Integer_Overflow__short_max_preinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_03_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_34_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_15_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_17_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_68_bad();");
  CWE190_Integer_Overflow__char_max_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_11_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_03_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_31_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_34_bad();");
  CWE190_Integer_Overflow__int_max_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_02_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_10_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_09_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_preinc_34_bad();");
  CWE190_Integer_Overflow__int_connect_socket_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_67_bad();");
  CWE190_Integer_Overflow__char_max_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_17_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_41_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_10_bad();");
  CWE190_Integer_Overflow__char_max_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_41_bad();");
  CWE190_Integer_Overflow__short_max_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_06_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_14_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_42_bad();");
  CWE190_Integer_Overflow__int_max_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_68_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_15_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_02_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_18_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_15_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_22_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_08_bad();");
  CWE190_Integer_Overflow__char_max_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_preinc_08_bad();");
  CWE190_Integer_Overflow__char_rand_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_16_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_32_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_45_bad();");
  CWE190_Integer_Overflow__short_max_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_preinc_12_bad();");
  CWE190_Integer_Overflow__int_rand_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_21_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_53_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_66_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_03_bad();");
  CWE190_Integer_Overflow__short_max_preinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_10_bad();");
  CWE190_Integer_Overflow__short_max_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_15_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_51_bad();");
  CWE190_Integer_Overflow__char_max_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_54_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_18_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_12_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_51_bad();");
  CWE190_Integer_Overflow__int_max_preinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_34_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_09_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_68_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_18_bad();");
  CWE190_Integer_Overflow__short_max_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_42_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_14_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_11_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_64_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_31_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_22_bad();");
  CWE190_Integer_Overflow__char_max_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_66_bad();");
  CWE190_Integer_Overflow__int_max_preinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_preinc_68_bad();");
  CWE190_Integer_Overflow__int_fgets_preinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_preinc_44_bad();");
  CWE190_Integer_Overflow__short_max_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_preinc_17_bad();");
  CWE190_Integer_Overflow__char_max_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_preinc_41_bad();");
  CWE190_Integer_Overflow__int64_t_rand_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_65_bad();");
  CWE190_Integer_Overflow__int_max_preinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_preinc_41_bad();");
  CWE190_Integer_Overflow__int_listen_socket_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_18_bad();");
  CWE190_Integer_Overflow__int_max_preinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_preinc_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_preinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_preinc_17_bad();");
  CWE190_Integer_Overflow__int_max_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_preinc_54_bad();");
  CWE190_Integer_Overflow__int_fscanf_preinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_preinc_10_bad();");
  CWE190_Integer_Overflow__short_fscanf_preinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_preinc_45_bad();");
  CWE190_Integer_Overflow__int64_t_max_preinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_preinc_17_bad();");
  CWE190_Integer_Overflow__short_rand_preinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_preinc_61_bad();");
  CWE190_Integer_Overflow__char_fscanf_preinc_61_bad();
  return 0;
}
// 6A953C: using guessed type int globalArgc;
// 6A9540: using guessed type __int64 globalArgv;

//----- (0000000000407A28) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000407A77) ----------------------------------------------------
int goodG2B()
{
  return printLongLongLine(3LL);
}

//----- (0000000000407AAA) ----------------------------------------------------
int goodB2G()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000407B18) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_01_good()
{
  goodG2B();
  return goodB2G();
}

//----- (0000000000407B32) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_53d_badSink(a1);
}

//----- (0000000000407B4C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_53d_goodG2BSink(a1);
}

//----- (0000000000407B66) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000407B80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000407BB3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000407BE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000407C2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000407C56) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000407C7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000407CBA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_rand_preinc_61b_badSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000407CEC) ----------------------------------------------------
int goodG2B_0()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_rand_preinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000407D1E) ----------------------------------------------------
int goodB2G_0()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_rand_preinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000407D65) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_61_good()
{
  goodG2B_0();
  return goodB2G_0();
}

//----- (0000000000407D7F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_16_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000407DCC) ----------------------------------------------------
int goodB2G_1()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000407E2F) ----------------------------------------------------
int goodG2B_1()
{
  return printIntLine(3u);
}

//----- (0000000000407E5F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_16_good()
{
  goodB2G_1();
  return goodG2B_1();
}

//----- (0000000000407E79) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_preinc_68_badData + 1);
}
// 6A9574: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_68_badData;

//----- (0000000000407EA0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodG2BData + 1);
}
// 6A9578: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodG2BData;

//----- (0000000000407EC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodB2GData + 1);
  return result;
}
// 6A957C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodB2GData;

//----- (0000000000407F03) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 6A9124: using guessed type int staticFive;

//----- (0000000000407F8D) ----------------------------------------------------
int goodB2G1()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6A9124: using guessed type int staticFive;

//----- (0000000000408038) ----------------------------------------------------
int goodB2G2()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6A9124: using guessed type int staticFive;

//----- (00000000004080D7) ----------------------------------------------------
int goodG2B1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9124: using guessed type int staticFive;

//----- (0000000000408125) ----------------------------------------------------
int goodG2B2()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9124: using guessed type int staticFive;

//----- (0000000000408167) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_07_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1();
  return goodG2B2();
}

//----- (0000000000408195) ----------------------------------------------------
int __fastcall badSink(int a1)
{
  int result; // eax

  result = badStatic;
  if ( badStatic )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A91CC: using guessed type int badStatic;

//----- (00000000004081C0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_21_bad()
{
  badStatic = 1;
  return badSink(-1);
}
// 6A91CC: using guessed type int badStatic;

//----- (00000000004081EC) ----------------------------------------------------
int __fastcall goodB2G1Sink(int a1)
{
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6A91D0: using guessed type int goodB2G1Static;

//----- (0000000000408235) ----------------------------------------------------
int goodB2G1_0()
{
  goodB2G1Static = 0;
  return goodB2G1Sink(-1);
}
// 6A91D0: using guessed type int goodB2G1Static;

//----- (0000000000408261) ----------------------------------------------------
int __fastcall goodB2G2Sink(int a1)
{
  int result; // eax

  result = goodB2G2Static;
  if ( goodB2G2Static )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6A91D4: using guessed type int goodB2G2Static;

//----- (000000000040829E) ----------------------------------------------------
int goodB2G2_0()
{
  goodB2G2Static = 1;
  return goodB2G2Sink(-1);
}
// 6A91D4: using guessed type int goodB2G2Static;

//----- (00000000004082CA) ----------------------------------------------------
int __fastcall goodG2BSink(int a1)
{
  int result; // eax

  result = goodG2BStatic;
  if ( goodG2BStatic )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A91D8: using guessed type int goodG2BStatic;

//----- (00000000004082F5) ----------------------------------------------------
int goodG2B_2()
{
  goodG2BStatic = 1;
  return goodG2BSink(2);
}
// 6A91D8: using guessed type int goodG2BStatic;

//----- (0000000000408321) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_21_good()
{
  goodB2G1_0();
  goodB2G2_0();
  return goodG2B_2();
}

//----- (0000000000408345) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000408371) ----------------------------------------------------
int goodB2G1_1()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004083AF) ----------------------------------------------------
int goodB2G2_1()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004083ED) ----------------------------------------------------
int goodG2B1_0()
{
  return printUnsignedLine(3u);
}

//----- (0000000000408419) ----------------------------------------------------
int goodG2B2_0()
{
  return printUnsignedLine(3u);
}

//----- (0000000000408445) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_03_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (0000000000408473) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_31_bad()
{
  char v1; // [rsp+Ch] [rbp-4h]
  char v2; // [rsp+Dh] [rbp-3h]
  char v3; // [rsp+Eh] [rbp-2h]
  char v4; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004084C2) ----------------------------------------------------
int goodG2B_3()
{
  return printHexCharLine(3);
}

//----- (00000000004084F8) ----------------------------------------------------
int goodB2G_2()
{
  int result; // eax
  char v1; // [rsp+Ch] [rbp-4h]
  char v2; // [rsp+Eh] [rbp-2h]
  char v3; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408559) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_31_good()
{
  goodG2B_3();
  return goodB2G_2();
}

//----- (0000000000408573) ----------------------------------------------------
__int64 __fastcall badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004085A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004085D2) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 2LL;
}

//----- (00000000004085E5) ----------------------------------------------------
int goodG2B_4()
{
  int v0; // eax

  v0 = goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000408617) ----------------------------------------------------
__int64 __fastcall goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408644) ----------------------------------------------------
int goodB2G_3()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000040868B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_42_good()
{
  goodB2G_3();
  return goodG2B_4();
}

//----- (00000000004086A5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_preinc_68_badData + 1);
}
// 6A961C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_badData;

//----- (00000000004086CC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodG2BData + 1);
}
// 6A9620: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodG2BData;

//----- (00000000004086F3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodB2GData + 1);
  return result;
}
// 6A9618: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodB2GData;

//----- (000000000040872C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040878F) ----------------------------------------------------
int goodB2G1_2()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040881D) ----------------------------------------------------
int goodB2G2_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040889F) ----------------------------------------------------
int goodG2B1_1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004088F2) ----------------------------------------------------
int goodG2B2_1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000408939) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_09_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (0000000000408967) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0x7FFF;
  v2 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_66b_badSink((__int64)&v1);
}

//----- (0000000000408991) ----------------------------------------------------
int goodG2B_5()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_max_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004089BB) ----------------------------------------------------
int goodB2G_4()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0x7FFF;
  v2 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_66b_goodB2GSink((__int64)&v1);
}

//----- (00000000004089E5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_66_good()
{
  goodG2B_5();
  return goodB2G_4();
}

//----- (00000000004089FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_06_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000408A85) ----------------------------------------------------
int goodB2G1_3()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000408B2C) ----------------------------------------------------
int goodB2G2_3()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000408BC7) ----------------------------------------------------
int goodG2B1_2()
{
  return printIntLine(3u);
}

//----- (0000000000408C13) ----------------------------------------------------
int goodG2B2_2()
{
  return printIntLine(3u);
}

//----- (0000000000408C53) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_06_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000408C81) ----------------------------------------------------
int __fastcall badSink_0(int a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A91DC: using guessed type int badStatic_0;

//----- (0000000000408CAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_0 = 1;
  return badSink_0(v4);
}
// 6A91DC: using guessed type int badStatic_0;

//----- (0000000000408D1E) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(int a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A91E0: using guessed type int goodB2G1Static_0;

//----- (0000000000408D6A) ----------------------------------------------------
int goodB2G1_4()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(v4);
}
// 6A91E0: using guessed type int goodB2G1Static_0;

//----- (0000000000408DDC) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(int a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A91E4: using guessed type int goodB2G2Static_0;

//----- (0000000000408E1C) ----------------------------------------------------
int goodB2G2_4()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(v4);
}
// 6A91E4: using guessed type int goodB2G2Static_0;

//----- (0000000000408E8E) ----------------------------------------------------
int __fastcall goodG2BSink_0(int a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A91E8: using guessed type int goodG2BStatic_0;

//----- (0000000000408EB9) ----------------------------------------------------
int goodG2B_6()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_0(2);
}
// 6A91E8: using guessed type int goodG2BStatic_0;

//----- (0000000000408EE5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_21_good()
{
  goodB2G1_4();
  goodB2G2_4();
  return goodG2B_6();
}

//----- (0000000000408F09) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_51_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408F42) ----------------------------------------------------
int goodG2B_7()
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_51b_goodG2BSink(2);
}

//----- (0000000000408F63) ----------------------------------------------------
int goodB2G_5()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408F9C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_51_good()
{
  goodG2B_7();
  return goodB2G_5();
}

//----- (0000000000408FB6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53c_badSink(a1);
}

//----- (0000000000408FCD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000408FE4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000408FFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (000000000040905A) ----------------------------------------------------
int goodB2G_6()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(++v1);
  }
  return result;
}

//----- (00000000004090D5) ----------------------------------------------------
int goodG2B_8()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (000000000040912E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_17_good()
{
  goodB2G_6();
  return goodG2B_8();
}

//----- (0000000000409148) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000409169) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040918A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004091C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_18_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000040928C) ----------------------------------------------------
int goodB2G_7()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000409374) ----------------------------------------------------
int goodG2B_9()
{
  return printLongLongLine(3LL);
}

//----- (00000000004093A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_18_good()
{
  goodB2G_7();
  return goodG2B_9();
}

//----- (00000000004093C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_badSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_fscanf_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__char_fscanf_preinc_22_badGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A91F8: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_badGlobal;

//----- (00000000004093F2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Sink(char a1)
{
  if ( CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6A91FC: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Global;

//----- (000000000040943F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Global )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6A9200: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Global;

//----- (0000000000409480) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9204: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BGlobal;

//----- (00000000004094AF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -1;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 + 1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (0000000000409528) ----------------------------------------------------
int goodB2G_8()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004095B3) ----------------------------------------------------
int goodG2B_10()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (000000000040961A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_12_good()
{
  goodB2G_8();
  return goodG2B_10();
}

//----- (0000000000409634) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000040966A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (00000000004096A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (00000000004096E8) ----------------------------------------------------
int badSink_1()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_preinc_45_badData + 1));
}
// 6A91EC: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_badData;

//----- (0000000000409715) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_45_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_45_badData = v1;
  return badSink_1();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91EC: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_badData;

//----- (0000000000409757) ----------------------------------------------------
int goodG2BSink_1()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_preinc_45_goodG2BData + 1));
}
// 6A91EE: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_goodG2BData;

//----- (0000000000409784) ----------------------------------------------------
int goodG2B_11()
{
  CWE190_Integer_Overflow__short_fscanf_preinc_45_goodG2BData = 2;
  return goodG2BSink_1();
}
// 6A91EE: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_goodG2BData;

//----- (00000000004097AF) ----------------------------------------------------
int goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_fscanf_preinc_45_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_preinc_45_goodB2GData + 1));
  return result;
}
// 6A91F0: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_goodB2GData;

//----- (00000000004097F0) ----------------------------------------------------
int goodB2G_9()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_45_goodB2GData = v1;
  return goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91F0: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_45_goodB2GData;

//----- (0000000000409832) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_45_good()
{
  goodG2B_11();
  return goodB2G_9();
}

//----- (000000000040984C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040986D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040988E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004098C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9128: using guessed type int staticTrue;

//----- (000000000040991F) ----------------------------------------------------
int goodB2G1_5()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9128: using guessed type int staticTrue;
// 6A91F4: using guessed type int staticFalse;

//----- (000000000040999C) ----------------------------------------------------
int goodB2G2_5()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9128: using guessed type int staticTrue;

//----- (0000000000409A0D) ----------------------------------------------------
int goodG2B1_3()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9128: using guessed type int staticTrue;
// 6A91F4: using guessed type int staticFalse;

//----- (0000000000409A59) ----------------------------------------------------
int goodG2B2_3()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9128: using guessed type int staticTrue;

//----- (0000000000409A99) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_05_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (0000000000409AC7) ----------------------------------------------------
int __fastcall badSink_2(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000409AE8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_2(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409B20) ----------------------------------------------------
int __fastcall goodG2BSink_2(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000409B41) ----------------------------------------------------
int goodG2B_12()
{
  return goodG2BSink_2(2);
}

//----- (0000000000409B63) ----------------------------------------------------
int __fastcall goodB2GSink_0(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000409B99) ----------------------------------------------------
int goodB2G_10()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_0(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409BD1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_41_good()
{
  goodB2G_10();
  return goodG2B_12();
}

//----- (0000000000409BEB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54c_badSink(a1);
}

//----- (0000000000409C02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54c_goodG2BSink(a1);
}

//----- (0000000000409C19) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54c_goodB2GSink(a1);
}

//----- (0000000000409C30) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_06_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47028C, &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409C8F) ----------------------------------------------------
int goodB2G1_6()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47028C, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409D10) ----------------------------------------------------
int goodB2G2_6()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47028C, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409D85) ----------------------------------------------------
int goodG2B1_4()
{
  return printIntLine(3u);
}

//----- (0000000000409DD3) ----------------------------------------------------
int goodG2B2_4()
{
  return printIntLine(3u);
}

//----- (0000000000409E15) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_06_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (0000000000409E43) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_61b_badSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000409E5F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000409E75) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_preinc_61b_goodB2GSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000409E91) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53b_badSink(v8);
}
// 409E91: using guessed type char buf[16];

//----- (0000000000409FBF) ----------------------------------------------------
int goodG2B_13()
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53b_goodG2BSink(2);
}

//----- (0000000000409FE1) ----------------------------------------------------
int goodB2G_11()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53b_goodB2GSink(v8);
}
// 409FE1: using guessed type char buf[16];

//----- (000000000040A10F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_53_good()
{
  goodG2B_13();
  return goodB2G_11();
}

//----- (000000000040A129) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_63_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_63b_badSink(&v2);
}

//----- (000000000040A174) ----------------------------------------------------
int goodG2B_14()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_rand_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000040A192) ----------------------------------------------------
int goodB2G_12()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_63b_goodB2GSink(&v2);
}

//----- (000000000040A1DD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_63_good()
{
  goodG2B_14();
  return goodB2G_12();
}

//----- (000000000040A1F7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_badSink(&v6);
}

//----- (000000000040A263) ----------------------------------------------------
int goodG2B_15()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000040A287) ----------------------------------------------------
int goodB2G_13()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_goodB2GSink(&v6);
}

//----- (000000000040A2F3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_63_good()
{
  goodG2B_15();
  return goodB2G_13();
}

//----- (000000000040A30D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040A339) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040A365) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000040A3A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040A3C7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040A3E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040A41E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_22_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__char_fscanf_preinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91F8: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_badGlobal;

//----- (000000000040A461) ----------------------------------------------------
int goodB2G1_7()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91FC: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G1Global;

//----- (000000000040A4A4) ----------------------------------------------------
int goodB2G2_7()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9200: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodB2G2Global;

//----- (000000000040A4E7) ----------------------------------------------------
int goodG2B_16()
{
  CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BSink(2);
}
// 6A9204: using guessed type int CWE190_Integer_Overflow__char_fscanf_preinc_22_goodG2BGlobal;

//----- (000000000040A50E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_22_good()
{
  goodB2G1_7();
  goodB2G2_7();
  return goodG2B_16();
}

//----- (000000000040A532) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_02_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000040A55E) ----------------------------------------------------
int goodB2G1_8()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A59C) ----------------------------------------------------
int goodB2G2_8()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A5DA) ----------------------------------------------------
int goodG2B1_5()
{
  return printUnsignedLine(3u);
}

//----- (000000000040A606) ----------------------------------------------------
int goodG2B2_5()
{
  return printUnsignedLine(3u);
}

//----- (000000000040A632) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_02_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (000000000040A660) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_64_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_preinc_64b_badSink(&v1);
}

//----- (000000000040A67E) ----------------------------------------------------
int goodG2B_17()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_max_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000040A69C) ----------------------------------------------------
int goodB2G_14()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_preinc_64b_goodB2GSink(&v1);
}

//----- (000000000040A6BA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_64_good()
{
  goodG2B_17();
  return goodB2G_14();
}

//----- (000000000040A6D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_65_bad()
{
  return CWE190_Integer_Overflow__int_max_preinc_65b_badSink(0x7FFFFFFF);
}

//----- (000000000040A6FF) ----------------------------------------------------
int goodG2B_18()
{
  return CWE190_Integer_Overflow__int_max_preinc_65b_goodG2BSink(2);
}

//----- (000000000040A72A) ----------------------------------------------------
int goodB2G_15()
{
  return CWE190_Integer_Overflow__int_max_preinc_65b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000040A755) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_65_good()
{
  goodG2B_18();
  return goodB2G_15();
}

//----- (000000000040A76F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_preinc_61b_badSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000040A7AA) ----------------------------------------------------
int goodG2B_19()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_preinc_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000040A7E5) ----------------------------------------------------
int goodB2G_16()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_max_preinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000040A83C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_61_good()
{
  goodG2B_19();
  return goodB2G_16();
}

//----- (000000000040A856) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000040A896) ----------------------------------------------------
int goodB2G1_9()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000040A8F4) ----------------------------------------------------
int goodB2G2_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000040A946) ----------------------------------------------------
int goodG2B1_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000040A992) ----------------------------------------------------
int goodG2B2_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000040A9D2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_10_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (000000000040AA00) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_52c_badSink(a1);
}

//----- (000000000040AA17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_52c_goodG2BSink(a1);
}

//----- (000000000040AA2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_52c_goodB2GSink(a1);
}

//----- (000000000040AA45) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_0 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A912C: using guessed type int staticFive_0;

//----- (000000000040AA94) ----------------------------------------------------
int goodB2G1_10()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_0 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6A912C: using guessed type int staticFive_0;

//----- (000000000040AB0B) ----------------------------------------------------
int goodB2G2_10()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_0 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6A912C: using guessed type int staticFive_0;

//----- (000000000040AB76) ----------------------------------------------------
int goodG2B1_7()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_0 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A912C: using guessed type int staticFive_0;

//----- (000000000040ABCB) ----------------------------------------------------
int goodG2B2_7()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_0 == 5 )
    v1 = 2LL;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A912C: using guessed type int staticFive_0;

//----- (000000000040AC14) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_07_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (000000000040AC42) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_13_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040AC9F) ----------------------------------------------------
int goodB2G1_11()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040AD1C) ----------------------------------------------------
int goodB2G2_11()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040AD8D) ----------------------------------------------------
int goodG2B1_8()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040ADD7) ----------------------------------------------------
int goodG2B2_8()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040AE15) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_13_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (000000000040AE43) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_preinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AE83) ----------------------------------------------------
int goodG2B_20()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fscanf_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040AEAD) ----------------------------------------------------
int goodB2G_17()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_preinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AEED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_66_good()
{
  goodG2B_20();
  return goodB2G_17();
}

//----- (000000000040AF07) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_01_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000040AF33) ----------------------------------------------------
int goodG2B_21()
{
  return printUnsignedLine(3u);
}

//----- (000000000040AF5F) ----------------------------------------------------
int goodB2G_18()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040AF9D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_01_good()
{
  goodG2B_21();
  return goodB2G_18();
}

//----- (000000000040AFB7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040AFDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040B005) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000040B048) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6A9130: using guessed type int staticFive_1;

//----- (000000000040B0D2) ----------------------------------------------------
int goodB2G1_12()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6A9130: using guessed type int staticFive_1;

//----- (000000000040B17A) ----------------------------------------------------
int goodB2G2_12()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6A9130: using guessed type int staticFive_1;

//----- (000000000040B216) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9130: using guessed type int staticFive_1;

//----- (000000000040B264) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9130: using guessed type int staticFive_1;

//----- (000000000040B2A6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_07_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (000000000040B2D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54d_badSink(a1);
}

//----- (000000000040B2EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54d_goodG2BSink(a1);
}

//----- (000000000040B308) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54d_goodB2GSink(a1);
}

//----- (000000000040B322) ----------------------------------------------------
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printUnsignedLine(++v5);
}

//----- (000000000040B3BC) ----------------------------------------------------
void goodB2G_19()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 == -1 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printUnsignedLine(++v5);
  }
}

//----- (000000000040B468) ----------------------------------------------------
int goodG2B_22()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (000000000040B4BA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_good()
{
  goodB2G_19();
  return goodG2B_22();
}

//----- (000000000040B4D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_67b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000040B4FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000040B52A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000040B567) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_02_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (000000000040B5D9) ----------------------------------------------------
int goodB2G1_13()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000040B660) ----------------------------------------------------
int goodB2G2_13()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000040B6E7) ----------------------------------------------------
int goodG2B1_10()
{
  return printIntLine(3u);
}

//----- (000000000040B713) ----------------------------------------------------
int goodG2B2_10()
{
  return printIntLine(3u);
}

//----- (000000000040B73F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_02_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (000000000040B76D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_52b_badSink(v8);
}
// 40B76D: using guessed type char buf[16];

//----- (000000000040B89B) ----------------------------------------------------
int goodG2B_23()
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_52b_goodG2BSink(2);
}

//----- (000000000040B8BD) ----------------------------------------------------
int goodB2G_20()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_52b_goodB2GSink(v8);
}
// 40B8BD: using guessed type char buf[16];

//----- (000000000040B9EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_52_good()
{
  goodG2B_23();
  return goodB2G_20();
}

//----- (000000000040BA05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040BA26) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040BA47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040BA7D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_51b_badSink(v7);
}
// 40BA7D: using guessed type char buf[16];

//----- (000000000040BB65) ----------------------------------------------------
int goodG2B_24()
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_51b_goodG2BSink(2);
}

//----- (000000000040BB87) ----------------------------------------------------
int goodB2G_21()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_51b_goodB2GSink(v7);
}
// 40BB87: using guessed type char buf[16];

//----- (000000000040BC6F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_51_good()
{
  goodG2B_24();
  return goodB2G_21();
}

//----- (000000000040BC89) ----------------------------------------------------
int __fastcall badSink_3(char a1)
{
  int result; // eax

  result = badStatic_1;
  if ( badStatic_1 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9208: using guessed type int badStatic_1;

//----- (000000000040BCB8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_21_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  badStatic_1 = 1;
  return badSink_3(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9208: using guessed type int badStatic_1;

//----- (000000000040BCFB) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(char a1)
{
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6A920C: using guessed type int goodB2G1Static_1;

//----- (000000000040BD48) ----------------------------------------------------
int goodB2G1_14()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A920C: using guessed type int goodB2G1Static_1;

//----- (000000000040BD8B) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(char a1)
{
  int result; // eax

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6A9210: using guessed type int goodB2G2Static_1;

//----- (000000000040BDCC) ----------------------------------------------------
int goodB2G2_14()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9210: using guessed type int goodB2G2Static_1;

//----- (000000000040BE0F) ----------------------------------------------------
int __fastcall goodG2BSink_3(char a1)
{
  int result; // eax

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9214: using guessed type int goodG2BStatic_1;

//----- (000000000040BE3E) ----------------------------------------------------
int goodG2B_25()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_3(2);
}
// 6A9214: using guessed type int goodG2BStatic_1;

//----- (000000000040BE65) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_21_good()
{
  goodB2G1_14();
  goodB2G2_14();
  return goodG2B_25();
}

//----- (000000000040BE89) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_03_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BED0) ----------------------------------------------------
int goodB2G1_15()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BF2B) ----------------------------------------------------
int goodB2G2_15()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BF86) ----------------------------------------------------
int goodG2B1_11()
{
  return printHexCharLine(3);
}

//----- (000000000040BFAE) ----------------------------------------------------
int goodG2B2_11()
{
  return printHexCharLine(3);
}

//----- (000000000040BFD6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_03_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (000000000040C004) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 40C004: using guessed type char buf[16];

//----- (000000000040C13E) ----------------------------------------------------
int goodB2G_22()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 40C13E: using guessed type char buf[16];

//----- (000000000040C28D) ----------------------------------------------------
int goodG2B_26()
{
  return printIntLine(3u);
}

//----- (000000000040C2BB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_16_good()
{
  goodB2G_22();
  return goodG2B_26();
}

//----- (000000000040C2D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54b_badSink(v8);
}
// 40C2D5: using guessed type char buf[16];

//----- (000000000040C403) ----------------------------------------------------
int goodG2B_27()
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54b_goodG2BSink(2);
}

//----- (000000000040C425) ----------------------------------------------------
int goodB2G_23()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54b_goodB2GSink(v8);
}
// 40C425: using guessed type char buf[16];

//----- (000000000040C553) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_54_good()
{
  goodG2B_27();
  return goodB2G_23();
}

//----- (000000000040C56D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040C5CC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040C5DF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040C63E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_badSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C682) ----------------------------------------------------
int goodG2B_28()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodG2BSink(2LL);
}

//----- (000000000040C6B1) ----------------------------------------------------
__int64 goodB2G_24()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodB2GSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C6F5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_good()
{
  goodG2B_28();
  return goodB2G_24();
}

//----- (000000000040C70F) ----------------------------------------------------
__int64 badSource_0()
{
  return 127LL;
}

//----- (000000000040C722) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_42_bad()
{
  char v0; // al

  v0 = badSource_0();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040C754) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 2LL;
}

//----- (000000000040C767) ----------------------------------------------------
int goodG2B_29()
{
  char v0; // al

  v0 = goodG2BSource_0();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040C799) ----------------------------------------------------
__int64 goodB2GSource_0()
{
  return 127LL;
}

//----- (000000000040C7AC) ----------------------------------------------------
int goodB2G_25()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_0();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040C7F0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_42_good()
{
  goodB2G_25();
  return goodG2B_29();
}

//----- (000000000040C80A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_badSource(0LL);
  return printLongLongLine(v0 + 1);
}

//----- (000000000040C845) ----------------------------------------------------
int goodG2B_30()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000040C880) ----------------------------------------------------
int goodB2G_26()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_goodB2GSource(0LL);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000040C8D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_61_good()
{
  goodG2B_30();
  return goodB2G_26();
}

//----- (000000000040C8F1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C93A) ----------------------------------------------------
int goodB2G_27()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C997) ----------------------------------------------------
int goodG2B_31()
{
  return printUnsignedLine(3u);
}

//----- (000000000040C9C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_good()
{
  goodB2G_27();
  return goodG2B_31();
}

//----- (000000000040C9DF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040CA21) ----------------------------------------------------
int goodB2G1_16()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040CA84) ----------------------------------------------------
int goodB2G2_16()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040CADB) ----------------------------------------------------
int goodG2B1_12()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040CB29) ----------------------------------------------------
int goodG2B2_12()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040CB6B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_14_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040CB99) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_09_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 127;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040CBD5) ----------------------------------------------------
int goodB2G1_17()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 127;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040CC2F) ----------------------------------------------------
int goodB2G2_17()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 127;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040CC7D) ----------------------------------------------------
int goodG2B1_13()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040CCC5) ----------------------------------------------------
int goodG2B2_13()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040CD01) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_09_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040CD2F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v3 = 2147483648;
  v2 = 2147483648;
  return printIntLine(0x80000000);
}

//----- (000000000040CD86) ----------------------------------------------------
int goodG2B_32()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000040CDDD) ----------------------------------------------------
int goodB2G_28()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040CE49) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_32_good()
{
  goodG2B_32();
  return goodB2G_28();
}

//----- (000000000040CE63) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printIntLine(*v8 + 1);
}

//----- (000000000040CF02) ----------------------------------------------------
int goodG2B_33()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000040CF59) ----------------------------------------------------
int goodB2G_29()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+Ch] [rbp-24h]
  int *v9; // [rsp+10h] [rbp-20h]
  int *v10; // [rsp+18h] [rbp-18h]

  v10 = &v6;
  v9 = &v6;
  v6 = 0;
  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  *v10 = v2;
  v7 = *v9;
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}

//----- (000000000040D00D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_32_good()
{
  goodG2B_33();
  return goodB2G_29();
}

//----- (000000000040D027) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54d_badSink(a1);
}

//----- (000000000040D042) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54d_goodG2BSink(a1);
}

//----- (000000000040D05D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54d_goodB2GSink(a1);
}

//----- (000000000040D078) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53d_badSink(a1);
}

//----- (000000000040D08F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53d_goodG2BSink(a1);
}

//----- (000000000040D0A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53d_goodB2GSink(a1);
}

//----- (000000000040D0BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54e_badSink(a1);
}

//----- (000000000040D0D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54e_goodG2BSink(a1);
}

//----- (000000000040D0EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54e_goodB2GSink(a1);
}

//----- (000000000040D102) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_13_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D186) ----------------------------------------------------
int goodB2G1_18()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D22A) ----------------------------------------------------
int goodB2G2_18()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D2C2) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D312) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D356) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_13_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040D384) ----------------------------------------------------
void CWE190_Integer_Overflow__int_connect_socket_preinc_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = ++v7;
    printIntLine(v7);
  }
}
// 40D384: using guessed type char buf[16];

//----- (000000000040D4A3) ----------------------------------------------------
void goodB2G_30()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = ++v7;
      printIntLine(v7);
    }
  }
}
// 40D4A3: using guessed type char buf[16];

//----- (000000000040D5D7) ----------------------------------------------------
int goodG2B_34()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (000000000040D629) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_17_good()
{
  goodB2G_30();
  return goodG2B_34();
}

//----- (000000000040D643) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_badSink((__int64)&v1);
}

//----- (000000000040D66D) ----------------------------------------------------
int goodG2B_35()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040D697) ----------------------------------------------------
int goodB2G_31()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040D6C1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_66_good()
{
  goodG2B_35();
  return goodB2G_31();
}

//----- (000000000040D6DB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v4 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040D763) ----------------------------------------------------
int goodB2G1_19()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040D80C) ----------------------------------------------------
int goodB2G2_19()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040D8A9) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040D8F7) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040D939) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_14_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040D967) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D99F) ----------------------------------------------------
int goodG2B_36()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_goodG2BSink(2);
}

//----- (000000000040D9C1) ----------------------------------------------------
int goodB2G_32()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D9F9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51_good()
{
  goodG2B_36();
  return goodB2G_32();
}

//----- (000000000040DA13) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_badSink(v2);
}

//----- (000000000040DA7D) ----------------------------------------------------
int goodG2B_37()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_goodG2BSink(2);
}

//----- (000000000040DA9F) ----------------------------------------------------
int goodB2G_33()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_goodB2GSink(v2);
}

//----- (000000000040DB09) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_53_good()
{
  goodG2B_37();
  return goodB2G_33();
}

//----- (000000000040DB23) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_32_bad()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int *v5; // [rsp+28h] [rbp-18h]
  int *v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v6 = &v4;
  v5 = &v4;
  v4 = 0;
  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  *v6 = v7;
  return printIntLine(*v5 + 1);
}

//----- (000000000040DBC0) ----------------------------------------------------
int goodG2B_38()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000040DC17) ----------------------------------------------------
int goodB2G_34()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v8 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v8 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v8;
  v5 = *v6;
  if ( v5 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}

//----- (000000000040DCC9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_32_good()
{
  goodG2B_38();
  return goodB2G_34();
}

//----- (000000000040DCE3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040DD0A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040DD31) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000040DD74) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_61_bad()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_rand_preinc_61b_badSource();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040DDA6) ----------------------------------------------------
int goodG2B_39()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_rand_preinc_61b_goodG2BSource();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040DDD8) ----------------------------------------------------
int goodB2G_35()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE190_Integer_Overflow__char_rand_preinc_61b_goodB2GSource();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040DE1C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_61_good()
{
  goodG2B_39();
  return goodB2G_35();
}

//----- (000000000040DE36) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_04_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000040DE74) ----------------------------------------------------
int goodB2G1_20()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040DED3) ----------------------------------------------------
int goodB2G2_20()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040DF26) ----------------------------------------------------
int goodG2B1_16()
{
  return printIntLine(3u);
}

//----- (000000000040DF70) ----------------------------------------------------
int goodG2B2_16()
{
  return printIntLine(3u);
}

//----- (000000000040DFAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_04_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040DFDC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_31_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000040E014) ----------------------------------------------------
int goodG2B_40()
{
  return printIntLine(3u);
}

//----- (000000000040E04C) ----------------------------------------------------
int goodB2G_36()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040E099) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_31_good()
{
  goodG2B_40();
  return goodB2G_36();
}

//----- (000000000040E0B3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000040E0E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000040E119) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000040E161) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (000000000040E16C) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (000000000040E177) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_08_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E1DE) ----------------------------------------------------
int goodB2G1_21()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E267) ----------------------------------------------------
int goodB2G2_21()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E2E4) ----------------------------------------------------
int goodG2B1_17()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040E33A) ----------------------------------------------------
int goodG2B2_17()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040E384) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_08_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040E3B2) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 40E3B2: using guessed type char buf[16];

//----- (000000000040E48F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040E4A2) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 40E4A2: using guessed type char buf[16];

//----- (000000000040E57F) ----------------------------------------------------
int badSink_4()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_badData + 1);
}
// 6A9218: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_badData;

//----- (000000000040E5A6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_badData = v1;
  return badSink_4();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9218: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_badData;

//----- (000000000040E5E7) ----------------------------------------------------
int goodG2BSink_4()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodG2BData + 1);
}
// 6A921C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodG2BData;

//----- (000000000040E60E) ----------------------------------------------------
int goodG2B_41()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodG2BData = 2;
  return goodG2BSink_4();
}
// 6A921C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodG2BData;

//----- (000000000040E639) ----------------------------------------------------
int goodB2GSink_1()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodB2GData + 1);
  return result;
}
// 6A9220: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodB2GData;

//----- (000000000040E672) ----------------------------------------------------
int goodB2G_37()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodB2GData = v1;
  return goodB2GSink_1();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9220: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_goodB2GData;

//----- (000000000040E6B3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_45_good()
{
  goodG2B_41();
  return goodB2G_37();
}

//----- (000000000040E6CD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_03_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000040E73B) ----------------------------------------------------
int goodB2G1_22()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040E7BD) ----------------------------------------------------
int goodB2G2_22()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040E83F) ----------------------------------------------------
int goodG2B1_18()
{
  return printIntLine(3u);
}

//----- (000000000040E86D) ----------------------------------------------------
int goodG2B2_18()
{
  return printIntLine(3u);
}

//----- (000000000040E89B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_03_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040E8C9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_470C64, &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E924) ----------------------------------------------------
int goodB2G1_23()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_470C64, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E99F) ----------------------------------------------------
int goodB2G2_23()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_470C64, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EA0E) ----------------------------------------------------
int goodG2B1_19()
{
  return printUnsignedLine(3u);
}

//----- (000000000040EA5A) ----------------------------------------------------
int goodG2B2_19()
{
  return printUnsignedLine(3u);
}

//----- (000000000040EA9A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_06_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040EAC8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_07_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_2 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6A9134: using guessed type int staticFive_2;

//----- (000000000040EB33) ----------------------------------------------------
int goodB2G1_24()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_2 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( staticFive_2 != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6A9134: using guessed type int staticFive_2;

//----- (000000000040EBBC) ----------------------------------------------------
int goodB2G2_24()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_2 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6A9134: using guessed type int staticFive_2;

//----- (000000000040EC39) ----------------------------------------------------
int goodG2B1_20()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_2 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9134: using guessed type int staticFive_2;

//----- (000000000040EC83) ----------------------------------------------------
int goodG2B2_20()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_2 == 5 )
    v1 = 2;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9134: using guessed type int staticFive_2;

//----- (000000000040ECC1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_07_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040ECEF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_04_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (000000000040ED73) ----------------------------------------------------
int goodB2G1_25()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000040EE18) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000040EEB1) ----------------------------------------------------
int goodG2B1_21()
{
  return printIntLine(3u);
}

//----- (000000000040EEFB) ----------------------------------------------------
int goodG2B2_21()
{
  return printIntLine(3u);
}

//----- (000000000040EF39) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_04_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040EF67) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_31_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7 + 1;
  v4 = v7 + 1;
  return printIntLine(v7 + 1);
}

//----- (000000000040EFE5) ----------------------------------------------------
int goodG2B_42()
{
  return printIntLine(3u);
}

//----- (000000000040F01D) ----------------------------------------------------
int goodB2G_38()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  v4 = v6;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000040F0B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_31_good()
{
  goodG2B_42();
  return goodB2G_38();
}

//----- (000000000040F0CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_52c_badSink(a1);
}

//----- (000000000040F0E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_52c_goodG2BSink(a1);
}

//----- (000000000040F0F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_52c_goodB2GSink(a1);
}

//----- (000000000040F10F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (000000000040F174) ----------------------------------------------------
int goodB2G1_26()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (000000000040F204) ----------------------------------------------------
int goodB2G2_26()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (000000000040F288) ----------------------------------------------------
int goodG2B1_22()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040F2DD) ----------------------------------------------------
int goodG2B2_22()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000040F326) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_14_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040F354) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_max_preinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9228: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_badGlobal;

//----- (000000000040F37F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A922C: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Global;

//----- (000000000040F3CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A9230: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Global;

//----- (000000000040F40B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_max_preinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9234: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_goodG2BGlobal;

//----- (000000000040F436) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v4 = v1;
  return printLongLongLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F4AF) ----------------------------------------------------
int goodG2B_43()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 3LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (000000000040F513) ----------------------------------------------------
int goodB2G_39()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F5A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_32_good()
{
  goodG2B_43();
  return goodB2G_39();
}

//----- (000000000040F5C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 40F5C2: using guessed type char buf[16];

//----- (000000000040F6FC) ----------------------------------------------------
int goodB2G_40()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 40F6FC: using guessed type char buf[16];

//----- (000000000040F84B) ----------------------------------------------------
int goodG2B_44()
{
  return printIntLine(3u);
}

//----- (000000000040F879) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_18_good()
{
  goodB2G_40();
  return goodG2B_44();
}

//----- (000000000040F893) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_64b_badSink(&v6);
}

//----- (000000000040F8FF) ----------------------------------------------------
int goodG2B_45()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_rand_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000040F923) ----------------------------------------------------
int goodB2G_41()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_64b_goodB2GSink(&v6);
}

//----- (000000000040F98F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_64_good()
{
  goodG2B_45();
  return goodB2G_41();
}

//----- (000000000040F9A9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54c_badSink(a1);
}

//----- (000000000040F9C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54c_goodG2BSink(a1);
}

//----- (000000000040F9DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54c_goodB2GSink(a1);
}

//----- (000000000040F9FA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_preinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (000000000040FA2C) ----------------------------------------------------
int goodG2B_46()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_preinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000040FA5E) ----------------------------------------------------
int goodB2G_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_connect_socket_preinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000040FAA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_61_good()
{
  goodG2B_46();
  return goodB2G_42();
}

//----- (000000000040FABF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_12_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  else
  {
    v4 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v4 + 1));
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}

//----- (000000000040FB7F) ----------------------------------------------------
int goodB2G_43()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int v3; // ebx
  int v4; // eax
  int v5; // ebx
  int result; // eax
  __int16 v7; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v7 = v1;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      v3 = rand() << 15;
      LOWORD(v4) = v3 ^ rand();
    }
    else
    {
      rand();
      v5 = rand() << 15;
      v4 = ~(v5 ^ rand());
    }
    v7 = v4;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v7 + 1));
  }
  else if ( v7 == 0x7FFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v7 + 1));
  }
  return result;
}

//----- (000000000040FC8D) ----------------------------------------------------
int goodG2B_47()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000040FCF9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_12_good()
{
  goodB2G_43();
  return goodG2B_47();
}

//----- (000000000040FD13) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FD4D) ----------------------------------------------------
int goodG2B_48()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000040FD71) ----------------------------------------------------
int goodB2G_44()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FDAB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64_good()
{
  goodG2B_48();
  return goodB2G_44();
}

//----- (000000000040FDC5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_preinc_65b_badSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40FDC5: using guessed type char buf[16];

//----- (000000000040FEB6) ----------------------------------------------------
int goodG2B_49()
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_65b_goodG2BSink(2);
}

//----- (000000000040FEE1) ----------------------------------------------------
__int64 goodB2G_45()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_preinc_65b_goodB2GSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40FEE1: using guessed type char buf[16];

//----- (000000000040FFD2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_65_good()
{
  goodG2B_49();
  return goodB2G_45();
}

//----- (000000000040FFEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_preinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9238: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_badGlobal;

//----- (0000000000410017) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A923C: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Global;

//----- (0000000000410063) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A9240: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Global;

//----- (00000000004100A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9244: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BGlobal;

//----- (00000000004100CE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_65b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004100F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000410118) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041014F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_05_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9138: using guessed type int staticTrue_0;

//----- (00000000004101AA) ----------------------------------------------------
int goodB2G1_27()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9138: using guessed type int staticTrue_0;
// 6A9224: using guessed type int staticFalse_0;

//----- (0000000000410225) ----------------------------------------------------
int goodB2G2_27()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9138: using guessed type int staticTrue_0;

//----- (0000000000410294) ----------------------------------------------------
int goodG2B1_23()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9138: using guessed type int staticTrue_0;
// 6A9224: using guessed type int staticFalse_0;

//----- (00000000004102DC) ----------------------------------------------------
int goodG2B2_23()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_0 )
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9138: using guessed type int staticTrue_0;

//----- (0000000000410318) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_05_good()
{
  goodB2G1_27();
  goodB2G2_27();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (0000000000410346) ----------------------------------------------------
int __fastcall badSink_5(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041036B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_41_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return badSink_5(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004103A4) ----------------------------------------------------
int __fastcall goodG2BSink_5(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004103C9) ----------------------------------------------------
int goodG2B_50()
{
  return goodG2BSink_5(2);
}

//----- (00000000004103E6) ----------------------------------------------------
int __fastcall goodB2GSink_2(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041041D) ----------------------------------------------------
int goodB2G_46()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return goodB2GSink_2(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410456) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_41_good()
{
  goodB2G_46();
  return goodG2B_50();
}

//----- (0000000000410470) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_3 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v7 + 1);
  return result;
}
// 6A913C: using guessed type int staticFive_3;
// 410470: using guessed type char buf[16];

//----- (000000000041057C) ----------------------------------------------------
int goodB2G1_28()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_3 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6A913C: using guessed type int staticFive_3;
// 41057C: using guessed type char buf[16];

//----- (00000000004106A9) ----------------------------------------------------
int goodB2G2_28()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_3 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6A913C: using guessed type int staticFive_3;
// 4106A9: using guessed type char buf[16];

//----- (00000000004107CA) ----------------------------------------------------
int goodG2B1_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A913C: using guessed type int staticFive_3;

//----- (0000000000410818) ----------------------------------------------------
int goodG2B2_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A913C: using guessed type int staticFive_3;

//----- (000000000041085A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_07_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (0000000000410888) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_22_bad()
{
  CWE190_Integer_Overflow__int_max_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_max_preinc_22_badSink(0x7FFFFFFF);
}
// 6A9228: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_badGlobal;

//----- (00000000004108B4) ----------------------------------------------------
int goodB2G1_29()
{
  CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Sink(0x7FFFFFFF);
}
// 6A922C: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_goodB2G1Global;

//----- (00000000004108E0) ----------------------------------------------------
int goodB2G2_29()
{
  CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Sink(0x7FFFFFFF);
}
// 6A9230: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_goodB2G2Global;

//----- (000000000041090C) ----------------------------------------------------
int goodG2B_51()
{
  CWE190_Integer_Overflow__int_max_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_max_preinc_22_goodG2BSink(2);
}
// 6A9234: using guessed type int CWE190_Integer_Overflow__int_max_preinc_22_goodG2BGlobal;

//----- (0000000000410938) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_22_good()
{
  goodB2G1_29();
  goodB2G2_29();
  return goodG2B_51();
}

//----- (000000000041095C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4710D0, &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004109BD) ----------------------------------------------------
int goodB2G1_30()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4710D0, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410A49) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4710D0, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410AC9) ----------------------------------------------------
int goodG2B1_25()
{
  return printLongLongLine(3LL);
}

//----- (0000000000410B1A) ----------------------------------------------------
int goodG2B2_25()
{
  return printLongLongLine(3LL);
}

//----- (0000000000410B5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_04_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (0000000000410B8D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_bad()
{
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+8h] [rbp-18h]
  __int64 v3; // [rsp+10h] [rbp-10h]
  __int64 v4; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410BE5) ----------------------------------------------------
int goodG2B_52()
{
  return printLongLongLine(3LL);
}

//----- (0000000000410C28) ----------------------------------------------------
int goodB2G_47()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410C9C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_31_good()
{
  goodG2B_52();
  return goodB2G_47();
}

//----- (0000000000410CB6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_34_bad()
{
  char v1; // [rsp+Dh] [rbp-3h]
  char v2; // [rsp+Eh] [rbp-2h]
  char v3; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410D05) ----------------------------------------------------
int goodG2B_53()
{
  return printHexCharLine(3);
}

//----- (0000000000410D3B) ----------------------------------------------------
int goodB2G_48()
{
  int result; // eax
  char v1; // [rsp+Dh] [rbp-3h]
  char v2; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v2 = v1;
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410D9C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_34_good()
{
  goodG2B_53();
  return goodB2G_48();
}

//----- (0000000000410DB6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_54_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410DEF) ----------------------------------------------------
int goodG2B_54()
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54b_goodG2BSink(2);
}

//----- (0000000000410E10) ----------------------------------------------------
int goodB2G_49()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410E49) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_54_good()
{
  goodG2B_54();
  return goodB2G_49();
}

//----- (0000000000410E63) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_11_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}

//----- (0000000000410EED) ----------------------------------------------------
int goodB2G1_31()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}

//----- (0000000000410F97) ----------------------------------------------------
int goodB2G2_31()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}

//----- (0000000000411035) ----------------------------------------------------
int goodG2B1_26()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041108B) ----------------------------------------------------
int goodG2B2_26()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004110D5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_11_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (0000000000411103) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_02_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000411171) ----------------------------------------------------
int goodB2G1_32()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004111F3) ----------------------------------------------------
int goodB2G2_32()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000411275) ----------------------------------------------------
int goodG2B1_27()
{
  return printIntLine(3u);
}

//----- (00000000004112A3) ----------------------------------------------------
int goodG2B2_27()
{
  return printIntLine(3u);
}

//----- (00000000004112D1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_02_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (00000000004112FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000041132E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000041135D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (000000000041139E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_preinc_22_badSink(v4);
}
// 6A9238: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_badGlobal;

//----- (0000000000411410) ----------------------------------------------------
int goodB2G1_33()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Sink(v4);
}
// 6A923C: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G1Global;

//----- (0000000000411482) ----------------------------------------------------
int goodB2G2_33()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Sink(v4);
}
// 6A9240: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_goodB2G2Global;

//----- (00000000004114F4) ----------------------------------------------------
int goodG2B_55()
{
  CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BSink(2);
}
// 6A9244: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_22_goodG2BGlobal;

//----- (0000000000411520) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_22_good()
{
  goodB2G1_33();
  goodB2G2_33();
  return goodG2B_55();
}

//----- (0000000000411544) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004115A7) ----------------------------------------------------
int goodB2G1_34()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041162C) ----------------------------------------------------
int goodB2G2_34()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004116A5) ----------------------------------------------------
int goodG2B1_28()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004116F9) ----------------------------------------------------
int goodG2B2_28()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000411741) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_11_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (000000000041176F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_65_bad()
{
  return CWE190_Integer_Overflow__char_max_preinc_65b_badSink(127);
}

//----- (0000000000411795) ----------------------------------------------------
int goodG2B_56()
{
  return CWE190_Integer_Overflow__char_max_preinc_65b_goodG2BSink(2);
}

//----- (00000000004117BB) ----------------------------------------------------
int goodB2G_50()
{
  return CWE190_Integer_Overflow__char_max_preinc_65b_goodB2GSink(127);
}

//----- (00000000004117E1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_65_good()
{
  goodG2B_56();
  return goodB2G_50();
}

//----- (00000000004117FB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A9248: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal;

//----- (000000000041182C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6A924C: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global;

//----- (0000000000411885) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6A9250: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global;

//----- (00000000004118D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A9254: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal;

//----- (0000000000411903) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_10_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000411985) ----------------------------------------------------
int goodB2G1_35()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000411A27) ----------------------------------------------------
int goodB2G2_35()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000411ABD) ----------------------------------------------------
int goodG2B1_29()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000411B0B) ----------------------------------------------------
int goodG2B2_29()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000411B4D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_10_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (0000000000411B7B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411BBD) ----------------------------------------------------
int goodB2G1_36()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411C20) ----------------------------------------------------
int goodB2G2_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411C77) ----------------------------------------------------
int goodG2B1_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411CC5) ----------------------------------------------------
int goodG2B2_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411D07) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_13_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (0000000000411D35) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000411D6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000411DA9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000411DFF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_52b_badSink(v2);
}

//----- (0000000000411E69) ----------------------------------------------------
int goodG2B_57()
{
  return CWE190_Integer_Overflow__int_rand_preinc_52b_goodG2BSink(2);
}

//----- (0000000000411E8B) ----------------------------------------------------
int goodB2G_51()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_52b_goodB2GSink(v2);
}

//----- (0000000000411EF5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_52_good()
{
  goodG2B_57();
  return goodB2G_51();
}

//----- (0000000000411F0F) ----------------------------------------------------
int __fastcall badSink_6(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000411F30) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_6;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411F71) ----------------------------------------------------
int __fastcall goodG2BSink_6(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000411F92) ----------------------------------------------------
int goodG2B_58()
{
  return goodG2BSink_6(2);
}

//----- (0000000000411FBD) ----------------------------------------------------
int __fastcall goodB2GSink_3(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000411FF3) ----------------------------------------------------
__int64 goodB2G_52()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_3;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412034) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_44_good()
{
  goodG2B_58();
  return goodB2G_52();
}

//----- (000000000041204E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_01_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (00000000004120BC) ----------------------------------------------------
int goodG2B_59()
{
  return printIntLine(3u);
}

//----- (00000000004120EA) ----------------------------------------------------
int goodB2G_53()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041216C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_01_good()
{
  goodG2B_59();
  return goodB2G_53();
}

//----- (0000000000412186) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54d_badSink(a1);
}

//----- (000000000041219D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54d_goodG2BSink(a1);
}

//----- (00000000004121B4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_54d_goodB2GSink(a1);
}

//----- (00000000004121CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53d_badSink(a1);
}

//----- (00000000004121E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53d_goodG2BSink(a1);
}

//----- (0000000000412201) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53d_goodB2GSink(a1);
}

//----- (000000000041221C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041227F) ----------------------------------------------------
int goodB2G1_37()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412302) ----------------------------------------------------
int goodB2G2_37()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412379) ----------------------------------------------------
int goodG2B1_31()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (00000000004123CD) ----------------------------------------------------
int goodG2B2_31()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000412415) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_11_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (0000000000412443) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v4 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004124CB) ----------------------------------------------------
int goodB2G1_38()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000412574) ----------------------------------------------------
int goodB2G2_38()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000412611) ----------------------------------------------------
int goodG2B1_32()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041265F) ----------------------------------------------------
int goodG2B2_32()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004126A1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_13_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (00000000004126CF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9248: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal;

//----- (0000000000412714) ----------------------------------------------------
int goodB2G1_39()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A924C: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global;

//----- (0000000000412759) ----------------------------------------------------
int goodB2G2_39()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9250: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global;

//----- (000000000041279E) ----------------------------------------------------
int goodG2B_60()
{
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BSink(2LL);
}
// 6A9254: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal;

//----- (00000000004127CE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_good()
{
  goodB2G1_39();
  goodB2G2_39();
  return goodG2B_60();
}

//----- (00000000004127F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_03_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000041281E) ----------------------------------------------------
int goodB2G1_40()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041285F) ----------------------------------------------------
int goodB2G2_40()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004128A0) ----------------------------------------------------
int goodG2B1_33()
{
  return printIntLine(3u);
}

//----- (00000000004128CC) ----------------------------------------------------
int goodG2B2_33()
{
  return printIntLine(3u);
}

//----- (00000000004128F8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_03_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (0000000000412926) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53c_badSink(a1);
}

//----- (000000000041293D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000412954) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53c_goodB2GSink(a1);
}

//----- (000000000041296B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_09_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004129ED) ----------------------------------------------------
int goodB2G1_41()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412A8F) ----------------------------------------------------
int goodB2G2_41()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412B25) ----------------------------------------------------
int goodG2B1_34()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412B73) ----------------------------------------------------
int goodG2B2_34()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412BB5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_09_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (0000000000412BE3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000412C25) ----------------------------------------------------
int goodB2G1_42()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000412C85) ----------------------------------------------------
int goodB2G2_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000412CD9) ----------------------------------------------------
int goodG2B1_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000412D27) ----------------------------------------------------
int goodG2B2_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000412D69) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_14_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (0000000000412D97) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -1;
  v1 = -1;
  v3 = 0;
  v2 = 0;
  return printUnsignedLine(0);
}

//----- (0000000000412DEE) ----------------------------------------------------
int goodG2B_61()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (0000000000412E45) ----------------------------------------------------
int goodB2G_54()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = -1;
  v1 = -1;
  v2 = -1;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000412EAE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_32_good()
{
  goodG2B_61();
  return goodB2G_54();
}

//----- (0000000000412EC8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000412EF3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000412F1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000412F5E) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000412F69) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000412F74) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v8 + 1);
  return result;
}
// 412F74: using guessed type char buf[16];

//----- (00000000004130CC) ----------------------------------------------------
int goodB2G1_43()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 4130CC: using guessed type char buf[16];

//----- (0000000000413245) ----------------------------------------------------
int goodB2G2_43()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 413245: using guessed type char buf[16];

//----- (00000000004133B2) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000413406) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041344E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_08_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (000000000041347C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_16_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004134C5) ----------------------------------------------------
int goodB2G_55()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413522) ----------------------------------------------------
int goodG2B_62()
{
  return printHexCharLine(3);
}

//----- (000000000041354C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_16_good()
{
  goodB2G_55();
  return goodG2B_62();
}

//----- (0000000000413566) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004135CB) ----------------------------------------------------
int goodB2G1_44()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041365B) ----------------------------------------------------
int goodB2G2_44()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004136DF) ----------------------------------------------------
int goodG2B1_37()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413734) ----------------------------------------------------
int goodG2B2_37()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041377D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_13_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (00000000004137AB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_preinc_68_badData + 1));
}
// 6A954A: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_badData;

//----- (00000000004137D8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_preinc_68_goodG2BData + 1));
}
// 6A9548: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_goodG2BData;

//----- (0000000000413805) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_fscanf_preinc_68_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_preinc_68_goodB2GData + 1));
  return result;
}
// 6A954C: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_goodB2GData;

//----- (0000000000413846) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 + 1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (00000000004138C2) ----------------------------------------------------
int goodB2G_56()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413953) ----------------------------------------------------
int goodG2B_63()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (00000000004139BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_12_good()
{
  goodB2G_56();
  return goodG2B_63();
}

//----- (00000000004139D4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_34_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000413A52) ----------------------------------------------------
int goodG2B_64()
{
  return printIntLine(3u);
}

//----- (0000000000413A90) ----------------------------------------------------
int goodB2G_57()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000413B22) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_34_good()
{
  goodG2B_64();
  return goodB2G_57();
}

//----- (0000000000413B3C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53c_badSink(a1);
}

//----- (0000000000413B57) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000413B72) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000413B8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000413BBC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000413BEB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000413C36) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000413C74) ----------------------------------------------------
int goodB2G1_45()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413CD0) ----------------------------------------------------
int goodB2G2_45()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413D20) ----------------------------------------------------
int goodG2B1_38()
{
  return printUnsignedLine(3u);
}

//----- (0000000000413D6A) ----------------------------------------------------
int goodG2B2_38()
{
  return printUnsignedLine(3u);
}

//----- (0000000000413DA8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_04_good()
{
  goodB2G1_45();
  goodB2G2_45();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (0000000000413DD6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_31_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000413E0E) ----------------------------------------------------
int goodG2B_65()
{
  return printUnsignedLine(3u);
}

//----- (0000000000413E46) ----------------------------------------------------
int goodB2G_58()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413E90) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_31_good()
{
  goodG2B_65();
  return goodB2G_58();
}

//----- (0000000000413EAA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_63b_badSink(&v6);
}

//----- (0000000000413F16) ----------------------------------------------------
int goodG2B_66()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_rand_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000413F3A) ----------------------------------------------------
int goodB2G_59()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_63b_goodB2GSink(&v6);
}

//----- (0000000000413FA6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_63_good()
{
  goodG2B_66();
  return goodB2G_59();
}

//----- (0000000000413FC0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_12_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v4 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v4 + 1);
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}

//----- (0000000000414082) ----------------------------------------------------
int goodB2G_60()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v7 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  else if ( v7 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v7 + 1);
  }
  return result;
}

//----- (000000000041419F) ----------------------------------------------------
int goodG2B_67()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000414206) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_12_good()
{
  goodB2G_60();
  return goodG2B_67();
}

//----- (0000000000414220) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000414253) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000414286) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (00000000004142CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004142F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000041431B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000414357) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004143A6) ----------------------------------------------------
int goodB2G1_46()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414414) ----------------------------------------------------
int goodB2G2_46()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414482) ----------------------------------------------------
int goodG2B1_39()
{
  return printLongLongLine(3LL);
}

//----- (00000000004144B5) ----------------------------------------------------
int goodG2B2_39()
{
  return printLongLongLine(3LL);
}

//----- (00000000004144E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (0000000000414516) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041455E) ----------------------------------------------------
int goodB2G1_47()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (00000000004145C7) ----------------------------------------------------
int goodB2G2_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (0000000000414624) ----------------------------------------------------
int goodG2B1_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000414678) ----------------------------------------------------
int goodG2B2_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004146C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_11_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (00000000004146EE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_02_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000041471A) ----------------------------------------------------
int goodB2G1_48()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041475B) ----------------------------------------------------
int goodB2G2_48()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041479C) ----------------------------------------------------
int goodG2B1_41()
{
  return printIntLine(3u);
}

//----- (00000000004147C8) ----------------------------------------------------
int goodG2B2_41()
{
  return printIntLine(3u);
}

//----- (00000000004147F4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_02_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000414822) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_68_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_68_badData = v1;
  return CWE190_Integer_Overflow__short_fscanf_preinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A954A: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_badData;

//----- (0000000000414864) ----------------------------------------------------
int goodG2B_68()
{
  CWE190_Integer_Overflow__short_fscanf_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_fscanf_preinc_68b_goodG2BSink();
}
// 6A9548: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_goodG2BData;

//----- (000000000041488F) ----------------------------------------------------
int goodB2G_61()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__short_fscanf_preinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A954C: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_preinc_68_goodB2GData;

//----- (00000000004148D1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_68_good()
{
  goodG2B_68();
  return goodB2G_61();
}

//----- (00000000004148EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_67b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000414916) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000414941) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041497E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_12_bad()
{
  char v1; // [rsp+Dh] [rbp-3h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%c", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v1 + 1);
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414A19) ----------------------------------------------------
int goodB2G_62()
{
  int result; // eax
  char v1; // [rsp+Dh] [rbp-3h]

  v1 = 32;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  else if ( v1 == 127 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414AE1) ----------------------------------------------------
int goodG2B_69()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(3);
}

//----- (0000000000414B43) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_12_good()
{
  goodB2G_62();
  return goodG2B_69();
}

//----- (0000000000414B5D) ----------------------------------------------------
int __fastcall badSink_7(__int64 a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A9258: using guessed type int badStatic_2;

//----- (0000000000414B8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_21_bad()
{
  badStatic_2 = 1;
  return badSink_7(0x7FFFFFFFFFFFFFFFLL);
}
// 6A9258: using guessed type int badStatic_2;

//----- (0000000000414BC4) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(__int64 a1)
{
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6A925C: using guessed type int goodB2G1Static_2;

//----- (0000000000414C1D) ----------------------------------------------------
int goodB2G1_49()
{
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(0x7FFFFFFFFFFFFFFFLL);
}
// 6A925C: using guessed type int goodB2G1Static_2;

//----- (0000000000414C53) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6A9260: using guessed type int goodB2G2Static_2;

//----- (0000000000414CA0) ----------------------------------------------------
int goodB2G2_49()
{
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(0x7FFFFFFFFFFFFFFFLL);
}
// 6A9260: using guessed type int goodB2G2Static_2;

//----- (0000000000414CD6) ----------------------------------------------------
int __fastcall goodG2BSink_7(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A9264: using guessed type int goodG2BStatic_2;

//----- (0000000000414D07) ----------------------------------------------------
int goodG2B_70()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_7(2LL);
}
// 6A9264: using guessed type int goodG2BStatic_2;

//----- (0000000000414D37) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_21_good()
{
  goodB2G1_49();
  goodB2G2_49();
  return goodG2B_70();
}

//----- (0000000000414D5B) ----------------------------------------------------
int badSink_8()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_preinc_45_badData + 1);
}
// 6A9268: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_45_badData;

//----- (0000000000414D85) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_45_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_45_badData = v0;
  return badSink_8();
}
// 6A9268: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_45_badData;

//----- (0000000000414DD8) ----------------------------------------------------
int goodG2BSink_8()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_preinc_45_goodG2BData + 1);
}
// 6A9269: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_45_goodG2BData;

//----- (0000000000414E02) ----------------------------------------------------
int goodG2B_71()
{
  CWE190_Integer_Overflow__char_rand_preinc_45_goodG2BData = 2;
  return goodG2BSink_8();
}
// 6A9269: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_45_goodG2BData;

//----- (0000000000414E28) ----------------------------------------------------
int goodB2GSink_4()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData + 1);
  return result;
}
// 6A926A: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData;

//----- (0000000000414E64) ----------------------------------------------------
int goodB2G_63()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData = v0;
  return goodB2GSink_4();
}
// 6A926A: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData;

//----- (0000000000414EB7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_45_good()
{
  goodG2B_71();
  return goodB2G_63();
}

//----- (0000000000414ED1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_67_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_67b_badSink(v4);
}

//----- (0000000000414F96) ----------------------------------------------------
int goodG2B_72()
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_67b_goodG2BSink(2LL);
}

//----- (0000000000414FC4) ----------------------------------------------------
int goodB2G_64()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_67b_goodB2GSink(v4);
}

//----- (0000000000415089) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_67_good()
{
  goodG2B_72();
  return goodB2G_64();
}

//----- (00000000004150A3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_53_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004150DC) ----------------------------------------------------
int goodG2B_73()
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_53b_goodG2BSink(2);
}

//----- (00000000004150FD) ----------------------------------------------------
int goodB2G_65()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415136) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_53_good()
{
  goodG2B_73();
  return goodB2G_65();
}

//----- (0000000000415150) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_15_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000415180) ----------------------------------------------------
int goodB2G1_50()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004151C4) ----------------------------------------------------
int goodB2G2_50()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000415208) ----------------------------------------------------
int goodG2B1_42()
{
  return printIntLine(3u);
}

//----- (0000000000415238) ----------------------------------------------------
int goodG2B2_42()
{
  return printIntLine(3u);
}

//----- (0000000000415268) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_15_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (0000000000415296) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_badSink(&v6);
}

//----- (0000000000415302) ----------------------------------------------------
int goodG2B_74()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_goodG2BSink(&v1);
}

//----- (0000000000415326) ----------------------------------------------------
int goodB2G_66()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_64b_goodB2GSink(&v6);
}

//----- (0000000000415392) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_64_good()
{
  goodG2B_74();
  return goodB2G_66();
}

//----- (00000000004153AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 + 1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415462) ----------------------------------------------------
int goodB2G_67()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]

  v1 = 0LL;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  else if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041554C) ----------------------------------------------------
int goodG2B_75()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (00000000004155C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_good()
{
  goodB2G_67();
  return goodG2B_75();
}

//----- (00000000004155DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_01_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000415606) ----------------------------------------------------
int goodG2B_76()
{
  return printIntLine(3u);
}

//----- (0000000000415632) ----------------------------------------------------
int goodB2G_68()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000415673) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_01_good()
{
  goodG2B_76();
  return goodB2G_68();
}

//----- (000000000041568D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_471C0C, &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004156F0) ----------------------------------------------------
int goodB2G1_51()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_471C0C, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041577E) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_471C0C, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415800) ----------------------------------------------------
int goodG2B1_43()
{
  return printLongLongLine(3LL);
}

//----- (0000000000415853) ----------------------------------------------------
int goodG2B2_43()
{
  return printLongLongLine(3LL);
}

//----- (000000000041589A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_06_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (00000000004158C8) ----------------------------------------------------
__int64 badSource_1()
{
  return 0x7FFFLL;
}

//----- (00000000004158DE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_1();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000415915) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 2LL;
}

//----- (000000000041592B) ----------------------------------------------------
int goodG2B_77()
{
  __int16 v0; // ax

  v0 = goodG2BSource_1();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000415962) ----------------------------------------------------
__int64 goodB2GSource_1()
{
  return 0x7FFFLL;
}

//----- (0000000000415978) ----------------------------------------------------
int goodB2G_69()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_1();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004159C3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_42_good()
{
  goodB2G_69();
  return goodG2B_77();
}

//----- (00000000004159DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000415A05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000415A2D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000415A69) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v4 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000415AEF) ----------------------------------------------------
int goodB2G1_52()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000415B96) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000415C31) ----------------------------------------------------
int goodG2B1_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000415C7D) ----------------------------------------------------
int goodG2B2_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000415CBD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_10_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (0000000000415CEB) ----------------------------------------------------
void CWE190_Integer_Overflow__int_rand_preinc_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine(++v5);
}

//----- (0000000000415D85) ----------------------------------------------------
void goodB2G_70()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 == 0x7FFFFFFF )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine(++v5);
  }
}

//----- (0000000000415E34) ----------------------------------------------------
int goodG2B_78()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000415E86) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_17_good()
{
  goodB2G_70();
  return goodG2B_78();
}

//----- (0000000000415EA0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000415ED2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000415F04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000415F52) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badSink(-1);
}
// 6A926C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badGlobal;

//----- (0000000000415F7E) ----------------------------------------------------
int goodB2G1_53()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Sink(-1);
}
// 6A9270: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Global;

//----- (0000000000415FAA) ----------------------------------------------------
int goodB2G2_53()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Sink(-1);
}
// 6A9274: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Global;

//----- (0000000000415FD6) ----------------------------------------------------
int goodG2B_79()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BSink(2);
}
// 6A9278: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BGlobal;

//----- (0000000000416002) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_good()
{
  goodB2G1_53();
  goodB2G2_53();
  return goodG2B_79();
}

//----- (0000000000416026) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000416047) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000416068) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041609E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_01_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000416110) ----------------------------------------------------
int goodG2B_80()
{
  return printIntLine(3u);
}

//----- (000000000041613C) ----------------------------------------------------
int goodB2G_71()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (00000000004161C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_01_good()
{
  goodG2B_80();
  return goodB2G_71();
}

//----- (00000000004161DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_52c_badSink(a1);
}

//----- (00000000004161F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000416213) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_52c_goodB2GSink(a1);
}

//----- (000000000041622E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041627D) ----------------------------------------------------
int goodB2G1_54()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004162EB) ----------------------------------------------------
int goodB2G2_54()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416359) ----------------------------------------------------
int goodG2B1_45()
{
  return printLongLongLine(3LL);
}

//----- (000000000041638C) ----------------------------------------------------
int goodG2B2_45()
{
  return printLongLongLine(3LL);
}

//----- (00000000004163BF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_02_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (00000000004163ED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041642D) ----------------------------------------------------
int goodB2G1_55()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041648E) ----------------------------------------------------
int goodB2G2_55()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004164E3) ----------------------------------------------------
int goodG2B1_46()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041652F) ----------------------------------------------------
int goodG2B2_46()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041656F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_09_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (000000000041659D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53d_badSink(a1);
}

//----- (00000000004165B4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53d_goodG2BSink(a1);
}

//----- (00000000004165CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_53d_goodB2GSink(a1);
}

//----- (00000000004165E2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000416641) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000416654) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004166B3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_05_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 0x7FFF;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9140: using guessed type int staticTrue_1;

//----- (00000000004166F5) ----------------------------------------------------
int goodB2G1_56()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 0x7FFF;
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6A9140: using guessed type int staticTrue_1;
// 6A927C: using guessed type int staticFalse_1;

//----- (0000000000416757) ----------------------------------------------------
int goodB2G2_56()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 0x7FFF;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6A9140: using guessed type int staticTrue_1;

//----- (00000000004167AD) ----------------------------------------------------
int goodG2B1_47()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9140: using guessed type int staticTrue_1;
// 6A927C: using guessed type int staticFalse_1;

//----- (00000000004167FB) ----------------------------------------------------
int goodG2B2_47()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9140: using guessed type int staticTrue_1;

//----- (000000000041683D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_05_good()
{
  goodB2G1_56();
  goodB2G2_56();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (000000000041686B) ----------------------------------------------------
int __fastcall badSink_9(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000416893) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_41_bad()
{
  return badSink_9(0x7FFF);
}

//----- (00000000004168B4) ----------------------------------------------------
int __fastcall goodG2BSink_9(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004168DC) ----------------------------------------------------
int goodG2B_81()
{
  return goodG2BSink_9(2);
}

//----- (00000000004168FD) ----------------------------------------------------
int __fastcall goodB2GSink_5(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000416939) ----------------------------------------------------
int goodB2G_72()
{
  return goodB2GSink_5(0x7FFF);
}

//----- (000000000041695A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_41_good()
{
  goodB2G_72();
  return goodG2B_81();
}

//----- (0000000000416974) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_65_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__short_rand_preinc_65b_badSink)((unsigned int)(__int16)v1);
}

//----- (00000000004169DE) ----------------------------------------------------
int goodG2B_82()
{
  return CWE190_Integer_Overflow__short_rand_preinc_65b_goodG2BSink(2);
}

//----- (0000000000416A08) ----------------------------------------------------
__int64 goodB2G_73()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__short_rand_preinc_65b_goodB2GSink)((unsigned int)(__int16)v1);
}

//----- (0000000000416A72) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_65_good()
{
  goodG2B_82();
  return goodB2G_73();
}

//----- (0000000000416A8C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000416AEF) ----------------------------------------------------
int goodB2G1_57()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000416B7D) ----------------------------------------------------
int goodB2G2_57()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000416BFF) ----------------------------------------------------
int goodG2B1_48()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000416C52) ----------------------------------------------------
int goodG2B2_48()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000416C99) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_10_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (0000000000416CC7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_52c_badSink(a1);
}

//----- (0000000000416CDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000416CF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000416D0C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416D4E) ----------------------------------------------------
int goodB2G1_58()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416DAE) ----------------------------------------------------
int goodB2G2_58()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416E02) ----------------------------------------------------
int goodG2B1_49()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416E50) ----------------------------------------------------
int goodG2B2_49()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416E92) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_13_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (0000000000416EC0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_32_bad()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char *v3; // [rsp+10h] [rbp-10h]
  char *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 32;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  *v4 = v1;
  return printHexCharLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416F2F) ----------------------------------------------------
int goodG2B_83()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printHexCharLine(3);
}

//----- (0000000000416F85) ----------------------------------------------------
int goodB2G_74()
{
  int result; // eax
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 32;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000417006) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_32_good()
{
  goodG2B_83();
  return goodB2G_74();
}

//----- (0000000000417020) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_34_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000041705E) ----------------------------------------------------
int goodG2B_84()
{
  return printIntLine(3u);
}

//----- (000000000041709C) ----------------------------------------------------
int goodB2G_75()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004170EE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_34_good()
{
  goodG2B_84();
  return goodB2G_75();
}

//----- (0000000000417108) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v4 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041718E) ----------------------------------------------------
int goodB2G1_59()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000417235) ----------------------------------------------------
int goodB2G2_59()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004172D0) ----------------------------------------------------
int goodG2B1_50()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041731C) ----------------------------------------------------
int goodG2B2_50()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041735C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_09_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (000000000041738A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (00000000004173BC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (00000000004173EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}

//----- (0000000000417434) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000417455) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000417476) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004174AC) ----------------------------------------------------
int __fastcall badSink_10(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004174CD) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_10;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041750E) ----------------------------------------------------
int __fastcall goodG2BSink_10(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041752F) ----------------------------------------------------
int goodG2B_85()
{
  return goodG2BSink_10(2);
}

//----- (000000000041755A) ----------------------------------------------------
int __fastcall goodB2GSink_6(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000041758D) ----------------------------------------------------
__int64 goodB2G_76()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_6;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004175CE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_good()
{
  goodG2B_85();
  return goodB2G_76();
}

//----- (00000000004175E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000417628) ----------------------------------------------------
int goodB2G1_60()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000417689) ----------------------------------------------------
int goodB2G2_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (00000000004176DE) ----------------------------------------------------
int goodG2B1_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000041772A) ----------------------------------------------------
int goodG2B2_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000041776A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_10_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (0000000000417798) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_14_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (00000000004177F5) ----------------------------------------------------
int goodB2G1_61()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (0000000000417872) ----------------------------------------------------
int goodB2G2_61()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (00000000004178E3) ----------------------------------------------------
int goodG2B1_52()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041792D) ----------------------------------------------------
int goodG2B2_52()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041796B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_14_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (0000000000417999) ----------------------------------------------------
int badSink_11()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_badData + 1);
}
// 6A9280: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_badData;

//----- (00000000004179C7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_badData = v1;
  return badSink_11();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9280: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_badData;

//----- (0000000000417A0B) ----------------------------------------------------
int goodG2BSink_11()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodG2BData + 1);
}
// 6A9288: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodG2BData;

//----- (0000000000417A39) ----------------------------------------------------
int goodG2B_86()
{
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodG2BData = 2LL;
  return goodG2BSink_11();
}
// 6A9288: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodG2BData;

//----- (0000000000417A68) ----------------------------------------------------
int goodB2GSink_7()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodB2GData + 1);
  return result;
}
// 6A9290: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodB2GData;

//----- (0000000000417AB2) ----------------------------------------------------
int goodB2G_77()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodB2GData = v1;
  return goodB2GSink_7();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9290: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_goodB2GData;

//----- (0000000000417AF6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_45_good()
{
  goodG2B_86();
  return goodB2G_77();
}

//----- (0000000000417B10) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_18_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000417B40) ----------------------------------------------------
int goodB2G_78()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000417B84) ----------------------------------------------------
int goodG2B_87()
{
  return printIntLine(3u);
}

//----- (0000000000417BB4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_18_good()
{
  goodB2G_78();
  return goodG2B_87();
}

//----- (0000000000417BCE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6A9144: using guessed type int staticTrue_2;

//----- (0000000000417C56) ----------------------------------------------------
int goodB2G1_62()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6A9144: using guessed type int staticTrue_2;
// 6A9298: using guessed type int staticFalse_2;

//----- (0000000000417CFC) ----------------------------------------------------
int goodB2G2_62()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6A9144: using guessed type int staticTrue_2;

//----- (0000000000417D96) ----------------------------------------------------
int goodG2B1_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9144: using guessed type int staticTrue_2;
// 6A9298: using guessed type int staticFalse_2;

//----- (0000000000417DE2) ----------------------------------------------------
int goodG2B2_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_2 )
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9144: using guessed type int staticTrue_2;

//----- (0000000000417E22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_05_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (0000000000417E50) ----------------------------------------------------
int __fastcall badSink_12(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000417E71) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_12(v2);
}

//----- (0000000000417EDB) ----------------------------------------------------
int __fastcall goodG2BSink_12(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000417EFC) ----------------------------------------------------
int goodG2B_88()
{
  return goodG2BSink_12(2);
}

//----- (0000000000417F1E) ----------------------------------------------------
int __fastcall goodB2GSink_8(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000417F51) ----------------------------------------------------
int goodB2G_79()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_8(v2);
}

//----- (0000000000417FBB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_41_good()
{
  goodB2G_79();
  return goodG2B_88();
}

//----- (0000000000417FD5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000417FFD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000418025) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000418061) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_01_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (00000000004180B6) ----------------------------------------------------
int goodG2B_89()
{
  return printHexCharLine(3);
}

//----- (00000000004180DE) ----------------------------------------------------
int goodB2G_80()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000418145) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_01_good()
{
  goodG2B_89();
  return goodB2G_80();
}

//----- (000000000041815F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_68b_badSink();
}
// 6A9550: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData;
// 41815F: using guessed type char buf[16];

//----- (0000000000418250) ----------------------------------------------------
int goodG2B_90()
{
  CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodG2BSink();
}
// 6A9554: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData;

//----- (000000000041827B) ----------------------------------------------------
int goodB2G_81()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodB2GSink();
}
// 6A9558: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData;
// 41827B: using guessed type char buf[16];

//----- (000000000041836C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_68_good()
{
  goodG2B_90();
  return goodB2G_81();
}

//----- (0000000000418386) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004183B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004183DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000041841C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 41841C: using guessed type char buf[16];

//----- (000000000041850E) ----------------------------------------------------
int goodB2G1_63()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 41850E: using guessed type char buf[16];

//----- (0000000000418615) ----------------------------------------------------
int goodB2G2_63()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 418615: using guessed type char buf[16];

//----- (000000000041871C) ----------------------------------------------------
int goodG2B1_54()
{
  return printIntLine(3u);
}

//----- (0000000000418748) ----------------------------------------------------
int goodG2B2_54()
{
  return printIntLine(3u);
}

//----- (0000000000418774) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_02_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (00000000004187A2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000418822) ----------------------------------------------------
int goodG2B_91()
{
  return printUnsignedLine(3u);
}

//----- (000000000041885A) ----------------------------------------------------
int goodB2G_82()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004188EC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_good()
{
  goodG2B_91();
  return goodB2G_82();
}

//----- (0000000000418906) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 418906: using guessed type char buf[16];

//----- (0000000000418A10) ----------------------------------------------------
int goodB2G1_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 418A10: using guessed type char buf[16];

//----- (0000000000418B3B) ----------------------------------------------------
int goodB2G2_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 418B3B: using guessed type char buf[16];

//----- (0000000000418C5A) ----------------------------------------------------
int goodG2B1_55()
{
  return printIntLine(3u);
}

//----- (0000000000418CA6) ----------------------------------------------------
int goodG2B2_55()
{
  return printIntLine(3u);
}

//----- (0000000000418CE6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_06_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (0000000000418D14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54e_badSink(a1);
}

//----- (0000000000418D2B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000418D42) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000418D59) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_07_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9148: using guessed type int staticFive_4;

//----- (0000000000418DBA) ----------------------------------------------------
int goodB2G1_65()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9148: using guessed type int staticFive_4;

//----- (0000000000418E3D) ----------------------------------------------------
int goodB2G2_65()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9148: using guessed type int staticFive_4;

//----- (0000000000418EB4) ----------------------------------------------------
int goodG2B1_56()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9148: using guessed type int staticFive_4;

//----- (0000000000418F04) ----------------------------------------------------
int goodG2B2_56()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9148: using guessed type int staticFive_4;

//----- (0000000000418F48) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_07_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (0000000000418F76) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_09_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000418FDF) ----------------------------------------------------
int goodB2G1_66()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000419066) ----------------------------------------------------
int goodB2G2_66()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004190E1) ----------------------------------------------------
int goodG2B1_57()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000419129) ----------------------------------------------------
int goodG2B2_57()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000419165) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_09_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (0000000000419193) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 419193: using guessed type char buf[16];

//----- (0000000000419285) ----------------------------------------------------
int goodG2B_92()
{
  return printIntLine(3u);
}

//----- (00000000004192B1) ----------------------------------------------------
int goodB2G_83()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 4192B1: using guessed type char buf[16];

//----- (00000000004193B8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_01_good()
{
  goodG2B_92();
  return goodB2G_83();
}

//----- (00000000004193D2) ----------------------------------------------------
int __fastcall badSink_13(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004193F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_13(v4);
}

//----- (000000000041945B) ----------------------------------------------------
int __fastcall goodG2BSink_13(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041947C) ----------------------------------------------------
int goodG2B_93()
{
  return goodG2BSink_13(2);
}

//----- (000000000041949E) ----------------------------------------------------
int __fastcall goodB2GSink_9(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004194D4) ----------------------------------------------------
int goodB2G_84()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_9(v4);
}

//----- (000000000041953C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_41_good()
{
  goodB2G_84();
  return goodG2B_93();
}

//----- (0000000000419556) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_68b_badSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_preinc_68_badData + 1);
}
// 6A955D: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_68_badData;

//----- (0000000000419580) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_68b_goodG2BSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_preinc_68_goodG2BData + 1);
}
// 6A955C: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_68_goodG2BData;

//----- (00000000004195AA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_fscanf_preinc_68_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_fscanf_preinc_68_goodB2GData + 1);
  return result;
}
// 6A955E: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_68_goodB2GData;

//----- (00000000004195E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_14_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004196CA) ----------------------------------------------------
int goodB2G1_67()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004197D6) ----------------------------------------------------
int goodB2G2_67()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004198D6) ----------------------------------------------------
int goodG2B1_58()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041992B) ----------------------------------------------------
int goodG2B2_58()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000419974) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_14_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (00000000004199A2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_badSink((__int64)&v6);
}

//----- (0000000000419A14) ----------------------------------------------------
int goodG2B_94()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000419A3E) ----------------------------------------------------
int goodB2G_85()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_goodB2GSink((__int64)&v6);
}

//----- (0000000000419AB0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_66_good()
{
  goodG2B_94();
  return goodB2G_85();
}

//----- (0000000000419ACA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000419AEB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000419B0C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000419B3F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_16_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000419B6D) ----------------------------------------------------
int goodB2G_86()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000419BAD) ----------------------------------------------------
int goodG2B_95()
{
  return printUnsignedLine(3u);
}

//----- (0000000000419BDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_16_good()
{
  goodB2G_86();
  return goodG2B_95();
}

//----- (0000000000419BF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53d_badSink(a1);
}

//----- (0000000000419C0C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53d_goodG2BSink(a1);
}

//----- (0000000000419C23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000419C3A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000419C62) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000419C8A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000419CC6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (0000000000419D4C) ----------------------------------------------------
int goodB2G1_68()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000419DF3) ----------------------------------------------------
int goodB2G2_68()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000419E8E) ----------------------------------------------------
int goodG2B1_59()
{
  return printIntLine(3u);
}

//----- (0000000000419ED8) ----------------------------------------------------
int goodG2B2_59()
{
  return printIntLine(3u);
}

//----- (0000000000419F16) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_04_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (0000000000419F44) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (0000000000419FC4) ----------------------------------------------------
int goodG2B_96()
{
  return printIntLine(3u);
}

//----- (0000000000419FFC) ----------------------------------------------------
int goodB2G_87()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000041A091) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_31_good()
{
  goodG2B_96();
  return goodB2G_87();
}

//----- (000000000041A0AB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v7 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 41A0AB: using guessed type char buf[16];

//----- (000000000041A1B5) ----------------------------------------------------
int goodB2G1_69()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;
// 41A1B5: using guessed type char buf[16];

//----- (000000000041A2E0) ----------------------------------------------------
int goodB2G2_69()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 41A2E0: using guessed type char buf[16];

//----- (000000000041A3FF) ----------------------------------------------------
int goodG2B1_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041A44B) ----------------------------------------------------
int goodG2B2_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041A48B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_09_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (000000000041A4B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53c_badSink(a1);
}

//----- (000000000041A4D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53c_goodG2BSink(a1);
}

//----- (000000000041A4ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53c_goodB2GSink(a1);
}

//----- (000000000041A507) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A550) ----------------------------------------------------
int goodB2G_88()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A5AF) ----------------------------------------------------
int goodG2B_97()
{
  return printIntLine(3u);
}

//----- (000000000041A5DD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_18_good()
{
  goodB2G_88();
  return goodG2B_97();
}

//----- (000000000041A5F7) ----------------------------------------------------
int badSink_14()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_preinc_45_badData + 1);
}
// 6A92A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_badData;

//----- (000000000041A625) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_45_bad()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_45_badData = 0x7FFFFFFFFFFFFFFFLL;
  return badSink_14();
}
// 6A92A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_badData;

//----- (000000000041A65A) ----------------------------------------------------
int goodG2BSink_14()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_preinc_45_goodG2BData + 1);
}
// 6A92A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_goodG2BData;

//----- (000000000041A688) ----------------------------------------------------
int goodG2B_98()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_45_goodG2BData = 2LL;
  return goodG2BSink_14();
}
// 6A92A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_goodG2BData;

//----- (000000000041A6B7) ----------------------------------------------------
int goodB2GSink_10()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_max_preinc_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_max_preinc_45_goodB2GData + 1);
  return result;
}
// 6A92B0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_goodB2GData;

//----- (000000000041A701) ----------------------------------------------------
int goodB2G_89()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_45_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return goodB2GSink_10();
}
// 6A92B0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_45_goodB2GData;

//----- (000000000041A736) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_45_good()
{
  goodG2B_98();
  return goodB2G_89();
}

//----- (000000000041A750) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000041A778) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000041A7A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000041A7DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52c_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041A801) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041A826) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041A85D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_68_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_68_badData = v1;
  return CWE190_Integer_Overflow__char_fscanf_preinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A955D: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_68_badData;

//----- (000000000041A89C) ----------------------------------------------------
int goodG2B_99()
{
  CWE190_Integer_Overflow__char_fscanf_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__char_fscanf_preinc_68b_goodG2BSink();
}
// 6A955C: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_68_goodG2BData;

//----- (000000000041A8C2) ----------------------------------------------------
int goodB2G_90()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__char_fscanf_preinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A955E: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_68_goodB2GData;

//----- (000000000041A901) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_68_good()
{
  goodG2B_99();
  return goodB2G_90();
}

//----- (000000000041A91B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041A946) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041A971) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000041A9AE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_51_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_badSink(-1);
}

//----- (000000000041A9D0) ----------------------------------------------------
int goodG2B_100()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_goodG2BSink(2);
}

//----- (000000000041A9F2) ----------------------------------------------------
int goodB2G_91()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_51b_goodB2GSink(-1);
}

//----- (000000000041AA14) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_51_good()
{
  goodG2B_100();
  return goodB2G_91();
}

//----- (000000000041AA2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_badSink(a1);
}

//----- (000000000041AA45) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_goodG2BSink(a1);
}

//----- (000000000041AA5C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_goodB2GSink(a1);
}

//----- (000000000041AA73) ----------------------------------------------------
int __fastcall badSink_15(__int64 a1)
{
  int result; // eax

  result = badStatic_3;
  if ( badStatic_3 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A92B8: using guessed type int badStatic_3;

//----- (000000000041AAA4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  badStatic_3 = 1;
  return badSink_15(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A92B8: using guessed type int badStatic_3;

//----- (000000000041AAE9) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(__int64 a1)
{
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6A92BC: using guessed type int goodB2G1Static_3;

//----- (000000000041AB42) ----------------------------------------------------
int goodB2G1_70()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A92BC: using guessed type int goodB2G1Static_3;

//----- (000000000041AB87) ----------------------------------------------------
int __fastcall goodB2G2Sink_3(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_3;
  if ( goodB2G2Static_3 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6A92C0: using guessed type int goodB2G2Static_3;

//----- (000000000041ABD4) ----------------------------------------------------
int goodB2G2_70()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A92C0: using guessed type int goodB2G2Static_3;

//----- (000000000041AC19) ----------------------------------------------------
int __fastcall goodG2BSink_15(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_3;
  if ( goodG2BStatic_3 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A92C4: using guessed type int goodG2BStatic_3;

//----- (000000000041AC4A) ----------------------------------------------------
int goodG2B_101()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_15(2LL);
}
// 6A92C4: using guessed type int goodG2BStatic_3;

//----- (000000000041AC7A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_21_good()
{
  goodB2G1_70();
  goodB2G2_70();
  return goodG2B_101();
}

//----- (000000000041AC9E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_rand_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_rand_preinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A94E4: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_badGlobal;

//----- (000000000041ACC9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A94E8: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Global;

//----- (000000000041AD15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A94EC: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Global;

//----- (000000000041AD55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A94F0: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BGlobal;

//----- (000000000041AD80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041ADA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041ADCE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000041AE07) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_66b_badSink((__int64)&v5);
}
// 41AE07: using guessed type char buf[16];

//----- (000000000041AF3D) ----------------------------------------------------
int goodG2B_102()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000041AF67) ----------------------------------------------------
int goodB2G_92()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_66b_goodB2GSink((__int64)&v5);
}
// 41AF67: using guessed type char buf[16];

//----- (000000000041B09D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_66_good()
{
  goodG2B_102();
  return goodB2G_92();
}

//----- (000000000041B0B7) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000041B0C2) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (000000000041B0CD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_08_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 0x7FFF;
  result = staticReturnsTrue_1();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041B117) ----------------------------------------------------
int goodB2G1_71()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 0x7FFF;
  if ( (unsigned int)staticReturnsFalse_1() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000041B181) ----------------------------------------------------
int goodB2G2_71()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 0x7FFF;
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}

//----- (000000000041B1DF) ----------------------------------------------------
int goodG2B1_61()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041B235) ----------------------------------------------------
int goodG2B2_61()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041B27F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_08_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (000000000041B2AD) ----------------------------------------------------
int badSink_16()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_preinc_45_badData + 1);
}
// 6A92C8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_badData;

//----- (000000000041B2D4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_45_badData = -1;
  return badSink_16();
}
// 6A92C8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_badData;

//----- (000000000041B2FF) ----------------------------------------------------
int goodG2BSink_16()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodG2BData + 1);
}
// 6A92CC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodG2BData;

//----- (000000000041B326) ----------------------------------------------------
int goodG2B_103()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodG2BData = 2;
  return goodG2BSink_16();
}
// 6A92CC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodG2BData;

//----- (000000000041B351) ----------------------------------------------------
int goodB2GSink_11()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodB2GData + 1);
  return result;
}
// 6A92D0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodB2GData;

//----- (000000000041B38A) ----------------------------------------------------
int goodB2G_93()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodB2GData = -1;
  return goodB2GSink_11();
}
// 6A92D0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_goodB2GData;

//----- (000000000041B3B5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_45_good()
{
  goodG2B_103();
  return goodB2G_93();
}

//----- (000000000041B3CF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_53_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041B408) ----------------------------------------------------
int goodG2B_104()
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53b_goodG2BSink(2);
}

//----- (000000000041B425) ----------------------------------------------------
int goodB2G_94()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041B45E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_53_good()
{
  goodG2B_104();
  return goodB2G_94();
}

//----- (000000000041B478) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_15_bad()
{
  return printHexCharLine(-128);
}

//----- (000000000041B4A2) ----------------------------------------------------
int goodB2G1_72()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041B4DE) ----------------------------------------------------
int goodB2G2_72()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041B51A) ----------------------------------------------------
int goodG2B1_62()
{
  return printHexCharLine(3);
}

//----- (000000000041B544) ----------------------------------------------------
int goodG2B2_62()
{
  return printHexCharLine(3);
}

//----- (000000000041B56E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_15_good()
{
  goodB2G1_72();
  goodB2G2_72();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (000000000041B59C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_22_badSink(v7);
}
// 6A92D4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_badGlobal;
// 41B59C: using guessed type char buf[16];

//----- (000000000041B68E) ----------------------------------------------------
int goodB2G1_73()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Sink(v7);
}
// 6A92D8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Global;
// 41B68E: using guessed type char buf[16];

//----- (000000000041B780) ----------------------------------------------------
int goodB2G2_73()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Sink(v7);
}
// 6A92DC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Global;
// 41B780: using guessed type char buf[16];

//----- (000000000041B872) ----------------------------------------------------
int goodG2B_105()
{
  CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BSink(2);
}
// 6A92E0: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BGlobal;

//----- (000000000041B89E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_22_good()
{
  goodB2G1_73();
  goodB2G2_73();
  return goodG2B_105();
}

//----- (000000000041B8C2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_06_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000041B902) ----------------------------------------------------
int goodB2G1_74()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041B960) ----------------------------------------------------
int goodB2G2_74()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041B9B2) ----------------------------------------------------
int goodG2B1_63()
{
  return printUnsignedLine(3u);
}

//----- (000000000041B9FE) ----------------------------------------------------
int goodG2B2_63()
{
  return printUnsignedLine(3u);
}

//----- (000000000041BA3E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_06_good()
{
  goodB2G1_74();
  goodB2G2_74();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041BA6C) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 41BA6C: using guessed type char buf[16];

//----- (000000000041BB8F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041BBA2) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 41BBA2: using guessed type char buf[16];

//----- (000000000041BCC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041BCE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041BD07) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041BD3D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041BD8C) ----------------------------------------------------
int goodB2G1_75()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041BE03) ----------------------------------------------------
int goodB2G2_75()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041BE6E) ----------------------------------------------------
int goodG2B1_64()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041BEC3) ----------------------------------------------------
int goodG2B2_64()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041BF0C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_14_good()
{
  goodB2G1_75();
  goodB2G2_75();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041BF3A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_53_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_53b_badSink(v0);
}

//----- (000000000041BF84) ----------------------------------------------------
int goodG2B_106()
{
  return CWE190_Integer_Overflow__char_rand_preinc_53b_goodG2BSink(2);
}

//----- (000000000041BFA1) ----------------------------------------------------
int goodB2G_95()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_53b_goodB2GSink(v0);
}

//----- (000000000041BFEB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_53_good()
{
  goodG2B_106();
  return goodB2G_95();
}

//----- (000000000041C005) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v3 = 0x8000000000000000LL;
  v2 = 0x8000000000000000LL;
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000041C06F) ----------------------------------------------------
int goodG2B_107()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 3LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (000000000041C0D3) ----------------------------------------------------
int goodB2G_96()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041C159) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_32_good()
{
  goodG2B_107();
  return goodB2G_96();
}

//----- (000000000041C173) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C1B1) ----------------------------------------------------
int goodG2B_108()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_goodG2BSink(2);
}

//----- (000000000041C1D9) ----------------------------------------------------
int goodB2G_97()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C217) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_67_good()
{
  goodG2B_108();
  return goodB2G_97();
}

//----- (000000000041C231) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54c_badSink(a1);
}

//----- (000000000041C24C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54c_goodG2BSink(a1);
}

//----- (000000000041C267) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54c_goodB2GSink(a1);
}

//----- (000000000041C282) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_preinc_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C2C3) ----------------------------------------------------
int goodG2B_109()
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_65b_goodG2BSink(2);
}

//----- (000000000041C2EE) ----------------------------------------------------
__int64 goodB2G_98()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_preinc_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C32F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_65_good()
{
  goodG2B_109();
  return goodB2G_98();
}

//----- (000000000041C349) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v7 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 41C349: using guessed type char buf[16];

//----- (000000000041C453) ----------------------------------------------------
int goodB2G1_76()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;
// 41C453: using guessed type char buf[16];

//----- (000000000041C57E) ----------------------------------------------------
int goodB2G2_76()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 41C57E: using guessed type char buf[16];

//----- (000000000041C69D) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000041C6E9) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000041C729) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_10_good()
{
  goodB2G1_76();
  goodB2G2_76();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041C757) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_52c_badSink(a1);
}

//----- (000000000041C771) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_52c_goodG2BSink(a1);
}

//----- (000000000041C78B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_52b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_52c_goodB2GSink(a1);
}

//----- (000000000041C7A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_52c_badSink(a1);
}

//----- (000000000041C7BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_52c_goodG2BSink(a1);
}

//----- (000000000041C7D9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_52c_goodB2GSink(a1);
}

//----- (000000000041C7F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_preinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (000000000041C825) ----------------------------------------------------
int goodG2B_110()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_preinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000041C857) ----------------------------------------------------
int goodB2G_99()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_listen_socket_preinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041C89E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_61_good()
{
  goodG2B_110();
  return goodB2G_99();
}

//----- (000000000041C8B8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_05_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_3 )
    v1 = 127;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A914C: using guessed type int staticTrue_3;

//----- (000000000041C8F4) ----------------------------------------------------
int goodB2G1_77()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_3 )
    v1 = 127;
  if ( staticFalse_3 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6A914C: using guessed type int staticTrue_3;
// 6A92E4: using guessed type int staticFalse_3;

//----- (000000000041C94E) ----------------------------------------------------
int goodB2G2_77()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_3 )
    v1 = 127;
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6A914C: using guessed type int staticTrue_3;

//----- (000000000041C99C) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A914C: using guessed type int staticTrue_3;
// 6A92E4: using guessed type int staticFalse_3;

//----- (000000000041C9E4) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_3 )
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A914C: using guessed type int staticTrue_3;

//----- (000000000041CA20) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_05_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041CA4E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041CA89) ----------------------------------------------------
int goodG2B_111()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000041CAAF) ----------------------------------------------------
int goodB2G_100()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041CAEA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_64_good()
{
  goodG2B_111();
  return goodB2G_100();
}

//----- (000000000041CB04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_52c_badSink(a1);
}

//----- (000000000041CB1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_52c_goodG2BSink(a1);
}

//----- (000000000041CB3A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_52c_goodB2GSink(a1);
}

//----- (000000000041CB55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54d_badSink(a1);
}

//----- (000000000041CB6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54d_goodG2BSink(a1);
}

//----- (000000000041CB83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54d_goodB2GSink(a1);
}

//----- (000000000041CB9A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_65_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__char_rand_preinc_65b_badSink)((unsigned int)(char)v0);
}

//----- (000000000041CBED) ----------------------------------------------------
int goodG2B_112()
{
  return CWE190_Integer_Overflow__char_rand_preinc_65b_goodG2BSink(2);
}

//----- (000000000041CC13) ----------------------------------------------------
__int64 goodB2G_101()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__char_rand_preinc_65b_goodB2GSink)((unsigned int)(char)v0);
}

//----- (000000000041CC66) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_65_good()
{
  goodG2B_112();
  return goodB2G_101();
}

//----- (000000000041CC80) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_04_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000041CCCB) ----------------------------------------------------
int goodB2G1_78()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041CD3E) ----------------------------------------------------
int goodB2G2_78()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041CDA5) ----------------------------------------------------
int goodG2B1_67()
{
  return printLongLongLine(3LL);
}

//----- (000000000041CDF6) ----------------------------------------------------
int goodG2B2_67()
{
  return printLongLongLine(3LL);
}

//----- (000000000041CE3B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_04_good()
{
  goodB2G1_78();
  goodB2G2_78();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000041CE69) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_31_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000041CEB2) ----------------------------------------------------
int goodG2B_113()
{
  return printLongLongLine(3LL);
}

//----- (000000000041CEF5) ----------------------------------------------------
int goodB2G_102()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041CF5A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_31_good()
{
  goodG2B_113();
  return goodB2G_102();
}

//----- (000000000041CF74) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041CFFE) ----------------------------------------------------
int goodB2G1_79()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041D0A9) ----------------------------------------------------
int goodB2G2_79()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041D148) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041D196) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041D1D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_13_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000041D206) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041D227) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041D248) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041D27E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041D2B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041D2F2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (000000000041D348) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_5 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printIntLine(v8 + 1);
  return result;
}
// 6A9150: using guessed type int staticFive_5;
// 41D348: using guessed type char buf[16];

//----- (000000000041D49A) ----------------------------------------------------
int goodB2G1_80()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_5 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6A9150: using guessed type int staticFive_5;
// 41D49A: using guessed type char buf[16];

//----- (000000000041D60D) ----------------------------------------------------
int goodB2G2_80()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_5 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6A9150: using guessed type int staticFive_5;
// 41D60D: using guessed type char buf[16];

//----- (000000000041D774) ----------------------------------------------------
int goodG2B1_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9150: using guessed type int staticFive_5;

//----- (000000000041D7C2) ----------------------------------------------------
int goodG2B2_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    v1 = 2;
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9150: using guessed type int staticFive_5;

//----- (000000000041D804) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_07_good()
{
  goodB2G1_80();
  goodB2G2_80();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (000000000041D832) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v4 + 1);
  return result;
}
// 6A9154: using guessed type int staticTrue_4;

//----- (000000000041D8B8) ----------------------------------------------------
int goodB2G1_81()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6A9154: using guessed type int staticTrue_4;
// 6A92E8: using guessed type int staticFalse_4;

//----- (000000000041D95F) ----------------------------------------------------
int goodB2G2_81()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6A9154: using guessed type int staticTrue_4;

//----- (000000000041D9FA) ----------------------------------------------------
int goodG2B1_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9154: using guessed type int staticTrue_4;
// 6A92E8: using guessed type int staticFalse_4;

//----- (000000000041DA46) ----------------------------------------------------
int goodG2B2_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9154: using guessed type int staticTrue_4;

//----- (000000000041DA86) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_05_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (000000000041DAB4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_54_bad()
{
  return CWE190_Integer_Overflow__short_max_preinc_54b_badSink(0x7FFF);
}

//----- (000000000041DAD5) ----------------------------------------------------
int goodG2B_114()
{
  return CWE190_Integer_Overflow__short_max_preinc_54b_goodG2BSink(2);
}

//----- (000000000041DAF6) ----------------------------------------------------
int goodB2G_103()
{
  return CWE190_Integer_Overflow__short_max_preinc_54b_goodB2GSink(0x7FFF);
}

//----- (000000000041DB17) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_54_good()
{
  goodG2B_114();
  return goodB2G_103();
}

//----- (000000000041DB31) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000041DB60) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000041DB8F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (000000000041DBD0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_52_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DC09) ----------------------------------------------------
int goodG2B_115()
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_52b_goodG2BSink(2);
}

//----- (000000000041DC26) ----------------------------------------------------
int goodB2G_104()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DC5F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_52_good()
{
  goodG2B_115();
  return goodB2G_104();
}

//----- (000000000041DC79) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_09_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041DCD4) ----------------------------------------------------
int goodB2G1_82()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041DD4F) ----------------------------------------------------
int goodB2G2_82()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041DDBE) ----------------------------------------------------
int goodG2B1_71()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041DE06) ----------------------------------------------------
int goodG2B2_71()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041DE42) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_09_good()
{
  goodB2G1_82();
  goodB2G2_82();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (000000000041DE70) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_64_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DEA7) ----------------------------------------------------
int goodG2B_116()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_fscanf_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000041DEC5) ----------------------------------------------------
int goodB2G_105()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DEFC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_64_good()
{
  goodG2B_116();
  return goodB2G_105();
}

//----- (000000000041DF16) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_preinc_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A92FC: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_badGlobal;

//----- (000000000041DF47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6A9300: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Global;

//----- (000000000041DFA0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6A9304: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Global;

//----- (000000000041DFED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A9308: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BGlobal;

//----- (000000000041E01E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_31_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000041E0F8) ----------------------------------------------------
int goodG2B_117()
{
  return printLongLongLine(3LL);
}

//----- (000000000041E13B) ----------------------------------------------------
int goodB2G_106()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000041E231) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_31_good()
{
  goodG2B_117();
  return goodB2G_106();
}

//----- (000000000041E24B) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000041E256) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000041E261) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E2C4) ----------------------------------------------------
int goodB2G1_83()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E349) ----------------------------------------------------
int goodB2G2_83()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_2();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E3C2) ----------------------------------------------------
int goodG2B1_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041E416) ----------------------------------------------------
int goodG2B2_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041E45E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_08_good()
{
  goodB2G1_83();
  goodB2G2_83();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (000000000041E48C) ----------------------------------------------------
int __fastcall badSink_17(int a1)
{
  int result; // eax

  result = badStatic_4;
  if ( badStatic_4 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A92EC: using guessed type int badStatic_4;

//----- (000000000041E4B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_4 = 1;
  return badSink_17(v2);
}
// 6A92EC: using guessed type int badStatic_4;

//----- (000000000041E52B) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(int a1)
{
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A92F0: using guessed type int goodB2G1Static_4;

//----- (000000000041E577) ----------------------------------------------------
int goodB2G1_84()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v2);
}
// 6A92F0: using guessed type int goodB2G1Static_4;

//----- (000000000041E5EB) ----------------------------------------------------
int __fastcall goodB2G2Sink_4(int a1)
{
  int result; // eax

  result = goodB2G2Static_4;
  if ( goodB2G2Static_4 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A92F4: using guessed type int goodB2G2Static_4;

//----- (000000000041E62B) ----------------------------------------------------
int goodB2G2_84()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v2);
}
// 6A92F4: using guessed type int goodB2G2Static_4;

//----- (000000000041E69F) ----------------------------------------------------
int __fastcall goodG2BSink_17(int a1)
{
  int result; // eax

  result = goodG2BStatic_4;
  if ( goodG2BStatic_4 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A92F8: using guessed type int goodG2BStatic_4;

//----- (000000000041E6CA) ----------------------------------------------------
int goodG2B_118()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_17(2);
}
// 6A92F8: using guessed type int goodG2BStatic_4;

//----- (000000000041E6F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_21_good()
{
  goodB2G1_84();
  goodB2G2_84();
  return goodG2B_118();
}

//----- (000000000041E71A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000041E78E) ----------------------------------------------------
int goodB2G1_85()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000041E817) ----------------------------------------------------
int goodB2G2_85()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000041E8A0) ----------------------------------------------------
int goodG2B1_73()
{
  return printIntLine(3u);
}

//----- (000000000041E8CC) ----------------------------------------------------
int goodG2B2_73()
{
  return printIntLine(3u);
}

//----- (000000000041E8F8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_03_good()
{
  goodB2G1_85();
  goodB2G2_85();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (000000000041E926) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_badSink(a1);
}

//----- (000000000041E93D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_goodG2BSink(a1);
}

//----- (000000000041E954) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_goodB2GSink(a1);
}

//----- (000000000041E96B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_64_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_64b_badSink(&v10);
}

//----- (000000000041EA28) ----------------------------------------------------
int goodG2B_119()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000041EA4E) ----------------------------------------------------
int goodB2G_107()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_64b_goodB2GSink(&v10);
}

//----- (000000000041EB0B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_64_good()
{
  goodG2B_119();
  return goodB2G_107();
}

//----- (000000000041EB25) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000041EB4C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000041EB73) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000041EBB6) ----------------------------------------------------
int __fastcall badSink_18(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041EBD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_44_bad()
{
  return badSink_18(0x7FFFFFFF);
}

//----- (000000000041EC02) ----------------------------------------------------
int __fastcall goodG2BSink_18(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041EC23) ----------------------------------------------------
int goodG2B_120()
{
  return goodG2BSink_18(2);
}

//----- (000000000041EC4E) ----------------------------------------------------
int __fastcall goodB2GSink_12(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041EC84) ----------------------------------------------------
int goodB2G_108()
{
  return goodB2GSink_12(0x7FFFFFFF);
}

//----- (000000000041ECAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_44_good()
{
  goodG2B_120();
  return goodB2G_108();
}

//----- (000000000041ECC9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041ED53) ----------------------------------------------------
int goodB2G1_86()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041EDFB) ----------------------------------------------------
int goodB2G2_86()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041EE97) ----------------------------------------------------
int goodG2B1_74()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041EEE5) ----------------------------------------------------
int goodG2B2_74()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000041EF27) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_14_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (000000000041EF55) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_51_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041EF8E) ----------------------------------------------------
int goodG2B_121()
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_51b_goodG2BSink(2);
}

//----- (000000000041EFAB) ----------------------------------------------------
int goodB2G_109()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041EFE4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_51_good()
{
  goodG2B_121();
  return goodB2G_109();
}

//----- (000000000041EFFE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printUnsignedLine(*v8 + 1);
}

//----- (000000000041F09D) ----------------------------------------------------
int goodG2B_122()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (000000000041F0F4) ----------------------------------------------------
int goodB2G_110()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+Ch] [rbp-24h]
  int *v9; // [rsp+10h] [rbp-20h]
  int *v10; // [rsp+18h] [rbp-18h]

  v10 = &v6;
  v9 = &v6;
  v6 = 0;
  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  *v10 = v2;
  v7 = *v9;
  if ( v7 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v7 + 1);
  return result;
}

//----- (000000000041F1A5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_good()
{
  goodG2B_122();
  return goodB2G_110();
}

//----- (000000000041F1BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52c_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041F1E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041F209) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041F240) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_22_bad()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_preinc_22_badSink(0x7FFFFFFFFFFFFFFFLL);
}
// 6A92FC: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_badGlobal;

//----- (000000000041F276) ----------------------------------------------------
int goodB2G1_87()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 6A9300: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G1Global;

//----- (000000000041F2AC) ----------------------------------------------------
int goodB2G2_87()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 6A9304: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodB2G2Global;

//----- (000000000041F2E2) ----------------------------------------------------
int goodG2B_123()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BSink(2LL);
}
// 6A9308: using guessed type int CWE190_Integer_Overflow__int64_t_max_preinc_22_goodG2BGlobal;

//----- (000000000041F312) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_22_good()
{
  goodB2G1_87();
  goodB2G2_87();
  return goodG2B_123();
}

//----- (000000000041F336) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F3A1) ----------------------------------------------------
int goodB2G1_88()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F437) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F4C1) ----------------------------------------------------
int goodG2B1_75()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000041F51C) ----------------------------------------------------
int goodG2B2_75()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000041F56B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_11_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (000000000041F599) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_31_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000041F5FC) ----------------------------------------------------
int goodG2B_124()
{
  return printHexCharLine(3);
}

//----- (000000000041F632) ----------------------------------------------------
int goodB2G_111()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000041F6A7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_31_good()
{
  goodG2B_124();
  return goodB2G_111();
}

//----- (000000000041F6C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54c_badSink(a1);
}

//----- (000000000041F6D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54c_goodG2BSink(a1);
}

//----- (000000000041F6EF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54c_goodB2GSink(a1);
}

//----- (000000000041F706) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_34_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7 + 1;
  v5 = v7 + 1;
  return printIntLine(v7 + 1);
}

//----- (000000000041F784) ----------------------------------------------------
int goodG2B_125()
{
  return printIntLine(3u);
}

//----- (000000000041F7BC) ----------------------------------------------------
int goodB2G_112()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v6;
  v5 = v6;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}

//----- (000000000041F84F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_34_good()
{
  goodG2B_125();
  return goodB2G_112();
}

//----- (000000000041F869) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v6 + 1);
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}

//----- (000000000041F92D) ----------------------------------------------------
int goodB2G_113()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v11 + 1);
  }
  else if ( v11 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v11 + 1);
  }
  return result;
}

//----- (000000000041FA48) ----------------------------------------------------
int goodG2B_126()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000041FAAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_12_good()
{
  goodB2G_113();
  return goodG2B_126();
}

//----- (000000000041FAC9) ----------------------------------------------------
int __fastcall badSink_19(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FAEA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_preinc_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_19;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041FB5B) ----------------------------------------------------
int __fastcall goodG2BSink_19(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FB7C) ----------------------------------------------------
int goodG2B_127()
{
  return goodG2BSink_19(2);
}

//----- (000000000041FBA7) ----------------------------------------------------
int __fastcall goodB2GSink_13(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041FBDD) ----------------------------------------------------
__int64 goodB2G_114()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_13;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041FC4E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_preinc_44_good()
{
  goodG2B_127();
  return goodB2G_114();
}

//----- (000000000041FC68) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_02_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041FCAF) ----------------------------------------------------
int goodB2G1_89()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041FD0A) ----------------------------------------------------
int goodB2G2_89()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041FD65) ----------------------------------------------------
int goodG2B1_76()
{
  return printHexCharLine(3);
}

//----- (000000000041FD8D) ----------------------------------------------------
int goodG2B2_76()
{
  return printHexCharLine(3);
}

//----- (000000000041FDB5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_02_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (000000000041FDE3) ----------------------------------------------------
int badSink_20()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_preinc_45_badData + 1);
}
// 6A930C: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_45_badData;

//----- (000000000041FE0D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_45_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_45_badData = v1;
  return badSink_20();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A930C: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_45_badData;

//----- (000000000041FE4C) ----------------------------------------------------
int goodG2BSink_20()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_preinc_45_goodG2BData + 1);
}
// 6A930D: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_45_goodG2BData;

//----- (000000000041FE76) ----------------------------------------------------
int goodG2B_128()
{
  CWE190_Integer_Overflow__char_fscanf_preinc_45_goodG2BData = 2;
  return goodG2BSink_20();
}
// 6A930D: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_45_goodG2BData;

//----- (000000000041FE9C) ----------------------------------------------------
int goodB2GSink_14()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_fscanf_preinc_45_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_fscanf_preinc_45_goodB2GData + 1);
  return result;
}
// 6A930E: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_45_goodB2GData;

//----- (000000000041FED8) ----------------------------------------------------
int goodB2G_115()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_preinc_45_goodB2GData = v1;
  return goodB2GSink_14();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A930E: using guessed type char CWE190_Integer_Overflow__char_fscanf_preinc_45_goodB2GData;

//----- (000000000041FF17) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_45_good()
{
  goodG2B_128();
  return goodB2G_115();
}

//----- (000000000041FF31) ----------------------------------------------------
int __fastcall badSink_21(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FF52) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_21(v2);
}

//----- (000000000041FFBC) ----------------------------------------------------
int __fastcall goodG2BSink_21(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FFDD) ----------------------------------------------------
int goodG2B_129()
{
  return goodG2BSink_21(2);
}

//----- (000000000041FFFF) ----------------------------------------------------
int __fastcall goodB2GSink_15(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000420035) ----------------------------------------------------
int goodB2G_116()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_15(v2);
}

//----- (000000000042009F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_41_good()
{
  goodB2G_116();
  return goodG2B_129();
}

//----- (00000000004200B9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000042013F) ----------------------------------------------------
int goodB2G1_90()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004201E3) ----------------------------------------------------
int goodB2G2_90()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000042027B) ----------------------------------------------------
int goodG2B1_77()
{
  return printUnsignedLine(3u);
}

//----- (00000000004202C5) ----------------------------------------------------
int goodG2B2_77()
{
  return printUnsignedLine(3u);
}

//----- (0000000000420303) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_04_good()
{
  goodB2G1_90();
  goodB2G2_90();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (0000000000420331) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (00000000004203B1) ----------------------------------------------------
int goodG2B_130()
{
  return printUnsignedLine(3u);
}

//----- (00000000004203E9) ----------------------------------------------------
int goodB2G_117()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000042047B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_31_good()
{
  goodG2B_130();
  return goodB2G_117();
}

//----- (0000000000420495) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004204BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004204E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000420521) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000420570) ----------------------------------------------------
int goodB2G1_91()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004205E7) ----------------------------------------------------
int goodB2G2_91()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000420652) ----------------------------------------------------
int goodG2B1_78()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004206A7) ----------------------------------------------------
int goodG2B2_78()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004206F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_13_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (000000000042071E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_51b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000420743) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000420768) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000042079F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_preinc_68_badData + 1));
}
// 6A9560: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_68_badData;

//----- (00000000004207CC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_preinc_68_goodG2BData + 1));
}
// 6A9564: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_68_goodG2BData;

//----- (00000000004207F9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_max_preinc_68_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_max_preinc_68_goodB2GData + 1));
  return result;
}
// 6A9562: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_68_goodB2GData;

//----- (000000000042083A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420883) ----------------------------------------------------
int goodB2G_118()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004208E0) ----------------------------------------------------
int goodG2B_131()
{
  return printUnsignedLine(3u);
}

//----- (000000000042090E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_18_good()
{
  goodB2G_118();
  return goodG2B_131();
}

//----- (0000000000420928) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420960) ----------------------------------------------------
int goodG2B_132()
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_54b_goodG2BSink(2);
}

//----- (0000000000420982) ----------------------------------------------------
int goodB2G_119()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004209BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_54_good()
{
  goodG2B_132();
  return goodB2G_119();
}

//----- (00000000004209D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v6 + 1);
  return result;
}

//----- (0000000000420A64) ----------------------------------------------------
int goodB2G1_92()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}

//----- (0000000000420B15) ----------------------------------------------------
int goodB2G2_92()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}

//----- (0000000000420BBA) ----------------------------------------------------
int goodG2B1_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000420C0E) ----------------------------------------------------
int goodG2B2_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000420C56) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_11_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (0000000000420C84) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (0000000000420CF8) ----------------------------------------------------
int goodB2G1_93()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000420D81) ----------------------------------------------------
int goodB2G2_93()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000420E0A) ----------------------------------------------------
int goodG2B1_80()
{
  return printIntLine(3u);
}

//----- (0000000000420E36) ----------------------------------------------------
int goodG2B2_80()
{
  return printIntLine(3u);
}

//----- (0000000000420E62) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_02_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (0000000000420E90) ----------------------------------------------------
int __fastcall badSink_22(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000420EB7) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = badSink_22;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420EFB) ----------------------------------------------------
int __fastcall goodG2BSink_22(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000420F22) ----------------------------------------------------
int goodG2B_133()
{
  return goodG2BSink_22(2LL);
}

//----- (0000000000420F51) ----------------------------------------------------
int __fastcall goodB2GSink_16(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000420F94) ----------------------------------------------------
__int64 goodB2G_120()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_16;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420FD8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_44_good()
{
  goodG2B_133();
  return goodB2G_120();
}

//----- (0000000000420FF2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_52_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_52b_badSink(v0);
}

//----- (000000000042103C) ----------------------------------------------------
int goodG2B_134()
{
  return CWE190_Integer_Overflow__char_rand_preinc_52b_goodG2BSink(2);
}

//----- (0000000000421059) ----------------------------------------------------
int goodB2G_121()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_52b_goodB2GSink(v0);
}

//----- (00000000004210A3) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_52_good()
{
  goodG2B_134();
  return goodB2G_121();
}

//----- (00000000004210BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v6 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000421145) ----------------------------------------------------
int goodB2G1_94()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (00000000004211EE) ----------------------------------------------------
int goodB2G2_94()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042128B) ----------------------------------------------------
int goodG2B1_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (00000000004212D7) ----------------------------------------------------
int goodG2B2_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000421317) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_10_good()
{
  goodB2G1_94();
  goodB2G2_94();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000421345) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A9310: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badGlobal;

//----- (0000000000421370) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6A9314: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Global;

//----- (00000000004213B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6A9318: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Global;

//----- (00000000004213F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A931C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BGlobal;

//----- (0000000000421421) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_53c_badSink(a1);
}

//----- (000000000042143C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000421457) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000421472) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54c_badSink(a1);
}

//----- (0000000000421489) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54c_goodG2BSink(a1);
}

//----- (00000000004214A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54c_goodB2GSink(a1);
}

//----- (00000000004214B7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_15_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000421527) ----------------------------------------------------
int goodB2G1_95()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004215AB) ----------------------------------------------------
int goodB2G2_95()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042162F) ----------------------------------------------------
int goodG2B1_82()
{
  return printIntLine(3u);
}

//----- (000000000042165F) ----------------------------------------------------
int goodG2B2_82()
{
  return printIntLine(3u);
}

//----- (000000000042168F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_15_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (00000000004216BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_03_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (00000000004216F6) ----------------------------------------------------
int goodB2G1_96()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042174B) ----------------------------------------------------
int goodB2G2_96()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004217A0) ----------------------------------------------------
int goodG2B1_83()
{
  return printLongLongLine(3LL);
}

//----- (00000000004217D3) ----------------------------------------------------
int goodG2B2_83()
{
  return printLongLongLine(3LL);
}

//----- (0000000000421806) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_03_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (0000000000421834) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (00000000004218A8) ----------------------------------------------------
int goodG2B_135()
{
  return printIntLine(3u);
}

//----- (00000000004218D4) ----------------------------------------------------
int goodB2G_122()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000042195D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_01_good()
{
  goodG2B_135();
  return goodB2G_122();
}

//----- (0000000000421977) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_68_bad()
{
  CWE190_Integer_Overflow__short_max_preinc_68_badData = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_68b_badSink();
}
// 6A9560: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_68_badData;

//----- (00000000004219A2) ----------------------------------------------------
int goodG2B_136()
{
  CWE190_Integer_Overflow__short_max_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_max_preinc_68b_goodG2BSink();
}
// 6A9564: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_68_goodG2BData;

//----- (00000000004219CD) ----------------------------------------------------
int goodB2G_123()
{
  CWE190_Integer_Overflow__short_max_preinc_68_goodB2GData = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_68b_goodB2GSink();
}
// 6A9562: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_68_goodB2GData;

//----- (00000000004219F8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_68_good()
{
  goodG2B_136();
  return goodB2G_123();
}

//----- (0000000000421A12) ----------------------------------------------------
__int64 badSource_2()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000421A6C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_2();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000421AA3) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 2LL;
}

//----- (0000000000421AB9) ----------------------------------------------------
int goodG2B_137()
{
  __int16 v0; // ax

  v0 = goodG2BSource_2();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000421AF0) ----------------------------------------------------
__int64 goodB2GSource_2()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000421B4A) ----------------------------------------------------
int goodB2G_124()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_2();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000421B95) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_42_good()
{
  goodB2G_124();
  return goodG2B_137();
}

//----- (0000000000421BAF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000421BE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000421C13) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000421C61) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badSink(v2);
}
// 6A9310: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_badGlobal;

//----- (0000000000421CD5) ----------------------------------------------------
int goodB2G1_97()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Sink(v2);
}
// 6A9314: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G1Global;

//----- (0000000000421D49) ----------------------------------------------------
int goodB2G2_97()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Sink(v2);
}
// 6A9318: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodB2G2Global;

//----- (0000000000421DBD) ----------------------------------------------------
int goodG2B_138()
{
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BSink(2);
}
// 6A931C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_goodG2BGlobal;

//----- (0000000000421DE9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_22_good()
{
  goodB2G1_97();
  goodB2G2_97();
  return goodG2B_138();
}

//----- (0000000000421E0D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_53_bad()
{
  return CWE190_Integer_Overflow__short_max_preinc_53b_badSink(0x7FFF);
}

//----- (0000000000421E2E) ----------------------------------------------------
int goodG2B_139()
{
  return CWE190_Integer_Overflow__short_max_preinc_53b_goodG2BSink(2);
}

//----- (0000000000421E4F) ----------------------------------------------------
int goodB2G_125()
{
  return CWE190_Integer_Overflow__short_max_preinc_53b_goodB2GSink(0x7FFF);
}

//----- (0000000000421E70) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_53_good()
{
  goodG2B_139();
  return goodB2G_125();
}

//----- (0000000000421E8A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_12_bad()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 + 1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (0000000000421F20) ----------------------------------------------------
int goodB2G_126()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000421FD8) ----------------------------------------------------
int goodG2B_140()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (000000000042204C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_12_good()
{
  goodB2G_126();
  return goodG2B_140();
}

//----- (0000000000422066) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v6 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004220EE) ----------------------------------------------------
int goodB2G1_98()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000422197) ----------------------------------------------------
int goodB2G2_98()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000422234) ----------------------------------------------------
int goodG2B1_84()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000422280) ----------------------------------------------------
int goodG2B2_84()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004222C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_09_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (00000000004222EE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_05_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6A9158: using guessed type int staticTrue_5;

//----- (0000000000422370) ----------------------------------------------------
int goodB2G1_99()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6A9158: using guessed type int staticTrue_5;
// 6A9320: using guessed type int staticFalse_5;

//----- (0000000000422412) ----------------------------------------------------
int goodB2G2_99()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6A9158: using guessed type int staticTrue_5;

//----- (00000000004224A8) ----------------------------------------------------
int goodG2B1_85()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9158: using guessed type int staticTrue_5;
// 6A9320: using guessed type int staticFalse_5;

//----- (00000000004224F6) ----------------------------------------------------
int goodG2B2_85()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_5 )
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9158: using guessed type int staticTrue_5;

//----- (0000000000422538) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_05_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000422566) ----------------------------------------------------
int __fastcall badSink_23(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000042258E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_41_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return badSink_23(v1);
}

//----- (00000000004225EF) ----------------------------------------------------
int __fastcall goodG2BSink_23(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000422617) ----------------------------------------------------
int goodG2B_141()
{
  return goodG2BSink_23(2);
}

//----- (0000000000422638) ----------------------------------------------------
int __fastcall goodB2GSink_17(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000422674) ----------------------------------------------------
int goodB2G_127()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return goodB2GSink_17(v1);
}

//----- (00000000004226D5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_41_good()
{
  goodB2G_127();
  return goodG2B_141();
}

//----- (00000000004226EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_preinc_68_badData + 1);
}
// 6A9568: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_68_badData;

//----- (0000000000422716) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_preinc_68_goodG2BData + 1);
}
// 6A956C: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_68_goodG2BData;

//----- (000000000042273D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_preinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fscanf_preinc_68_goodB2GData + 1);
  return result;
}
// 6A9570: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_68_goodB2GData;

//----- (0000000000422779) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422803) ----------------------------------------------------
int goodB2G1_100()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004228AB) ----------------------------------------------------
int goodB2G2_100()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422947) ----------------------------------------------------
int goodG2B1_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422995) ----------------------------------------------------
int goodG2B2_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004229D7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000422A05) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v4 = v1;
  return printUnsignedLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422A72) ----------------------------------------------------
int goodG2B_142()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (0000000000422AC9) ----------------------------------------------------
int goodB2G_128()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422B48) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_32_good()
{
  goodG2B_142();
  return goodB2G_128();
}

//----- (0000000000422B62) ----------------------------------------------------
int __fastcall badSink_24(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000422B8A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_44_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_24)((unsigned int)(__int16)v1);
}

//----- (0000000000422BF4) ----------------------------------------------------
int __fastcall goodG2BSink_24(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000422C1C) ----------------------------------------------------
int goodG2B_143()
{
  return goodG2BSink_24(2);
}

//----- (0000000000422C46) ----------------------------------------------------
int __fastcall goodB2GSink_18(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000422C82) ----------------------------------------------------
__int64 goodB2G_129()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_18)((unsigned int)(__int16)v1);
}

//----- (0000000000422CEC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_44_good()
{
  goodG2B_143();
  return goodB2G_129();
}

//----- (0000000000422D06) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (0000000000422D38) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (0000000000422D6A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}

//----- (0000000000422DB0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422E05) ----------------------------------------------------
int goodB2G1_101()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (0000000000422E82) ----------------------------------------------------
int goodB2G2_101()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (0000000000422EF3) ----------------------------------------------------
int goodG2B1_87()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422F4E) ----------------------------------------------------
int goodG2B2_87()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422F9D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_11_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (0000000000422FCB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_02_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000423004) ----------------------------------------------------
int goodB2G1_102()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423059) ----------------------------------------------------
int goodB2G2_102()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004230AE) ----------------------------------------------------
int goodG2B1_88()
{
  return printLongLongLine(3LL);
}

//----- (00000000004230E1) ----------------------------------------------------
int goodG2B2_88()
{
  return printLongLongLine(3LL);
}

//----- (0000000000423114) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_02_good()
{
  goodB2G1_102();
  goodB2G2_102();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (0000000000423142) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53c_badSink(a1);
}

//----- (0000000000423159) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000423170) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000423187) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_13_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004231F2) ----------------------------------------------------
int goodB2G1_103()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042327B) ----------------------------------------------------
int goodB2G2_103()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004232F8) ----------------------------------------------------
int goodG2B1_89()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423342) ----------------------------------------------------
int goodG2B2_89()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423380) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_13_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (00000000004233AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (00000000004233FB) ----------------------------------------------------
int goodB2G1_104()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000423470) ----------------------------------------------------
int goodB2G2_104()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (00000000004234D9) ----------------------------------------------------
int goodG2B1_90()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042352C) ----------------------------------------------------
int goodG2B2_90()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000423573) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_10_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (00000000004235A1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_14_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 127;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004235DF) ----------------------------------------------------
int goodB2G1_105()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 127;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000042363B) ----------------------------------------------------
int goodB2G2_105()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 127;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000042368B) ----------------------------------------------------
int goodG2B1_91()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004236D5) ----------------------------------------------------
int goodG2B2_91()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000423713) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_14_good()
{
  goodB2G1_105();
  goodB2G2_105();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (0000000000423741) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000423762) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000423783) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004237B9) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (00000000004237C4) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (00000000004237CF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_3();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423832) ----------------------------------------------------
int goodB2G1_106()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004238B5) ----------------------------------------------------
int goodB2G2_106()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042392C) ----------------------------------------------------
int goodG2B1_92()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000423980) ----------------------------------------------------
int goodG2B2_92()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (00000000004239C8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_08_good()
{
  goodB2G1_106();
  goodB2G2_106();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (00000000004239F6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_32_bad()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 127;
  v1 = 127;
  v3 = -128;
  v2 = -128;
  return printHexCharLine(-128);
}

//----- (0000000000423A4C) ----------------------------------------------------
int goodG2B_144()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printHexCharLine(3);
}

//----- (0000000000423AA2) ----------------------------------------------------
int goodB2G_130()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Eh] [rbp-12h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 127;
  v1 = 127;
  v2 = 127;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423B0A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_32_good()
{
  goodG2B_144();
  return goodB2G_130();
}

//----- (0000000000423B24) ----------------------------------------------------
int __fastcall badSink_25(int a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A9324: using guessed type int badStatic_5;

//----- (0000000000423B4F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_5 = 1;
  return badSink_25(v2);
}
// 6A9324: using guessed type int badStatic_5;

//----- (0000000000423BC3) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(int a1)
{
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6A9328: using guessed type int goodB2G1Static_5;

//----- (0000000000423C0C) ----------------------------------------------------
int goodB2G1_107()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(v2);
}
// 6A9328: using guessed type int goodB2G1Static_5;

//----- (0000000000423C80) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(int a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6A932C: using guessed type int goodB2G2Static_5;

//----- (0000000000423CBD) ----------------------------------------------------
int goodB2G2_107()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(v2);
}
// 6A932C: using guessed type int goodB2G2Static_5;

//----- (0000000000423D31) ----------------------------------------------------
int __fastcall goodG2BSink_25(int a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A9330: using guessed type int goodG2BStatic_5;

//----- (0000000000423D5C) ----------------------------------------------------
int goodG2B_145()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_25(2);
}
// 6A9330: using guessed type int goodG2BStatic_5;

//----- (0000000000423D88) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_21_good()
{
  goodB2G1_107();
  goodB2G2_107();
  return goodG2B_145();
}

//----- (0000000000423DAC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000423E20) ----------------------------------------------------
int goodB2G1_108()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000423EA6) ----------------------------------------------------
int goodB2G2_108()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000423F2C) ----------------------------------------------------
int goodG2B1_93()
{
  return printUnsignedLine(3u);
}

//----- (0000000000423F58) ----------------------------------------------------
int goodG2B2_93()
{
  return printUnsignedLine(3u);
}

//----- (0000000000423F84) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (0000000000423FB2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_68_badData = v1;
  return CWE190_Integer_Overflow__int_fscanf_preinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9568: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_68_badData;

//----- (0000000000423FF3) ----------------------------------------------------
int goodG2B_146()
{
  CWE190_Integer_Overflow__int_fscanf_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fscanf_preinc_68b_goodG2BSink();
}
// 6A956C: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_68_goodG2BData;

//----- (000000000042401E) ----------------------------------------------------
int goodB2G_131()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int_fscanf_preinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9570: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_68_goodB2GData;

//----- (000000000042405F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_68_good()
{
  goodG2B_146();
  return goodB2G_131();
}

//----- (0000000000424079) ----------------------------------------------------
int __fastcall badSink_26(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042409A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_44_bad()
{
  return badSink_26(-1);
}

//----- (00000000004240C5) ----------------------------------------------------
int __fastcall goodG2BSink_26(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004240E6) ----------------------------------------------------
int goodG2B_147()
{
  return goodG2BSink_26(2);
}

//----- (0000000000424111) ----------------------------------------------------
int __fastcall goodB2GSink_19(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000424144) ----------------------------------------------------
int goodB2G_132()
{
  return goodB2GSink_19(-1);
}

//----- (000000000042416F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_44_good()
{
  goodG2B_147();
  return goodB2G_132();
}

//----- (0000000000424189) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_01_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (00000000004241C2) ----------------------------------------------------
int goodG2B_148()
{
  return printLongLongLine(3LL);
}

//----- (00000000004241F5) ----------------------------------------------------
int goodB2G_133()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042424A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_01_good()
{
  goodG2B_148();
  return goodB2G_133();
}

//----- (0000000000424264) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_52_bad()
{
  return CWE190_Integer_Overflow__short_max_preinc_52b_badSink(0x7FFF);
}

//----- (0000000000424285) ----------------------------------------------------
int goodG2B_149()
{
  return CWE190_Integer_Overflow__short_max_preinc_52b_goodG2BSink(2);
}

//----- (00000000004242A6) ----------------------------------------------------
int goodB2G_134()
{
  return CWE190_Integer_Overflow__short_max_preinc_52b_goodB2GSink(0x7FFF);
}

//----- (00000000004242C7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_52_good()
{
  goodG2B_149();
  return goodB2G_134();
}

//----- (00000000004242E1) ----------------------------------------------------
void CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = ++v8;
    printIntLine(v8);
  }
}
// 4242E1: using guessed type char buf[16];

//----- (0000000000424446) ----------------------------------------------------
void goodB2G_135()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = ++v8;
      printIntLine(v8);
    }
  }
}
// 424446: using guessed type char buf[16];

//----- (00000000004245C0) ----------------------------------------------------
int goodG2B_150()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000424612) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_17_good()
{
  goodB2G_135();
  return goodG2B_150();
}

//----- (000000000042462C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_badSink(a1);
}

//----- (0000000000424643) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_goodG2BSink(a1);
}

//----- (000000000042465A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000424671) ----------------------------------------------------
void CWE190_Integer_Overflow__int64_t_rand_preinc_17_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
    printLongLongLine(++v9);
}

//----- (0000000000424768) ----------------------------------------------------
void goodB2G_136()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v9 == 0x7FFFFFFFFFFFFFFFLL )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printLongLongLine(++v9);
  }
}

//----- (000000000042487B) ----------------------------------------------------
int goodG2B_151()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (00000000004248D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_17_good()
{
  goodB2G_136();
  return goodG2B_151();
}

//----- (00000000004248EE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_16_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000042491E) ----------------------------------------------------
int goodB2G_137()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000424962) ----------------------------------------------------
int goodG2B_152()
{
  return printIntLine(3u);
}

//----- (0000000000424992) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_16_good()
{
  goodB2G_137();
  return goodG2B_152();
}

//----- (00000000004249AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004249CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004249EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000424A24) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000424A45) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000424A66) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000424A9C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424AD4) ----------------------------------------------------
int goodG2B_153()
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_53b_goodG2BSink(2);
}

//----- (0000000000424AF6) ----------------------------------------------------
int goodB2G_138()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424B2E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_53_good()
{
  goodG2B_153();
  return goodB2G_138();
}

//----- (0000000000424B48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_15_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000424B76) ----------------------------------------------------
int goodB2G1_109()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000424BB9) ----------------------------------------------------
int goodB2G2_109()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000424BFC) ----------------------------------------------------
int goodG2B1_94()
{
  return printIntLine(3u);
}

//----- (0000000000424C2A) ----------------------------------------------------
int goodG2B2_94()
{
  return printIntLine(3u);
}

//----- (0000000000424C58) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_15_good()
{
  goodB2G1_109();
  goodB2G2_109();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (0000000000424C86) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_badSink(a1);
}

//----- (0000000000424C9D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_goodG2BSink(a1);
}

//----- (0000000000424CB4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_goodB2GSink(a1);
}

//----- (0000000000424CCB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_04_bad()
{
  return printHexCharLine(128);
}

//----- (0000000000424D05) ----------------------------------------------------
int goodB2G1_110()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000424D5D) ----------------------------------------------------
int goodB2G2_110()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000424DA9) ----------------------------------------------------
int goodG2B1_95()
{
  return printHexCharLine(3);
}

//----- (0000000000424DEF) ----------------------------------------------------
int goodG2B2_95()
{
  return printHexCharLine(3);
}

//----- (0000000000424E29) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_04_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (0000000000424E57) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000424E8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000424EC3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (0000000000424F0B) ----------------------------------------------------
__int64 badSource_3()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000424F1E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_3();
  return printIntLine(v0 + 1);
}

//----- (0000000000424F50) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 2LL;
}

//----- (0000000000424F63) ----------------------------------------------------
int goodG2B_154()
{
  int v0; // eax

  v0 = goodG2BSource_3();
  return printIntLine(v0 + 1);
}

//----- (0000000000424F95) ----------------------------------------------------
__int64 goodB2GSource_3()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000424FA8) ----------------------------------------------------
int goodB2G_139()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_3();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000424FEF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_42_good()
{
  goodB2G_139();
  return goodG2B_154();
}

//----- (0000000000425009) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000425056) ----------------------------------------------------
int goodB2G1_111()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004250CB) ----------------------------------------------------
int goodB2G2_111()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000425134) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000425187) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004251CE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_09_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (00000000004251FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000425235) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000042526E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (00000000004252BB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004252E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000042530B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000425347) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_51_bad()
{
  return CWE190_Integer_Overflow__short_max_preinc_51b_badSink(0x7FFF);
}

//----- (0000000000425368) ----------------------------------------------------
int goodG2B_155()
{
  return CWE190_Integer_Overflow__short_max_preinc_51b_goodG2BSink(2);
}

//----- (0000000000425389) ----------------------------------------------------
int goodB2G_140()
{
  return CWE190_Integer_Overflow__short_max_preinc_51b_goodB2GSink(0x7FFF);
}

//----- (00000000004253AA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_51_good()
{
  goodG2B_155();
  return goodB2G_140();
}

//----- (00000000004253C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_15_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000425438) ----------------------------------------------------
int goodB2G1_112()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (00000000004254C1) ----------------------------------------------------
int goodB2G2_112()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042554A) ----------------------------------------------------
int goodG2B1_97()
{
  return printIntLine(3u);
}

//----- (0000000000425578) ----------------------------------------------------
int goodG2B2_97()
{
  return printIntLine(3u);
}

//----- (00000000004255A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_15_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (00000000004255D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004255F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000425616) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000425649) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000425677) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004256A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004256E7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_badSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_max_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__char_max_preinc_22_badGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9340: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_badGlobal;

//----- (0000000000425716) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Sink(char a1)
{
  if ( CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6A9344: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global;

//----- (0000000000425763) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6A9348: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global;

//----- (00000000004257A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A934C: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal;

//----- (00000000004257D3) ----------------------------------------------------
__int64 __fastcall badSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000425830) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_4(0);
  return printIntLine(v0 + 1);
}

//----- (0000000000425862) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 2LL;
}

//----- (0000000000425875) ----------------------------------------------------
int goodG2B_156()
{
  int v0; // eax

  v0 = goodG2BSource_4();
  return printIntLine(v0 + 1);
}

//----- (00000000004258A7) ----------------------------------------------------
__int64 __fastcall goodB2GSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000425904) ----------------------------------------------------
int goodB2G_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_4(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042594B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_42_good()
{
  goodB2G_141();
  return goodG2B_156();
}

//----- (0000000000425965) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 127;
  v2 = 127;
  return CWE190_Integer_Overflow__char_max_preinc_66b_badSink((__int64)&v1);
}

//----- (000000000042598A) ----------------------------------------------------
int goodG2B_157()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__char_max_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004259AF) ----------------------------------------------------
int goodB2G_142()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 127;
  v2 = 127;
  return CWE190_Integer_Overflow__char_max_preinc_66b_goodB2GSink((__int64)&v1);
}

//----- (00000000004259D4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_66_good()
{
  goodG2B_157();
  return goodB2G_142();
}

//----- (00000000004259EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_52c_badSink(a1);
}

//----- (0000000000425A05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000425A1C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000425A33) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000425A6B) ----------------------------------------------------
int goodG2B_158()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_goodG2BSink(2);
}

//----- (0000000000425A8D) ----------------------------------------------------
int goodB2G_143()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000425AC5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54_good()
{
  goodG2B_158();
  return goodB2G_143();
}

//----- (0000000000425ADF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v6 + 1);
  return result;
}

//----- (0000000000425B6F) ----------------------------------------------------
int goodB2G1_113()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (0000000000425C1D) ----------------------------------------------------
int goodB2G2_113()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}

//----- (0000000000425CBF) ----------------------------------------------------
int goodG2B1_98()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000425D13) ----------------------------------------------------
int goodG2B2_98()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000425D5B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_11_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (0000000000425D89) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000425DFD) ----------------------------------------------------
int goodB2G1_114()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000425E83) ----------------------------------------------------
int goodB2G2_114()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000425F09) ----------------------------------------------------
int goodG2B1_99()
{
  return printUnsignedLine(3u);
}

//----- (0000000000425F35) ----------------------------------------------------
int goodG2B2_99()
{
  return printUnsignedLine(3u);
}

//----- (0000000000425F61) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_02_good()
{
  goodB2G1_114();
  goodB2G2_114();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (0000000000425F8F) ----------------------------------------------------
int badSink_27()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_preinc_45_badData + 1));
}
// 6A9334: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_45_badData;

//----- (0000000000425FBC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_45_bad()
{
  CWE190_Integer_Overflow__short_max_preinc_45_badData = 0x7FFF;
  return badSink_27();
}
// 6A9334: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_45_badData;

//----- (0000000000425FE7) ----------------------------------------------------
int goodG2BSink_27()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_preinc_45_goodG2BData + 1));
}
// 6A9336: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_45_goodG2BData;

//----- (0000000000426014) ----------------------------------------------------
int goodG2B_159()
{
  CWE190_Integer_Overflow__short_max_preinc_45_goodG2BData = 2;
  return goodG2BSink_27();
}
// 6A9336: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_45_goodG2BData;

//----- (000000000042603F) ----------------------------------------------------
int goodB2GSink_20()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_max_preinc_45_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_max_preinc_45_goodB2GData + 1));
  return result;
}
// 6A9338: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_45_goodB2GData;

//----- (0000000000426080) ----------------------------------------------------
int goodB2G_144()
{
  CWE190_Integer_Overflow__short_max_preinc_45_goodB2GData = 0x7FFF;
  return goodB2GSink_20();
}
// 6A9338: using guessed type __int16 CWE190_Integer_Overflow__short_max_preinc_45_goodB2GData;

//----- (00000000004260AB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_45_good()
{
  goodG2B_159();
  return goodB2G_144();
}

//----- (00000000004260C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426100) ----------------------------------------------------
int goodG2B_160()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000426126) ----------------------------------------------------
int goodB2G_145()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426161) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_63_good()
{
  goodG2B_160();
  return goodB2G_145();
}

//----- (000000000042617B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_6 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A915C: using guessed type int staticTrue_6;

//----- (00000000004261BB) ----------------------------------------------------
int goodB2G1_115()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_6 )
    v1 = 0x7FFFFFFF;
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6A915C: using guessed type int staticTrue_6;
// 6A933C: using guessed type int staticFalse_6;

//----- (000000000042621C) ----------------------------------------------------
int goodB2G2_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_6 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6A915C: using guessed type int staticTrue_6;

//----- (0000000000426271) ----------------------------------------------------
int goodG2B1_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A915C: using guessed type int staticTrue_6;
// 6A933C: using guessed type int staticFalse_6;

//----- (00000000004262BD) ----------------------------------------------------
int goodG2B2_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_6 )
    v1 = 2;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A915C: using guessed type int staticTrue_6;

//----- (00000000004262FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_05_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (000000000042632B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_64_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_64b_badSink(&v2);
}

//----- (0000000000426376) ----------------------------------------------------
int goodG2B_161()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_rand_preinc_64b_goodG2BSink(&v1);
}

//----- (0000000000426394) ----------------------------------------------------
int goodB2G_146()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_64b_goodB2GSink(&v2);
}

//----- (00000000004263DF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_64_good()
{
  goodG2B_161();
  return goodB2G_146();
}

//----- (00000000004263F9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_06_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000042643B) ----------------------------------------------------
int goodB2G1_116()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042649D) ----------------------------------------------------
int goodB2G2_116()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004264F3) ----------------------------------------------------
int goodG2B1_101()
{
  return printIntLine(3u);
}

//----- (0000000000426541) ----------------------------------------------------
int goodG2B2_101()
{
  return printIntLine(3u);
}

//----- (0000000000426583) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_06_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (00000000004265B1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__int_rand_preinc_65b_badSink)(v2);
}

//----- (0000000000426624) ----------------------------------------------------
int goodG2B_162()
{
  return CWE190_Integer_Overflow__int_rand_preinc_65b_goodG2BSink(2);
}

//----- (000000000042664F) ----------------------------------------------------
__int64 goodB2G_147()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__int_rand_preinc_65b_goodB2GSink)(v2);
}

//----- (00000000004266C2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_65_good()
{
  goodG2B_162();
  return goodB2G_147();
}

//----- (00000000004266DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042670F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000426742) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042678A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_preinc_61b_badSource();
  return printLongLongLine(v0 + 1);
}

//----- (00000000004267C5) ----------------------------------------------------
int goodG2B_163()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_preinc_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000426800) ----------------------------------------------------
int goodB2G_148()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_rand_preinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000426857) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_61_good()
{
  goodG2B_163();
  return goodB2G_148();
}

//----- (0000000000426871) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (00000000004268F9) ----------------------------------------------------
int goodB2G1_117()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042699F) ----------------------------------------------------
int goodB2G2_117()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000426A39) ----------------------------------------------------
int goodG2B1_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000426A85) ----------------------------------------------------
int goodG2B2_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000426AC5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_good()
{
  goodB2G1_117();
  goodB2G2_117();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (0000000000426AF3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000426B1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000426B4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000426B8C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_67_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426BCC) ----------------------------------------------------
int goodG2B_164()
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_67b_goodG2BSink(2);
}

//----- (0000000000426BF5) ----------------------------------------------------
int goodB2G_149()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426C35) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_67_good()
{
  goodG2B_164();
  return goodB2G_149();
}

//----- (0000000000426C4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_07_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6A9160: using guessed type int staticFive_6;

//----- (0000000000426D33) ----------------------------------------------------
int goodB2G1_118()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6A9160: using guessed type int staticFive_6;

//----- (0000000000426E3F) ----------------------------------------------------
int goodB2G2_118()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6A9160: using guessed type int staticFive_6;

//----- (0000000000426F3F) ----------------------------------------------------
int goodG2B1_103()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A9160: using guessed type int staticFive_6;

//----- (0000000000426F94) ----------------------------------------------------
int goodG2B2_103()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 2LL;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A9160: using guessed type int staticFive_6;

//----- (0000000000426FDD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_07_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (000000000042700B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_22_bad()
{
  CWE190_Integer_Overflow__char_max_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__char_max_preinc_22_badSink(127);
}
// 6A9340: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_badGlobal;

//----- (0000000000427032) ----------------------------------------------------
int goodB2G1_119()
{
  CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Sink(127);
}
// 6A9344: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global;

//----- (0000000000427059) ----------------------------------------------------
int goodB2G2_119()
{
  CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Sink(127);
}
// 6A9348: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global;

//----- (0000000000427080) ----------------------------------------------------
int goodG2B_165()
{
  CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__char_max_preinc_22_goodG2BSink(2);
}
// 6A934C: using guessed type int CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal;

//----- (00000000004270A7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_22_good()
{
  goodB2G1_119();
  goodB2G2_119();
  return goodG2B_165();
}

//----- (00000000004270CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427103) ----------------------------------------------------
int goodG2B_166()
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_52b_goodG2BSink(2);
}

//----- (0000000000427125) ----------------------------------------------------
int goodB2G_150()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042715D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_52_good()
{
  goodG2B_166();
  return goodB2G_150();
}

//----- (0000000000427177) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (00000000004271EB) ----------------------------------------------------
int goodG2B_167()
{
  return printUnsignedLine(3u);
}

//----- (0000000000427217) ----------------------------------------------------
int goodB2G_151()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000042729D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_01_good()
{
  goodG2B_167();
  return goodB2G_151();
}

//----- (00000000004272B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004272D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004272F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042732F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54e_badSink(a1);
}

//----- (000000000042734A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000427365) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000427380) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004273C9) ----------------------------------------------------
int goodB2G_152()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427428) ----------------------------------------------------
int goodG2B_168()
{
  return printIntLine(3u);
}

//----- (0000000000427456) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_16_good()
{
  goodB2G_152();
  return goodG2B_168();
}

//----- (0000000000427470) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_64b_badSink(&v5);
}
// 427470: using guessed type char buf[16];

//----- (000000000042755A) ----------------------------------------------------
int goodG2B_169()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000042757E) ----------------------------------------------------
int goodB2G_153()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_64b_goodB2GSink(&v5);
}
// 42757E: using guessed type char buf[16];

//----- (0000000000427668) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_64_good()
{
  goodG2B_169();
  return goodB2G_153();
}

//----- (0000000000427682) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (00000000004276AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (00000000004276DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000042771B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_13_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 127;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000427759) ----------------------------------------------------
int goodB2G1_120()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 127;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004277B5) ----------------------------------------------------
int goodB2G2_120()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 127;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000427805) ----------------------------------------------------
int goodG2B1_104()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042784F) ----------------------------------------------------
int goodG2B2_104()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042788D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_13_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (00000000004278BB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_preinc_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_preinc_65b_badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042792C) ----------------------------------------------------
int goodG2B_170()
{
  return CWE190_Integer_Overflow__int_fgets_preinc_65b_goodG2BSink(2);
}

//----- (0000000000427957) ----------------------------------------------------
__int64 goodB2G_154()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_preinc_65b_goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (00000000004279C8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_preinc_65_good()
{
  goodG2B_170();
  return goodB2G_154();
}

//----- (00000000004279E2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_66b_badSink((__int64)&v1);
}

//----- (0000000000427A0C) ----------------------------------------------------
int goodG2B_171()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_max_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000427A36) ----------------------------------------------------
int goodB2G_155()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000427A60) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_66_good()
{
  goodG2B_171();
  return goodB2G_155();
}

//----- (0000000000427A7A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427B02) ----------------------------------------------------
int goodB2G1_121()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000427BA8) ----------------------------------------------------
int goodB2G2_121()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427C42) ----------------------------------------------------
int goodG2B1_105()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000427C8E) ----------------------------------------------------
int goodG2B2_105()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427CCE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_good()
{
  goodB2G1_121();
  goodB2G2_121();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (0000000000427CFC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000427D23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000427D4A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000427D8D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9164: using guessed type int staticTrue_7;

//----- (0000000000427DF0) ----------------------------------------------------
int goodB2G1_122()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9164: using guessed type int staticTrue_7;
// 6A9350: using guessed type int staticFalse_7;

//----- (0000000000427E7E) ----------------------------------------------------
int goodB2G2_122()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9164: using guessed type int staticTrue_7;

//----- (0000000000427F00) ----------------------------------------------------
int goodG2B1_106()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A9164: using guessed type int staticTrue_7;
// 6A9350: using guessed type int staticFalse_7;

//----- (0000000000427F53) ----------------------------------------------------
int goodG2B2_106()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_7 )
    v1 = 2LL;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A9164: using guessed type int staticTrue_7;

//----- (0000000000427F9A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_05_good()
{
  goodB2G1_122();
  goodB2G2_122();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (0000000000427FC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_68_badData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_68b_badSink();
}
// 6A9574: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_68_badData;
// 427FC8: using guessed type char buf[16];

//----- (00000000004280FF) ----------------------------------------------------
int goodG2B_172()
{
  CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_68b_goodG2BSink();
}
// 6A9578: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodG2BData;

//----- (000000000042812A) ----------------------------------------------------
int goodB2G_156()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodB2GData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_68b_goodB2GSink();
}
// 6A957C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_68_goodB2GData;
// 42812A: using guessed type char buf[16];

//----- (0000000000428261) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_68_good()
{
  goodG2B_172();
  return goodB2G_156();
}

//----- (000000000042827B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004282A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004282CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000428307) ----------------------------------------------------
int __fastcall badSink_28(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042832E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return badSink_28(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428369) ----------------------------------------------------
int __fastcall goodG2BSink_28(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000428390) ----------------------------------------------------
int goodG2B_173()
{
  return goodG2BSink_28(2LL);
}

//----- (00000000004283B6) ----------------------------------------------------
int __fastcall goodB2GSink_21(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004283F9) ----------------------------------------------------
int goodB2G_157()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return goodB2GSink_21(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428434) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_41_good()
{
  goodB2G_157();
  return goodG2B_173();
}

//----- (000000000042844E) ----------------------------------------------------
int __fastcall badSink_29(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000428473) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_44_bad()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = badSink_29;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004284B5) ----------------------------------------------------
int __fastcall goodG2BSink_29(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004284DA) ----------------------------------------------------
int goodG2B_174()
{
  return goodG2BSink_29(2);
}

//----- (0000000000428500) ----------------------------------------------------
int __fastcall goodB2GSink_22(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000428537) ----------------------------------------------------
__int64 goodB2G_158()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_22;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428579) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_44_good()
{
  goodG2B_174();
  return goodB2G_158();
}

//----- (0000000000428593) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_badData + 1);
}
// 6A9598: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_badData;

//----- (00000000004285BA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodG2BData + 1);
}
// 6A959C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodG2BData;

//----- (00000000004285E1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95A0: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodB2GData;

//----- (000000000042861A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428652) ----------------------------------------------------
int goodG2B_175()
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_51b_goodG2BSink(2);
}

//----- (0000000000428674) ----------------------------------------------------
int goodB2G_159()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004286AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_51_good()
{
  goodG2B_175();
  return goodB2G_159();
}

//----- (00000000004286C6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042871E) ----------------------------------------------------
int goodG2B_176()
{
  return printLongLongLine(3LL);
}

//----- (0000000000428761) ----------------------------------------------------
int goodB2G_160()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1;
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004287D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_good()
{
  goodG2B_176();
  return goodB2G_160();
}

//----- (00000000004287EF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_preinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9364: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_badGlobal;

//----- (000000000042881A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A9368: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Global;

//----- (0000000000428866) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A936C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Global;

//----- (00000000004288A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9370: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BGlobal;

//----- (00000000004288D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_preinc_66b_badSink((__int64)&v4);
}

//----- (0000000000428941) ----------------------------------------------------
int goodG2B_177()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fgets_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042896B) ----------------------------------------------------
int goodB2G_161()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_preinc_66b_goodB2GSink((__int64)&v4);
}

//----- (00000000004289DB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_66_good()
{
  goodG2B_177();
  return goodB2G_161();
}

//----- (00000000004289F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000428A28) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000428A5B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (0000000000428AAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54e_badSink(a1);
}

//----- (0000000000428AC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000428AE0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000428AFB) ----------------------------------------------------
int __fastcall badSink_30(char a1)
{
  int result; // eax

  result = badStatic_6;
  if ( badStatic_6 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9354: using guessed type int badStatic_6;

//----- (0000000000428B2A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_21_bad()
{
  badStatic_6 = 1;
  return badSink_30(127);
}
// 6A9354: using guessed type int badStatic_6;

//----- (0000000000428B51) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(char a1)
{
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6A9358: using guessed type int goodB2G1Static_6;

//----- (0000000000428B9E) ----------------------------------------------------
int goodB2G1_123()
{
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(127);
}
// 6A9358: using guessed type int goodB2G1Static_6;

//----- (0000000000428BC5) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(char a1)
{
  int result; // eax

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6A935C: using guessed type int goodB2G2Static_6;

//----- (0000000000428C06) ----------------------------------------------------
int goodB2G2_123()
{
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(127);
}
// 6A935C: using guessed type int goodB2G2Static_6;

//----- (0000000000428C2D) ----------------------------------------------------
int __fastcall goodG2BSink_30(char a1)
{
  int result; // eax

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9360: using guessed type int goodG2BStatic_6;

//----- (0000000000428C5C) ----------------------------------------------------
int goodG2B_178()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_30(2);
}
// 6A9360: using guessed type int goodG2BStatic_6;

//----- (0000000000428C83) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_21_good()
{
  goodB2G1_123();
  goodB2G2_123();
  return goodG2B_178();
}

//----- (0000000000428CA7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_03_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000428CCF) ----------------------------------------------------
int goodB2G1_124()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000428D09) ----------------------------------------------------
int goodB2G2_124()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000428D43) ----------------------------------------------------
int goodG2B1_107()
{
  return printHexCharLine(3);
}

//----- (0000000000428D6B) ----------------------------------------------------
int goodG2B2_107()
{
  return printHexCharLine(3);
}

//----- (0000000000428D93) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_03_good()
{
  goodB2G1_124();
  goodB2G2_124();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (0000000000428DC1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_22_badSink(v8);
}
// 6A9364: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_badGlobal;
// 428DC1: using guessed type char buf[16];

//----- (0000000000428EF9) ----------------------------------------------------
int goodB2G1_125()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Sink(v8);
}
// 6A9368: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G1Global;
// 428EF9: using guessed type char buf[16];

//----- (0000000000429031) ----------------------------------------------------
int goodB2G2_125()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Sink(v8);
}
// 6A936C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodB2G2Global;
// 429031: using guessed type char buf[16];

//----- (0000000000429169) ----------------------------------------------------
int goodG2B_179()
{
  CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BSink(2);
}
// 6A9370: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_22_goodG2BGlobal;

//----- (0000000000429195) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_22_good()
{
  goodB2G1_125();
  goodB2G2_125();
  return goodG2B_179();
}

//----- (00000000004291B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_65_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_65b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004291EE) ----------------------------------------------------
int goodG2B_180()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_65b_goodG2BSink(2LL);
}

//----- (000000000042921D) ----------------------------------------------------
int goodB2G_162()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_65b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000429252) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_65_good()
{
  goodG2B_180();
  return goodB2G_162();
}

//----- (000000000042926C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_badSink(a1);
}

//----- (0000000000429283) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_goodG2BSink(a1);
}

//----- (000000000042929A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53c_goodB2GSink(a1);
}

//----- (00000000004292B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_badData = v1;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9588: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_badData;

//----- (00000000004292F5) ----------------------------------------------------
int goodG2B_181()
{
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_goodG2BSink();
}
// 6A9590: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodG2BData;

//----- (0000000000429324) ----------------------------------------------------
int goodB2G_163()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9580: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodB2GData;

//----- (0000000000429368) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_good()
{
  goodG2B_181();
  return goodB2G_163();
}

//----- (0000000000429382) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_32_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Eh] [rbp-22h]
  __int16 *v6; // [rsp+10h] [rbp-20h]
  __int16 *v7; // [rsp+18h] [rbp-18h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v5 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v5 = v1;
  *v7 = v1;
  return printIntLine((__int16)(*v6 + 1));
}

//----- (0000000000429421) ----------------------------------------------------
int goodG2B_182()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (0000000000429480) ----------------------------------------------------
int goodB2G_164()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Ch] [rbp-24h]
  __int16 v6; // [rsp+Eh] [rbp-22h]
  __int16 *v7; // [rsp+10h] [rbp-20h]
  __int16 *v8; // [rsp+18h] [rbp-18h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  *v8 = v1;
  v5 = *v7;
  if ( v5 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v5 + 1));
  return result;
}

//----- (0000000000429533) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_32_good()
{
  goodG2B_182();
  return goodB2G_164();
}

//----- (000000000042954D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042956E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042958F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004295C2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (00000000004295F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000042961E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (000000000042965E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_badData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9598: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_badData;

//----- (000000000042969F) ----------------------------------------------------
int goodG2B_183()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_goodG2BSink();
}
// 6A959C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodG2BData;

//----- (00000000004296CA) ----------------------------------------------------
int goodB2G_165()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A95A0: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_goodB2GData;

//----- (000000000042970B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_68_good()
{
  goodG2B_183();
  return goodB2G_165();
}

//----- (0000000000429725) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429746) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429767) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042979D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_12_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 127;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v1 + 1);
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}

//----- (0000000000429811) ----------------------------------------------------
int goodB2G_166()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429897) ----------------------------------------------------
int goodG2B_184()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(3);
}

//----- (00000000004298F9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_12_good()
{
  goodB2G_166();
  return goodG2B_184();
}

//----- (0000000000429913) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429934) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429955) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042998B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_11_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v10 + 1);
  return result;
}

//----- (0000000000429A75) ----------------------------------------------------
int goodB2G1_126()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (0000000000429B87) ----------------------------------------------------
int goodB2G2_126()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}

//----- (0000000000429C8D) ----------------------------------------------------
int goodG2B1_108()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000429CE8) ----------------------------------------------------
int goodG2B2_108()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000429D37) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_11_good()
{
  goodB2G1_126();
  goodB2G2_126();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (0000000000429D65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429D8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429DB3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000429DEF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429E27) ----------------------------------------------------
int goodG2B_185()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_goodG2BSink(2);
}

//----- (0000000000429E49) ----------------------------------------------------
int goodB2G_167()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429E81) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53_good()
{
  goodG2B_185();
  return goodB2G_167();
}

//----- (0000000000429E9B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_15_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000429EC9) ----------------------------------------------------
int goodB2G1_127()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429F09) ----------------------------------------------------
int goodB2G2_127()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429F49) ----------------------------------------------------
int goodG2B1_109()
{
  return printUnsignedLine(3u);
}

//----- (0000000000429F77) ----------------------------------------------------
int goodG2B2_109()
{
  return printUnsignedLine(3u);
}

//----- (0000000000429FA5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_15_good()
{
  goodB2G1_127();
  goodB2G2_127();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (0000000000429FD3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_04_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000042A053) ----------------------------------------------------
int goodB2G1_128()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042A0F3) ----------------------------------------------------
int goodB2G2_128()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042A187) ----------------------------------------------------
int goodG2B1_110()
{
  return printIntLine(3u);
}

//----- (000000000042A1D3) ----------------------------------------------------
int goodG2B2_110()
{
  return printIntLine(3u);
}

//----- (000000000042A213) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_04_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (000000000042A241) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_31_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000042A2BF) ----------------------------------------------------
int goodG2B_186()
{
  return printIntLine(3u);
}

//----- (000000000042A2FD) ----------------------------------------------------
int goodB2G_168()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042A38F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_31_good()
{
  goodG2B_186();
  return goodB2G_168();
}

//----- (000000000042A3A9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_18_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A3F6) ----------------------------------------------------
int goodB2G_169()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A459) ----------------------------------------------------
int goodG2B_187()
{
  return printIntLine(3u);
}

//----- (000000000042A489) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_18_good()
{
  goodB2G_169();
  return goodG2B_187();
}

//----- (000000000042A4A3) ----------------------------------------------------
__int64 badSource_5()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000042A4B6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_5();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042A4E8) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 2LL;
}

//----- (000000000042A4FB) ----------------------------------------------------
int goodG2B_188()
{
  int v0; // eax

  v0 = goodG2BSource_5();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042A52D) ----------------------------------------------------
__int64 goodB2GSource_5()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000042A540) ----------------------------------------------------
int goodB2G_170()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_5();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042A584) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_42_good()
{
  goodB2G_170();
  return goodG2B_188();
}

//----- (000000000042A59E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042A5C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042A5F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042A634) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_11_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 127;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042A678) ----------------------------------------------------
int goodB2G1_129()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 127;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}

//----- (000000000042A6DA) ----------------------------------------------------
int goodB2G2_129()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 127;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}

//----- (000000000042A730) ----------------------------------------------------
int goodG2B1_111()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042A780) ----------------------------------------------------
int goodG2B2_111()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042A7C4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_11_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (000000000042A7F2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_02_bad()
{
  return printHexCharLine(-128);
}

//----- (000000000042A81A) ----------------------------------------------------
int goodB2G1_130()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042A854) ----------------------------------------------------
int goodB2G2_130()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042A88E) ----------------------------------------------------
int goodG2B1_112()
{
  return printHexCharLine(3);
}

//----- (000000000042A8B6) ----------------------------------------------------
int goodG2B2_112()
{
  return printHexCharLine(3);
}

//----- (000000000042A8DE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_02_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (000000000042A90C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_badSink(a1);
}

//----- (000000000042A923) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_goodG2BSink(a1);
}

//----- (000000000042A93A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_goodB2GSink(a1);
}

//----- (000000000042A951) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000042A9D1) ----------------------------------------------------
int goodG2B_189()
{
  return printIntLine(3u);
}

//----- (000000000042AA09) ----------------------------------------------------
int goodB2G_171()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000042AA9E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_34_good()
{
  goodG2B_189();
  return goodB2G_171();
}

//----- (000000000042AAB8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_preinc_68_badData + 1);
}
// 6A95E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_badData;

//----- (000000000042AAE6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_preinc_68_goodG2BData + 1);
}
// 6A95D8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_goodG2BData;

//----- (000000000042AB14) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_max_preinc_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_max_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95D0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_goodB2GData;

//----- (000000000042AB5E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_67b_badSink(v9);
}
// 42AB5E: using guessed type char buf[16];

//----- (000000000042AC92) ----------------------------------------------------
int goodG2B_190()
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_67b_goodG2BSink(2);
}

//----- (000000000042ACBA) ----------------------------------------------------
int goodB2G_172()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_67b_goodB2GSink(v9);
}
// 42ACBA: using guessed type char buf[16];

//----- (000000000042ADEE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_67_good()
{
  goodG2B_190();
  return goodB2G_172();
}

//----- (000000000042AE08) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9388: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal;

//----- (000000000042AE3A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6A938C: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Global;

//----- (000000000042AE8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6A9390: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global;

//----- (000000000042AED2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9394: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BGlobal;

//----- (000000000042AF04) ----------------------------------------------------
int __fastcall badSink_31(char a1)
{
  int result; // eax

  result = badStatic_7;
  if ( badStatic_7 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9374: using guessed type int badStatic_7;

//----- (000000000042AF33) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_21_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  badStatic_7 = 1;
  return badSink_31(v0);
}
// 6A9374: using guessed type int badStatic_7;

//----- (000000000042AF87) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(char a1)
{
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6A9378: using guessed type int goodB2G1Static_7;

//----- (000000000042AFD4) ----------------------------------------------------
int goodB2G1_131()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(v0);
}
// 6A9378: using guessed type int goodB2G1Static_7;

//----- (000000000042B028) ----------------------------------------------------
int __fastcall goodB2G2Sink_7(char a1)
{
  int result; // eax

  result = goodB2G2Static_7;
  if ( goodB2G2Static_7 )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6A937C: using guessed type int goodB2G2Static_7;

//----- (000000000042B069) ----------------------------------------------------
int goodB2G2_131()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(v0);
}
// 6A937C: using guessed type int goodB2G2Static_7;

//----- (000000000042B0BD) ----------------------------------------------------
int __fastcall goodG2BSink_31(char a1)
{
  int result; // eax

  result = goodG2BStatic_7;
  if ( goodG2BStatic_7 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A9380: using guessed type int goodG2BStatic_7;

//----- (000000000042B0EC) ----------------------------------------------------
int goodG2B_191()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_31(2);
}
// 6A9380: using guessed type int goodG2BStatic_7;

//----- (000000000042B113) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_21_good()
{
  goodB2G1_131();
  goodB2G2_131();
  return goodG2B_191();
}

//----- (000000000042B137) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_10_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 127;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042B173) ----------------------------------------------------
int goodB2G1_132()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 127;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042B1CD) ----------------------------------------------------
int goodB2G2_132()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 127;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042B21B) ----------------------------------------------------
int goodG2B1_113()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042B263) ----------------------------------------------------
int goodG2B2_113()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042B29F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_10_good()
{
  goodB2G1_132();
  goodB2G2_132();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (000000000042B2CD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B314) ----------------------------------------------------
int goodB2G1_133()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B371) ----------------------------------------------------
int goodB2G2_133()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B3CE) ----------------------------------------------------
int goodG2B1_114()
{
  return printIntLine(3u);
}

//----- (000000000042B3FA) ----------------------------------------------------
int goodG2B2_114()
{
  return printIntLine(3u);
}

//----- (000000000042B426) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_03_good()
{
  goodB2G1_133();
  goodB2G2_133();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (000000000042B454) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = -1;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9168: using guessed type int staticTrue_8;

//----- (000000000042B494) ----------------------------------------------------
int goodB2G1_134()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = -1;
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6A9168: using guessed type int staticTrue_8;
// 6A9384: using guessed type int staticFalse_8;

//----- (000000000042B4F2) ----------------------------------------------------
int goodB2G2_134()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = -1;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6A9168: using guessed type int staticTrue_8;

//----- (000000000042B544) ----------------------------------------------------
int goodG2B1_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9168: using guessed type int staticTrue_8;
// 6A9384: using guessed type int staticFalse_8;

//----- (000000000042B590) ----------------------------------------------------
int goodG2B2_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9168: using guessed type int staticTrue_8;

//----- (000000000042B5D0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good()
{
  goodB2G1_134();
  goodB2G2_134();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (000000000042B5FE) ----------------------------------------------------
int __fastcall badSink_32(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042B61F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_41_bad()
{
  return badSink_32(-1);
}

//----- (000000000042B641) ----------------------------------------------------
int __fastcall goodG2BSink_32(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042B662) ----------------------------------------------------
int goodG2B_192()
{
  return goodG2BSink_32(2);
}

//----- (000000000042B684) ----------------------------------------------------
int __fastcall goodB2GSink_23(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042B6B7) ----------------------------------------------------
int goodB2G_173()
{
  return goodB2GSink_23(-1);
}

//----- (000000000042B6D9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_41_good()
{
  goodB2G_173();
  return goodG2B_192();
}

//----- (000000000042B6F3) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_badSink)(v2);
}

//----- (000000000042B766) ----------------------------------------------------
int goodG2B_193()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_goodG2BSink(2);
}

//----- (000000000042B791) ----------------------------------------------------
__int64 goodB2G_174()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_preinc_65b_goodB2GSink)(v2);
}

//----- (000000000042B804) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_65_good()
{
  goodG2B_193();
  return goodB2G_174();
}

//----- (000000000042B81E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_63b_badSink(&v5);
}
// 42B81E: using guessed type char buf[16];

//----- (000000000042B908) ----------------------------------------------------
int goodG2B_194()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000042B92C) ----------------------------------------------------
int goodB2G_175()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_63b_goodB2GSink(&v5);
}
// 42B92C: using guessed type char buf[16];

//----- (000000000042BA16) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_63_good()
{
  goodG2B_194();
  return goodB2G_175();
}

//----- (000000000042BA30) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_01_bad()
{
  return printHexCharLine(-128);
}

//----- (000000000042BA58) ----------------------------------------------------
int goodG2B_195()
{
  return printHexCharLine(3);
}

//----- (000000000042BA80) ----------------------------------------------------
int goodB2G_176()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042BABA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_01_good()
{
  goodG2B_195();
  return goodB2G_176();
}

//----- (000000000042BAD4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_68b_badSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_preinc_68_badData + 1);
}
// 6A95F6: using guessed type char CWE190_Integer_Overflow__char_max_preinc_68_badData;

//----- (000000000042BAFE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_68b_goodG2BSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_preinc_68_goodG2BData + 1);
}
// 6A95F4: using guessed type char CWE190_Integer_Overflow__char_max_preinc_68_goodG2BData;

//----- (000000000042BB28) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_max_preinc_68_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_max_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95F5: using guessed type char CWE190_Integer_Overflow__char_max_preinc_68_goodB2GData;

//----- (000000000042BB64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_7 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine(v4 + 1);
  return result;
}
// 6A916C: using guessed type int staticFive_7;

//----- (000000000042BBEC) ----------------------------------------------------
int goodB2G1_135()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_7 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6A916C: using guessed type int staticFive_7;

//----- (000000000042BC95) ----------------------------------------------------
int goodB2G2_135()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_7 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6A916C: using guessed type int staticFive_7;

//----- (000000000042BD32) ----------------------------------------------------
int goodG2B1_116()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A916C: using guessed type int staticFive_7;

//----- (000000000042BD80) ----------------------------------------------------
int goodG2B2_116()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 2;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A916C: using guessed type int staticFive_7;

//----- (000000000042BDC2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_07_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (000000000042BDF0) ----------------------------------------------------
void CWE190_Integer_Overflow__char_rand_preinc_17_bad()
{
  int v0; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v1 = v0;
  }
  for ( j = 0; j <= 0; ++j )
    printHexCharLine(++v1);
}

//----- (000000000042BE6B) ----------------------------------------------------
void goodB2G_177()
{
  int v0; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v1 = v0;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 127 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printHexCharLine(++v1);
  }
}

//----- (000000000042BEF8) ----------------------------------------------------
int goodG2B_196()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (000000000042BF46) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_17_good()
{
  goodB2G_177();
  return goodG2B_196();
}

//----- (000000000042BF60) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_22_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_rand_preinc_22_badSink(v1);
}
// 6A9388: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal;

//----- (000000000042BFCB) ----------------------------------------------------
int goodB2G1_136()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Sink(v1);
}
// 6A938C: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Global;

//----- (000000000042C036) ----------------------------------------------------
int goodB2G2_136()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Sink(v1);
}
// 6A9390: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global;

//----- (000000000042C0A1) ----------------------------------------------------
int goodG2B_197()
{
  CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BSink(2);
}
// 6A9394: using guessed type int CWE190_Integer_Overflow__short_rand_preinc_22_goodG2BGlobal;

//----- (000000000042C0CC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_22_good()
{
  goodB2G1_136();
  goodB2G2_136();
  return goodG2B_197();
}

//----- (000000000042C0F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000042C11C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000042C148) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000042C186) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C1BE) ----------------------------------------------------
int goodG2B_198()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_goodG2BSink(2);
}

//----- (000000000042C1E0) ----------------------------------------------------
int goodB2G_178()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C218) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_52_good()
{
  goodG2B_198();
  return goodB2G_178();
}

//----- (000000000042C232) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042C253) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042C274) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042C2A7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000042C2DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000042C30D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000042C352) ----------------------------------------------------
int __fastcall badSink_33(int a1)
{
  int result; // eax

  result = badStatic_8;
  if ( badStatic_8 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9398: using guessed type int badStatic_8;

//----- (000000000042C37D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_8 = 1;
  return badSink_33(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9398: using guessed type int badStatic_8;

//----- (000000000042C3BF) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(int a1)
{
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A939C: using guessed type int goodB2G1Static_8;

//----- (000000000042C40B) ----------------------------------------------------
int goodB2G1_137()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A939C: using guessed type int goodB2G1Static_8;

//----- (000000000042C44D) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(int a1)
{
  int result; // eax

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A93A0: using guessed type int goodB2G2Static_8;

//----- (000000000042C48D) ----------------------------------------------------
int goodB2G2_137()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93A0: using guessed type int goodB2G2Static_8;

//----- (000000000042C4CF) ----------------------------------------------------
int __fastcall goodG2BSink_33(int a1)
{
  int result; // eax

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A93A4: using guessed type int goodG2BStatic_8;

//----- (000000000042C4FA) ----------------------------------------------------
int goodG2B_199()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_33(2);
}
// 6A93A4: using guessed type int goodG2BStatic_8;

//----- (000000000042C526) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_21_good()
{
  goodB2G1_137();
  goodB2G2_137();
  return goodG2B_199();
}

//----- (000000000042C54A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475190, &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C5A3) ----------------------------------------------------
int goodB2G1_138()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475190, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C61E) ----------------------------------------------------
int goodB2G2_138()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475190, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C68D) ----------------------------------------------------
int goodG2B1_117()
{
  return printIntLine(3u);
}

//----- (000000000042C6D7) ----------------------------------------------------
int goodG2B2_117()
{
  return printIntLine(3u);
}

//----- (000000000042C715) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_04_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (000000000042C743) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C791) ----------------------------------------------------
int goodG2B_200()
{
  return printIntLine(3u);
}

//----- (000000000042C7C9) ----------------------------------------------------
int goodB2G_179()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C82C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_31_good()
{
  goodG2B_200();
  return goodB2G_179();
}

//----- (000000000042C846) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_13_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C88A) ----------------------------------------------------
int goodB2G1_139()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFF;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C8EE) ----------------------------------------------------
int goodB2G2_139()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C946) ----------------------------------------------------
int goodG2B1_118()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C996) ----------------------------------------------------
int goodG2B2_118()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C9DA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_13_good()
{
  goodB2G1_139();
  goodB2G2_139();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (000000000042CA08) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_12_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v7 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v7 + 1);
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 42CA08: using guessed type char buf[16];

//----- (000000000042CB50) ----------------------------------------------------
int goodB2G_180()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+4Ch] [rbp-14h]
  int v8; // [rsp+50h] [rbp-10h]
  int v9; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v11; // [rsp+5Ch] [rbp-4h]

  v11 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v8, &addr, 0x10u) != -1 )
      {
        v7 = recv(v8, nptr, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            nptr[v7] = 0;
            v11 = atoi(nptr);
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v11 + 1);
  }
  else if ( v11 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v11 + 1);
  }
  return result;
}
// 42CB50: using guessed type char buf[16];
// 42CB50: using guessed type char nptr[16];

//----- (000000000042CD79) ----------------------------------------------------
int goodG2B_201()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000042CDE0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_12_good()
{
  goodB2G_180();
  return goodG2B_201();
}

//----- (000000000042CDFA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A926C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_badGlobal;

//----- (000000000042CE25) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6A9270: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G1Global;

//----- (000000000042CE6E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6A9274: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodB2G2Global;

//----- (000000000042CEAB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A9278: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_22_goodG2BGlobal;

//----- (000000000042CED6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53c_badSink(a1);
}

//----- (000000000042CEF0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53c_goodG2BSink(a1);
}

//----- (000000000042CF0A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53c_goodB2GSink(a1);
}

//----- (000000000042CF24) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_54_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042CF50) ----------------------------------------------------
int goodG2B_202()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54b_goodG2BSink(2LL);
}

//----- (000000000042CF76) ----------------------------------------------------
int goodB2G_181()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042CFA2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_54_good()
{
  goodG2B_202();
  return goodB2G_181();
}

//----- (000000000042CFBC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_preinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A93C4: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_badGlobal;

//----- (000000000042CFE7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A93C8: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Global;

//----- (000000000042D033) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A93CC: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Global;

//----- (000000000042D073) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A93D0: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BGlobal;

//----- (000000000042D09E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042D0C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042D0EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000042D12F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042D162) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042D195) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042D1DD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_52_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D216) ----------------------------------------------------
int goodG2B_203()
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_52b_goodG2BSink(2);
}

//----- (000000000042D237) ----------------------------------------------------
int goodB2G_182()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D270) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_52_good()
{
  goodG2B_203();
  return goodB2G_182();
}

//----- (000000000042D28A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_10_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042D2F3) ----------------------------------------------------
int goodB2G1_140()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042D37A) ----------------------------------------------------
int goodB2G2_140()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042D3F5) ----------------------------------------------------
int goodG2B1_119()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042D43D) ----------------------------------------------------
int goodG2B2_119()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042D479) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_10_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (000000000042D4A7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_68_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_68_badData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_68b_badSink();
}
// 6A95A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_badData;

//----- (000000000042D56D) ----------------------------------------------------
int goodG2B_204()
{
  CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_68b_goodG2BSink();
}
// 6A95B8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodG2BData;

//----- (000000000042D59C) ----------------------------------------------------
int goodB2G_183()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_68b_goodB2GSink();
}
// 6A95B0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodB2GData;

//----- (000000000042D662) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_68_good()
{
  goodG2B_204();
  return goodB2G_183();
}

//----- (000000000042D67C) ----------------------------------------------------
int __fastcall badSink_34(__int16 a1)
{
  int result; // eax

  result = badStatic_9;
  if ( badStatic_9 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A93A8: using guessed type int badStatic_9;

//----- (000000000042D6AE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_21_bad()
{
  badStatic_9 = 1;
  return badSink_34(0x7FFF);
}
// 6A93A8: using guessed type int badStatic_9;

//----- (000000000042D6D9) ----------------------------------------------------
int __fastcall goodB2G1Sink_9(__int16 a1)
{
  if ( goodB2G1Static_9 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6A93AC: using guessed type int goodB2G1Static_9;

//----- (000000000042D72B) ----------------------------------------------------
int goodB2G1_141()
{
  goodB2G1Static_9 = 0;
  return goodB2G1Sink_9(0x7FFF);
}
// 6A93AC: using guessed type int goodB2G1Static_9;

//----- (000000000042D756) ----------------------------------------------------
int __fastcall goodB2G2Sink_9(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_9;
  if ( goodB2G2Static_9 )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6A93B0: using guessed type int goodB2G2Static_9;

//----- (000000000042D79C) ----------------------------------------------------
int goodB2G2_141()
{
  goodB2G2Static_9 = 1;
  return goodB2G2Sink_9(0x7FFF);
}
// 6A93B0: using guessed type int goodB2G2Static_9;

//----- (000000000042D7C7) ----------------------------------------------------
int __fastcall goodG2BSink_34(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_9;
  if ( goodG2BStatic_9 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A93B4: using guessed type int goodG2BStatic_9;

//----- (000000000042D7F9) ----------------------------------------------------
int goodG2B_205()
{
  goodG2BStatic_9 = 1;
  return goodG2BSink_34(2);
}
// 6A93B4: using guessed type int goodG2BStatic_9;

//----- (000000000042D824) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_21_good()
{
  goodB2G1_141();
  goodB2G2_141();
  return goodG2B_205();
}

//----- (000000000042D848) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_07_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_8 == 5 )
    v1 = 127;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9170: using guessed type int staticFive_8;

//----- (000000000042D886) ----------------------------------------------------
int goodB2G1_142()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_8 == 5 )
    v1 = 127;
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6A9170: using guessed type int staticFive_8;

//----- (000000000042D8E2) ----------------------------------------------------
int goodB2G2_142()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_8 == 5 )
    v1 = 127;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6A9170: using guessed type int staticFive_8;

//----- (000000000042D932) ----------------------------------------------------
int goodG2B1_120()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_8 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9170: using guessed type int staticFive_8;

//----- (000000000042D97C) ----------------------------------------------------
int goodG2B2_120()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_8 == 5 )
    v1 = 2;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9170: using guessed type int staticFive_8;

//----- (000000000042D9BA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_07_good()
{
  goodB2G1_142();
  goodB2G2_142();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (000000000042D9E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_65b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042DA0D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042DA32) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000042DA69) ----------------------------------------------------
int badSink_35()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_preinc_45_badData + 1);
}
// 6A93B8: using guessed type int CWE190_Integer_Overflow__int_max_preinc_45_badData;

//----- (000000000042DA90) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_45_bad()
{
  CWE190_Integer_Overflow__int_max_preinc_45_badData = 0x7FFFFFFF;
  return badSink_35();
}
// 6A93B8: using guessed type int CWE190_Integer_Overflow__int_max_preinc_45_badData;

//----- (000000000042DABB) ----------------------------------------------------
int goodG2BSink_35()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_preinc_45_goodG2BData + 1);
}
// 6A93BC: using guessed type int CWE190_Integer_Overflow__int_max_preinc_45_goodG2BData;

//----- (000000000042DAE2) ----------------------------------------------------
int goodG2B_206()
{
  CWE190_Integer_Overflow__int_max_preinc_45_goodG2BData = 2;
  return goodG2BSink_35();
}
// 6A93BC: using guessed type int CWE190_Integer_Overflow__int_max_preinc_45_goodG2BData;

//----- (000000000042DB0D) ----------------------------------------------------
int goodB2GSink_24()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_preinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_max_preinc_45_goodB2GData + 1);
  return result;
}
// 6A93C0: using guessed type int CWE190_Integer_Overflow__int_max_preinc_45_goodB2GData;

//----- (000000000042DB49) ----------------------------------------------------
int goodB2G_184()
{
  CWE190_Integer_Overflow__int_max_preinc_45_goodB2GData = 0x7FFFFFFF;
  return goodB2GSink_24();
}
// 6A93C0: using guessed type int CWE190_Integer_Overflow__int_max_preinc_45_goodB2GData;

//----- (000000000042DB74) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_45_good()
{
  goodG2B_206();
  return goodB2G_184();
}

//----- (000000000042DB8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_53_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53b_badSink(v4);
}

//----- (000000000042DC4B) ----------------------------------------------------
int goodG2B_207()
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53b_goodG2BSink(2LL);
}

//----- (000000000042DC71) ----------------------------------------------------
int goodB2G_185()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53b_goodB2GSink(v4);
}

//----- (000000000042DD2E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_53_good()
{
  goodG2B_207();
  return goodB2G_185();
}

//----- (000000000042DD48) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54d_badSink(a1);
}

//----- (000000000042DD62) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54d_goodG2BSink(a1);
}

//----- (000000000042DD7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54d_goodB2GSink(a1);
}

//----- (000000000042DD96) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_preinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93C4: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_badGlobal;

//----- (000000000042DDD8) ----------------------------------------------------
int goodB2G1_143()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93C8: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G1Global;

//----- (000000000042DE1A) ----------------------------------------------------
int goodB2G2_143()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93CC: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodB2G2Global;

//----- (000000000042DE5C) ----------------------------------------------------
int goodG2B_208()
{
  CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BSink(2);
}
// 6A93D0: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_22_goodG2BGlobal;

//----- (000000000042DE88) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_22_good()
{
  goodB2G1_143();
  goodB2G2_143();
  return goodG2B_208();
}

//----- (000000000042DEAC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000042DEDD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000042DF0E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (000000000042DF53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_52c_badSink(a1);
}

//----- (000000000042DF6E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_52c_goodG2BSink(a1);
}

//----- (000000000042DF89) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_52c_goodB2GSink(a1);
}

//----- (000000000042DFA4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10 + 1;
  v6 = v10 + 1;
  return printIntLine(v10 + 1);
}
// 42DFA4: using guessed type char buf[16];

//----- (000000000042E0A2) ----------------------------------------------------
int goodG2B_209()
{
  return printIntLine(3u);
}

//----- (000000000042E0DA) ----------------------------------------------------
int goodB2G_186()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v9;
  v6 = v9;
  if ( v9 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 42E0DA: using guessed type char buf[16];

//----- (000000000042E1ED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_34_good()
{
  goodG2B_209();
  return goodB2G_186();
}

//----- (000000000042E207) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_preinc_67b_badSink(v5);
}

//----- (000000000042E275) ----------------------------------------------------
int goodG2B_210()
{
  return CWE190_Integer_Overflow__int_fgets_preinc_67b_goodG2BSink(2);
}

//----- (000000000042E29D) ----------------------------------------------------
int goodB2G_187()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_preinc_67b_goodB2GSink(v5);
}

//----- (000000000042E30B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_67_good()
{
  goodG2B_210();
  return goodB2G_187();
}

//----- (000000000042E325) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_12_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v1 + 1));
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000042E3A5) ----------------------------------------------------
int goodB2G_188()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042E439) ----------------------------------------------------
int goodG2B_211()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000042E4A5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_12_good()
{
  goodB2G_188();
  return goodG2B_211();
}

//----- (000000000042E4BF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042E54D) ----------------------------------------------------
int goodB2G1_144()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}

//----- (000000000042E5FC) ----------------------------------------------------
int goodB2G2_144()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}

//----- (000000000042E69F) ----------------------------------------------------
int goodG2B1_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042E6F3) ----------------------------------------------------
int goodG2B2_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042E73B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_11_good()
{
  goodB2G1_144();
  goodB2G2_144();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (000000000042E769) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_64b_badSink(&v4);
}

//----- (000000000042E7D3) ----------------------------------------------------
int goodG2B_212()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000042E7F7) ----------------------------------------------------
int goodB2G_189()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_64b_goodB2GSink(&v4);
}

//----- (000000000042E861) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_64_good()
{
  goodG2B_212();
  return goodB2G_189();
}

//----- (000000000042E87B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E8D8) ----------------------------------------------------
int goodB2G1_145()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E957) ----------------------------------------------------
int goodB2G2_145()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E9CA) ----------------------------------------------------
int goodG2B1_122()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042EA18) ----------------------------------------------------
int goodG2B2_122()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042EA5A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_13_good()
{
  goodB2G1_145();
  goodB2G2_145();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (000000000042EA88) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v7 + 1);
  return result;
}
// 42EA88: using guessed type char buf[16];

//----- (000000000042EB9A) ----------------------------------------------------
int goodB2G1_146()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 42EB9A: using guessed type char buf[16];

//----- (000000000042ECCD) ----------------------------------------------------
int goodB2G2_146()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 42ECCD: using guessed type char buf[16];

//----- (000000000042EDF4) ----------------------------------------------------
int goodG2B1_123()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042EE48) ----------------------------------------------------
int goodG2B2_123()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042EE90) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_11_good()
{
  goodB2G1_146();
  goodB2G2_146();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (000000000042EEBE) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (000000000042EEC9) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (000000000042EED4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_08_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticReturnsTrue_4();
  if ( result )
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (000000000042EF45) ----------------------------------------------------
int goodB2G1_147()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( (unsigned int)staticReturnsFalse_4() )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}

//----- (000000000042EFD4) ----------------------------------------------------
int goodB2G2_147()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}

//----- (000000000042F057) ----------------------------------------------------
int goodG2B1_124()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042F0A7) ----------------------------------------------------
int goodG2B2_124()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042F0EB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_08_good()
{
  goodB2G1_147();
  goodB2G2_147();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (000000000042F119) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_63_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_63b_badSink(&v4);
}

//----- (000000000042F17B) ----------------------------------------------------
int goodG2B_213()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_rand_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000042F19D) ----------------------------------------------------
int goodB2G_190()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_63b_goodB2GSink(&v4);
}

//----- (000000000042F1FF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_63_good()
{
  goodG2B_213();
  return goodB2G_190();
}

//----- (000000000042F219) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54d_badSink(a1);
}

//----- (000000000042F230) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54d_goodG2BSink(a1);
}

//----- (000000000042F247) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54d_goodB2GSink(a1);
}

//----- (000000000042F25E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_11_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFF;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042F2A8) ----------------------------------------------------
int goodB2G1_148()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFF;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000042F312) ----------------------------------------------------
int goodB2G2_148()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}

//----- (000000000042F370) ----------------------------------------------------
int goodG2B1_125()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042F3C6) ----------------------------------------------------
int goodG2B2_125()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042F410) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_11_good()
{
  goodB2G1_148();
  goodB2G2_148();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (000000000042F43E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_02_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000042F46C) ----------------------------------------------------
int goodB2G1_149()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042F4AE) ----------------------------------------------------
int goodB2G2_149()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042F4F0) ----------------------------------------------------
int goodG2B1_126()
{
  return printIntLine(3u);
}

//----- (000000000042F51E) ----------------------------------------------------
int goodG2B2_126()
{
  return printIntLine(3u);
}

//----- (000000000042F54C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_02_good()
{
  goodB2G1_149();
  goodB2G2_149();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (000000000042F57A) ----------------------------------------------------
int __fastcall badSink_36(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000042F5A2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_44_bad()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = badSink_36;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F5E6) ----------------------------------------------------
int __fastcall goodG2BSink_36(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000042F60E) ----------------------------------------------------
int goodG2B_214()
{
  return goodG2BSink_36(2);
}

//----- (000000000042F638) ----------------------------------------------------
int __fastcall goodB2GSink_25(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000042F674) ----------------------------------------------------
__int64 goodB2G_191()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_25;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F6B8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_44_good()
{
  goodG2B_214();
  return goodB2G_191();
}

//----- (000000000042F6D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042F6F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042F714) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042F74A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042F771) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042F798) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042F7D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042F7F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042F816) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042F849) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_10_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFF;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042F88B) ----------------------------------------------------
int goodB2G1_150()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFF;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042F8ED) ----------------------------------------------------
int goodB2G2_150()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042F943) ----------------------------------------------------
int goodG2B1_127()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000042F991) ----------------------------------------------------
int goodG2B2_127()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000042F9D3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_10_good()
{
  goodB2G1_150();
  goodB2G2_150();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (000000000042FA01) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54c_badSink(a1);
}

//----- (000000000042FA1B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54c_goodG2BSink(a1);
}

//----- (000000000042FA35) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54c_goodB2GSink(a1);
}

//----- (000000000042FA4F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_61b_badSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000042FB00) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042FB16) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_61b_goodB2GSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000042FBC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_52_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_52b_badSink(v4);
}

//----- (000000000042FC84) ----------------------------------------------------
int goodG2B_215()
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_52b_goodG2BSink(2LL);
}

//----- (000000000042FCAA) ----------------------------------------------------
int goodB2G_192()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_52b_goodB2GSink(v4);
}

//----- (000000000042FD67) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_52_good()
{
  goodG2B_215();
  return goodB2G_192();
}

//----- (000000000042FD81) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042FDA8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042FDCF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000042FE12) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (000000000042FE1D) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (000000000042FE28) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_5();
  if ( result )
    result = printIntLine(v7 + 1);
  return result;
}
// 42FE28: using guessed type char buf[16];

//----- (000000000042FF3A) ----------------------------------------------------
int goodB2G1_151()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_5() )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 42FF3A: using guessed type char buf[16];

//----- (000000000043006D) ----------------------------------------------------
int goodB2G2_151()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 43006D: using guessed type char buf[16];

//----- (0000000000430194) ----------------------------------------------------
int goodG2B1_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004301E8) ----------------------------------------------------
int goodG2B2_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000430230) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_08_good()
{
  goodB2G1_151();
  goodB2G2_151();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (000000000043025E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_16_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000043032A) ----------------------------------------------------
int goodB2G_193()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000430412) ----------------------------------------------------
int goodG2B_216()
{
  return printLongLongLine(3LL);
}

//----- (0000000000430447) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_16_good()
{
  goodB2G_193();
  return goodG2B_216();
}

//----- (0000000000430461) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_01_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000043048F) ----------------------------------------------------
int goodG2B_217()
{
  return printIntLine(3u);
}

//----- (00000000004304BD) ----------------------------------------------------
int goodB2G_194()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004304FF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_01_good()
{
  goodG2B_217();
  return goodB2G_194();
}

//----- (0000000000430519) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (0000000000430576) ----------------------------------------------------
int goodB2G1_152()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (00000000004305F3) ----------------------------------------------------
int goodB2G2_152()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (0000000000430664) ----------------------------------------------------
int goodG2B1_129()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004306B2) ----------------------------------------------------
int goodG2B2_129()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004306F4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_14_good()
{
  goodB2G1_152();
  goodB2G2_152();
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (0000000000430722) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54e_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000430747) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043076C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004307A3) ----------------------------------------------------
void CWE190_Integer_Overflow__short_rand_preinc_17_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine(++v3);
}

//----- (0000000000430837) ----------------------------------------------------
void goodB2G_195()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v3 == 0x7FFF )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine(++v3);
  }
}

//----- (00000000004308DF) ----------------------------------------------------
int goodG2B_218()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000430933) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_17_good()
{
  goodB2G_195();
  return goodG2B_218();
}

//----- (000000000043094D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_67b_badSink(v2);
}

//----- (00000000004309BD) ----------------------------------------------------
int goodG2B_219()
{
  return CWE190_Integer_Overflow__int_rand_preinc_67b_goodG2BSink(2);
}

//----- (00000000004309E5) ----------------------------------------------------
int goodB2G_196()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_67b_goodB2GSink(v2);
}

//----- (0000000000430A55) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_67_good()
{
  goodG2B_219();
  return goodB2G_196();
}

//----- (0000000000430A6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000430AA9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000430AE3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000430B39) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_12_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 + 1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430BD6) ----------------------------------------------------
int goodB2G_197()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  else if ( v1 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430C9F) ----------------------------------------------------
int goodG2B_220()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000430D06) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_12_good()
{
  goodB2G_197();
  return goodG2B_220();
}

//----- (0000000000430D20) ----------------------------------------------------
int __fastcall badSink_37(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000430D41) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_37;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 430D41: using guessed type char buf[16];

//----- (0000000000430E78) ----------------------------------------------------
int __fastcall goodG2BSink_37(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000430E99) ----------------------------------------------------
int goodG2B_221()
{
  return goodG2BSink_37(2);
}

//----- (0000000000430EC4) ----------------------------------------------------
int __fastcall goodB2GSink_26(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000430EFA) ----------------------------------------------------
__int64 goodB2G_198()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_26;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 430EFA: using guessed type char buf[16];

//----- (0000000000431031) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_44_good()
{
  goodG2B_221();
  return goodB2G_198();
}

//----- (000000000043104B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_54_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_54b_badSink(v0);
}

//----- (0000000000431095) ----------------------------------------------------
int goodG2B_222()
{
  return CWE190_Integer_Overflow__char_rand_preinc_54b_goodG2BSink(2);
}

//----- (00000000004310B2) ----------------------------------------------------
int goodB2G_199()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_54b_goodB2GSink(v0);
}

//----- (00000000004310FC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_54_good()
{
  goodG2B_222();
  return goodB2G_199();
}

//----- (0000000000431116) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_51_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_51b_badSink(v4);
}

//----- (00000000004311D3) ----------------------------------------------------
int goodG2B_223()
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_51b_goodG2BSink(2LL);
}

//----- (00000000004311F9) ----------------------------------------------------
int goodB2G_200()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_51b_goodB2GSink(v4);
}

//----- (00000000004312B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_51_good()
{
  goodG2B_223();
  return goodB2G_200();
}

//----- (00000000004312D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54c_badSink(a1);
}

//----- (00000000004312E7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54c_goodG2BSink(a1);
}

//----- (00000000004312FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54c_goodB2GSink(a1);
}

//----- (0000000000431315) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_09_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000431357) ----------------------------------------------------
int goodB2G1_153()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFF;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004313B9) ----------------------------------------------------
int goodB2G2_153()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043140F) ----------------------------------------------------
int goodG2B1_130()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043145D) ----------------------------------------------------
int goodG2B2_130()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043149F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_09_good()
{
  goodB2G1_153();
  goodB2G2_153();
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (00000000004314CD) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_61b_badSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000431527) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000043153D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_preinc_61b_goodB2GSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000431597) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004315C2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004315ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000043162D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475C28, &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431686) ----------------------------------------------------
int goodB2G1_154()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475C28, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004316FF) ----------------------------------------------------
int goodB2G2_154()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475C28, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043176C) ----------------------------------------------------
int goodG2B1_131()
{
  return printUnsignedLine(3u);
}

//----- (00000000004317B6) ----------------------------------------------------
int goodG2B2_131()
{
  return printUnsignedLine(3u);
}

//----- (00000000004317F4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_04_good()
{
  goodB2G1_154();
  goodB2G2_154();
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (0000000000431822) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431870) ----------------------------------------------------
int goodG2B_224()
{
  return printUnsignedLine(3u);
}

//----- (00000000004318A8) ----------------------------------------------------
int goodB2G_201()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431908) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_31_good()
{
  goodG2B_224();
  return goodB2G_201();
}

//----- (0000000000431922) ----------------------------------------------------
int badSink_38()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_preinc_45_badData + 1);
}
// 6A93D8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_badData;

//----- (0000000000431950) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_45_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_45_badData = v4;
  return badSink_38();
}
// 6A93D8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_badData;

//----- (0000000000431A16) ----------------------------------------------------
int goodG2BSink_38()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodG2BData + 1);
}
// 6A93E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodG2BData;

//----- (0000000000431A44) ----------------------------------------------------
int goodG2B_225()
{
  CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodG2BData = 2LL;
  return goodG2BSink_38();
}
// 6A93E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodG2BData;

//----- (0000000000431A73) ----------------------------------------------------
int goodB2GSink_27()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodB2GData + 1);
  return result;
}
// 6A93E8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodB2GData;

//----- (0000000000431ABD) ----------------------------------------------------
int goodB2G_202()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodB2GData = v4;
  return goodB2GSink_27();
}
// 6A93E8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_45_goodB2GData;

//----- (0000000000431B83) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_45_good()
{
  goodG2B_225();
  return goodB2G_202();
}

//----- (0000000000431B9D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475CF4, &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431BF8) ----------------------------------------------------
int goodB2G1_155()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475CF4, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431C75) ----------------------------------------------------
int goodB2G2_155()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_475CF4, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431CE6) ----------------------------------------------------
int goodG2B1_132()
{
  return printIntLine(3u);
}

//----- (0000000000431D32) ----------------------------------------------------
int goodG2B2_132()
{
  return printIntLine(3u);
}

//----- (0000000000431D72) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_06_good()
{
  goodB2G1_155();
  goodB2G2_155();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (0000000000431DA0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_06_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000431E82) ----------------------------------------------------
int goodB2G1_156()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000431F8C) ----------------------------------------------------
int goodB2G2_156()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000043208A) ----------------------------------------------------
int goodG2B1_133()
{
  return printLongLongLine(3LL);
}

//----- (00000000004320DD) ----------------------------------------------------
int goodG2B2_133()
{
  return printLongLongLine(3LL);
}

//----- (0000000000432124) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_06_good()
{
  goodB2G1_156();
  goodB2G2_156();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (0000000000432152) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432199) ----------------------------------------------------
int goodB2G1_157()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004321F6) ----------------------------------------------------
int goodB2G2_157()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432253) ----------------------------------------------------
int goodG2B1_134()
{
  return printIntLine(3u);
}

//----- (000000000043227F) ----------------------------------------------------
int goodG2B2_134()
{
  return printIntLine(3u);
}

//----- (00000000004322AB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_02_good()
{
  goodB2G1_157();
  goodB2G2_157();
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (00000000004322D9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_03_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000043232E) ----------------------------------------------------
int goodB2G1_158()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000432395) ----------------------------------------------------
int goodB2G2_158()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (00000000004323FC) ----------------------------------------------------
int goodG2B1_135()
{
  return printHexCharLine(3);
}

//----- (0000000000432424) ----------------------------------------------------
int goodG2B2_135()
{
  return printHexCharLine(3);
}

//----- (000000000043244C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_03_good()
{
  goodB2G1_158();
  goodB2G2_158();
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (000000000043247A) ----------------------------------------------------
int badSink_39()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_preinc_45_badData + 1);
}
// 6A93F0: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_45_badData;

//----- (00000000004324A1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_45_badData = v1;
  return badSink_39();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93F0: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_45_badData;

//----- (00000000004324E2) ----------------------------------------------------
int goodG2BSink_39()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_preinc_45_goodG2BData + 1);
}
// 6A93F4: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_45_goodG2BData;

//----- (0000000000432509) ----------------------------------------------------
int goodG2B_226()
{
  CWE190_Integer_Overflow__int_fscanf_preinc_45_goodG2BData = 2;
  return goodG2BSink_39();
}
// 6A93F4: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_45_goodG2BData;

//----- (0000000000432534) ----------------------------------------------------
int goodB2GSink_28()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_preinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fscanf_preinc_45_goodB2GData + 1);
  return result;
}
// 6A93F8: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_45_goodB2GData;

//----- (0000000000432570) ----------------------------------------------------
int goodB2G_203()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_preinc_45_goodB2GData = v1;
  return goodB2GSink_28();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93F8: using guessed type int CWE190_Integer_Overflow__int_fscanf_preinc_45_goodB2GData;

//----- (00000000004325B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_45_good()
{
  goodG2B_226();
  return goodB2G_203();
}

//----- (00000000004325CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54b_badSink(v7);
}
// 4325CB: using guessed type char buf[16];

//----- (00000000004326B3) ----------------------------------------------------
int goodG2B_227()
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54b_goodG2BSink(2);
}

//----- (00000000004326D5) ----------------------------------------------------
int goodB2G_204()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54b_goodB2GSink(v7);
}
// 4326D5: using guessed type char buf[16];

//----- (00000000004327BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_54_good()
{
  goodG2B_227();
  return goodB2G_204();
}

//----- (00000000004327D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000432806) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000432835) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000432880) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_rand_preinc_61b_badSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004328B7) ----------------------------------------------------
int goodG2B_228()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_rand_preinc_61b_goodG2BSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004328EE) ----------------------------------------------------
int goodB2G_205()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_rand_preinc_61b_goodB2GSource();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000432939) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_61_good()
{
  goodG2B_228();
  return goodB2G_205();
}

//----- (0000000000432953) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_63b_badSink(&v1);
}

//----- (0000000000432977) ----------------------------------------------------
int goodG2B_229()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000043299B) ----------------------------------------------------
int goodB2G_206()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_63b_goodB2GSink(&v1);
}

//----- (00000000004329BF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_63_good()
{
  goodG2B_229();
  return goodB2G_206();
}

//----- (00000000004329D9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000432A34) ----------------------------------------------------
int goodB2G1_159()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000432AB1) ----------------------------------------------------
int goodB2G2_159()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000432B22) ----------------------------------------------------
int goodG2B1_136()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000432B6E) ----------------------------------------------------
int goodG2B2_136()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000432BAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_10_good()
{
  goodB2G1_159();
  goodB2G2_159();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (0000000000432BDC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A93FC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badGlobal;

//----- (0000000000432C07) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6A9400: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Global;

//----- (0000000000432C50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6A9404: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Global;

//----- (0000000000432C8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A9408: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BGlobal;

//----- (0000000000432CB8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000432CDF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000432D06) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000432D49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54e_badSink(a1);
}

//----- (0000000000432D60) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000432D77) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000432D8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000432DC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000432DF4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (0000000000432E39) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_15_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432E86) ----------------------------------------------------
int goodB2G1_160()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432EE9) ----------------------------------------------------
int goodB2G2_160()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432F4C) ----------------------------------------------------
int goodG2B1_137()
{
  return printIntLine(3u);
}

//----- (0000000000432F7C) ----------------------------------------------------
int goodG2B2_137()
{
  return printIntLine(3u);
}

//----- (0000000000432FAC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_15_good()
{
  goodB2G1_160();
  goodB2G2_160();
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (0000000000432FDA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_07_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_9 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6A9174: using guessed type int staticFive_9;

//----- (000000000043305E) ----------------------------------------------------
int goodB2G1_161()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_9 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6A9174: using guessed type int staticFive_9;

//----- (0000000000433102) ----------------------------------------------------
int goodB2G2_161()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_9 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6A9174: using guessed type int staticFive_9;

//----- (000000000043319A) ----------------------------------------------------
int goodG2B1_138()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9174: using guessed type int staticFive_9;

//----- (00000000004331EA) ----------------------------------------------------
int goodG2B2_138()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 2;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9174: using guessed type int staticFive_9;

//----- (000000000043322E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_07_good()
{
  goodB2G1_161();
  goodB2G2_161();
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (000000000043325C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004332A3) ----------------------------------------------------
int goodG2B_230()
{
  return printIntLine(3u);
}

//----- (00000000004332CF) ----------------------------------------------------
int goodB2G_207()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043332C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_01_good()
{
  goodG2B_230();
  return goodB2G_207();
}

//----- (0000000000433346) ----------------------------------------------------
__int64 __fastcall badSource_6(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433377) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_6(0);
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004333AE) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return 2LL;
}

//----- (00000000004333C4) ----------------------------------------------------
int goodG2B_231()
{
  __int16 v0; // ax

  v0 = goodG2BSource_6();
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004333FB) ----------------------------------------------------
__int64 __fastcall goodB2GSource_6(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043342C) ----------------------------------------------------
int goodB2G_208()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_6(0);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000433477) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_42_good()
{
  goodB2G_208();
  return goodG2B_231();
}

//----- (0000000000433491) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_63b_badSink(&v4);
}

//----- (00000000004334FB) ----------------------------------------------------
int goodG2B_232()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000043351F) ----------------------------------------------------
int goodB2G_209()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_63b_goodB2GSink(&v4);
}

//----- (0000000000433589) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_63_good()
{
  goodG2B_232();
  return goodB2G_209();
}

//----- (00000000004335A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (00000000004335D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000433607) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000433655) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_67_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_67b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000433689) ----------------------------------------------------
int goodG2B_233()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_67b_goodG2BSink(2LL);
}

//----- (00000000004336B7) ----------------------------------------------------
int goodB2G_210()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_67b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004336EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_67_good()
{
  goodG2B_233();
  return goodB2G_210();
}

//----- (0000000000433705) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A93FC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_badGlobal;

//----- (0000000000433747) ----------------------------------------------------
int goodB2G1_162()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9400: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G1Global;

//----- (0000000000433789) ----------------------------------------------------
int goodB2G2_162()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9404: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodB2G2Global;

//----- (00000000004337CB) ----------------------------------------------------
int goodG2B_234()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BSink(2);
}
// 6A9408: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_goodG2BGlobal;

//----- (00000000004337F7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_22_good()
{
  goodB2G1_162();
  goodB2G2_162();
  return goodG2B_234();
}

//----- (000000000043381B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000433876) ----------------------------------------------------
int goodB2G1_163()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004338F3) ----------------------------------------------------
int goodB2G2_163()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000433964) ----------------------------------------------------
int goodG2B1_139()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004339B0) ----------------------------------------------------
int goodG2B2_139()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004339F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_09_good()
{
  goodB2G1_163();
  goodB2G2_163();
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (0000000000433A1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000433A46) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000433A6E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000433AAA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_05_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_9 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9178: using guessed type int staticTrue_9;

//----- (0000000000433B09) ----------------------------------------------------
int goodB2G1_164()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_9 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9178: using guessed type int staticTrue_9;
// 6A940C: using guessed type int staticFalse_9;

//----- (0000000000433B8A) ----------------------------------------------------
int goodB2G2_164()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_9 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9178: using guessed type int staticTrue_9;

//----- (0000000000433BFF) ----------------------------------------------------
int goodG2B1_140()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9178: using guessed type int staticTrue_9;
// 6A940C: using guessed type int staticFalse_9;

//----- (0000000000433C4D) ----------------------------------------------------
int goodG2B2_140()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = 2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9178: using guessed type int staticTrue_9;

//----- (0000000000433C8F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_05_good()
{
  goodB2G1_164();
  goodB2G2_164();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (0000000000433CBD) ----------------------------------------------------
int __fastcall badSink_40(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000433CE5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_41_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return badSink_40(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433D1E) ----------------------------------------------------
int __fastcall goodG2BSink_40(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000433D46) ----------------------------------------------------
int goodG2B_235()
{
  return goodG2BSink_40(2);
}

//----- (0000000000433D67) ----------------------------------------------------
int __fastcall goodB2GSink_29(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000433DA3) ----------------------------------------------------
int goodB2G_211()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return goodB2GSink_29(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433DDC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_41_good()
{
  goodB2G_211();
  return goodG2B_235();
}

//----- (0000000000433DF6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000433E48) ----------------------------------------------------
int goodB2G_212()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(++v1);
  }
  return result;
}

//----- (0000000000433EAF) ----------------------------------------------------
int goodG2B_236()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000433F01) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_17_good()
{
  goodB2G_212();
  return goodG2B_236();
}

//----- (0000000000433F1B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_53c_badSink(a1);
}

//----- (0000000000433F35) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000433F4F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000433F69) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (0000000000433FDF) ----------------------------------------------------
int goodB2G_213()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000043406A) ----------------------------------------------------
int goodG2B_237()
{
  return printIntLine(3u);
}

//----- (0000000000434098) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_18_good()
{
  goodB2G_213();
  return goodG2B_237();
}

//----- (00000000004340B2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54e_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004340D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004340FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000434133) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000434190) ----------------------------------------------------
int goodB2G1_165()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043420D) ----------------------------------------------------
int goodB2G2_165()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043427E) ----------------------------------------------------
int goodG2B1_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004342CC) ----------------------------------------------------
int goodG2B2_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043430E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_good()
{
  goodB2G1_165();
  goodB2G2_165();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (000000000043433C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52c_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000434361) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000434386) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004343BD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_34_bad()
{
  __int16 v1; // [rsp+Ah] [rbp-6h]
  __int16 v2; // [rsp+Ch] [rbp-4h]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434412) ----------------------------------------------------
int goodG2B_238()
{
  return printIntLine(3u);
}

//----- (0000000000434450) ----------------------------------------------------
int goodB2G_214()
{
  int result; // eax
  __int16 v1; // [rsp+Ah] [rbp-6h]
  __int16 v2; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v2 = v1;
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004344B9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_34_good()
{
  goodG2B_238();
  return goodB2G_214();
}

//----- (00000000004344D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (0000000000434505) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (0000000000434537) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}

//----- (000000000043457D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_preinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004345AF) ----------------------------------------------------
int goodG2B_239()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_preinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (00000000004345E1) ----------------------------------------------------
int goodB2G_215()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fgets_preinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000434628) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_61_good()
{
  goodG2B_239();
  return goodB2G_215();
}

//----- (0000000000434642) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData + 1);
}
// 6A9550: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData;

//----- (0000000000434669) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData + 1);
}
// 6A9554: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData;

//----- (0000000000434690) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData + 1);
  return result;
}
// 6A9558: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData;

//----- (00000000004346CC) ----------------------------------------------------
void CWE190_Integer_Overflow__int_fgets_preinc_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v3 = ++v4;
    printIntLine(v4);
  }
}

//----- (0000000000434764) ----------------------------------------------------
void goodB2G_216()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = ++v4;
      printIntLine(v4);
    }
  }
}

//----- (0000000000434811) ----------------------------------------------------
int goodG2B_240()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000434863) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_17_good()
{
  goodB2G_216();
  return goodG2B_240();
}

//----- (000000000043487D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_preinc_61b_badSource()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000434890) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004348A3) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_preinc_61b_goodB2GSource()
{
  return 0x7FFFFFFFLL;
}

//----- (00000000004348B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004348DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000434904) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000043493D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_65_bad()
{
  return CWE190_Integer_Overflow__short_max_preinc_65b_badSink(0x7FFF);
}

//----- (0000000000434967) ----------------------------------------------------
int goodG2B_241()
{
  return CWE190_Integer_Overflow__short_max_preinc_65b_goodG2BSink(2);
}

//----- (0000000000434991) ----------------------------------------------------
int goodB2G_217()
{
  return CWE190_Integer_Overflow__short_max_preinc_65b_goodB2GSink(0x7FFF);
}

//----- (00000000004349BB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_65_good()
{
  goodG2B_241();
  return goodB2G_217();
}

//----- (00000000004349D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54e_badSink(a1);
}

//----- (00000000004349EF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000434A09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000434A23) ----------------------------------------------------
int __fastcall badSink_41(int a1)
{
  int result; // eax

  result = badStatic_10;
  if ( badStatic_10 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A9410: using guessed type int badStatic_10;

//----- (0000000000434A4E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  badStatic_10 = 1;
  return badSink_41(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9410: using guessed type int badStatic_10;

//----- (0000000000434A90) ----------------------------------------------------
int __fastcall goodB2G1Sink_10(int a1)
{
  if ( goodB2G1Static_10 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6A9414: using guessed type int goodB2G1Static_10;

//----- (0000000000434AD9) ----------------------------------------------------
int goodB2G1_166()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G1Static_10 = 0;
  return goodB2G1Sink_10(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9414: using guessed type int goodB2G1Static_10;

//----- (0000000000434B1B) ----------------------------------------------------
int __fastcall goodB2G2Sink_10(int a1)
{
  int result; // eax

  result = goodB2G2Static_10;
  if ( goodB2G2Static_10 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6A9418: using guessed type int goodB2G2Static_10;

//----- (0000000000434B58) ----------------------------------------------------
int goodB2G2_166()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G2Static_10 = 1;
  return goodB2G2Sink_10(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9418: using guessed type int goodB2G2Static_10;

//----- (0000000000434B9A) ----------------------------------------------------
int __fastcall goodG2BSink_41(int a1)
{
  int result; // eax

  result = goodG2BStatic_10;
  if ( goodG2BStatic_10 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6A941C: using guessed type int goodG2BStatic_10;

//----- (0000000000434BC5) ----------------------------------------------------
int goodG2B_242()
{
  goodG2BStatic_10 = 1;
  return goodG2BSink_41(2);
}
// 6A941C: using guessed type int goodG2BStatic_10;

//----- (0000000000434BF1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_21_good()
{
  goodB2G1_166();
  goodB2G2_166();
  return goodG2B_242();
}

//----- (0000000000434C15) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434C5C) ----------------------------------------------------
int goodB2G1_167()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434CB7) ----------------------------------------------------
int goodB2G2_167()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434D12) ----------------------------------------------------
int goodG2B1_142()
{
  return printUnsignedLine(3u);
}

//----- (0000000000434D3E) ----------------------------------------------------
int goodG2B2_142()
{
  return printUnsignedLine(3u);
}

//----- (0000000000434D6A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_03_good()
{
  goodB2G1_167();
  goodB2G2_167();
  goodG2B1_142();
  return goodG2B2_142();
}

//----- (0000000000434D98) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_53_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000434DC4) ----------------------------------------------------
int goodG2B_243()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53b_goodG2BSink(2LL);
}

//----- (0000000000434DEA) ----------------------------------------------------
int goodB2G_218()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000434E16) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_53_good()
{
  goodG2B_243();
  return goodB2G_218();
}

//----- (0000000000434E30) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_preinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000434E8D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000434EA0) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_preinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000434EFD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000434F1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000434F3F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000434F75) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%hd", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__short_fscanf_preinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434FB6) ----------------------------------------------------
int goodG2B_244()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_fscanf_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000434FE0) ----------------------------------------------------
int goodB2G_219()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%hd", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__short_fscanf_preinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435021) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_66_good()
{
  goodG2B_244();
  return goodB2G_219();
}

//----- (000000000043503B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_preinc_61b_badSource();
  return printIntLine(v0 + 1);
}

//----- (000000000043506D) ----------------------------------------------------
int goodG2B_245()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_preinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000043509F) ----------------------------------------------------
int goodB2G_220()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_max_preinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004350E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_61_good()
{
  goodG2B_245();
  return goodB2G_220();
}

//----- (0000000000435100) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printLongLongLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435175) ----------------------------------------------------
int goodB2G_221()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printLongLongLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435209) ----------------------------------------------------
int goodG2B_246()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (0000000000435262) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_17_good()
{
  goodB2G_221();
  return goodG2B_246();
}

//----- (000000000043527C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_badSink(v2);
}

//----- (00000000004352EC) ----------------------------------------------------
int goodG2B_247()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_goodG2BSink(2);
}

//----- (0000000000435314) ----------------------------------------------------
int goodB2G_222()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_67b_goodB2GSink(v2);
}

//----- (0000000000435384) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_67_good()
{
  goodG2B_247();
  return goodB2G_222();
}

//----- (000000000043539E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004353BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004353E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000435416) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A917C: using guessed type int staticFive_10;

//----- (0000000000435458) ----------------------------------------------------
int goodB2G1_168()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 0x7FFFFFFF;
  if ( staticFive_10 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6A917C: using guessed type int staticFive_10;

//----- (00000000004354BB) ----------------------------------------------------
int goodB2G2_168()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6A917C: using guessed type int staticFive_10;

//----- (0000000000435512) ----------------------------------------------------
int goodG2B1_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A917C: using guessed type int staticFive_10;

//----- (0000000000435560) ----------------------------------------------------
int goodG2B2_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 2;
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A917C: using guessed type int staticFive_10;

//----- (00000000004355A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_07_good()
{
  goodB2G1_168();
  goodB2G2_168();
  goodG2B1_143();
  return goodG2B2_143();
}

//----- (00000000004355D0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%u", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 + 1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043566B) ----------------------------------------------------
int goodB2G_223()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  else if ( v1 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435730) ----------------------------------------------------
int goodG2B_248()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (0000000000435797) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good()
{
  goodB2G_223();
  return goodG2B_248();
}

//----- (00000000004357B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (00000000004357E7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000043581D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (0000000000435865) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_52c_badSink(a1);
}

//----- (000000000043587F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000435899) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_52b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_52c_goodB2GSink(a1);
}

//----- (00000000004358B3) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_53_bad()
{
  return CWE190_Integer_Overflow__char_max_preinc_53b_badSink(127);
}

//----- (00000000004358D0) ----------------------------------------------------
int goodG2B_249()
{
  return CWE190_Integer_Overflow__char_max_preinc_53b_goodG2BSink(2);
}

//----- (00000000004358ED) ----------------------------------------------------
int goodB2G_224()
{
  return CWE190_Integer_Overflow__char_max_preinc_53b_goodB2GSink(127);
}

//----- (000000000043590A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_53_good()
{
  goodG2B_249();
  return goodB2G_224();
}

//----- (0000000000435924) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000435945) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000435966) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043599C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53b_badSink(v7);
}
// 43599C: using guessed type char buf[16];

//----- (0000000000435A84) ----------------------------------------------------
int goodG2B_250()
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53b_goodG2BSink(2);
}

//----- (0000000000435AA6) ----------------------------------------------------
int goodB2G_225()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_53b_goodB2GSink(v7);
}
// 435AA6: using guessed type char buf[16];

//----- (0000000000435B8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_53_good()
{
  goodG2B_250();
  return goodB2G_225();
}

//----- (0000000000435BA8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54d_badSink(a1);
}

//----- (0000000000435BBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54d_goodG2BSink(a1);
}

//----- (0000000000435BD6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_54d_goodB2GSink(a1);
}

//----- (0000000000435BED) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435C1C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000435C32) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_61b_goodB2GSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435C61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000435C8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000435CB9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000435CF7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 435CF7: using guessed type char buf[16];

//----- (0000000000435E31) ----------------------------------------------------
int goodB2G1_169()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 435E31: using guessed type char buf[16];

//----- (0000000000435F80) ----------------------------------------------------
int goodB2G2_169()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 435F80: using guessed type char buf[16];

//----- (00000000004360CF) ----------------------------------------------------
int goodG2B1_144()
{
  return printIntLine(3u);
}

//----- (00000000004360FD) ----------------------------------------------------
int goodG2B2_144()
{
  return printIntLine(3u);
}

//----- (000000000043612B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_15_good()
{
  goodB2G1_169();
  goodB2G2_169();
  goodG2B1_144();
  return goodG2B2_144();
}

//----- (0000000000436159) ----------------------------------------------------
int __fastcall badSink_42(__int16 a1)
{
  int result; // eax

  result = badStatic_11;
  if ( badStatic_11 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9420: using guessed type int badStatic_11;

//----- (000000000043618B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_21_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  badStatic_11 = 1;
  return badSink_42(v1);
}
// 6A9420: using guessed type int badStatic_11;

//----- (00000000004361F6) ----------------------------------------------------
int __fastcall goodB2G1Sink_11(__int16 a1)
{
  if ( goodB2G1Static_11 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6A9424: using guessed type int goodB2G1Static_11;

//----- (0000000000436248) ----------------------------------------------------
int goodB2G1_170()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G1Static_11 = 0;
  return goodB2G1Sink_11(v1);
}
// 6A9424: using guessed type int goodB2G1Static_11;

//----- (00000000004362B3) ----------------------------------------------------
int __fastcall goodB2G2Sink_11(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_11;
  if ( goodB2G2Static_11 )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6A9428: using guessed type int goodB2G2Static_11;

//----- (00000000004362F9) ----------------------------------------------------
int goodB2G2_170()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G2Static_11 = 1;
  return goodB2G2Sink_11(v1);
}
// 6A9428: using guessed type int goodB2G2Static_11;

//----- (0000000000436364) ----------------------------------------------------
int __fastcall goodG2BSink_42(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_11;
  if ( goodG2BStatic_11 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A942C: using guessed type int goodG2BStatic_11;

//----- (0000000000436396) ----------------------------------------------------
int goodG2B_251()
{
  goodG2BStatic_11 = 1;
  return goodG2BSink_42(2);
}
// 6A942C: using guessed type int goodG2BStatic_11;

//----- (00000000004363C1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_21_good()
{
  goodB2G1_170();
  goodB2G2_170();
  return goodG2B_251();
}

//----- (00000000004363E5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_18_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000436420) ----------------------------------------------------
int goodB2G_226()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000436477) ----------------------------------------------------
int goodG2B_252()
{
  return printLongLongLine(3LL);
}

//----- (00000000004364AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_18_good()
{
  goodB2G_226();
  return goodG2B_252();
}

//----- (00000000004364C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_52c_badSink(a1);
}

//----- (00000000004364E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_52c_goodG2BSink(a1);
}

//----- (00000000004364FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000436514) ----------------------------------------------------
__int64 __fastcall badSource_7(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 436514: using guessed type char buf[16];

//----- (0000000000436637) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_7(0);
  return printIntLine(v0 + 1);
}

//----- (0000000000436669) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return 2LL;
}

//----- (000000000043667C) ----------------------------------------------------
int goodG2B_253()
{
  int v0; // eax

  v0 = goodG2BSource_7();
  return printIntLine(v0 + 1);
}

//----- (00000000004366AE) ----------------------------------------------------
__int64 __fastcall goodB2GSource_7(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4366AE: using guessed type char buf[16];

//----- (00000000004367D1) ----------------------------------------------------
int goodB2G_227()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_7(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000436818) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_42_good()
{
  goodB2G_227();
  return goodG2B_253();
}

//----- (0000000000436832) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436879) ----------------------------------------------------
int goodB2G1_171()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004368D4) ----------------------------------------------------
int goodB2G2_171()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043692F) ----------------------------------------------------
int goodG2B1_145()
{
  return printUnsignedLine(3u);
}

//----- (000000000043695B) ----------------------------------------------------
int goodG2B2_145()
{
  return printUnsignedLine(3u);
}

//----- (0000000000436987) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_02_good()
{
  goodB2G1_171();
  goodB2G2_171();
  goodG2B1_145();
  return goodG2B2_145();
}

//----- (00000000004369B5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_06_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_47690C, &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436A10) ----------------------------------------------------
int goodB2G1_172()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_47690C, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436A8B) ----------------------------------------------------
int goodB2G2_172()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_47690C, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436AFA) ----------------------------------------------------
int goodG2B1_146()
{
  return printHexCharLine(3);
}

//----- (0000000000436B42) ----------------------------------------------------
int goodG2B2_146()
{
  return printHexCharLine(3);
}

//----- (0000000000436B7E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_06_good()
{
  goodB2G1_172();
  goodB2G2_172();
  goodG2B1_146();
  return goodG2B2_146();
}

//----- (0000000000436BAC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_16_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (0000000000436C03) ----------------------------------------------------
int goodB2G_228()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000436C6C) ----------------------------------------------------
int goodG2B_254()
{
  return printHexCharLine(3);
}

//----- (0000000000436C96) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_16_good()
{
  goodB2G_228();
  return goodG2B_254();
}

//----- (0000000000436CB0) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (0000000000436CBB) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (0000000000436CC6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine(v6 + 1);
  return result;
}

//----- (0000000000436D56) ----------------------------------------------------
int goodB2G1_173()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}

//----- (0000000000436E07) ----------------------------------------------------
int goodB2G2_173()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_6();
  if ( result )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}

//----- (0000000000436EAC) ----------------------------------------------------
int goodG2B1_147()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000436F00) ----------------------------------------------------
int goodG2B2_147()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000436F48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_08_good()
{
  goodB2G1_173();
  goodB2G2_173();
  goodG2B1_147();
  return goodG2B2_147();
}

//----- (0000000000436F76) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000436FD1) ----------------------------------------------------
int goodB2G1_174()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000043704C) ----------------------------------------------------
int goodB2G2_174()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (00000000004370BB) ----------------------------------------------------
int goodG2B1_148()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000437107) ----------------------------------------------------
int goodG2B2_148()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000437147) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_good()
{
  goodB2G1_174();
  goodB2G2_174();
  goodG2B1_148();
  return goodG2B2_148();
}

//----- (0000000000437175) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_badSink(a1);
}

//----- (000000000043718C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_goodG2BSink(a1);
}

//----- (00000000004371A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54e_goodB2GSink(a1);
}

//----- (00000000004371BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_11 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9180: using guessed type int staticFive_11;

//----- (000000000043721F) ----------------------------------------------------
int goodB2G1_175()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_11 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFive_11 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9180: using guessed type int staticFive_11;

//----- (00000000004372AF) ----------------------------------------------------
int goodB2G2_175()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_11 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9180: using guessed type int staticFive_11;

//----- (0000000000437333) ----------------------------------------------------
int goodG2B1_149()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_11 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A9180: using guessed type int staticFive_11;

//----- (0000000000437388) ----------------------------------------------------
int goodG2B2_149()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_11 == 5 )
    v1 = 2LL;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A9180: using guessed type int staticFive_11;

//----- (00000000004373D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_good()
{
  goodB2G1_175();
  goodB2G2_175();
  goodG2B1_149();
  return goodG2B2_149();
}

//----- (00000000004373FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_10 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printIntLine(v8 + 1);
  return result;
}
// 6A9184: using guessed type int staticTrue_10;
// 4373FF: using guessed type char buf[16];

//----- (000000000043754F) ----------------------------------------------------
int goodB2G1_176()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_10 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( staticFalse_10 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6A9184: using guessed type int staticTrue_10;
// 6A9430: using guessed type int staticFalse_10;
// 43754F: using guessed type char buf[16];

//----- (00000000004376C0) ----------------------------------------------------
int goodB2G2_176()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_10 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6A9184: using guessed type int staticTrue_10;
// 4376C0: using guessed type char buf[16];

//----- (0000000000437825) ----------------------------------------------------
int goodG2B1_150()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_10 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9184: using guessed type int staticTrue_10;
// 6A9430: using guessed type int staticFalse_10;

//----- (0000000000437871) ----------------------------------------------------
int goodG2B2_150()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_10 )
    v1 = 2;
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9184: using guessed type int staticTrue_10;

//----- (00000000004378B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_05_good()
{
  goodB2G1_176();
  goodB2G2_176();
  goodG2B1_150();
  return goodG2B2_150();
}

//----- (00000000004378DF) ----------------------------------------------------
int __fastcall badSink_43(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437900) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_43(v8);
}
// 437900: using guessed type char buf[16];

//----- (0000000000437A2E) ----------------------------------------------------
int __fastcall goodG2BSink_43(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437A4F) ----------------------------------------------------
int goodG2B_255()
{
  return goodG2BSink_43(2);
}

//----- (0000000000437A71) ----------------------------------------------------
int __fastcall goodB2GSink_30(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000437AA7) ----------------------------------------------------
int goodB2G_229()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_30(v8);
}
// 437AA7: using guessed type char buf[16];

//----- (0000000000437BD5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_41_good()
{
  goodB2G_229();
  return goodG2B_255();
}

//----- (0000000000437BEF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437C36) ----------------------------------------------------
int goodG2B_256()
{
  return printUnsignedLine(3u);
}

//----- (0000000000437C62) ----------------------------------------------------
int goodB2G_230()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437CBD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_01_good()
{
  goodG2B_256();
  return goodB2G_230();
}

//----- (0000000000437CD7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_51_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_51b_badSink(v0);
}

//----- (0000000000437D21) ----------------------------------------------------
int goodG2B_257()
{
  return CWE190_Integer_Overflow__char_rand_preinc_51b_goodG2BSink(2);
}

//----- (0000000000437D3E) ----------------------------------------------------
int goodB2G_231()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_51b_goodB2GSink(v0);
}

//----- (0000000000437D88) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_51_good()
{
  goodG2B_257();
  return goodB2G_231();
}

//----- (0000000000437DA2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_52b_badSink(v7);
}
// 437DA2: using guessed type char buf[16];

//----- (0000000000437E8A) ----------------------------------------------------
int goodG2B_258()
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_52b_goodG2BSink(2);
}

//----- (0000000000437EAC) ----------------------------------------------------
int goodB2G_232()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_preinc_52b_goodB2GSink(v7);
}
// 437EAC: using guessed type char buf[16];

//----- (0000000000437F94) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_52_good()
{
  goodG2B_258();
  return goodB2G_232();
}

//----- (0000000000437FAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11 + 1;
  v6 = v11 + 1;
  return printIntLine(v11 + 1);
}
// 437FAE: using guessed type char buf[16];

//----- (00000000004380F2) ----------------------------------------------------
int goodG2B_259()
{
  return printIntLine(3u);
}

//----- (000000000043812A) ----------------------------------------------------
int goodB2G_233()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v5 = v10;
  v6 = v10;
  if ( v10 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 43812A: using guessed type char buf[16];

//----- (0000000000438283) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_34_good()
{
  goodG2B_259();
  return goodB2G_233();
}

//----- (000000000043829D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004382BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004382DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000438315) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000438341) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043836D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004383AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 4383AE: using guessed type char buf[16];

//----- (00000000004384A2) ----------------------------------------------------
int goodB2G_234()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 4384A2: using guessed type char buf[16];

//----- (00000000004385AB) ----------------------------------------------------
int goodG2B_260()
{
  return printIntLine(3u);
}

//----- (00000000004385D9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_16_good()
{
  goodB2G_234();
  return goodG2B_260();
}

//----- (00000000004385F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 4385F3: using guessed type char buf[16];

//----- (000000000043872B) ----------------------------------------------------
int goodB2G1_177()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 43872B: using guessed type char buf[16];

//----- (0000000000438878) ----------------------------------------------------
int goodB2G2_177()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 438878: using guessed type char buf[16];

//----- (00000000004389C5) ----------------------------------------------------
int goodG2B1_151()
{
  return printIntLine(3u);
}

//----- (00000000004389F1) ----------------------------------------------------
int goodG2B2_151()
{
  return printIntLine(3u);
}

//----- (0000000000438A1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_03_good()
{
  goodB2G1_177();
  goodB2G2_177();
  goodG2B1_151();
  return goodG2B2_151();
}

//----- (0000000000438A4B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_34_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000438A83) ----------------------------------------------------
int goodG2B_261()
{
  return printIntLine(3u);
}

//----- (0000000000438ABB) ----------------------------------------------------
int goodB2G_235()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000438B08) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_34_good()
{
  goodG2B_261();
  return goodB2G_235();
}

//----- (0000000000438B22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438B7D) ----------------------------------------------------
int goodB2G1_178()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000438BF8) ----------------------------------------------------
int goodB2G2_178()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438C67) ----------------------------------------------------
int goodG2B1_152()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000438CB3) ----------------------------------------------------
int goodG2B2_152()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438CF3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_09_good()
{
  goodB2G1_178();
  goodB2G2_178();
  goodG2B1_152();
  return goodG2B2_152();
}

//----- (0000000000438D21) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_06_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (0000000000438D8A) ----------------------------------------------------
int goodB2G1_179()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000438E11) ----------------------------------------------------
int goodB2G2_179()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000438E8C) ----------------------------------------------------
int goodG2B1_153()
{
  return printHexCharLine(3);
}

//----- (0000000000438ED4) ----------------------------------------------------
int goodG2B2_153()
{
  return printHexCharLine(3);
}

//----- (0000000000438F10) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_06_good()
{
  goodB2G1_179();
  goodB2G2_179();
  goodG2B1_153();
  return goodG2B2_153();
}

//----- (0000000000438F3E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_31_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000438F74) ----------------------------------------------------
int goodG2B_262()
{
  return printHexCharLine(3);
}

//----- (0000000000438FAA) ----------------------------------------------------
int goodB2G_236()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000438FF2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_31_good()
{
  goodG2B_262();
  return goodB2G_236();
}

//----- (000000000043900C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54d_badSink(a1);
}

//----- (0000000000439026) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54d_goodG2BSink(a1);
}

//----- (0000000000439040) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54d_goodB2GSink(a1);
}

//----- (000000000043905A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (00000000004390AC) ----------------------------------------------------
int goodB2G_237()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(++v1);
  }
  return result;
}

//----- (0000000000439110) ----------------------------------------------------
int goodG2B_263()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (0000000000439162) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_17_good()
{
  goodB2G_237();
  return goodG2B_263();
}

//----- (000000000043917C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004391A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004391CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000439208) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_67b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000439233) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043925E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000043929B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000439311) ----------------------------------------------------
int goodB2G_238()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000439399) ----------------------------------------------------
int goodG2B_264()
{
  return printUnsignedLine(3u);
}

//----- (00000000004393C7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_18_good()
{
  goodB2G_238();
  return goodG2B_264();
}

//----- (00000000004393E1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v6 + 1);
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (00000000004394A2) ----------------------------------------------------
int goodB2G_239()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v11 + 1);
  }
  else if ( v11 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(v11 + 1);
  }
  return result;
}

//----- (00000000004395B7) ----------------------------------------------------
int goodG2B_265()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (000000000043961E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_12_good()
{
  goodB2G_239();
  return goodG2B_265();
}

//----- (0000000000439638) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_54b_badSink(v2);
}

//----- (00000000004396A2) ----------------------------------------------------
int goodG2B_266()
{
  return CWE190_Integer_Overflow__int_rand_preinc_54b_goodG2BSink(2);
}

//----- (00000000004396C4) ----------------------------------------------------
int goodB2G_240()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_54b_goodB2GSink(v2);
}

//----- (000000000043972E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_54_good()
{
  goodG2B_266();
  return goodB2G_240();
}

//----- (0000000000439748) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_32_bad()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFF;
  v1 = 0x7FFF;
  v3 = -32768;
  v2 = -32768;
  return printIntLine(0xFFFF8000);
}

//----- (00000000004397A7) ----------------------------------------------------
int goodG2B_267()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (0000000000439806) ----------------------------------------------------
int goodB2G_241()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  __int16 v3; // [rsp+Eh] [rbp-12h]
  __int16 *v4; // [rsp+10h] [rbp-10h]
  __int16 *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFF;
  v1 = 0x7FFF;
  v2 = 0x7FFF;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000439879) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_32_good()
{
  goodG2B_267();
  return goodB2G_241();
}

//----- (0000000000439893) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_34_bad()
{
  return printUnsignedLine(0);
}

//----- (00000000004398CB) ----------------------------------------------------
int goodG2B_268()
{
  return printUnsignedLine(3u);
}

//----- (0000000000439903) ----------------------------------------------------
int goodB2G_242()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043994D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_34_good()
{
  goodG2B_268();
  return goodB2G_242();
}

//----- (0000000000439967) ----------------------------------------------------
int __fastcall badSink_44(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043998E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_44_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))badSink_44)(v4);
}

//----- (0000000000439A54) ----------------------------------------------------
int __fastcall goodG2BSink_44(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000439A7B) ----------------------------------------------------
int goodG2B_269()
{
  return goodG2BSink_44(2LL);
}

//----- (0000000000439AAA) ----------------------------------------------------
int __fastcall goodB2GSink_31(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000439AED) ----------------------------------------------------
__int64 goodB2G_243()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))goodB2GSink_31)(v4);
}

//----- (0000000000439BB3) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_44_good()
{
  goodG2B_269();
  return goodB2G_243();
}

//----- (0000000000439BCD) ----------------------------------------------------
int __fastcall badSink_45(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000439BEE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_41_bad()
{
  return badSink_45(0x7FFFFFFF);
}

//----- (0000000000439C10) ----------------------------------------------------
int __fastcall goodG2BSink_45(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000439C31) ----------------------------------------------------
int goodG2B_270()
{
  return goodG2BSink_45(2);
}

//----- (0000000000439C53) ----------------------------------------------------
int __fastcall goodB2GSink_32(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000439C89) ----------------------------------------------------
int goodB2G_244()
{
  return goodB2GSink_32(0x7FFFFFFF);
}

//----- (0000000000439CAB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_41_good()
{
  goodB2G_244();
  return goodG2B_270();
}

//----- (0000000000439CC5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_badSource()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000439CD8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000439CEB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_goodB2GSource()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000439CFE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_51b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000439D23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000439D48) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000439D7F) ----------------------------------------------------
int badSink_46()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_preinc_45_badData + 1);
}
// 6A9434: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_45_badData;

//----- (0000000000439DA6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_45_badData = v7;
  return badSink_46();
}
// 6A9434: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_45_badData;
// 439DA6: using guessed type char buf[16];

//----- (0000000000439E97) ----------------------------------------------------
int goodG2BSink_46()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodG2BData + 1);
}
// 6A9438: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodG2BData;

//----- (0000000000439EBE) ----------------------------------------------------
int goodG2B_271()
{
  CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodG2BData = 2;
  return goodG2BSink_46();
}
// 6A9438: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodG2BData;

//----- (0000000000439EE9) ----------------------------------------------------
int goodB2GSink_33()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodB2GData + 1);
  return result;
}
// 6A943C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodB2GData;

//----- (0000000000439F25) ----------------------------------------------------
int goodB2G_245()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodB2GData = v7;
  return goodB2GSink_33();
}
// 6A943C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_45_goodB2GData;
// 439F25: using guessed type char buf[16];

//----- (000000000043A016) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_45_good()
{
  goodG2B_271();
  return goodB2G_245();
}

//----- (000000000043A030) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_14_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (000000000043A091) ----------------------------------------------------
int goodB2G1_180()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (000000000043A114) ----------------------------------------------------
int goodB2G2_180()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (000000000043A18B) ----------------------------------------------------
int goodG2B1_154()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000043A1DB) ----------------------------------------------------
int goodG2B2_154()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000043A21F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_14_good()
{
  goodB2G1_180();
  goodB2G2_180();
  goodG2B1_154();
  return goodG2B2_154();
}

//----- (000000000043A24D) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (000000000043A258) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (000000000043A263) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_7();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043A2B8) ----------------------------------------------------
int goodB2G1_181()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)staticReturnsFalse_7() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (000000000043A335) ----------------------------------------------------
int goodB2G2_181()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (000000000043A3A6) ----------------------------------------------------
int goodG2B1_155()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_7();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043A401) ----------------------------------------------------
int goodG2B2_155()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 2LL;
  result = staticReturnsTrue_7();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043A450) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_08_good()
{
  goodB2G1_181();
  goodB2G2_181();
  goodG2B1_155();
  return goodG2B2_155();
}

//----- (000000000043A47E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_32_bad()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 *v3; // [rsp+10h] [rbp-10h]
  __int16 *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  *v4 = v1;
  return printIntLine((__int16)(*v3 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A4F4) ----------------------------------------------------
int goodG2B_272()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000043A553) ----------------------------------------------------
int goodB2G_246()
{
  int result; // eax
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Eh] [rbp-12h]
  __int16 *v4; // [rsp+10h] [rbp-10h]
  __int16 *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v3 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A5DD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_32_good()
{
  goodG2B_272();
  return goodB2G_246();
}

//----- (000000000043A5F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53d_badSink(a1);
}

//----- (000000000043A611) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53d_goodG2BSink(a1);
}

//----- (000000000043A62B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_53d_goodB2GSink(a1);
}

//----- (000000000043A645) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000043A673) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000043A6A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (000000000043A6E1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_67_bad()
{
  return CWE190_Integer_Overflow__char_max_preinc_67b_badSink(127);
}

//----- (000000000043A705) ----------------------------------------------------
int goodG2B_273()
{
  return CWE190_Integer_Overflow__char_max_preinc_67b_goodG2BSink(2);
}

//----- (000000000043A729) ----------------------------------------------------
int goodB2G_247()
{
  return CWE190_Integer_Overflow__char_max_preinc_67b_goodB2GSink(127);
}

//----- (000000000043A74D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_67_good()
{
  goodG2B_273();
  return goodB2G_247();
}

//----- (000000000043A767) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_53d_badSink(a1);
}

//----- (000000000043A77E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_53d_goodG2BSink(a1);
}

//----- (000000000043A795) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_53d_goodB2GSink(a1);
}

//----- (000000000043A7AC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_badSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000043A7DE) ----------------------------------------------------
int goodG2B_274()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000043A810) ----------------------------------------------------
int goodB2G_248()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_max_preinc_61b_goodB2GSource();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043A854) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_61_good()
{
  goodG2B_274();
  return goodB2G_248();
}

//----- (000000000043A86E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54c_badSink(a1);
}

//----- (000000000043A888) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54c_goodG2BSink(a1);
}

//----- (000000000043A8A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_54c_goodB2GSink(a1);
}

//----- (000000000043A8BC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_04_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477178, &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A919) ----------------------------------------------------
int goodB2G1_182()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477178, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A998) ----------------------------------------------------
int goodB2G2_182()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477178, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043AA0B) ----------------------------------------------------
int goodG2B1_156()
{
  return printIntLine(3u);
}

//----- (000000000043AA57) ----------------------------------------------------
int goodG2B2_156()
{
  return printIntLine(3u);
}

//----- (000000000043AA97) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_04_good()
{
  goodB2G1_182();
  goodB2G2_182();
  goodG2B1_156();
  return goodG2B2_156();
}

//----- (000000000043AAC5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_31_bad()
{
  __int16 v1; // [rsp+8h] [rbp-8h]
  __int16 v2; // [rsp+Ah] [rbp-6h]
  __int16 v3; // [rsp+Ch] [rbp-4h]
  __int16 v4; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043AB1A) ----------------------------------------------------
int goodG2B_275()
{
  return printIntLine(3u);
}

//----- (000000000043AB58) ----------------------------------------------------
int goodB2G_249()
{
  int result; // eax
  __int16 v1; // [rsp+8h] [rbp-8h]
  __int16 v2; // [rsp+Ch] [rbp-4h]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043ABC1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_31_good()
{
  goodG2B_275();
  return goodB2G_249();
}

//----- (000000000043ABDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = -1;
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9188: using guessed type int staticFive_12;

//----- (000000000043AC1D) ----------------------------------------------------
int goodB2G1_183()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = -1;
  if ( staticFive_12 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6A9188: using guessed type int staticFive_12;

//----- (000000000043AC7D) ----------------------------------------------------
int goodB2G2_183()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = -1;
  result = staticFive_12;
  if ( staticFive_12 == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6A9188: using guessed type int staticFive_12;

//----- (000000000043ACD1) ----------------------------------------------------
int goodG2B1_157()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9188: using guessed type int staticFive_12;

//----- (000000000043AD1F) ----------------------------------------------------
int goodG2B2_157()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = 2;
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A9188: using guessed type int staticFive_12;

//----- (000000000043AD61) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_07_good()
{
  goodB2G1_183();
  goodB2G2_183();
  goodG2B1_157();
  return goodG2B2_157();
}

//----- (000000000043AD8F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_63_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043ADC6) ----------------------------------------------------
int goodG2B_276()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_fscanf_preinc_63b_goodG2BSink(&v1);
}

//----- (000000000043ADE4) ----------------------------------------------------
int goodB2G_250()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043AE1B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_63_good()
{
  goodG2B_276();
  return goodB2G_250();
}

//----- (000000000043AE35) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043AE56) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043AE77) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000043AEAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_badSink(a1);
}

//----- (000000000043AEC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_goodG2BSink(a1);
}

//----- (000000000043AED8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54d_goodB2GSink(a1);
}

//----- (000000000043AEEF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_preinc_68_badData + 1);
}
// 6A95C0: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_68_badData;

//----- (000000000043AF16) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_preinc_68_goodG2BData + 1);
}
// 6A95C8: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_68_goodG2BData;

//----- (000000000043AF3D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_rand_preinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_rand_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95C4: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_68_goodB2GData;

//----- (000000000043AF79) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043AF9A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043AFBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000043AFEE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_fscanf_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_fscanf_preinc_22_badGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9440: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_badGlobal;

//----- (000000000043B020) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6A9444: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Global;

//----- (000000000043B072) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6A9448: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Global;

//----- (000000000043B0B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A944C: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BGlobal;

//----- (000000000043B0EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54d_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54e_badSink(a1);
}

//----- (000000000043B104) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54d_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54e_goodG2BSink(a1);
}

//----- (000000000043B11E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54d_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54e_goodB2GSink(a1);
}

//----- (000000000043B138) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B179) ----------------------------------------------------
int goodG2B_277()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_goodG2BSink(2);
}

//----- (000000000043B1A4) ----------------------------------------------------
__int64 goodB2G_251()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B1E5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_65_good()
{
  goodG2B_277();
  return goodB2G_251();
}

//----- (000000000043B1FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_53c_badSink(a1);
}

//----- (000000000043B216) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_53c_goodG2BSink(a1);
}

//----- (000000000043B22D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_53c_goodB2GSink(a1);
}

//----- (000000000043B244) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043B265) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043B286) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043B2BC) ----------------------------------------------------
int __fastcall badSink_47(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043B2E4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_44_bad()
{
  return badSink_47(0x7FFF);
}

//----- (000000000043B30E) ----------------------------------------------------
int __fastcall goodG2BSink_47(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043B336) ----------------------------------------------------
int goodG2B_278()
{
  return goodG2BSink_47(2);
}

//----- (000000000043B360) ----------------------------------------------------
int __fastcall goodB2GSink_34(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000043B39C) ----------------------------------------------------
int goodB2G_252()
{
  return goodB2GSink_34(0x7FFF);
}

//----- (000000000043B3C6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_44_good()
{
  goodG2B_278();
  return goodB2G_252();
}

//----- (000000000043B3E0) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (000000000043B3EB) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (000000000043B3F6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_8();
  if ( result )
    result = printUnsignedLine(v6 + 1);
  return result;
}

//----- (000000000043B486) ----------------------------------------------------
int goodB2G1_184()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (000000000043B534) ----------------------------------------------------
int goodB2G2_184()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}

//----- (000000000043B5D6) ----------------------------------------------------
int goodG2B1_158()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043B62A) ----------------------------------------------------
int goodG2B2_158()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043B672) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_08_good()
{
  goodB2G1_184();
  goodB2G2_184();
  goodG2B1_158();
  return goodG2B2_158();
}

//----- (000000000043B6A0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_17_bad()
{
  int result; // eax
  char v1; // [rsp+6h] [rbp-Ah]
  char v2; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%c", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printHexCharLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B70D) ----------------------------------------------------
int goodB2G_253()
{
  int result; // eax
  char v1; // [rsp+6h] [rbp-Ah]
  char v2; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%c", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 127 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printHexCharLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B78E) ----------------------------------------------------
int goodG2B_279()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (000000000043B7DC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_17_good()
{
  goodB2G_253();
  return goodG2B_279();
}

//----- (000000000043B7F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_68_badData = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_68b_badSink();
}
// 6A95C0: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_68_badData;

//----- (000000000043B869) ----------------------------------------------------
int goodG2B_280()
{
  CWE190_Integer_Overflow__int_rand_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_rand_preinc_68b_goodG2BSink();
}
// 6A95C8: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_68_goodG2BData;

//----- (000000000043B894) ----------------------------------------------------
int goodB2G_254()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_68b_goodB2GSink();
}
// 6A95C4: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_68_goodB2GData;

//----- (000000000043B907) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_68_good()
{
  goodG2B_280();
  return goodB2G_254();
}

//----- (000000000043B921) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_fscanf_preinc_61b_badSource(0);
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000043B958) ----------------------------------------------------
int goodG2B_281()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_fscanf_preinc_61b_goodG2BSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000043B98F) ----------------------------------------------------
int goodB2G_255()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_fscanf_preinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000043B9DA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_61_good()
{
  goodG2B_281();
  return goodB2G_255();
}

//----- (000000000043B9F4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_22_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_fscanf_preinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9440: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_badGlobal;

//----- (000000000043BA37) ----------------------------------------------------
int goodB2G1_185()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9444: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G1Global;

//----- (000000000043BA7A) ----------------------------------------------------
int goodB2G2_185()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9448: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodB2G2Global;

//----- (000000000043BABD) ----------------------------------------------------
int goodG2B_282()
{
  CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BSink(2);
}
// 6A944C: using guessed type int CWE190_Integer_Overflow__short_fscanf_preinc_22_goodG2BGlobal;

//----- (000000000043BAE8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_22_good()
{
  goodB2G1_185();
  goodB2G2_185();
  return goodG2B_282();
}

//----- (000000000043BB0C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_64_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_64b_badSink(&v1);
}

//----- (000000000043BB2E) ----------------------------------------------------
int goodG2B_283()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_max_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000043BB50) ----------------------------------------------------
int goodB2G_256()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_64b_goodB2GSink(&v1);
}

//----- (000000000043BB72) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_64_good()
{
  goodG2B_283();
  return goodB2G_256();
}

//----- (000000000043BB8C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BBDD) ----------------------------------------------------
int goodB2G1_186()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BC4D) ----------------------------------------------------
int goodB2G2_186()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BCBD) ----------------------------------------------------
int goodG2B1_159()
{
  return printLongLongLine(3LL);
}

//----- (000000000043BCF2) ----------------------------------------------------
int goodG2B2_159()
{
  return printLongLongLine(3LL);
}

//----- (000000000043BD27) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_15_good()
{
  goodB2G1_186();
  goodB2G2_186();
  goodG2B1_159();
  return goodG2B2_159();
}

//----- (000000000043BD55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53d_badSink(a1);
}

//----- (000000000043BD6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53d_goodG2BSink(a1);
}

//----- (000000000043BD89) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53d_goodB2GSink(a1);
}

//----- (000000000043BDA3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043BDC4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043BDE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043BE1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_53b_badSink(v2);
}

//----- (000000000043BE85) ----------------------------------------------------
int goodG2B_284()
{
  return CWE190_Integer_Overflow__int_rand_preinc_53b_goodG2BSink(2);
}

//----- (000000000043BEA7) ----------------------------------------------------
int goodB2G_257()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_53b_goodB2GSink(v2);
}

//----- (000000000043BF11) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_53_good()
{
  goodG2B_284();
  return goodB2G_257();
}

//----- (000000000043BF2B) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_61b_badSource(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BF5B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000043BF6E) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_61b_goodB2GSource(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BF9E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v8 + 1);
  return result;
}
// 43BF9E: using guessed type char buf[16];

//----- (000000000043C0F6) ----------------------------------------------------
int goodB2G1_187()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 43C0F6: using guessed type char buf[16];

//----- (000000000043C26F) ----------------------------------------------------
int goodB2G2_187()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 43C26F: using guessed type char buf[16];

//----- (000000000043C3DC) ----------------------------------------------------
int goodG2B1_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043C430) ----------------------------------------------------
int goodG2B2_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043C478) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_11_good()
{
  goodB2G1_187();
  goodB2G2_187();
  goodG2B1_160();
  return goodG2B2_160();
}

//----- (000000000043C4A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_badSink(a1);
}

//----- (000000000043C4BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_goodG2BSink(a1);
}

//----- (000000000043C4D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54c_goodB2GSink(a1);
}

//----- (000000000043C4EB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_13_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C54C) ----------------------------------------------------
int goodB2G1_188()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C5CF) ----------------------------------------------------
int goodB2G2_188()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C646) ----------------------------------------------------
int goodG2B1_161()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C696) ----------------------------------------------------
int goodG2B2_161()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C6DA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_13_good()
{
  goodB2G1_188();
  goodB2G2_188();
  goodG2B1_161();
  return goodG2B2_161();
}

//----- (000000000043C708) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_18_bad()
{
  return printHexCharLine(-128);
}

//----- (000000000043C732) ----------------------------------------------------
int goodB2G_258()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043C76E) ----------------------------------------------------
int goodG2B_285()
{
  return printHexCharLine(3);
}

//----- (000000000043C798) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_18_good()
{
  goodB2G_258();
  return goodG2B_285();
}

//----- (000000000043C7B2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_15_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C7FB) ----------------------------------------------------
int goodB2G1_189()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C858) ----------------------------------------------------
int goodB2G2_189()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C8B5) ----------------------------------------------------
int goodG2B1_162()
{
  return printHexCharLine(3);
}

//----- (000000000043C8DF) ----------------------------------------------------
int goodG2B2_162()
{
  return printHexCharLine(3);
}

//----- (000000000043C909) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_15_good()
{
  goodB2G1_189();
  goodB2G2_189();
  goodG2B1_162();
  return goodG2B2_162();
}

//----- (000000000043C937) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v8 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;
// 43C937: using guessed type char buf[16];

//----- (000000000043CA89) ----------------------------------------------------
int goodB2G1_190()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6A91B8: using guessed type int globalFive;
// 43CA89: using guessed type char buf[16];

//----- (000000000043CBFC) ----------------------------------------------------
int goodB2G2_190()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;
// 43CBFC: using guessed type char buf[16];

//----- (000000000043CD63) ----------------------------------------------------
int goodG2B1_163()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000043CDB1) ----------------------------------------------------
int goodG2B2_163()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000043CDF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_14_good()
{
  goodB2G1_190();
  goodB2G2_190();
  goodG2B1_163();
  return goodG2B2_163();
}

//----- (000000000043CE21) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v6 = recv(v10, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  *v9 = v11;
  return printIntLine(*v8 + 1);
}
// 43CE21: using guessed type char buf[16];

//----- (000000000043CF84) ----------------------------------------------------
int goodG2B_286()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000043CFDB) ----------------------------------------------------
int goodB2G_259()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+48h] [rbp-8h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  v11 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v11 = accept(fd, 0LL, 0LL);
      if ( v11 != -1 )
      {
        v7 = recv(v11, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v11 != -1 )
    close(v11);
  *v10 = v12;
  v6 = *v9;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 43CFDB: using guessed type char buf[16];

//----- (000000000043D153) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_32_good()
{
  goodG2B_286();
  return goodB2G_259();
}

//----- (000000000043D16D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043D19B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043D1C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000043D20B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043D232) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043D259) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043D29C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_53d_badSink(a1);
}

//----- (000000000043D2B3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_53d_goodG2BSink(a1);
}

//----- (000000000043D2CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_53d_goodB2GSink(a1);
}

//----- (000000000043D2E1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_61_bad()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_fscanf_preinc_61b_badSource(0x20u);
  return printHexCharLine(v0 + 1);
}

//----- (000000000043D313) ----------------------------------------------------
int goodG2B_287()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_fscanf_preinc_61b_goodG2BSource();
  return printHexCharLine(v0 + 1);
}

//----- (000000000043D345) ----------------------------------------------------
int goodB2G_260()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE190_Integer_Overflow__char_fscanf_preinc_61b_goodB2GSource(0x20u);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000043D389) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_61_good()
{
  goodG2B_287();
  return goodB2G_260();
}

//----- (000000000043D3A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043D3CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043D3F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043D434) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000043D467) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000043D49A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000043D4E2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_badSink(v2);
}

//----- (000000000043D54C) ----------------------------------------------------
int goodG2B_288()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_goodG2BSink(2);
}

//----- (000000000043D56E) ----------------------------------------------------
int goodB2G_261()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_54b_goodB2GSink(v2);
}

//----- (000000000043D5D8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_54_good()
{
  goodG2B_288();
  return goodB2G_261();
}

//----- (000000000043D5F2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_68_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_68_badData = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_68b_badSink();
}
// 6A95CD: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_68_badData;

//----- (000000000043D645) ----------------------------------------------------
int goodG2B_289()
{
  CWE190_Integer_Overflow__char_rand_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__char_rand_preinc_68b_goodG2BSink();
}
// 6A95CE: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_68_goodG2BData;

//----- (000000000043D66B) ----------------------------------------------------
int goodB2G_262()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_68b_goodB2GSink();
}
// 6A95CC: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData;

//----- (000000000043D6BE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_68_good()
{
  goodG2B_289();
  return goodB2G_262();
}

//----- (000000000043D6D8) ----------------------------------------------------
int __fastcall badSink_48(__int16 a1)
{
  int result; // eax

  result = badStatic_12;
  if ( badStatic_12 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9450: using guessed type int badStatic_12;

//----- (000000000043D70A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_21_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  badStatic_12 = 1;
  return badSink_48(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9450: using guessed type int badStatic_12;

//----- (000000000043D74D) ----------------------------------------------------
int __fastcall goodB2G1Sink_12(__int16 a1)
{
  if ( goodB2G1Static_12 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6A9454: using guessed type int goodB2G1Static_12;

//----- (000000000043D79F) ----------------------------------------------------
int goodB2G1_191()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  goodB2G1Static_12 = 0;
  return goodB2G1Sink_12(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9454: using guessed type int goodB2G1Static_12;

//----- (000000000043D7E2) ----------------------------------------------------
int __fastcall goodB2G2Sink_12(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_12;
  if ( goodB2G2Static_12 )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6A9458: using guessed type int goodB2G2Static_12;

//----- (000000000043D828) ----------------------------------------------------
int goodB2G2_191()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  goodB2G2Static_12 = 1;
  return goodB2G2Sink_12(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9458: using guessed type int goodB2G2Static_12;

//----- (000000000043D86B) ----------------------------------------------------
int __fastcall goodG2BSink_48(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_12;
  if ( goodG2BStatic_12 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A945C: using guessed type int goodG2BStatic_12;

//----- (000000000043D89D) ----------------------------------------------------
int goodG2B_290()
{
  goodG2BStatic_12 = 1;
  return goodG2BSink_48(2);
}
// 6A945C: using guessed type int goodG2BStatic_12;

//----- (000000000043D8C8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_21_good()
{
  goodB2G1_191();
  goodB2G2_191();
  return goodG2B_290();
}

//----- (000000000043D8EC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_03_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D937) ----------------------------------------------------
int goodB2G1_192()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D998) ----------------------------------------------------
int goodB2G2_192()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D9F9) ----------------------------------------------------
int goodG2B1_164()
{
  return printIntLine(3u);
}

//----- (000000000043DA27) ----------------------------------------------------
int goodG2B2_164()
{
  return printIntLine(3u);
}

//----- (000000000043DA55) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_03_good()
{
  goodB2G1_192();
  goodB2G2_192();
  goodG2B1_164();
  return goodG2B2_164();
}

//----- (000000000043DA83) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_07_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_13 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A918C: using guessed type int staticFive_13;

//----- (000000000043DAE0) ----------------------------------------------------
int goodB2G1_193()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_13 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( staticFive_13 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A918C: using guessed type int staticFive_13;

//----- (000000000043DB5D) ----------------------------------------------------
int goodB2G2_193()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_13 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticFive_13;
  if ( staticFive_13 == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A918C: using guessed type int staticFive_13;

//----- (000000000043DBCE) ----------------------------------------------------
int goodG2B1_165()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_13 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A918C: using guessed type int staticFive_13;

//----- (000000000043DC18) ----------------------------------------------------
int goodG2B2_165()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_13 == 5 )
    v1 = 2;
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A918C: using guessed type int staticFive_13;

//----- (000000000043DC56) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_07_good()
{
  goodB2G1_193();
  goodB2G2_193();
  goodG2B1_165();
  return goodG2B2_165();
}

//----- (000000000043DC84) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53c_badSink(a1);
}

//----- (000000000043DC9E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53c_goodG2BSink(a1);
}

//----- (000000000043DCB8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_53c_goodB2GSink(a1);
}

//----- (000000000043DCD2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 43DCD2: using guessed type char buf[16];

//----- (000000000043DE20) ----------------------------------------------------
int goodB2G1_194()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 43DE20: using guessed type char buf[16];

//----- (000000000043DF8F) ----------------------------------------------------
int goodB2G2_194()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 43DF8F: using guessed type char buf[16];

//----- (000000000043E0F2) ----------------------------------------------------
int goodG2B1_166()
{
  return printIntLine(3u);
}

//----- (000000000043E13C) ----------------------------------------------------
int goodG2B2_166()
{
  return printIntLine(3u);
}

//----- (000000000043E17A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_04_good()
{
  goodB2G1_194();
  goodB2G2_194();
  goodG2B1_166();
  return goodG2B2_166();
}

//----- (000000000043E1A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11 + 1;
  v5 = v11 + 1;
  return printIntLine(v11 + 1);
}
// 43E1A8: using guessed type char buf[16];

//----- (000000000043E2EC) ----------------------------------------------------
int goodG2B_291()
{
  return printIntLine(3u);
}

//----- (000000000043E324) ----------------------------------------------------
int goodB2G_263()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  v5 = v10;
  if ( v10 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}
// 43E324: using guessed type char buf[16];

//----- (000000000043E47D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_31_good()
{
  goodG2B_291();
  return goodB2G_263();
}

//----- (000000000043E497) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_15_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000043E563) ----------------------------------------------------
int goodB2G1_195()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000043E64B) ----------------------------------------------------
int goodB2G2_195()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000043E733) ----------------------------------------------------
int goodG2B1_167()
{
  return printLongLongLine(3LL);
}

//----- (000000000043E768) ----------------------------------------------------
int goodG2B2_167()
{
  return printLongLongLine(3LL);
}

//----- (000000000043E79D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_15_good()
{
  goodB2G1_195();
  goodB2G2_195();
  goodG2B1_167();
  return goodG2B2_167();
}

//----- (000000000043E7CB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_67_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_67b_badSink(v1);
}

//----- (000000000043E834) ----------------------------------------------------
int goodG2B_292()
{
  return CWE190_Integer_Overflow__short_rand_preinc_67b_goodG2BSink(2);
}

//----- (000000000043E85D) ----------------------------------------------------
int goodB2G_264()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_67b_goodB2GSink(v1);
}

//----- (000000000043E8C6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_67_good()
{
  goodG2B_292();
  return goodB2G_264();
}

//----- (000000000043E8E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53d_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043E905) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043E92A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000043E961) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_68_bad()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_68_badData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_68b_badSink();
}
// 6A95E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_badData;

//----- (000000000043E996) ----------------------------------------------------
int goodG2B_293()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_68b_goodG2BSink();
}
// 6A95D8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_goodG2BData;

//----- (000000000043E9C5) ----------------------------------------------------
int goodB2G_265()
{
  CWE190_Integer_Overflow__int64_t_max_preinc_68_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_68b_goodB2GSink();
}
// 6A95D0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_preinc_68_goodB2GData;

//----- (000000000043E9FA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_68_good()
{
  goodG2B_293();
  return goodB2G_265();
}

//----- (000000000043EA14) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EA4E) ----------------------------------------------------
int goodG2B_294()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000043EA72) ----------------------------------------------------
int goodB2G_266()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EAAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_64_good()
{
  goodG2B_294();
  return goodB2G_266();
}

//----- (000000000043EAC6) ----------------------------------------------------
__int64 __fastcall badSource_8(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EAF5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_8(0LL);
  return printLongLongLine(v0 + 1);
}

//----- (000000000043EB30) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 2LL;
}

//----- (000000000043EB46) ----------------------------------------------------
int goodG2B_295()
{
  __int64 v0; // rax

  v0 = goodG2BSource_8();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043EB81) ----------------------------------------------------
__int64 __fastcall goodB2GSource_8(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EBB0) ----------------------------------------------------
int goodB2G_267()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_8(0LL);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043EC07) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_42_good()
{
  goodB2G_267();
  return goodG2B_295();
}

//----- (000000000043EC21) ----------------------------------------------------
__int64 badSource_9()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043ECD2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_9();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043ED0D) ----------------------------------------------------
__int64 goodG2BSource_9()
{
  return 2LL;
}

//----- (000000000043ED23) ----------------------------------------------------
int goodG2B_296()
{
  __int64 v0; // rax

  v0 = goodG2BSource_9();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043ED5E) ----------------------------------------------------
__int64 goodB2GSource_9()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043EE0F) ----------------------------------------------------
int goodB2G_268()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_9();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043EE66) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_42_good()
{
  goodB2G_268();
  return goodG2B_296();
}

//----- (000000000043EE80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043EEA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043EEC2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043EEF8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_12_bad()
{
  __int16 v1; // [rsp+Ah] [rbp-6h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v1 + 1));
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EF9D) ----------------------------------------------------
int goodB2G_269()
{
  int result; // eax
  __int16 v1; // [rsp+Ah] [rbp-6h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  else if ( v1 == 0x7FFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F06F) ----------------------------------------------------
int goodG2B_297()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000043F0DB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_12_good()
{
  goodB2G_269();
  return goodG2B_297();
}

//----- (000000000043F0F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_badSink(a1);
}

//----- (000000000043F10C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_goodG2BSink(a1);
}

//----- (000000000043F123) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_53d_goodB2GSink(a1);
}

//----- (000000000043F13A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000043F1B0) ----------------------------------------------------
int goodB2G_270()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000043F23B) ----------------------------------------------------
int goodG2B_298()
{
  return printIntLine(3u);
}

//----- (000000000043F269) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_16_good()
{
  goodB2G_270();
  return goodG2B_298();
}

//----- (000000000043F283) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54d_badSink(a1);
}

//----- (000000000043F29D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54d_goodG2BSink(a1);
}

//----- (000000000043F2B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54d_goodB2GSink(a1);
}

//----- (000000000043F2D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54e_badSink(a1);
}

//----- (000000000043F2EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54e_goodG2BSink(a1);
}

//----- (000000000043F305) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54e_goodB2GSink(a1);
}

//----- (000000000043F31F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000043F350) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000043F381) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (000000000043F3C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53d_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043F3EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043F410) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000043F447) ----------------------------------------------------
__int64 __fastcall badSource_10(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F477) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_42_bad()
{
  char v0; // al

  v0 = badSource_10(0x20u);
  return printHexCharLine(v0 + 1);
}

//----- (000000000043F4A9) ----------------------------------------------------
__int64 goodG2BSource_10()
{
  return 2LL;
}

//----- (000000000043F4BC) ----------------------------------------------------
int goodG2B_299()
{
  char v0; // al

  v0 = goodG2BSource_10();
  return printHexCharLine(v0 + 1);
}

//----- (000000000043F4EE) ----------------------------------------------------
__int64 __fastcall goodB2GSource_10(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F51E) ----------------------------------------------------
int goodB2G_271()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_10(0x20u);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000043F562) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_42_good()
{
  goodB2G_271();
  return goodG2B_299();
}

//----- (000000000043F57C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_51b_badSink(v2);
}

//----- (000000000043F5E6) ----------------------------------------------------
int goodG2B_300()
{
  return CWE190_Integer_Overflow__int_rand_preinc_51b_goodG2BSink(2);
}

//----- (000000000043F608) ----------------------------------------------------
int goodB2G_272()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_preinc_51b_goodB2GSink(v2);
}

//----- (000000000043F672) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_51_good()
{
  goodG2B_300();
  return goodB2G_272();
}

//----- (000000000043F68C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043F6B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043F6E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000043F722) ----------------------------------------------------
int __fastcall badSink_49(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043F749) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_41_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return badSink_49(v4);
}

//----- (000000000043F806) ----------------------------------------------------
int __fastcall goodG2BSink_49(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043F82D) ----------------------------------------------------
int goodG2B_301()
{
  return goodG2BSink_49(2LL);
}

//----- (000000000043F853) ----------------------------------------------------
int __fastcall goodB2GSink_35(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043F896) ----------------------------------------------------
int goodB2G_273()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return goodB2GSink_35(v4);
}

//----- (000000000043F953) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_41_good()
{
  goodB2G_273();
  return goodG2B_301();
}

//----- (000000000043F96D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_11_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F9D4) ----------------------------------------------------
int goodB2G1_196()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FA5D) ----------------------------------------------------
int goodB2G2_196()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FADA) ----------------------------------------------------
int goodG2B1_168()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000043FB30) ----------------------------------------------------
int goodG2B2_168()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000043FB7A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_11_good()
{
  goodB2G1_196();
  goodB2G2_196();
  goodG2B1_168();
  return goodG2B2_168();
}

//----- (000000000043FBA8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_02_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FBF3) ----------------------------------------------------
int goodB2G1_197()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FC54) ----------------------------------------------------
int goodB2G2_197()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FCB5) ----------------------------------------------------
int goodG2B1_169()
{
  return printIntLine(3u);
}

//----- (000000000043FCE3) ----------------------------------------------------
int goodG2B2_169()
{
  return printIntLine(3u);
}

//----- (000000000043FD11) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_02_good()
{
  goodB2G1_197();
  goodB2G2_197();
  goodG2B1_169();
  return goodG2B2_169();
}

//----- (000000000043FD3F) ----------------------------------------------------
int __fastcall badSink_50(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043FD64) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_44_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_50)((unsigned int)(char)v0);
}

//----- (000000000043FDB7) ----------------------------------------------------
int __fastcall goodG2BSink_50(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043FDDC) ----------------------------------------------------
int goodG2B_302()
{
  return goodG2BSink_50(2);
}

//----- (000000000043FE02) ----------------------------------------------------
int __fastcall goodB2GSink_36(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000043FE39) ----------------------------------------------------
__int64 goodB2G_274()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_36)((unsigned int)(char)v0);
}

//----- (000000000043FE8C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_44_good()
{
  goodG2B_302();
  return goodB2G_274();
}

//----- (000000000043FEA6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_badData + 1);
}
// 6A95E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_badData;

//----- (000000000043FECD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodG2BData + 1);
}
// 6A95F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodG2BData;

//----- (000000000043FEF4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodB2GData;

//----- (000000000043FF2D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_64b_badSink(&v1);
}

//----- (000000000043FF59) ----------------------------------------------------
int goodG2B_303()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000043FF7F) ----------------------------------------------------
int goodB2G_275()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_64b_goodB2GSink(&v1);
}

//----- (000000000043FFAB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_64_good()
{
  goodG2B_303();
  return goodB2G_275();
}

//----- (000000000043FFC5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_34_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000044009F) ----------------------------------------------------
int goodG2B_304()
{
  return printLongLongLine(3LL);
}

//----- (00000000004400E2) ----------------------------------------------------
int goodB2G_276()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004401D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_34_good()
{
  goodG2B_304();
  return goodB2G_276();
}

//----- (00000000004401F2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_10_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000440251) ----------------------------------------------------
int goodB2G1_198()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (00000000004402D2) ----------------------------------------------------
int goodB2G2_198()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000440347) ----------------------------------------------------
int goodG2B1_170()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000440395) ----------------------------------------------------
int goodG2B2_170()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (00000000004403D7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_10_good()
{
  goodB2G1_198();
  goodB2G2_198();
  goodG2B1_170();
  return goodG2B2_170();
}

//----- (0000000000440405) ----------------------------------------------------
int badSink_51()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_preinc_45_badData + 1);
}
// 6A9460: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_45_badData;

//----- (000000000044042C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_45_badData = v2;
  return badSink_51();
}
// 6A9460: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_45_badData;

//----- (000000000044049F) ----------------------------------------------------
int goodG2BSink_51()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_preinc_45_goodG2BData + 1);
}
// 6A9464: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_45_goodG2BData;

//----- (00000000004404C6) ----------------------------------------------------
int goodG2B_305()
{
  CWE190_Integer_Overflow__int_rand_preinc_45_goodG2BData = 2;
  return goodG2BSink_51();
}
// 6A9464: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_45_goodG2BData;

//----- (00000000004404F1) ----------------------------------------------------
int goodB2GSink_37()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_rand_preinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_rand_preinc_45_goodB2GData + 1);
  return result;
}
// 6A9468: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_45_goodB2GData;

//----- (000000000044052D) ----------------------------------------------------
int goodB2G_277()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_45_goodB2GData = v2;
  return goodB2GSink_37();
}
// 6A9468: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_45_goodB2GData;

//----- (00000000004405A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_45_good()
{
  goodG2B_305();
  return goodB2G_277();
}

//----- (00000000004405BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (00000000004405ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000440620) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (000000000044066F) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (000000000044067A) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (0000000000440685) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_08_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 127;
  result = staticReturnsTrue_9();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (00000000004406C9) ----------------------------------------------------
int goodB2G1_199()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 127;
  if ( (unsigned int)staticReturnsFalse_9() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}

//----- (000000000044072B) ----------------------------------------------------
int goodB2G2_199()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 127;
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}

//----- (0000000000440781) ----------------------------------------------------
int goodG2B1_171()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (00000000004407D1) ----------------------------------------------------
int goodG2B2_171()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000440815) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_08_good()
{
  goodB2G1_199();
  goodB2G2_199();
  goodG2B1_171();
  return goodG2B2_171();
}

//----- (0000000000440843) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_63_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_63b_badSink(&v1);
}

//----- (0000000000440865) ----------------------------------------------------
int goodG2B_306()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_max_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000440887) ----------------------------------------------------
int goodB2G_278()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_preinc_63b_goodB2GSink(&v1);
}

//----- (00000000004408A9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_63_good()
{
  goodG2B_306();
  return goodB2G_278();
}

//----- (00000000004408C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000044094B) ----------------------------------------------------
int goodB2G1_200()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004409F4) ----------------------------------------------------
int goodB2G2_200()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000440A91) ----------------------------------------------------
int goodG2B1_172()
{
  return printIntLine(3u);
}

//----- (0000000000440ADD) ----------------------------------------------------
int goodG2B2_172()
{
  return printIntLine(3u);
}

//----- (0000000000440B1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_06_good()
{
  goodB2G1_200();
  goodB2G2_200();
  goodG2B1_172();
  return goodG2B2_172();
}

//----- (0000000000440B4B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_01_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440B96) ----------------------------------------------------
int goodG2B_307()
{
  return printIntLine(3u);
}

//----- (0000000000440BC4) ----------------------------------------------------
int goodB2G_279()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440C25) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_01_good()
{
  goodG2B_307();
  return goodB2G_279();
}

//----- (0000000000440C3F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000440C66) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000440C8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000440CC9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000440CEA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000440D0B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000440D3E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000440D5F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000440D80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000440DB3) ----------------------------------------------------
int __fastcall badSink_52(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000440DD4) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_52;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 440DD4: using guessed type char buf[16];

//----- (0000000000440EC5) ----------------------------------------------------
int __fastcall goodG2BSink_52(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000440EE6) ----------------------------------------------------
int goodG2B_308()
{
  return goodG2BSink_52(2);
}

//----- (0000000000440F11) ----------------------------------------------------
int __fastcall goodB2GSink_38(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000440F47) ----------------------------------------------------
__int64 goodB2G_280()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_38;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 440F47: using guessed type char buf[16];

//----- (0000000000441038) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_preinc_44_good()
{
  goodG2B_308();
  return goodB2G_280();
}

//----- (0000000000441052) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v8 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;
// 441052: using guessed type char buf[16];

//----- (00000000004411A4) ----------------------------------------------------
int goodB2G1_201()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;
// 4411A4: using guessed type char buf[16];

//----- (0000000000441317) ----------------------------------------------------
int goodB2G2_201()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;
// 441317: using guessed type char buf[16];

//----- (000000000044147E) ----------------------------------------------------
int goodG2B1_173()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004414CC) ----------------------------------------------------
int goodG2B2_173()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044150E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_13_good()
{
  goodB2G1_201();
  goodB2G2_201();
  goodG2B1_173();
  return goodG2B2_173();
}

//----- (000000000044153C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_badData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_badSink();
}
// 6A95E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_badData;

//----- (00000000004415AF) ----------------------------------------------------
int goodG2B_309()
{
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_goodG2BSink();
}
// 6A95F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodG2BData;

//----- (00000000004415DA) ----------------------------------------------------
int goodB2G_281()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_68b_goodB2GSink();
}
// 6A95EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_goodB2GData;

//----- (000000000044164D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_68_good()
{
  goodG2B_309();
  return goodB2G_281();
}

//----- (0000000000441667) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54c_badSink(a1);
}

//----- (0000000000441681) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54c_goodG2BSink(a1);
}

//----- (000000000044169B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_54b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_54c_goodB2GSink(a1);
}

//----- (00000000004416B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_52_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_52b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004416E1) ----------------------------------------------------
int goodG2B_310()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_52b_goodG2BSink(2LL);
}

//----- (0000000000441707) ----------------------------------------------------
int goodB2G_282()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_52b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000441733) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_52_good()
{
  goodG2B_310();
  return goodB2G_282();
}

//----- (000000000044174D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_66_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_66b_badSink((__int64)&v10);
}

//----- (0000000000441812) ----------------------------------------------------
int goodG2B_311()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000441840) ----------------------------------------------------
int goodB2G_283()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_66b_goodB2GSink((__int64)&v10);
}

//----- (0000000000441905) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_66_good()
{
  goodG2B_311();
  return goodB2G_283();
}

//----- (000000000044191F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000441946) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044196D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004419B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004419D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004419FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000441A3A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_16_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000441A75) ----------------------------------------------------
int goodB2G_284()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000441ACC) ----------------------------------------------------
int goodG2B_312()
{
  return printLongLongLine(3LL);
}

//----- (0000000000441B01) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_16_good()
{
  goodB2G_284();
  return goodG2B_312();
}

//----- (0000000000441B1B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_09_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441B7A) ----------------------------------------------------
int goodB2G1_202()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000441BFB) ----------------------------------------------------
int goodB2G2_202()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441C70) ----------------------------------------------------
int goodG2B1_174()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000441CBE) ----------------------------------------------------
int goodG2B2_174()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441D00) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_09_good()
{
  goodB2G1_202();
  goodB2G2_202();
  goodG2B1_174();
  return goodG2B2_174();
}

//----- (0000000000441D2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000441D4F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000441D70) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000441DA6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_17_bad()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFF;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000441DFA) ----------------------------------------------------
int goodB2G_285()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(++v1);
  }
  return result;
}

//----- (0000000000441E62) ----------------------------------------------------
int goodG2B_313()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000441EB6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_17_good()
{
  goodB2G_285();
  return goodG2B_313();
}

//----- (0000000000441ED0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000441EFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000441F26) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000441F66) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_67_bad()
{
  return CWE190_Integer_Overflow__int_max_preinc_67b_badSink(0x7FFFFFFF);
}

//----- (0000000000441F8E) ----------------------------------------------------
int goodG2B_314()
{
  return CWE190_Integer_Overflow__int_max_preinc_67b_goodG2BSink(2);
}

//----- (0000000000441FB6) ----------------------------------------------------
int goodB2G_286()
{
  return CWE190_Integer_Overflow__int_max_preinc_67b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000441FDE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_67_good()
{
  goodG2B_314();
  return goodB2G_286();
}

//----- (0000000000441FF8) ----------------------------------------------------
int __fastcall badSink_53(int a1)
{
  int result; // eax

  result = badStatic_13;
  if ( badStatic_13 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A946C: using guessed type int badStatic_13;

//----- (0000000000442023) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_13 = 1;
  return badSink_53(v8);
}
// 6A946C: using guessed type int badStatic_13;
// 442023: using guessed type char buf[16];

//----- (000000000044215B) ----------------------------------------------------
int __fastcall goodB2G1Sink_13(int a1)
{
  if ( goodB2G1Static_13 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A9470: using guessed type int goodB2G1Static_13;

//----- (00000000004421A7) ----------------------------------------------------
int goodB2G1_203()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_13 = 0;
  return goodB2G1Sink_13(v8);
}
// 6A9470: using guessed type int goodB2G1Static_13;
// 4421A7: using guessed type char buf[16];

//----- (00000000004422DF) ----------------------------------------------------
int __fastcall goodB2G2Sink_13(int a1)
{
  int result; // eax

  result = goodB2G2Static_13;
  if ( goodB2G2Static_13 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A9474: using guessed type int goodB2G2Static_13;

//----- (000000000044231F) ----------------------------------------------------
int goodB2G2_203()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_13 = 1;
  return goodB2G2Sink_13(v8);
}
// 6A9474: using guessed type int goodB2G2Static_13;
// 44231F: using guessed type char buf[16];

//----- (0000000000442457) ----------------------------------------------------
int __fastcall goodG2BSink_53(int a1)
{
  int result; // eax

  result = goodG2BStatic_13;
  if ( goodG2BStatic_13 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9478: using guessed type int goodG2BStatic_13;

//----- (0000000000442482) ----------------------------------------------------
int goodG2B_315()
{
  goodG2BStatic_13 = 1;
  return goodG2BSink_53(2);
}
// 6A9478: using guessed type int goodG2BStatic_13;

//----- (00000000004424AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_21_good()
{
  goodB2G1_203();
  goodB2G2_203();
  return goodG2B_315();
}

//----- (00000000004424D2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_18_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000442542) ----------------------------------------------------
int goodB2G_287()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004425C6) ----------------------------------------------------
int goodG2B_316()
{
  return printIntLine(3u);
}

//----- (00000000004425F6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_18_good()
{
  goodB2G_287();
  return goodG2B_316();
}

//----- (0000000000442610) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_54_bad()
{
  return CWE190_Integer_Overflow__char_max_preinc_54b_badSink(127);
}

//----- (000000000044262D) ----------------------------------------------------
int goodG2B_317()
{
  return CWE190_Integer_Overflow__char_max_preinc_54b_goodG2BSink(2);
}

//----- (000000000044264A) ----------------------------------------------------
int goodB2G_288()
{
  return CWE190_Integer_Overflow__char_max_preinc_54b_goodB2GSink(127);
}

//----- (0000000000442667) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_54_good()
{
  goodG2B_317();
  return goodB2G_288();
}

//----- (0000000000442681) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_51_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_51b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004426AD) ----------------------------------------------------
int goodG2B_318()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_51b_goodG2BSink(2LL);
}

//----- (00000000004426D3) ----------------------------------------------------
int goodB2G_289()
{
  return CWE190_Integer_Overflow__int64_t_max_preinc_51b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004426FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_51_good()
{
  goodG2B_318();
  return goodB2G_289();
}

//----- (0000000000442719) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_max_preinc_61b_badSource()
{
  return 0x7FFFLL;
}

//----- (000000000044272F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_max_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000442745) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_max_preinc_61b_goodB2GSource()
{
  return 0x7FFFLL;
}

//----- (000000000044275B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044278A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004427B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000442804) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000442825) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000442846) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000442879) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004428B3) ----------------------------------------------------
int goodG2B_319()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_preinc_63b_goodG2BSink(&v1);
}

//----- (00000000004428D7) ----------------------------------------------------
int goodB2G_290()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000442911) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_63_good()
{
  goodG2B_319();
  return goodB2G_290();
}

//----- (000000000044292B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_badSink(a1);
}

//----- (0000000000442942) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000442959) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000442970) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_12_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  else
  {
    v8 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v8 + 1);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 442970: using guessed type char buf[16];

//----- (0000000000442AFE) ----------------------------------------------------
int goodB2G_291()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+54h] [rbp-1Ch]
  int v8; // [rsp+58h] [rbp-18h]
  int v9; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v11; // [rsp+64h] [rbp-Ch]
  int v12; // [rsp+68h] [rbp-8h]
  int v13; // [rsp+6Ch] [rbp-4h]

  v13 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v9 = recv(v12, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  else
  {
    v11 = -1;
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v8, &addr, 0x10u) != -1 && listen(v8, 5) != -1 )
      {
        v11 = accept(v8, 0LL, 0LL);
        if ( v11 != -1 )
        {
          v7 = recv(v11, nptr, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              nptr[v7] = 0;
              v13 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
    if ( v11 != -1 )
      close(v11);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v13 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v13 + 1);
  }
  else if ( v13 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v13 + 1);
  }
  return result;
}
// 442AFE: using guessed type char buf[16];
// 442AFE: using guessed type char nptr[16];

//----- (0000000000442DB3) ----------------------------------------------------
int goodG2B_320()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000442E1A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_12_good()
{
  goodB2G_291();
  return goodG2B_320();
}

//----- (0000000000442E34) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_63b_badSink(&v5);
}
// 442E34: using guessed type char buf[16];

//----- (0000000000442F64) ----------------------------------------------------
int goodG2B_321()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000442F88) ----------------------------------------------------
int goodB2G_292()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_63b_goodB2GSink(&v5);
}
// 442F88: using guessed type char buf[16];

//----- (00000000004430B8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_63_good()
{
  goodG2B_321();
  return goodB2G_292();
}

//----- (00000000004430D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_06_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000044311F) ----------------------------------------------------
int goodB2G1_204()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000443194) ----------------------------------------------------
int goodB2G2_204()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004431FD) ----------------------------------------------------
int goodG2B1_175()
{
  return printLongLongLine(3LL);
}

//----- (0000000000443250) ----------------------------------------------------
int goodG2B2_175()
{
  return printLongLongLine(3LL);
}

//----- (0000000000443297) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_06_good()
{
  goodB2G1_204();
  goodB2G2_204();
  goodG2B1_175();
  return goodG2B2_175();
}

//----- (00000000004432C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_53d_badSink(a1);
}

//----- (00000000004432DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_53d_goodG2BSink(a1);
}

//----- (00000000004432F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000443313) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_01_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044335A) ----------------------------------------------------
int goodG2B_322()
{
  return printHexCharLine(3);
}

//----- (0000000000443382) ----------------------------------------------------
int goodB2G_293()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004433DD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_01_good()
{
  goodG2B_322();
  return goodB2G_293();
}

//----- (00000000004433F7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_max_preinc_61b_badSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000044342E) ----------------------------------------------------
int goodG2B_323()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_max_preinc_61b_goodG2BSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000443465) ----------------------------------------------------
int goodB2G_294()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_max_preinc_61b_goodB2GSource();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004434B0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_61_good()
{
  goodG2B_323();
  return goodB2G_294();
}

//----- (00000000004434CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044350D) ----------------------------------------------------
int goodG2B_324()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_goodG2BSink(2LL);
}

//----- (000000000044353B) ----------------------------------------------------
int goodB2G_295()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044357E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_67_good()
{
  goodG2B_324();
  return goodB2G_295();
}

//----- (0000000000443598) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54e_badSink(a1);
}

//----- (00000000004435AF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54e_goodG2BSink(a1);
}

//----- (00000000004435C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54e_goodB2GSink(a1);
}

//----- (00000000004435DD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_68b_badSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_preinc_68_badData + 1);
}
// 6A95CD: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_68_badData;

//----- (0000000000443607) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_68b_goodG2BSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_preinc_68_goodG2BData + 1);
}
// 6A95CE: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_68_goodG2BData;

//----- (0000000000443631) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95CC: using guessed type char CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData;

//----- (000000000044366D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_badSink(v2);
}

//----- (00000000004436D7) ----------------------------------------------------
int goodG2B_325()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_goodG2BSink(2);
}

//----- (00000000004436F9) ----------------------------------------------------
int goodB2G_296()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_52b_goodB2GSink(v2);
}

//----- (0000000000443763) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_52_good()
{
  goodG2B_325();
  return goodB2G_296();
}

//----- (000000000044377D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 44377D: using guessed type char buf[16];

//----- (00000000004438B5) ----------------------------------------------------
int goodB2G1_205()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 4438B5: using guessed type char buf[16];

//----- (0000000000443A02) ----------------------------------------------------
int goodB2G2_205()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 443A02: using guessed type char buf[16];

//----- (0000000000443B4F) ----------------------------------------------------
int goodG2B1_176()
{
  return printIntLine(3u);
}

//----- (0000000000443B7B) ----------------------------------------------------
int goodG2B2_176()
{
  return printIntLine(3u);
}

//----- (0000000000443BA7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_02_good()
{
  goodB2G1_205();
  goodB2G2_205();
  goodG2B1_176();
  return goodG2B2_176();
}

//----- (0000000000443BD5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000443BF6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000443C17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000443C4A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_07_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 0x7FFF;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9190: using guessed type int staticFive_14;

//----- (0000000000443C8E) ----------------------------------------------------
int goodB2G1_206()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 0x7FFF;
  if ( staticFive_14 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6A9190: using guessed type int staticFive_14;

//----- (0000000000443CF2) ----------------------------------------------------
int goodB2G2_206()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 0x7FFF;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6A9190: using guessed type int staticFive_14;

//----- (0000000000443D4A) ----------------------------------------------------
int goodG2B1_177()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9190: using guessed type int staticFive_14;

//----- (0000000000443D9A) ----------------------------------------------------
int goodG2B2_177()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A9190: using guessed type int staticFive_14;

//----- (0000000000443DDE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_07_good()
{
  goodB2G1_206();
  goodB2G2_206();
  goodG2B1_177();
  return goodG2B2_177();
}

//----- (0000000000443E0C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000443E82) ----------------------------------------------------
int goodB2G_297()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000443F0A) ----------------------------------------------------
int goodG2B_326()
{
  return printUnsignedLine(3u);
}

//----- (0000000000443F38) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_16_good()
{
  goodB2G_297();
  return goodG2B_326();
}

//----- (0000000000443F52) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printIntLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000443FBF) ----------------------------------------------------
int goodB2G_298()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printIntLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444042) ----------------------------------------------------
int goodG2B_327()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000444094) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_17_good()
{
  goodB2G_298();
  return goodG2B_327();
}

//----- (00000000004440AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v8 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 4440AE: using guessed type char buf[16];

//----- (00000000004441FE) ----------------------------------------------------
int goodB2G1_207()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;
// 4441FE: using guessed type char buf[16];

//----- (000000000044436F) ----------------------------------------------------
int goodB2G2_207()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 44436F: using guessed type char buf[16];

//----- (00000000004444D4) ----------------------------------------------------
int goodG2B1_178()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000444520) ----------------------------------------------------
int goodG2B2_178()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000444560) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_10_good()
{
  goodB2G1_207();
  goodB2G2_207();
  goodG2B1_178();
  return goodG2B2_178();
}

//----- (000000000044458E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54d_badSink(a1);
}

//----- (00000000004445A9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54d_goodG2BSink(a1);
}

//----- (00000000004445C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54d_goodB2GSink(a1);
}

//----- (00000000004445DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54e_badSink(a1);
}

//----- (00000000004445F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54e_goodG2BSink(a1);
}

//----- (000000000044460D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000444624) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044464C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000444674) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004446B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54e_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004446D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004446FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000444731) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 444731: using guessed type char buf[16];

//----- (0000000000444869) ----------------------------------------------------
int goodG2B_328()
{
  return printIntLine(3u);
}

//----- (0000000000444895) ----------------------------------------------------
int goodB2G_299()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 444895: using guessed type char buf[16];

//----- (00000000004449E2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_01_good()
{
  goodG2B_328();
  return goodB2G_299();
}

//----- (00000000004449FC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_badSink(v2);
}

//----- (0000000000444A66) ----------------------------------------------------
int goodG2B_329()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_goodG2BSink(2);
}

//----- (0000000000444A88) ----------------------------------------------------
int goodB2G_300()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_preinc_51b_goodB2GSink(v2);
}

//----- (0000000000444AF2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_51_good()
{
  goodG2B_329();
  return goodB2G_300();
}

//----- (0000000000444B0C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_15_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000444B47) ----------------------------------------------------
int goodB2G1_208()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000444B9E) ----------------------------------------------------
int goodB2G2_208()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000444BF5) ----------------------------------------------------
int goodG2B1_179()
{
  return printLongLongLine(3LL);
}

//----- (0000000000444C2A) ----------------------------------------------------
int goodG2B2_179()
{
  return printLongLongLine(3LL);
}

//----- (0000000000444C5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_15_good()
{
  goodB2G1_208();
  goodB2G2_208();
  goodG2B1_179();
  return goodG2B2_179();
}

//----- (0000000000444C8D) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444CBA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000444CCD) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444CFA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_65_bad()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__short_fscanf_preinc_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444D3E) ----------------------------------------------------
int goodG2B_330()
{
  return CWE190_Integer_Overflow__short_fscanf_preinc_65b_goodG2BSink(2);
}

//----- (0000000000444D68) ----------------------------------------------------
__int64 goodB2G_301()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__short_fscanf_preinc_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444DAC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_65_good()
{
  goodG2B_330();
  return goodB2G_301();
}

//----- (0000000000444DC6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_03_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000444DF4) ----------------------------------------------------
int goodB2G1_209()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000444E36) ----------------------------------------------------
int goodB2G2_209()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000444E78) ----------------------------------------------------
int goodG2B1_180()
{
  return printIntLine(3u);
}

//----- (0000000000444EA6) ----------------------------------------------------
int goodG2B2_180()
{
  return printIntLine(3u);
}

//----- (0000000000444ED4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_03_good()
{
  goodB2G1_209();
  goodB2G2_209();
  goodG2B1_180();
  return goodG2B2_180();
}

//----- (0000000000444F02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_53c_badSink(a1);
}

//----- (0000000000444F1C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000444F36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_53b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000444F50) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_18_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000444F7E) ----------------------------------------------------
int goodB2G_302()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000444FC1) ----------------------------------------------------
int goodG2B_331()
{
  return printIntLine(3u);
}

//----- (0000000000444FEF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_18_good()
{
  goodB2G_302();
  return goodG2B_331();
}

//----- (0000000000445009) ----------------------------------------------------
__int64 staticReturnsTrue_10()
{
  return 1LL;
}

//----- (0000000000445014) ----------------------------------------------------
__int64 staticReturnsFalse_10()
{
  return 0LL;
}

//----- (000000000044501F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_08_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_10();
  if ( result )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}

//----- (00000000004450A9) ----------------------------------------------------
int goodB2G1_210()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)staticReturnsFalse_10() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}

//----- (0000000000445153) ----------------------------------------------------
int goodB2G2_210()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_10();
  if ( result )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}

//----- (00000000004451F1) ----------------------------------------------------
int goodG2B1_181()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_10() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_10();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000445247) ----------------------------------------------------
int goodG2B2_181()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
    v1 = 2;
  result = staticReturnsTrue_10();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000445291) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_08_good()
{
  goodB2G1_210();
  goodB2G2_210();
  goodG2B1_181();
  return goodG2B2_181();
}

//----- (00000000004452BF) ----------------------------------------------------
int badSink_54()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_badData + 1);
}
// 6A947C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_badData;

//----- (00000000004452E6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_badData = v2;
  return badSink_54();
}
// 6A947C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_badData;

//----- (0000000000445359) ----------------------------------------------------
int goodG2BSink_54()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodG2BData + 1);
}
// 6A9480: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodG2BData;

//----- (0000000000445380) ----------------------------------------------------
int goodG2B_332()
{
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodG2BData = 2;
  return goodG2BSink_54();
}
// 6A9480: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodG2BData;

//----- (00000000004453AB) ----------------------------------------------------
int goodB2GSink_39()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodB2GData + 1);
  return result;
}
// 6A9484: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodB2GData;

//----- (00000000004453E4) ----------------------------------------------------
int goodB2G_303()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodB2GData = v2;
  return goodB2GSink_39();
}
// 6A9484: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_goodB2GData;

//----- (0000000000445457) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_45_good()
{
  goodG2B_332();
  return goodB2G_303();
}

//----- (0000000000445471) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_badSink(a1);
}

//----- (000000000044548B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_goodG2BSink(a1);
}

//----- (00000000004454A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54e_goodB2GSink(a1);
}

//----- (00000000004454BF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_53_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_badSink(-1);
}

//----- (00000000004454E1) ----------------------------------------------------
int goodG2B_333()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_goodG2BSink(2);
}

//----- (0000000000445503) ----------------------------------------------------
int goodB2G_304()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_goodB2GSink(-1);
}

//----- (0000000000445525) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_53_good()
{
  goodG2B_333();
  return goodB2G_304();
}

//----- (000000000044553F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_15_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (0000000000445596) ----------------------------------------------------
int goodB2G1_211()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (00000000004455FF) ----------------------------------------------------
int goodB2G2_211()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000445668) ----------------------------------------------------
int goodG2B1_182()
{
  return printHexCharLine(3);
}

//----- (0000000000445692) ----------------------------------------------------
int goodG2B2_182()
{
  return printHexCharLine(3);
}

//----- (00000000004456BC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_15_good()
{
  goodB2G1_211();
  goodB2G2_211();
  goodG2B1_182();
  return goodG2B2_182();
}

//----- (00000000004456EA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000445772) ----------------------------------------------------
int goodB2G1_212()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000445818) ----------------------------------------------------
int goodB2G2_212()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004458B2) ----------------------------------------------------
int goodG2B1_183()
{
  return printUnsignedLine(3u);
}

//----- (00000000004458FE) ----------------------------------------------------
int goodG2B2_183()
{
  return printUnsignedLine(3u);
}

//----- (000000000044593E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_good()
{
  goodB2G1_212();
  goodB2G2_212();
  goodG2B1_183();
  return goodG2B2_183();
}

//----- (000000000044596C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v8 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 44596C: using guessed type char buf[16];

//----- (0000000000445ABC) ----------------------------------------------------
int goodB2G1_213()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;
// 445ABC: using guessed type char buf[16];

//----- (0000000000445C2D) ----------------------------------------------------
int goodB2G2_213()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 445C2D: using guessed type char buf[16];

//----- (0000000000445D92) ----------------------------------------------------
int goodG2B1_184()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000445DDE) ----------------------------------------------------
int goodG2B2_184()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000445E1E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_09_good()
{
  goodB2G1_213();
  goodB2G2_213();
  goodG2B1_184();
  return goodG2B2_184();
}

//----- (0000000000445E4C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_68_bad()
{
  CWE190_Integer_Overflow__char_max_preinc_68_badData = 127;
  return CWE190_Integer_Overflow__char_max_preinc_68b_badSink();
}
// 6A95F6: using guessed type char CWE190_Integer_Overflow__char_max_preinc_68_badData;

//----- (0000000000445E72) ----------------------------------------------------
int goodG2B_334()
{
  CWE190_Integer_Overflow__char_max_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__char_max_preinc_68b_goodG2BSink();
}
// 6A95F4: using guessed type char CWE190_Integer_Overflow__char_max_preinc_68_goodG2BData;

//----- (0000000000445E98) ----------------------------------------------------
int goodB2G_305()
{
  CWE190_Integer_Overflow__char_max_preinc_68_goodB2GData = 127;
  return CWE190_Integer_Overflow__char_max_preinc_68b_goodB2GSink();
}
// 6A95F5: using guessed type char CWE190_Integer_Overflow__char_max_preinc_68_goodB2GData;

//----- (0000000000445EBE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_68_good()
{
  goodG2B_334();
  return goodB2G_305();
}

//----- (0000000000445ED8) ----------------------------------------------------
__int64 badSource_11()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (0000000000445F1C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_42_bad()
{
  char v0; // al

  v0 = badSource_11();
  return printHexCharLine(v0 + 1);
}

//----- (0000000000445F4E) ----------------------------------------------------
__int64 goodG2BSource_11()
{
  return 2LL;
}

//----- (0000000000445F61) ----------------------------------------------------
int goodG2B_335()
{
  char v0; // al

  v0 = goodG2BSource_11();
  return printHexCharLine(v0 + 1);
}

//----- (0000000000445F93) ----------------------------------------------------
__int64 goodB2GSource_11()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (0000000000445FD7) ----------------------------------------------------
int goodB2G_306()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_11();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000044601B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_42_good()
{
  goodB2G_306();
  return goodG2B_335();
}

//----- (0000000000446035) ----------------------------------------------------
__int64 staticReturnsTrue_11()
{
  return 1LL;
}

//----- (0000000000446040) ----------------------------------------------------
__int64 staticReturnsFalse_11()
{
  return 0LL;
}

//----- (000000000044604B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_08_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_11() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticReturnsTrue_11();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004460AE) ----------------------------------------------------
int goodB2G1_214()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_11() )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)staticReturnsFalse_11() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446131) ----------------------------------------------------
int goodB2G2_214()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_11() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticReturnsTrue_11();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004461A8) ----------------------------------------------------
int goodG2B1_185()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_11() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_11();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (00000000004461F8) ----------------------------------------------------
int goodG2B2_185()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_11() )
    v1 = 2;
  result = staticReturnsTrue_11();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000044623C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_08_good()
{
  goodB2G1_214();
  goodB2G2_214();
  goodG2B1_185();
  return goodG2B2_185();
}

//----- (000000000044626A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_52c_badSink(a1);
}

//----- (0000000000446281) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000446298) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_preinc_52c_goodB2GSink(a1);
}

//----- (00000000004462AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004462E1) ----------------------------------------------------
int goodG2B_336()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_preinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000446313) ----------------------------------------------------
int goodB2G_307()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fscanf_preinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044635A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_61_good()
{
  goodG2B_336();
  return goodB2G_307();
}

//----- (0000000000446374) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044639B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004463C2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004463FB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+18h] [rbp-28h]
  __int64 *v12; // [rsp+20h] [rbp-20h]
  __int64 *v13; // [rsp+28h] [rbp-18h]

  v13 = &v10;
  v12 = &v10;
  v10 = 0LL;
  v11 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v11 = v4;
  *v13 = v4;
  return printLongLongLine(*v12 + 1);
}

//----- (00000000004464F6) ----------------------------------------------------
int goodG2B_337()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 3LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (000000000044655A) ----------------------------------------------------
int goodB2G_308()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+18h] [rbp-28h]
  __int64 *v13; // [rsp+20h] [rbp-20h]
  __int64 *v14; // [rsp+28h] [rbp-18h]

  v14 = &v10;
  v13 = &v10;
  v10 = 0LL;
  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  *v14 = v4;
  v11 = *v13;
  if ( v11 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v11 + 1);
  return result;
}

//----- (0000000000446671) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_32_good()
{
  goodG2B_337();
  return goodB2G_308();
}

//----- (000000000044668B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_18_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (00000000004466FF) ----------------------------------------------------
int goodB2G_309()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000446788) ----------------------------------------------------
int goodG2B_338()
{
  return printIntLine(3u);
}

//----- (00000000004467B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_18_good()
{
  goodB2G_309();
  return goodG2B_338();
}

//----- (00000000004467D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (00000000004467FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000446828) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000446869) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54c_badSink(a1);
}

//----- (0000000000446884) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54c_goodG2BSink(a1);
}

//----- (000000000044689F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_54c_goodB2GSink(a1);
}

//----- (00000000004468BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9194: using guessed type int staticFive_15;

//----- (0000000000446917) ----------------------------------------------------
int goodB2G1_215()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_15 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9194: using guessed type int staticFive_15;

//----- (0000000000446996) ----------------------------------------------------
int goodB2G2_215()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_15;
  if ( staticFive_15 == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A9194: using guessed type int staticFive_15;

//----- (0000000000446A09) ----------------------------------------------------
int goodG2B1_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9194: using guessed type int staticFive_15;

//----- (0000000000446A57) ----------------------------------------------------
int goodG2B2_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    v1 = 2;
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A9194: using guessed type int staticFive_15;

//----- (0000000000446A99) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_07_good()
{
  goodB2G1_215();
  goodB2G2_215();
  goodG2B1_186();
  return goodG2B2_186();
}

//----- (0000000000446AC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 446AC7: using guessed type char buf[16];

//----- (0000000000446BBB) ----------------------------------------------------
int goodB2G1_216()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 446BBB: using guessed type char buf[16];

//----- (0000000000446CC4) ----------------------------------------------------
int goodB2G2_216()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 446CC4: using guessed type char buf[16];

//----- (0000000000446DCD) ----------------------------------------------------
int goodG2B1_187()
{
  return printIntLine(3u);
}

//----- (0000000000446DFB) ----------------------------------------------------
int goodG2B2_187()
{
  return printIntLine(3u);
}

//----- (0000000000446E29) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_15_good()
{
  goodB2G1_216();
  goodB2G2_216();
  goodG2B1_187();
  return goodG2B2_187();
}

//----- (0000000000446E57) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_05_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_11 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6A9198: using guessed type int staticTrue_11;

//----- (0000000000446EC0) ----------------------------------------------------
int goodB2G1_217()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_11 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( staticFalse_11 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6A9198: using guessed type int staticTrue_11;
// 6A9488: using guessed type int staticFalse_11;

//----- (0000000000446F47) ----------------------------------------------------
int goodB2G2_217()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_11 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticTrue_11;
  if ( staticTrue_11 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6A9198: using guessed type int staticTrue_11;

//----- (0000000000446FC2) ----------------------------------------------------
int goodG2B1_188()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_11 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9198: using guessed type int staticTrue_11;
// 6A9488: using guessed type int staticFalse_11;

//----- (000000000044700A) ----------------------------------------------------
int goodG2B2_188()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_11 )
    v1 = 2;
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A9198: using guessed type int staticTrue_11;

//----- (0000000000447046) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_05_good()
{
  goodB2G1_217();
  goodB2G2_217();
  goodG2B1_188();
  return goodG2B2_188();
}

//----- (0000000000447074) ----------------------------------------------------
int __fastcall badSink_55(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000447099) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_41_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return badSink_55(v0);
}

//----- (00000000004470E3) ----------------------------------------------------
int __fastcall goodG2BSink_55(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000447108) ----------------------------------------------------
int goodG2B_339()
{
  return goodG2BSink_55(2);
}

//----- (0000000000447125) ----------------------------------------------------
int __fastcall goodB2GSink_40(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000044715C) ----------------------------------------------------
int goodB2G_310()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return goodB2GSink_40(v0);
}

//----- (00000000004471A6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_41_good()
{
  goodB2G_310();
  return goodG2B_339();
}

//----- (00000000004471C0) ----------------------------------------------------
__int64 __fastcall badSource_12(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4471C0: using guessed type char buf[16];

//----- (000000000044729D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_12(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004472CF) ----------------------------------------------------
__int64 goodG2BSource_12()
{
  return 2LL;
}

//----- (00000000004472E2) ----------------------------------------------------
int goodG2B_340()
{
  int v0; // eax

  v0 = goodG2BSource_12();
  return printIntLine(v0 + 1);
}

//----- (0000000000447314) ----------------------------------------------------
__int64 __fastcall goodB2GSource_12(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 447314: using guessed type char buf[16];

//----- (00000000004473F1) ----------------------------------------------------
int goodB2G_311()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_12(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000447438) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_42_good()
{
  goodB2G_311();
  return goodG2B_340();
}

//----- (0000000000447452) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_04_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000447532) ----------------------------------------------------
int goodB2G1_218()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000044763A) ----------------------------------------------------
int goodB2G2_218()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000447736) ----------------------------------------------------
int goodG2B1_189()
{
  return printLongLongLine(3LL);
}

//----- (0000000000447787) ----------------------------------------------------
int goodG2B2_189()
{
  return printLongLongLine(3LL);
}

//----- (00000000004477CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_04_good()
{
  goodB2G1_218();
  goodB2G2_218();
  goodG2B1_189();
  return goodG2B2_189();
}

//----- (00000000004477FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000447825) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000447850) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000044788D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_badSink(a1);
}

//----- (00000000004478A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_goodG2BSink(a1);
}

//----- (00000000004478BB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_52c_goodB2GSink(a1);
}

//----- (00000000004478D2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_67_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_badSink(-1);
}

//----- (00000000004478FA) ----------------------------------------------------
int goodG2B_341()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_goodG2BSink(2);
}

//----- (0000000000447922) ----------------------------------------------------
int goodB2G_312()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_67b_goodB2GSink(-1);
}

//----- (000000000044794A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_67_good()
{
  goodG2B_341();
  return goodB2G_312();
}

//----- (0000000000447964) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004479B5) ----------------------------------------------------
int goodB2G_313()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447A25) ----------------------------------------------------
int goodG2B_342()
{
  return printLongLongLine(3LL);
}

//----- (0000000000447A5A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_18_good()
{
  goodB2G_313();
  return goodG2B_342();
}

//----- (0000000000447A74) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_34_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (0000000000447AD7) ----------------------------------------------------
int goodG2B_343()
{
  return printHexCharLine(3);
}

//----- (0000000000447B0D) ----------------------------------------------------
int goodB2G_314()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000447B82) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_34_good()
{
  goodG2B_343();
  return goodB2G_314();
}

//----- (0000000000447B9C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_54_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_54b_badSink(v1);
}

//----- (0000000000447BFD) ----------------------------------------------------
int goodG2B_344()
{
  return CWE190_Integer_Overflow__short_rand_preinc_54b_goodG2BSink(2);
}

//----- (0000000000447C1E) ----------------------------------------------------
int goodB2G_315()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_54b_goodB2GSink(v1);
}

//----- (0000000000447C7F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_54_good()
{
  goodG2B_344();
  return goodB2G_315();
}

//----- (0000000000447C99) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (0000000000447CC8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (0000000000447CF7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (0000000000447D38) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_52c_badSink(a1);
}

//----- (0000000000447D52) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000447D6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_52b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000447D86) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54d_badSink(a1);
}

//----- (0000000000447D9D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54d_goodG2BSink(a1);
}

//----- (0000000000447DB4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54d_goodB2GSink(a1);
}

//----- (0000000000447DCB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000447DF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000447E19) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000447E5C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_preinc_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A9490: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_badGlobal;

//----- (0000000000447E8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6A9494: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Global;

//----- (0000000000447EE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6A9498: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Global;

//----- (0000000000447F33) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A949C: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BGlobal;

//----- (0000000000447F64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_12 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v7 + 1);
  return result;
}
// 6A919C: using guessed type int staticTrue_12;
// 447F64: using guessed type char buf[16];

//----- (000000000044806E) ----------------------------------------------------
int goodB2G1_219()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_12 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_12 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6A919C: using guessed type int staticTrue_12;
// 6A948C: using guessed type int staticFalse_12;
// 44806E: using guessed type char buf[16];

//----- (0000000000448199) ----------------------------------------------------
int goodB2G2_219()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_12 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_12;
  if ( staticTrue_12 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6A919C: using guessed type int staticTrue_12;
// 448199: using guessed type char buf[16];

//----- (00000000004482B8) ----------------------------------------------------
int goodG2B1_190()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_12 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A919C: using guessed type int staticTrue_12;
// 6A948C: using guessed type int staticFalse_12;

//----- (0000000000448304) ----------------------------------------------------
int goodG2B2_190()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_12 )
    v1 = 2;
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A919C: using guessed type int staticTrue_12;

//----- (0000000000448344) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_05_good()
{
  goodB2G1_219();
  goodB2G2_219();
  goodG2B1_190();
  return goodG2B2_190();
}

//----- (0000000000448372) ----------------------------------------------------
int __fastcall badSink_56(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000448393) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_56(v7);
}
// 448393: using guessed type char buf[16];

//----- (000000000044847B) ----------------------------------------------------
int __fastcall goodG2BSink_56(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044849C) ----------------------------------------------------
int goodG2B_345()
{
  return goodG2BSink_56(2);
}

//----- (00000000004484BE) ----------------------------------------------------
int __fastcall goodB2GSink_41(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004484F4) ----------------------------------------------------
int goodB2G_316()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_41(v7);
}
// 4484F4: using guessed type char buf[16];

//----- (00000000004485DC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_41_good()
{
  goodB2G_316();
  return goodG2B_345();
}

//----- (00000000004485F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54d_badSink(a1);
}

//----- (0000000000448611) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54d_goodG2BSink(a1);
}

//----- (000000000044862C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54d_goodB2GSink(a1);
}

//----- (0000000000448647) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000448681) ----------------------------------------------------
int goodG2B_346()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_goodG2BSink(&v1);
}

//----- (00000000004486A5) ----------------------------------------------------
int goodB2G_317()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004486DF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_63_good()
{
  goodG2B_346();
  return goodB2G_317();
}

//----- (00000000004486F9) ----------------------------------------------------
int __fastcall badSink_57(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044871A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_57)(v2);
}

//----- (000000000044878D) ----------------------------------------------------
int __fastcall goodG2BSink_57(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004487AE) ----------------------------------------------------
int goodG2B_347()
{
  return goodG2BSink_57(2);
}

//----- (00000000004487D9) ----------------------------------------------------
int __fastcall goodB2GSink_42(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044880F) ----------------------------------------------------
__int64 goodB2G_318()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_42)(v2);
}

//----- (0000000000448882) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_preinc_44_good()
{
  goodG2B_347();
  return goodB2G_318();
}

//----- (000000000044889C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004488BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004488DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000448914) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000448935) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000448956) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044898C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54d_badSink(a1);
}

//----- (00000000004489A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54d_goodG2BSink(a1);
}

//----- (00000000004489BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54d_goodB2GSink(a1);
}

//----- (00000000004489D1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_52_bad()
{
  return CWE190_Integer_Overflow__char_max_preinc_52b_badSink(127);
}

//----- (00000000004489EE) ----------------------------------------------------
int goodG2B_348()
{
  return CWE190_Integer_Overflow__char_max_preinc_52b_goodG2BSink(2);
}

//----- (0000000000448A0B) ----------------------------------------------------
int goodB2G_319()
{
  return CWE190_Integer_Overflow__char_max_preinc_52b_goodB2GSink(127);
}

//----- (0000000000448A28) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_52_good()
{
  goodG2B_348();
  return goodB2G_319();
}

//----- (0000000000448A42) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_66_bad()
{
  int v0; // eax
  char v2; // [rsp+0h] [rbp-10h]
  char v3; // [rsp+2h] [rbp-Eh]
  char v4; // [rsp+Fh] [rbp-1h]

  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  v3 = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_66b_badSink((__int64)&v2);
}

//----- (0000000000448A94) ----------------------------------------------------
int goodG2B_349()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__char_rand_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000448AB9) ----------------------------------------------------
int goodB2G_320()
{
  int v0; // eax
  char v2; // [rsp+0h] [rbp-10h]
  char v3; // [rsp+2h] [rbp-Eh]
  char v4; // [rsp+Fh] [rbp-1h]

  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  v3 = v0;
  return CWE190_Integer_Overflow__char_rand_preinc_66b_goodB2GSink((__int64)&v2);
}

//----- (0000000000448B0B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_66_good()
{
  goodG2B_349();
  return goodB2G_320();
}

//----- (0000000000448B25) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_63b_badSink(&v1);
}

//----- (0000000000448B51) ----------------------------------------------------
int goodG2B_350()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000448B77) ----------------------------------------------------
int goodB2G_321()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_63b_goodB2GSink(&v1);
}

//----- (0000000000448BA3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_63_good()
{
  goodG2B_350();
  return goodB2G_321();
}

//----- (0000000000448BBD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_53d_badSink(a1);
}

//----- (0000000000448BD8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_53d_goodG2BSink(a1);
}

//----- (0000000000448BF3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000448C0E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000448C2F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000448C50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000448C86) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_16_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000448CB0) ----------------------------------------------------
int goodB2G_322()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000448CEC) ----------------------------------------------------
int goodG2B_351()
{
  return printHexCharLine(3);
}

//----- (0000000000448D16) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_16_good()
{
  goodB2G_322();
  return goodG2B_351();
}

//----- (0000000000448D30) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53d_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000448D55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000448D7A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000448DB1) ----------------------------------------------------
__int64 staticReturnsTrue_12()
{
  return 1LL;
}

//----- (0000000000448DBC) ----------------------------------------------------
__int64 staticReturnsFalse_12()
{
  return 0LL;
}

//----- (0000000000448DC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_12();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000448E0F) ----------------------------------------------------
int goodB2G1_220()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)staticReturnsFalse_12() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (0000000000448E78) ----------------------------------------------------
int goodB2G2_220()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_12();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (0000000000448ED5) ----------------------------------------------------
int goodG2B1_191()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_12() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_12();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000448F29) ----------------------------------------------------
int goodG2B2_191()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v1 = 2;
  result = staticReturnsTrue_12();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000448F71) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_08_good()
{
  goodB2G1_220();
  goodB2G2_220();
  goodG2B1_191();
  return goodG2B2_191();
}

//----- (0000000000448F9F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_22_badSink(v4);
}
// 6A9490: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_badGlobal;

//----- (0000000000449066) ----------------------------------------------------
int goodB2G1_221()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Sink(v4);
}
// 6A9494: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G1Global;

//----- (000000000044912D) ----------------------------------------------------
int goodB2G2_221()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Sink(v4);
}
// 6A9498: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodB2G2Global;

//----- (00000000004491F4) ----------------------------------------------------
int goodG2B_352()
{
  CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BSink(2LL);
}
// 6A949C: using guessed type int CWE190_Integer_Overflow__int64_t_rand_preinc_22_goodG2BGlobal;

//----- (0000000000449224) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_22_good()
{
  goodB2G1_221();
  goodB2G2_221();
  return goodG2B_352();
}

//----- (0000000000449248) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_66_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_66b_badSink((__int64)&v4);
}

//----- (00000000004492B2) ----------------------------------------------------
int goodG2B_353()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_rand_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004492DC) ----------------------------------------------------
int goodB2G_323()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_66b_goodB2GSink((__int64)&v4);
}

//----- (0000000000449346) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_66_good()
{
  goodG2B_353();
  return goodB2G_323();
}

//----- (0000000000449360) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_05_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_13 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6A91A0: using guessed type int staticTrue_13;

//----- (0000000000449442) ----------------------------------------------------
int goodB2G1_222()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_13 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFalse_13 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6A91A0: using guessed type int staticTrue_13;
// 6A94A0: using guessed type int staticFalse_13;

//----- (000000000044954C) ----------------------------------------------------
int goodB2G2_222()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_13 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_13;
  if ( staticTrue_13 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6A91A0: using guessed type int staticTrue_13;

//----- (000000000044964A) ----------------------------------------------------
int goodG2B1_192()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_13 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91A0: using guessed type int staticTrue_13;
// 6A94A0: using guessed type int staticFalse_13;

//----- (000000000044969D) ----------------------------------------------------
int goodG2B2_192()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_13 )
    v1 = 2LL;
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91A0: using guessed type int staticTrue_13;

//----- (00000000004496E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_05_good()
{
  goodB2G1_222();
  goodB2G2_222();
  goodG2B1_192();
  return goodG2B2_192();
}

//----- (0000000000449712) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_badSink(a1);
}

//----- (0000000000449729) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000449740) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000449757) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_06_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (00000000004497D9) ----------------------------------------------------
int goodB2G1_223()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000044987B) ----------------------------------------------------
int goodB2G2_223()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000449911) ----------------------------------------------------
int goodG2B1_193()
{
  return printIntLine(3u);
}

//----- (000000000044995F) ----------------------------------------------------
int goodG2B2_193()
{
  return printIntLine(3u);
}

//----- (00000000004499A1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_06_good()
{
  goodB2G1_223();
  goodB2G2_223();
  goodG2B1_193();
  return goodG2B2_193();
}

//----- (00000000004499CF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_65_bad()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__char_fscanf_preinc_65b_badSink;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449A11) ----------------------------------------------------
int goodG2B_354()
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_65b_goodG2BSink(2);
}

//----- (0000000000449A37) ----------------------------------------------------
__int64 goodB2G_324()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__char_fscanf_preinc_65b_goodB2GSink;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449A79) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_preinc_65_good()
{
  goodG2B_354();
  return goodB2G_324();
}

//----- (0000000000449A93) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_preinc_65b_badSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 449A93: using guessed type char buf[16];

//----- (0000000000449BCA) ----------------------------------------------------
int goodG2B_355()
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_65b_goodG2BSink(2);
}

//----- (0000000000449BF5) ----------------------------------------------------
__int64 goodB2G_325()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_preinc_65b_goodB2GSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 449BF5: using guessed type char buf[16];

//----- (0000000000449D2C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_preinc_65_good()
{
  goodG2B_355();
  return goodB2G_325();
}

//----- (0000000000449D46) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_63_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_preinc_63b_badSink(&v1);
}

//----- (0000000000449D64) ----------------------------------------------------
int goodG2B_356()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_max_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000449D82) ----------------------------------------------------
int goodB2G_326()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_preinc_63b_goodB2GSink(&v1);
}

//----- (0000000000449DA0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_63_good()
{
  goodG2B_356();
  return goodB2G_326();
}

//----- (0000000000449DBA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_51_bad()
{
  return CWE190_Integer_Overflow__char_max_preinc_51b_badSink(127);
}

//----- (0000000000449DD7) ----------------------------------------------------
int goodG2B_357()
{
  return CWE190_Integer_Overflow__char_max_preinc_51b_goodG2BSink(2);
}

//----- (0000000000449DF4) ----------------------------------------------------
int goodB2G_327()
{
  return CWE190_Integer_Overflow__char_max_preinc_51b_goodB2GSink(127);
}

//----- (0000000000449E11) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_51_good()
{
  goodG2B_357();
  return goodB2G_327();
}

//----- (0000000000449E2B) ----------------------------------------------------
__int64 staticReturnsTrue_13()
{
  return 1LL;
}

//----- (0000000000449E36) ----------------------------------------------------
__int64 staticReturnsFalse_13()
{
  return 0LL;
}

//----- (0000000000449E41) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000449ECF) ----------------------------------------------------
int goodB2G1_224()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_13() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}

//----- (0000000000449F7E) ----------------------------------------------------
int goodB2G2_224()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_13();
  if ( result )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}

//----- (000000000044A021) ----------------------------------------------------
int goodG2B1_194()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_13() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044A075) ----------------------------------------------------
int goodG2B2_194()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
    v1 = 2;
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044A0BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_08_good()
{
  goodB2G1_224();
  goodB2G2_224();
  goodG2B1_194();
  return goodG2B2_194();
}

//----- (000000000044A0EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_badSink(a1);
}

//----- (000000000044A105) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_goodG2BSink(a1);
}

//----- (000000000044A11F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54d_goodB2GSink(a1);
}

//----- (000000000044A139) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printUnsignedLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A1A6) ----------------------------------------------------
int goodB2G_328()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printUnsignedLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A227) ----------------------------------------------------
int goodG2B_358()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (000000000044A279) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_17_good()
{
  goodB2G_328();
  return goodG2B_358();
}

//----- (000000000044A293) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_52_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_badSink(-1);
}

//----- (000000000044A2B5) ----------------------------------------------------
int goodG2B_359()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_goodG2BSink(2);
}

//----- (000000000044A2D7) ----------------------------------------------------
int goodB2G_329()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_52b_goodB2GSink(-1);
}

//----- (000000000044A2F9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_52_good()
{
  goodG2B_359();
  return goodB2G_329();
}

//----- (000000000044A313) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_66b_badSink((__int64)&v5);
}
// 44A313: using guessed type char buf[16];

//----- (000000000044A403) ----------------------------------------------------
int goodG2B_360()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000044A42D) ----------------------------------------------------
int goodB2G_330()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_66b_goodB2GSink((__int64)&v5);
}
// 44A42D: using guessed type char buf[16];

//----- (000000000044A51D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_66_good()
{
  goodG2B_360();
  return goodB2G_330();
}

//----- (000000000044A537) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54c_badSink(a1);
}

//----- (000000000044A54E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54c_goodG2BSink(a1);
}

//----- (000000000044A565) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_54c_goodB2GSink(a1);
}

//----- (000000000044A57C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_13_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044A660) ----------------------------------------------------
int goodB2G1_225()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044A76C) ----------------------------------------------------
int goodB2G2_225()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044A86C) ----------------------------------------------------
int goodG2B1_195()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044A8C1) ----------------------------------------------------
int goodG2B2_195()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044A90A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_13_good()
{
  goodB2G1_225();
  goodB2G2_225();
  goodG2B1_195();
  return goodG2B2_195();
}

//----- (000000000044A938) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 44A938: using guessed type char buf[16];

//----- (000000000044AA2C) ----------------------------------------------------
int goodB2G_331()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 44AA2C: using guessed type char buf[16];

//----- (000000000044AB35) ----------------------------------------------------
int goodG2B_361()
{
  return printIntLine(3u);
}

//----- (000000000044AB63) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_18_good()
{
  goodB2G_331();
  return goodG2B_361();
}

//----- (000000000044AB7D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_preinc_68_badData + 1));
}
// 6A95F8: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_68_badData;

//----- (000000000044ABAA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_preinc_68_goodG2BData + 1));
}
// 6A95FC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_68_goodG2BData;

//----- (000000000044ABD7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData + 1));
  return result;
}
// 6A95FA: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData;

//----- (000000000044AC18) ----------------------------------------------------
int badSink_58()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_preinc_45_badData + 1);
}
// 6A94A4: using guessed type char CWE190_Integer_Overflow__char_max_preinc_45_badData;

//----- (000000000044AC42) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_45_bad()
{
  CWE190_Integer_Overflow__char_max_preinc_45_badData = 127;
  return badSink_58();
}
// 6A94A4: using guessed type char CWE190_Integer_Overflow__char_max_preinc_45_badData;

//----- (000000000044AC68) ----------------------------------------------------
int goodG2BSink_58()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_preinc_45_goodG2BData + 1);
}
// 6A94A5: using guessed type char CWE190_Integer_Overflow__char_max_preinc_45_goodG2BData;

//----- (000000000044AC92) ----------------------------------------------------
int goodG2B_362()
{
  CWE190_Integer_Overflow__char_max_preinc_45_goodG2BData = 2;
  return goodG2BSink_58();
}
// 6A94A5: using guessed type char CWE190_Integer_Overflow__char_max_preinc_45_goodG2BData;

//----- (000000000044ACB8) ----------------------------------------------------
int goodB2GSink_43()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_max_preinc_45_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_max_preinc_45_goodB2GData + 1);
  return result;
}
// 6A94A6: using guessed type char CWE190_Integer_Overflow__char_max_preinc_45_goodB2GData;

//----- (000000000044ACF4) ----------------------------------------------------
int goodB2G_332()
{
  CWE190_Integer_Overflow__char_max_preinc_45_goodB2GData = 127;
  return goodB2GSink_43();
}
// 6A94A6: using guessed type char CWE190_Integer_Overflow__char_max_preinc_45_goodB2GData;

//----- (000000000044AD1A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_45_good()
{
  goodG2B_362();
  return goodB2G_332();
}

//----- (000000000044AD34) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_06_bad()
{
  return printHexCharLine(128);
}

//----- (000000000044AD70) ----------------------------------------------------
int goodB2G1_226()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000044ADCA) ----------------------------------------------------
int goodB2G2_226()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000044AE18) ----------------------------------------------------
int goodG2B1_196()
{
  return printHexCharLine(3);
}

//----- (000000000044AE60) ----------------------------------------------------
int goodG2B2_196()
{
  return printHexCharLine(3);
}

//----- (000000000044AE9C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_06_good()
{
  goodB2G1_226();
  goodB2G2_226();
  goodG2B1_196();
  return goodG2B2_196();
}

//----- (000000000044AECA) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AEF7) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000044AF0A) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AF37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54c_badSink(a1);
}

//----- (000000000044AF4E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54c_goodG2BSink(a1);
}

//----- (000000000044AF65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54c_goodB2GSink(a1);
}

//----- (000000000044AF7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_53c_badSink(a1);
}

//----- (000000000044AF97) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_53c_goodG2BSink(a1);
}

//----- (000000000044AFB2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_preinc_53c_goodB2GSink(a1);
}

//----- (000000000044AFCD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044AFF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044B01D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000044B059) ----------------------------------------------------
__int64 staticReturnsTrue_14()
{
  return 1LL;
}

//----- (000000000044B064) ----------------------------------------------------
__int64 staticReturnsFalse_14()
{
  return 0LL;
}

//----- (000000000044B06F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B0DA) ----------------------------------------------------
int goodB2G1_227()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)staticReturnsFalse_14() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B170) ----------------------------------------------------
int goodB2G2_227()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_14();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B1FA) ----------------------------------------------------
int goodG2B1_197()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_14() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000044B255) ----------------------------------------------------
int goodG2B2_197()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    v1 = 2LL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000044B2A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_good()
{
  goodB2G1_227();
  goodB2G2_227();
  goodG2B1_197();
  return goodG2B2_197();
}

//----- (000000000044B2D2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_18_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000044B300) ----------------------------------------------------
int goodB2G_333()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000044B340) ----------------------------------------------------
int goodG2B_363()
{
  return printUnsignedLine(3u);
}

//----- (000000000044B36E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_18_good()
{
  goodB2G_333();
  return goodG2B_363();
}

//----- (000000000044B388) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_54_bad()
{
  return CWE190_Integer_Overflow__int_max_preinc_54b_badSink(0x7FFFFFFF);
}

//----- (000000000044B3AA) ----------------------------------------------------
int goodG2B_364()
{
  return CWE190_Integer_Overflow__int_max_preinc_54b_goodG2BSink(2);
}

//----- (000000000044B3CC) ----------------------------------------------------
int goodB2G_334()
{
  return CWE190_Integer_Overflow__int_max_preinc_54b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000044B3EE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_54_good()
{
  goodG2B_364();
  return goodB2G_334();
}

//----- (000000000044B408) ----------------------------------------------------
int __fastcall badSink_59(__int64 a1)
{
  int result; // eax

  result = badStatic_14;
  if ( badStatic_14 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A94A8: using guessed type int badStatic_14;

//----- (000000000044B439) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_21_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  badStatic_14 = 1;
  return badSink_59(v4);
}
// 6A94A8: using guessed type int badStatic_14;

//----- (000000000044B500) ----------------------------------------------------
int __fastcall goodB2G1Sink_14(__int64 a1)
{
  if ( goodB2G1Static_14 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6A94AC: using guessed type int goodB2G1Static_14;

//----- (000000000044B559) ----------------------------------------------------
int goodB2G1_228()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G1Static_14 = 0;
  return goodB2G1Sink_14(v4);
}
// 6A94AC: using guessed type int goodB2G1Static_14;

//----- (000000000044B620) ----------------------------------------------------
int __fastcall goodB2G2Sink_14(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_14;
  if ( goodB2G2Static_14 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6A94B0: using guessed type int goodB2G2Static_14;

//----- (000000000044B66D) ----------------------------------------------------
int goodB2G2_228()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G2Static_14 = 1;
  return goodB2G2Sink_14(v4);
}
// 6A94B0: using guessed type int goodB2G2Static_14;

//----- (000000000044B734) ----------------------------------------------------
int __fastcall goodG2BSink_59(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_14;
  if ( goodG2BStatic_14 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6A94B4: using guessed type int goodG2BStatic_14;

//----- (000000000044B765) ----------------------------------------------------
int goodG2B_365()
{
  goodG2BStatic_14 = 1;
  return goodG2BSink_59(2LL);
}
// 6A94B4: using guessed type int goodG2BStatic_14;

//----- (000000000044B795) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_21_good()
{
  goodB2G1_228();
  goodB2G2_228();
  return goodG2B_365();
}

//----- (000000000044B7B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000044B883) ----------------------------------------------------
int goodB2G1_229()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000044B969) ----------------------------------------------------
int goodB2G2_229()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000044BA4F) ----------------------------------------------------
int goodG2B1_198()
{
  return printLongLongLine(3LL);
}

//----- (000000000044BA82) ----------------------------------------------------
int goodG2B2_198()
{
  return printLongLongLine(3LL);
}

//----- (000000000044BAB5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_03_good()
{
  goodB2G1_229();
  goodB2G2_229();
  goodG2B1_198();
  return goodG2B2_198();
}

//----- (000000000044BAE3) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_67_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044BB20) ----------------------------------------------------
int goodG2B_366()
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_67b_goodG2BSink(2);
}

//----- (000000000044BB44) ----------------------------------------------------
int goodB2G_335()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044BB81) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_67_good()
{
  goodG2B_366();
  return goodB2G_335();
}

//----- (000000000044BB9B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_68_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_68_badData = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_68b_badSink();
}
// 6A95F8: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_68_badData;

//----- (000000000044BC06) ----------------------------------------------------
int goodG2B_367()
{
  CWE190_Integer_Overflow__short_rand_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_rand_preinc_68b_goodG2BSink();
}
// 6A95FC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_68_goodG2BData;

//----- (000000000044BC31) ----------------------------------------------------
int goodB2G_336()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_68b_goodB2GSink();
}
// 6A95FA: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData;

//----- (000000000044BC9C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_68_good()
{
  goodG2B_367();
  return goodB2G_336();
}

//----- (000000000044BCB6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_51_bad()
{
  return CWE190_Integer_Overflow__int_max_preinc_51b_badSink(0x7FFFFFFF);
}

//----- (000000000044BCD8) ----------------------------------------------------
int goodG2B_368()
{
  return CWE190_Integer_Overflow__int_max_preinc_51b_goodG2BSink(2);
}

//----- (000000000044BCFA) ----------------------------------------------------
int goodB2G_337()
{
  return CWE190_Integer_Overflow__int_max_preinc_51b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000044BD1C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_51_good()
{
  goodG2B_368();
  return goodB2G_337();
}

//----- (000000000044BD36) ----------------------------------------------------
int __fastcall badSink_60(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044BD5D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_44_bad()
{
  return badSink_60(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044BD92) ----------------------------------------------------
int __fastcall goodG2BSink_60(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044BDB9) ----------------------------------------------------
int goodG2B_369()
{
  return goodG2BSink_60(2LL);
}

//----- (000000000044BDE8) ----------------------------------------------------
int __fastcall goodB2GSink_44(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000044BE2B) ----------------------------------------------------
int goodB2G_338()
{
  return goodB2GSink_44(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044BE60) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_44_good()
{
  goodG2B_369();
  return goodB2G_338();
}

//----- (000000000044BE7A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_badSource(0);
  return printUnsignedLine(v0 + 1);
}

//----- (000000000044BEAC) ----------------------------------------------------
int goodG2B_370()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000044BEDE) ----------------------------------------------------
int goodB2G_339()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61b_goodB2GSource(0);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044BF22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_61_good()
{
  goodG2B_370();
  return goodB2G_339();
}

//----- (000000000044BF3C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_54b_badSink(v4);
}

//----- (000000000044BFA4) ----------------------------------------------------
int goodG2B_371()
{
  return CWE190_Integer_Overflow__int_fgets_preinc_54b_goodG2BSink(2);
}

//----- (000000000044BFC6) ----------------------------------------------------
int goodB2G_340()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_54b_goodB2GSink(v4);
}

//----- (000000000044C02E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_54_good()
{
  goodG2B_371();
  return goodB2G_340();
}

//----- (000000000044C048) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_53_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_53b_badSink(v1);
}

//----- (000000000044C0A9) ----------------------------------------------------
int goodG2B_372()
{
  return CWE190_Integer_Overflow__short_rand_preinc_53b_goodG2BSink(2);
}

//----- (000000000044C0CA) ----------------------------------------------------
int goodB2G_341()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_53b_goodB2GSink(v1);
}

//----- (000000000044C12B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_53_good()
{
  goodG2B_372();
  return goodB2G_341();
}

//----- (000000000044C145) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_badSink(a1);
}

//----- (000000000044C15F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_goodG2BSink(a1);
}

//----- (000000000044C179) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54c_goodB2GSink(a1);
}

//----- (000000000044C193) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  else
  {
    v10 = 2LL;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v10 + 1);
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (000000000044C2BE) ----------------------------------------------------
int goodB2G_342()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rax
  __int64 v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // rbx
  __int64 v17; // rbx
  int result; // eax
  __int64 v19; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v19 = v4;
  }
  else
  {
    if ( rand() & 1 )
    {
      v9 = (__int64)rand() << 60;
      v10 = ((__int64)rand() << 45) ^ v9;
      v11 = ((__int64)rand() << 30) ^ v10;
      v12 = ((__int64)rand() << 15) ^ v11;
      v13 = v12 ^ rand();
    }
    else
    {
      v14 = (__int64)rand() << 60;
      v15 = ((__int64)rand() << 45) ^ v14;
      v16 = ((__int64)rand() << 30) ^ v15;
      v17 = ((__int64)rand() << 15) ^ v16;
      v13 = ~(v17 ^ rand());
    }
    v19 = v13;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v19 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v19 + 1);
  }
  else if ( v19 == 0x7FFFFFFFFFFFFFFFLL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v19 + 1);
  }
  return result;
}

//----- (000000000044C499) ----------------------------------------------------
int goodG2B_373()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (000000000044C50D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_12_good()
{
  goodB2G_342();
  return goodG2B_373();
}

//----- (000000000044C527) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91A4: using guessed type int staticFive_16;

//----- (000000000044C584) ----------------------------------------------------
int goodB2G1_230()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFive_16 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91A4: using guessed type int staticFive_16;

//----- (000000000044C601) ----------------------------------------------------
int goodB2G2_230()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_16;
  if ( staticFive_16 == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91A4: using guessed type int staticFive_16;

//----- (000000000044C672) ----------------------------------------------------
int goodG2B1_199()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91A4: using guessed type int staticFive_16;

//----- (000000000044C6C0) ----------------------------------------------------
int goodG2B2_199()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = 2;
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91A4: using guessed type int staticFive_16;

//----- (000000000044C702) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_07_good()
{
  goodB2G1_230();
  goodB2G2_230();
  goodG2B1_199();
  return goodG2B2_199();
}

//----- (000000000044C730) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044C757) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044C77E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000044C7C1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044C7FC) ----------------------------------------------------
int goodG2B_374()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_goodG2BSink(2LL);
}

//----- (000000000044C822) ----------------------------------------------------
int goodB2G_343()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044C85D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_54_good()
{
  goodG2B_374();
  return goodB2G_343();
}

//----- (000000000044C877) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000044C8B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000044C8E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (000000000044C936) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53d_badSink(a1);
}

//----- (000000000044C94D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53d_goodG2BSink(a1);
}

//----- (000000000044C964) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53d_goodB2GSink(a1);
}

//----- (000000000044C97B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_02_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000044CA45) ----------------------------------------------------
int goodB2G1_231()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000044CB2B) ----------------------------------------------------
int goodB2G2_231()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000044CC11) ----------------------------------------------------
int goodG2B1_200()
{
  return printLongLongLine(3LL);
}

//----- (000000000044CC44) ----------------------------------------------------
int goodG2B2_200()
{
  return printLongLongLine(3LL);
}

//----- (000000000044CC77) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_02_good()
{
  goodB2G1_231();
  goodB2G2_231();
  goodG2B1_200();
  return goodG2B2_200();
}

//----- (000000000044CCA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044CCEE) ----------------------------------------------------
int goodB2G1_232()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044CD4D) ----------------------------------------------------
int goodB2G2_232()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044CDAC) ----------------------------------------------------
int goodG2B1_201()
{
  return printIntLine(3u);
}

//----- (000000000044CDDA) ----------------------------------------------------
int goodG2B2_201()
{
  return printIntLine(3u);
}

//----- (000000000044CE08) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_15_good()
{
  goodB2G1_232();
  goodB2G2_232();
  goodG2B1_201();
  return goodG2B2_201();
}

//----- (000000000044CE36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54d_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54e_badSink(a1);
}

//----- (000000000044CE50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54d_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54e_goodG2BSink(a1);
}

//----- (000000000044CE6A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54d_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54e_goodB2GSink(a1);
}

//----- (000000000044CE84) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_badSink(a1);
}

//----- (000000000044CE9B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_goodG2BSink(a1);
}

//----- (000000000044CEB2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54d_goodB2GSink(a1);
}

//----- (000000000044CEC9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000044CFAB) ----------------------------------------------------
int goodB2G1_233()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000044D0B5) ----------------------------------------------------
int goodB2G2_233()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000044D1B3) ----------------------------------------------------
int goodG2B1_202()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (000000000044D206) ----------------------------------------------------
int goodG2B2_202()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (000000000044D24D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_10_good()
{
  goodB2G1_233();
  goodB2G2_233();
  goodG2B1_202();
  return goodG2B2_202();
}

//----- (000000000044D27B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044D29C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044D2BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044D2F3) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_14_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044D35E) ----------------------------------------------------
int goodB2G1_234()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044D3E7) ----------------------------------------------------
int goodB2G2_234()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044D464) ----------------------------------------------------
int goodG2B1_203()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044D4AE) ----------------------------------------------------
int goodG2B2_203()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044D4EC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_14_good()
{
  goodB2G1_234();
  goodB2G2_234();
  goodG2B1_203();
  return goodG2B2_203();
}

//----- (000000000044D51A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044D53B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044D55C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044D58F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_32_bad()
{
  int v0; // eax
  char v2; // [rsp+Ch] [rbp-14h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 32;
  v3 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v3 = v0;
  *v5 = v0;
  return printHexCharLine(*v4 + 1);
}

//----- (000000000044D612) ----------------------------------------------------
int goodG2B_375()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printHexCharLine(3);
}

//----- (000000000044D668) ----------------------------------------------------
int goodB2G_344()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Ch] [rbp-14h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 32;
  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  *v6 = v0;
  v3 = *v5;
  if ( v3 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v3 + 1);
  return result;
}

//----- (000000000044D6FD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_32_good()
{
  goodG2B_375();
  return goodB2G_344();
}

//----- (000000000044D717) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D760) ----------------------------------------------------
int goodB2G1_235()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D7BD) ----------------------------------------------------
int goodB2G2_235()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D81A) ----------------------------------------------------
int goodG2B1_204()
{
  return printUnsignedLine(3u);
}

//----- (000000000044D848) ----------------------------------------------------
int goodG2B2_204()
{
  return printUnsignedLine(3u);
}

//----- (000000000044D876) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_15_good()
{
  goodB2G1_235();
  goodB2G2_235();
  goodG2B1_204();
  return goodG2B2_204();
}

//----- (000000000044D8A4) ----------------------------------------------------
int __fastcall badSink_61(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044D8C5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_61)(v2);
}

//----- (000000000044D938) ----------------------------------------------------
int __fastcall goodG2BSink_61(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044D959) ----------------------------------------------------
int goodG2B_376()
{
  return goodG2BSink_61(2);
}

//----- (000000000044D984) ----------------------------------------------------
int __fastcall goodB2GSink_45(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044D9B7) ----------------------------------------------------
__int64 goodB2G_345()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_45)(v2);
}

//----- (000000000044DA2A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_preinc_44_good()
{
  goodG2B_376();
  return goodB2G_345();
}

//----- (000000000044DA44) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_01_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000044DB0E) ----------------------------------------------------
int goodG2B_377()
{
  return printLongLongLine(3LL);
}

//----- (000000000044DB41) ----------------------------------------------------
int goodB2G_346()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000044DC27) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_01_good()
{
  goodG2B_377();
  return goodB2G_346();
}

//----- (000000000044DC41) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_52_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_52b_badSink(v1);
}

//----- (000000000044DCA2) ----------------------------------------------------
int goodG2B_378()
{
  return CWE190_Integer_Overflow__short_rand_preinc_52b_goodG2BSink(2);
}

//----- (000000000044DCC3) ----------------------------------------------------
int goodB2G_347()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_52b_goodB2GSink(v1);
}

//----- (000000000044DD24) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_52_good()
{
  goodG2B_378();
  return goodB2G_347();
}

//----- (000000000044DD3E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_64_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044DD77) ----------------------------------------------------
int goodG2B_379()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_fscanf_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000044DD99) ----------------------------------------------------
int goodB2G_348()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044DDD2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_64_good()
{
  goodG2B_379();
  return goodB2G_348();
}

//----- (000000000044DDEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044DE14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044DE3C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000044DE78) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_badSink(a1);
}

//----- (000000000044DE92) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_goodG2BSink(a1);
}

//----- (000000000044DEAC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53d_goodB2GSink(a1);
}

//----- (000000000044DEC6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_16_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000044DF36) ----------------------------------------------------
int goodB2G_349()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000044DFBA) ----------------------------------------------------
int goodG2B_380()
{
  return printIntLine(3u);
}

//----- (000000000044DFEA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_16_good()
{
  goodB2G_349();
  return goodG2B_380();
}

//----- (000000000044E004) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_preinc_68_badData + 1);
}
// 6A9614: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_68_badData;

//----- (000000000044E02B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_preinc_68_goodG2BData + 1);
}
// 6A9610: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_68_goodG2BData;

//----- (000000000044E052) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_preinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fgets_preinc_68_goodB2GData + 1);
  return result;
}
// 6A960C: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_68_goodB2GData;

//----- (000000000044E08E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_53c_badSink(a1);
}

//----- (000000000044E0A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_53c_goodG2BSink(a1);
}

//----- (000000000044E0BC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_53c_goodB2GSink(a1);
}

//----- (000000000044E0D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044E0F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044E115) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044E14B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000044E1C1) ----------------------------------------------------
int goodB2G1_236()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000044E24C) ----------------------------------------------------
int goodB2G2_236()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000044E2D7) ----------------------------------------------------
int goodG2B1_205()
{
  return printIntLine(3u);
}

//----- (000000000044E305) ----------------------------------------------------
int goodG2B2_205()
{
  return printIntLine(3u);
}

//----- (000000000044E333) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_15_good()
{
  goodB2G1_236();
  goodB2G2_236();
  goodG2B1_205();
  return goodG2B2_205();
}

//----- (000000000044E361) ----------------------------------------------------
__int64 staticReturnsTrue_15()
{
  return 1LL;
}

//----- (000000000044E36C) ----------------------------------------------------
__int64 staticReturnsFalse_15()
{
  return 0LL;
}

//----- (000000000044E377) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = -1;
  result = staticReturnsTrue_15();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044E3BF) ----------------------------------------------------
int goodB2G1_237()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = -1;
  if ( (unsigned int)staticReturnsFalse_15() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (000000000044E425) ----------------------------------------------------
int goodB2G2_237()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = -1;
  result = staticReturnsTrue_15();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (000000000044E47F) ----------------------------------------------------
int goodG2B1_206()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_15() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_15();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044E4D3) ----------------------------------------------------
int goodG2B2_206()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = 2;
  result = staticReturnsTrue_15();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044E51B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_08_good()
{
  goodB2G1_237();
  goodB2G2_237();
  goodG2B1_206();
  return goodG2B2_206();
}

//----- (000000000044E549) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_04_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000044E5B0) ----------------------------------------------------
int goodB2G1_238()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000044E635) ----------------------------------------------------
int goodB2G2_238()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000044E6AE) ----------------------------------------------------
int goodG2B1_207()
{
  return printHexCharLine(3);
}

//----- (000000000044E6F4) ----------------------------------------------------
int goodG2B2_207()
{
  return printHexCharLine(3);
}

//----- (000000000044E72E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_04_good()
{
  goodB2G1_238();
  goodB2G2_238();
  goodG2B1_207();
  return goodG2B2_207();
}

//----- (000000000044E75C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_68_bad()
{
  CWE190_Integer_Overflow__int_max_preinc_68_badData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_68b_badSink();
}
// 6A9608: using guessed type int CWE190_Integer_Overflow__int_max_preinc_68_badData;

//----- (000000000044E787) ----------------------------------------------------
int goodG2B_381()
{
  CWE190_Integer_Overflow__int_max_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_max_preinc_68b_goodG2BSink();
}
// 6A9600: using guessed type int CWE190_Integer_Overflow__int_max_preinc_68_goodG2BData;

//----- (000000000044E7B2) ----------------------------------------------------
int goodB2G_350()
{
  CWE190_Integer_Overflow__int_max_preinc_68_goodB2GData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_68b_goodB2GSink();
}
// 6A9604: using guessed type int CWE190_Integer_Overflow__int_max_preinc_68_goodB2GData;

//----- (000000000044E7DD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_68_good()
{
  goodG2B_381();
  return goodB2G_350();
}

//----- (000000000044E7F7) ----------------------------------------------------
__int64 badSource_13()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000044E856) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_13();
  return printIntLine(v0 + 1);
}

//----- (000000000044E888) ----------------------------------------------------
__int64 goodG2BSource_13()
{
  return 2LL;
}

//----- (000000000044E89B) ----------------------------------------------------
int goodG2B_382()
{
  int v0; // eax

  v0 = goodG2BSource_13();
  return printIntLine(v0 + 1);
}

//----- (000000000044E8CD) ----------------------------------------------------
__int64 goodB2GSource_13()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000044E92C) ----------------------------------------------------
int goodB2G_351()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_13();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044E973) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_42_good()
{
  goodB2G_351();
  return goodG2B_382();
}

//----- (000000000044E98D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v7 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;
// 44E98D: using guessed type char buf[16];

//----- (000000000044EA99) ----------------------------------------------------
int goodB2G1_239()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6A91B8: using guessed type int globalFive;
// 44EA99: using guessed type char buf[16];

//----- (000000000044EBC6) ----------------------------------------------------
int goodB2G2_239()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;
// 44EBC6: using guessed type char buf[16];

//----- (000000000044ECE7) ----------------------------------------------------
int goodG2B1_208()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044ED35) ----------------------------------------------------
int goodG2B2_208()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000044ED77) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_14_good()
{
  goodB2G1_239();
  goodB2G2_239();
  goodG2B1_208();
  return goodG2B2_208();
}

//----- (000000000044EDA5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_18_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044EDEE) ----------------------------------------------------
int goodB2G_352()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044EE4B) ----------------------------------------------------
int goodG2B_383()
{
  return printHexCharLine(3);
}

//----- (000000000044EE75) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_18_good()
{
  goodB2G_352();
  return goodG2B_383();
}

//----- (000000000044EE8F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v10 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v9 = v10;
  return printIntLine(*v8 + 1);
}
// 44EE8F: using guessed type char buf[16];

//----- (000000000044EFAC) ----------------------------------------------------
int goodG2B_384()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000044F003) ----------------------------------------------------
int goodB2G_353()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v11 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v11;
  v6 = *v9;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 44F003: using guessed type char buf[16];

//----- (000000000044F135) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_32_good()
{
  goodG2B_384();
  return goodB2G_353();
}

//----- (000000000044F14F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_09_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044F231) ----------------------------------------------------
int goodB2G1_240()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000044F33B) ----------------------------------------------------
int goodB2G2_240()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044F439) ----------------------------------------------------
int goodG2B1_209()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000044F48C) ----------------------------------------------------
int goodG2B2_209()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044F4D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_09_good()
{
  goodB2G1_240();
  goodB2G2_240();
  goodG2B1_209();
  return goodG2B2_209();
}

//----- (000000000044F501) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53c_badSink(a1);
}

//----- (000000000044F518) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53c_goodG2BSink(a1);
}

//----- (000000000044F52F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53c_goodB2GSink(a1);
}

//----- (000000000044F546) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_51_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_51b_badSink(v1);
}

//----- (000000000044F5A7) ----------------------------------------------------
int goodG2B_385()
{
  return CWE190_Integer_Overflow__short_rand_preinc_51b_goodG2BSink(2);
}

//----- (000000000044F5C8) ----------------------------------------------------
int goodB2G_354()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_preinc_51b_goodB2GSink(v1);
}

//----- (000000000044F629) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_51_good()
{
  goodG2B_385();
  return goodB2G_354();
}

//----- (000000000044F643) ----------------------------------------------------
int __fastcall badSink_62(int a1)
{
  int result; // eax

  result = badStatic_15;
  if ( badStatic_15 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A94B8: using guessed type int badStatic_15;

//----- (000000000044F66E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_21_bad()
{
  badStatic_15 = 1;
  return badSink_62(0x7FFFFFFF);
}
// 6A94B8: using guessed type int badStatic_15;

//----- (000000000044F69A) ----------------------------------------------------
int __fastcall goodB2G1Sink_15(int a1)
{
  if ( goodB2G1Static_15 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A94BC: using guessed type int goodB2G1Static_15;

//----- (000000000044F6E6) ----------------------------------------------------
int goodB2G1_241()
{
  goodB2G1Static_15 = 0;
  return goodB2G1Sink_15(0x7FFFFFFF);
}
// 6A94BC: using guessed type int goodB2G1Static_15;

//----- (000000000044F712) ----------------------------------------------------
int __fastcall goodB2G2Sink_15(int a1)
{
  int result; // eax

  result = goodB2G2Static_15;
  if ( goodB2G2Static_15 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A94C0: using guessed type int goodB2G2Static_15;

//----- (000000000044F752) ----------------------------------------------------
int goodB2G2_241()
{
  goodB2G2Static_15 = 1;
  return goodB2G2Sink_15(0x7FFFFFFF);
}
// 6A94C0: using guessed type int goodB2G2Static_15;

//----- (000000000044F77E) ----------------------------------------------------
int __fastcall goodG2BSink_62(int a1)
{
  int result; // eax

  result = goodG2BStatic_15;
  if ( goodG2BStatic_15 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A94C4: using guessed type int goodG2BStatic_15;

//----- (000000000044F7A9) ----------------------------------------------------
int goodG2B_386()
{
  goodG2BStatic_15 = 1;
  return goodG2BSink_62(2);
}
// 6A94C4: using guessed type int goodG2BStatic_15;

//----- (000000000044F7D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_21_good()
{
  goodB2G1_241();
  goodB2G2_241();
  return goodG2B_386();
}

//----- (000000000044F7F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_53_bad()
{
  return CWE190_Integer_Overflow__int_max_preinc_53b_badSink(0x7FFFFFFF);
}

//----- (000000000044F81B) ----------------------------------------------------
int goodG2B_387()
{
  return CWE190_Integer_Overflow__int_max_preinc_53b_goodG2BSink(2);
}

//----- (000000000044F83D) ----------------------------------------------------
int goodB2G_355()
{
  return CWE190_Integer_Overflow__int_max_preinc_53b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000044F85F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_53_good()
{
  goodG2B_387();
  return goodB2G_355();
}

//----- (000000000044F879) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044F89A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044F8BB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044F8EE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_68_badData = v4;
  return CWE190_Integer_Overflow__int_fgets_preinc_68b_badSink();
}
// 6A9614: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_68_badData;

//----- (000000000044F95F) ----------------------------------------------------
int goodG2B_388()
{
  CWE190_Integer_Overflow__int_fgets_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fgets_preinc_68b_goodG2BSink();
}
// 6A9610: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_68_goodG2BData;

//----- (000000000044F98A) ----------------------------------------------------
int goodB2G_356()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int_fgets_preinc_68b_goodB2GSink();
}
// 6A960C: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_68_goodB2GData;

//----- (000000000044F9FB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_68_good()
{
  goodG2B_388();
  return goodB2G_356();
}

//----- (000000000044FA15) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_badData + 1);
}
// 6A9588: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_badData;

//----- (000000000044FA43) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodG2BData + 1);
}
// 6A9590: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodG2BData;

//----- (000000000044FA71) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodB2GData + 1);
  return result;
}
// 6A9580: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_preinc_68_goodB2GData;

//----- (000000000044FABB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_badSink(a1);
}

//----- (000000000044FAD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_goodG2BSink(a1);
}

//----- (000000000044FAE9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54c_goodB2GSink(a1);
}

//----- (000000000044FB00) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_badSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A94D4: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal;

//----- (000000000044FB2F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Sink(char a1)
{
  if ( CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6A94D8: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Global;

//----- (000000000044FB7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6A94DC: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global;

//----- (000000000044FBBD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6A94E0: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BGlobal;

//----- (000000000044FBEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_badSink(a1);
}

//----- (000000000044FC03) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_goodG2BSink(a1);
}

//----- (000000000044FC1A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54d_goodB2GSink(a1);
}

//----- (000000000044FC31) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_04_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_479C10, &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FC8A) ----------------------------------------------------
int goodB2G1_242()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_479C10, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FD03) ----------------------------------------------------
int goodB2G2_242()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_479C10, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FD70) ----------------------------------------------------
int goodG2B1_210()
{
  return printHexCharLine(3);
}

//----- (000000000044FDB6) ----------------------------------------------------
int goodG2B2_210()
{
  return printHexCharLine(3);
}

//----- (000000000044FDF0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_04_good()
{
  goodB2G1_242();
  goodB2G2_242();
  goodG2B1_210();
  return goodG2B2_210();
}

//----- (000000000044FE1E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_54_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54b_badSink(v4);
}

//----- (000000000044FEDB) ----------------------------------------------------
int goodG2B_389()
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54b_goodG2BSink(2LL);
}

//----- (000000000044FF01) ----------------------------------------------------
int goodB2G_357()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54b_goodB2GSink(v4);
}

//----- (000000000044FFBE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_54_good()
{
  goodG2B_389();
  return goodB2G_357();
}

//----- (000000000044FFD8) ----------------------------------------------------
int badSink_63()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_preinc_45_badData + 1));
}
// 6A94C8: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_45_badData;

//----- (0000000000450005) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_45_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_45_badData = v1;
  return badSink_63();
}
// 6A94C8: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_45_badData;

//----- (0000000000450070) ----------------------------------------------------
int goodG2BSink_63()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_preinc_45_goodG2BData + 1));
}
// 6A94CA: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_45_goodG2BData;

//----- (000000000045009D) ----------------------------------------------------
int goodG2B_390()
{
  CWE190_Integer_Overflow__short_rand_preinc_45_goodG2BData = 2;
  return goodG2BSink_63();
}
// 6A94CA: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_45_goodG2BData;

//----- (00000000004500C8) ----------------------------------------------------
int goodB2GSink_46()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData + 1));
  return result;
}
// 6A94CC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData;

//----- (0000000000450109) ----------------------------------------------------
int goodB2G_358()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData = v1;
  return goodB2GSink_46();
}
// 6A94CC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData;

//----- (0000000000450174) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_45_good()
{
  goodG2B_390();
  return goodB2G_358();
}

//----- (000000000045018E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_14 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printIntLine(v6 + 1);
  return result;
}
// 6A91A8: using guessed type int staticTrue_14;

//----- (0000000000450216) ----------------------------------------------------
int goodB2G1_243()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_14 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_14 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6A91A8: using guessed type int staticTrue_14;
// 6A94D0: using guessed type int staticFalse_14;

//----- (00000000004502BF) ----------------------------------------------------
int goodB2G2_243()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_14 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_14;
  if ( staticTrue_14 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6A91A8: using guessed type int staticTrue_14;

//----- (000000000045035C) ----------------------------------------------------
int goodG2B1_211()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_14 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91A8: using guessed type int staticTrue_14;
// 6A94D0: using guessed type int staticFalse_14;

//----- (00000000004503A8) ----------------------------------------------------
int goodG2B2_211()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_14 )
    v1 = 2;
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91A8: using guessed type int staticTrue_14;

//----- (00000000004503E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_05_good()
{
  goodB2G1_243();
  goodB2G2_243();
  goodG2B1_211();
  return goodG2B2_211();
}

//----- (0000000000450416) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 450416: using guessed type char buf[16];

//----- (000000000045051E) ----------------------------------------------------
int goodB2G1_244()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 45051E: using guessed type char buf[16];

//----- (0000000000450647) ----------------------------------------------------
int goodB2G2_244()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 450647: using guessed type char buf[16];

//----- (0000000000450764) ----------------------------------------------------
int goodG2B1_212()
{
  return printIntLine(3u);
}

//----- (00000000004507AE) ----------------------------------------------------
int goodG2B2_212()
{
  return printIntLine(3u);
}

//----- (00000000004507EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_04_good()
{
  goodB2G1_244();
  goodB2G2_244();
  goodG2B1_212();
  return goodG2B2_212();
}

//----- (000000000045081A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10 + 1;
  v5 = v10 + 1;
  return printIntLine(v10 + 1);
}
// 45081A: using guessed type char buf[16];

//----- (0000000000450918) ----------------------------------------------------
int goodG2B_391()
{
  return printIntLine(3u);
}

//----- (0000000000450950) ----------------------------------------------------
int goodB2G_359()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  v5 = v9;
  if ( v9 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}
// 450950: using guessed type char buf[16];

//----- (0000000000450A63) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_31_good()
{
  goodG2B_391();
  return goodB2G_359();
}

//----- (0000000000450A7D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_53b_badSink(v4);
}

//----- (0000000000450AE5) ----------------------------------------------------
int goodG2B_392()
{
  return CWE190_Integer_Overflow__int_fgets_preinc_53b_goodG2BSink(2);
}

//----- (0000000000450B07) ----------------------------------------------------
int goodB2G_360()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_53b_goodB2GSink(v4);
}

//----- (0000000000450B6F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_53_good()
{
  goodG2B_392();
  return goodB2G_360();
}

//----- (0000000000450B89) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_badSink(a1);
}

//----- (0000000000450BA3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_goodG2BSink(a1);
}

//----- (0000000000450BBD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000450BD7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000450C05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000450C33) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000450C75) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_61_bad()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_max_preinc_61b_badSource();
  return printHexCharLine(v0 + 1);
}

//----- (0000000000450CA7) ----------------------------------------------------
int goodG2B_393()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_max_preinc_61b_goodG2BSource();
  return printHexCharLine(v0 + 1);
}

//----- (0000000000450CD9) ----------------------------------------------------
int goodB2G_361()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE190_Integer_Overflow__char_max_preinc_61b_goodB2GSource();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000450D1D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_61_good()
{
  goodG2B_393();
  return goodB2G_361();
}

//----- (0000000000450D37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000450D5E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000450D85) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000450DC8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000450DEF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000450E16) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000450E59) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000450E85) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000450EB1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000450EF2) ----------------------------------------------------
__int64 __fastcall badSource_14(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450F1F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_14(0);
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000450F51) ----------------------------------------------------
__int64 goodG2BSource_14()
{
  return 2LL;
}

//----- (0000000000450F64) ----------------------------------------------------
int goodG2B_394()
{
  int v0; // eax

  v0 = goodG2BSource_14();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000450F96) ----------------------------------------------------
__int64 __fastcall goodB2GSource_14(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450FC3) ----------------------------------------------------
int goodB2G_362()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_14(0);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000451007) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_42_good()
{
  goodB2G_362();
  return goodG2B_394();
}

//----- (0000000000451021) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_52c_badSink(a1);
}

//----- (0000000000451038) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_52c_goodG2BSink(a1);
}

//----- (000000000045104F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_preinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000451066) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_22_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__char_rand_preinc_22_badSink(v0);
}
// 6A94D4: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal;

//----- (00000000004510BA) ----------------------------------------------------
int goodB2G1_245()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Sink(v0);
}
// 6A94D8: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Global;

//----- (000000000045110E) ----------------------------------------------------
int goodB2G2_245()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Sink(v0);
}
// 6A94DC: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global;

//----- (0000000000451162) ----------------------------------------------------
int goodG2B_395()
{
  CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BSink(2);
}
// 6A94E0: using guessed type int CWE190_Integer_Overflow__char_rand_preinc_22_goodG2BGlobal;

//----- (0000000000451189) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_22_good()
{
  goodB2G1_245();
  goodB2G2_245();
  return goodG2B_395();
}

//----- (00000000004511AD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_54_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_badSink(-1);
}

//----- (00000000004511CF) ----------------------------------------------------
int goodG2B_396()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_goodG2BSink(2);
}

//----- (00000000004511F1) ----------------------------------------------------
int goodB2G_363()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_54b_goodB2GSink(-1);
}

//----- (0000000000451213) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_54_good()
{
  goodG2B_396();
  return goodB2G_363();
}

//----- (000000000045122D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451268) ----------------------------------------------------
int goodG2B_397()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_goodG2BSink(2LL);
}

//----- (000000000045128E) ----------------------------------------------------
int goodB2G_364()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004512C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_52_good()
{
  goodG2B_397();
  return goodB2G_364();
}

//----- (00000000004512E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_preinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A92D4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_badGlobal;

//----- (000000000045130E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A92D8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G1Global;

//----- (000000000045135A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A92DC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodB2G2Global;

//----- (000000000045139A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A92E0: using guessed type int CWE190_Integer_Overflow__int_connect_socket_preinc_22_goodG2BGlobal;

//----- (00000000004513C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_53d_badSink(a1);
}

//----- (00000000004513E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_53d_goodG2BSink(a1);
}

//----- (00000000004513FB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000451416) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_rand_preinc_22_badSink(v2);
}
// 6A94E4: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_badGlobal;

//----- (000000000045148A) ----------------------------------------------------
int goodB2G1_246()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Sink(v2);
}
// 6A94E8: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G1Global;

//----- (00000000004514FE) ----------------------------------------------------
int goodB2G2_246()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Sink(v2);
}
// 6A94EC: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_goodB2G2Global;

//----- (0000000000451572) ----------------------------------------------------
int goodG2B_398()
{
  CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BSink(2);
}
// 6A94F0: using guessed type int CWE190_Integer_Overflow__int_rand_preinc_22_goodG2BGlobal;

//----- (000000000045159E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_22_good()
{
  goodB2G1_246();
  goodB2G2_246();
  return goodG2B_398();
}

//----- (00000000004515C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_64b_badSink(&v1);
}

//----- (00000000004515E6) ----------------------------------------------------
int goodG2B_399()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_preinc_64b_goodG2BSink(&v1);
}

//----- (000000000045160A) ----------------------------------------------------
int goodB2G_365()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_preinc_64b_goodB2GSink(&v1);
}

//----- (000000000045162E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_64_good()
{
  goodG2B_399();
  return goodB2G_365();
}

//----- (0000000000451648) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451683) ----------------------------------------------------
int goodG2B_400()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_goodG2BSink(2LL);
}

//----- (00000000004516A9) ----------------------------------------------------
int goodB2G_366()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004516E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_53_good()
{
  goodG2B_400();
  return goodB2G_366();
}

//----- (00000000004516FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54d_badSink(a1);
}

//----- (0000000000451718) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54d_goodG2BSink(a1);
}

//----- (0000000000451732) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54d_goodB2GSink(a1);
}

//----- (000000000045174C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000045177F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004517B2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_preinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (00000000004517FA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451848) ----------------------------------------------------
int goodG2B_401()
{
  return printIntLine(3u);
}

//----- (0000000000451880) ----------------------------------------------------
int goodB2G_367()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1;
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004518E3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_34_good()
{
  goodG2B_401();
  return goodB2G_367();
}

//----- (00000000004518FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000045192E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000045195F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (00000000004519A4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_67_bad()
{
  return CWE190_Integer_Overflow__short_max_preinc_67b_badSink(0x7FFF);
}

//----- (00000000004519CD) ----------------------------------------------------
int goodG2B_402()
{
  return CWE190_Integer_Overflow__short_max_preinc_67b_goodG2BSink(2);
}

//----- (00000000004519F6) ----------------------------------------------------
int goodB2G_368()
{
  return CWE190_Integer_Overflow__short_max_preinc_67b_goodB2GSink(0x7FFF);
}

//----- (0000000000451A1F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_67_good()
{
  goodG2B_402();
  return goodB2G_368();
}

//----- (0000000000451A39) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_65b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000451A5E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000451A83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000451ABA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_badSink(&v1);
}

//----- (0000000000451ADE) ----------------------------------------------------
int goodG2B_403()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000451B02) ----------------------------------------------------
int goodB2G_369()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_63b_goodB2GSink(&v1);
}

//----- (0000000000451B26) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_63_good()
{
  goodG2B_403();
  return goodB2G_369();
}

//----- (0000000000451B40) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_52_bad()
{
  return CWE190_Integer_Overflow__int_max_preinc_52b_badSink(0x7FFFFFFF);
}

//----- (0000000000451B62) ----------------------------------------------------
int goodG2B_404()
{
  return CWE190_Integer_Overflow__int_max_preinc_52b_goodG2BSink(2);
}

//----- (0000000000451B84) ----------------------------------------------------
int goodB2G_370()
{
  return CWE190_Integer_Overflow__int_max_preinc_52b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000451BA6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_52_good()
{
  goodG2B_404();
  return goodB2G_370();
}

//----- (0000000000451BC0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000451BE7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000451C0E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000451C51) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_66b_badSink((__int64)&v6);
}

//----- (0000000000451CC3) ----------------------------------------------------
int goodG2B_405()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_rand_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000451CED) ----------------------------------------------------
int goodB2G_371()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__int_rand_preinc_66b_goodB2GSink((__int64)&v6);
}

//----- (0000000000451D5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_66_good()
{
  goodG2B_405();
  return goodB2G_371();
}

//----- (0000000000451D79) ----------------------------------------------------
__int64 badSource_15()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000451D95) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_15();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000451DD0) ----------------------------------------------------
__int64 goodG2BSource_15()
{
  return 2LL;
}

//----- (0000000000451DE6) ----------------------------------------------------
int goodG2B_406()
{
  __int64 v0; // rax

  v0 = goodG2BSource_15();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000451E21) ----------------------------------------------------
__int64 goodB2GSource_15()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000451E3D) ----------------------------------------------------
int goodB2G_372()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_15();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000451E94) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_42_good()
{
  goodB2G_372();
  return goodG2B_406();
}

//----- (0000000000451EAE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_badSink(a1);
}

//----- (0000000000451EC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_goodG2BSink(a1);
}

//----- (0000000000451EDC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000451EF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_16_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000451F21) ----------------------------------------------------
int goodB2G_373()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000451F64) ----------------------------------------------------
int goodG2B_407()
{
  return printIntLine(3u);
}

//----- (0000000000451F92) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_16_good()
{
  goodB2G_373();
  return goodG2B_407();
}

//----- (0000000000451FAC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000451FEC) ----------------------------------------------------
int goodB2G1_247()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000045204A) ----------------------------------------------------
int goodB2G2_247()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000045209C) ----------------------------------------------------
int goodG2B1_213()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;
// 47B030: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004520E8) ----------------------------------------------------
int goodG2B2_213()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47B02C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000452128) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_09_good()
{
  goodB2G1_247();
  goodB2G2_247();
  goodG2B1_213();
  return goodG2B2_213();
}

//----- (0000000000452156) ----------------------------------------------------
int badSink_64()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData + 1);
}
// 6A94F4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData;

//----- (000000000045217D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData = v8;
  return badSink_64();
}
// 6A94F4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData;
// 45217D: using guessed type char buf[16];

//----- (00000000004522B4) ----------------------------------------------------
int goodG2BSink_64()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData + 1);
}
// 6A94F8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData;

//----- (00000000004522DB) ----------------------------------------------------
int goodG2B_408()
{
  CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData = 2;
  return goodG2BSink_64();
}
// 6A94F8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData;

//----- (0000000000452306) ----------------------------------------------------
int goodB2GSink_47()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData + 1);
  return result;
}
// 6A94FC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData;

//----- (0000000000452342) ----------------------------------------------------
int goodB2G_374()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData = v8;
  return goodB2GSink_47();
}
// 6A94FC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData;
// 452342: using guessed type char buf[16];

//----- (0000000000452479) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_45_good()
{
  goodG2B_408();
  return goodB2G_374();
}

//----- (0000000000452493) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_badSink(&v1);
}

//----- (00000000004524B7) ----------------------------------------------------
int goodG2B_409()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_goodG2BSink(&v1);
}

//----- (00000000004524DB) ----------------------------------------------------
int goodB2G_375()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_64b_goodB2GSink(&v1);
}

//----- (00000000004524FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_64_good()
{
  goodG2B_409();
  return goodB2G_375();
}

//----- (0000000000452519) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_52b_badSink(v4);
}

//----- (0000000000452581) ----------------------------------------------------
int goodG2B_410()
{
  return CWE190_Integer_Overflow__int_fgets_preinc_52b_goodG2BSink(2);
}

//----- (00000000004525A3) ----------------------------------------------------
int goodB2G_376()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_52b_goodB2GSink(v4);
}

//----- (000000000045260B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_52_good()
{
  goodG2B_410();
  return goodB2G_376();
}

//----- (0000000000452625) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452673) ----------------------------------------------------
int goodG2B_411()
{
  return printUnsignedLine(3u);
}

//----- (00000000004526AB) ----------------------------------------------------
int goodB2G_377()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1;
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045270B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_34_good()
{
  goodG2B_411();
  return goodB2G_377();
}

//----- (0000000000452725) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_64b_badSink(&v5);
}
// 452725: using guessed type char buf[16];

//----- (0000000000452855) ----------------------------------------------------
int goodG2B_412()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_preinc_64b_goodG2BSink(&v1);
}

//----- (0000000000452879) ----------------------------------------------------
int goodB2G_378()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_64b_goodB2GSink(&v5);
}
// 452879: using guessed type char buf[16];

//----- (00000000004529A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_64_good()
{
  goodG2B_412();
  return goodB2G_378();
}

//----- (00000000004529C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004529E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000452A05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000452A3B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_badSink(a1);
}

//----- (0000000000452A55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_goodG2BSink(a1);
}

//----- (0000000000452A6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_preinc_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_52c_goodB2GSink(a1);
}

//----- (0000000000452A89) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_63_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452AC2) ----------------------------------------------------
int goodG2B_413()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_fscanf_preinc_63b_goodG2BSink(&v1);
}

//----- (0000000000452AE4) ----------------------------------------------------
int goodB2G_379()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_preinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452B1D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_63_good()
{
  goodG2B_413();
  return goodB2G_379();
}

//----- (0000000000452B37) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_16_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000452BAB) ----------------------------------------------------
int goodB2G_380()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000452C34) ----------------------------------------------------
int goodG2B_414()
{
  return printIntLine(3u);
}

//----- (0000000000452C62) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_16_good()
{
  goodB2G_380();
  return goodG2B_414();
}

//----- (0000000000452C7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_51b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000452CA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000452CC6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000452CFD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_15 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91AC: using guessed type int staticTrue_15;

//----- (0000000000452D4A) ----------------------------------------------------
int goodB2G1_248()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_15 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFalse_15 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6A91AC: using guessed type int staticTrue_15;
// 6A9500: using guessed type int staticFalse_15;

//----- (0000000000452DBF) ----------------------------------------------------
int goodB2G2_248()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_15 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_15;
  if ( staticTrue_15 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6A91AC: using guessed type int staticTrue_15;

//----- (0000000000452E28) ----------------------------------------------------
int goodG2B1_214()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_15 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91AC: using guessed type int staticTrue_15;
// 6A9500: using guessed type int staticFalse_15;

//----- (0000000000452E7B) ----------------------------------------------------
int goodG2B2_214()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_15 )
    v1 = 2LL;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6A91AC: using guessed type int staticTrue_15;

//----- (0000000000452EC2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_05_good()
{
  goodB2G1_248();
  goodB2G2_248();
  goodG2B1_214();
  return goodG2B2_214();
}

//----- (0000000000452EF0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink)(v4);
}

//----- (0000000000452FB6) ----------------------------------------------------
int goodG2B_415()
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_65b_goodG2BSink(2LL);
}

//----- (0000000000452FE5) ----------------------------------------------------
__int64 goodB2G_381()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_preinc_65b_goodB2GSink)(v4);
}

//----- (00000000004530AB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_preinc_65_good()
{
  goodG2B_415();
  return goodB2G_381();
}

//----- (00000000004530C5) ----------------------------------------------------
int __fastcall badSink_65(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004530EA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_44_bad()
{
  return badSink_65(127);
}

//----- (0000000000453110) ----------------------------------------------------
int __fastcall goodG2BSink_65(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000453135) ----------------------------------------------------
int goodG2B_416()
{
  return goodG2BSink_65(2);
}

//----- (000000000045315B) ----------------------------------------------------
int __fastcall goodB2GSink_48(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000453192) ----------------------------------------------------
int goodB2G_382()
{
  return goodB2GSink_48(127);
}

//----- (00000000004531B8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_44_good()
{
  goodG2B_416();
  return goodB2G_382();
}

//----- (00000000004531D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004531F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000453220) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000045325C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000045327D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000045329E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004532D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_34_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000045331A) ----------------------------------------------------
int goodG2B_417()
{
  return printLongLongLine(3LL);
}

//----- (000000000045335D) ----------------------------------------------------
int goodB2G_383()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004533C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_34_good()
{
  goodG2B_417();
  return goodB2G_383();
}

//----- (00000000004533DC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_17_bad()
{
  int result; // eax
  __int16 v1; // [rsp+4h] [rbp-Ch]
  __int16 v2; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%hd", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printIntLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045344D) ----------------------------------------------------
int goodB2G_384()
{
  int result; // eax
  __int16 v1; // [rsp+4h] [rbp-Ch]
  __int16 v2; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%hd", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printIntLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004534D4) ----------------------------------------------------
int goodG2B_418()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000453528) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_preinc_17_good()
{
  goodB2G_384();
  return goodG2B_418();
}

//----- (0000000000453542) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000453575) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (00000000004535A8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_preinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (00000000004535F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54e_badSink(a1);
}

//----- (0000000000453612) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54e_goodG2BSink(a1);
}

//----- (000000000045362D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000453648) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_51b_badSink(v4);
}

//----- (00000000004536B0) ----------------------------------------------------
int goodG2B_419()
{
  return CWE190_Integer_Overflow__int_fgets_preinc_51b_goodG2BSink(2);
}

//----- (00000000004536D2) ----------------------------------------------------
int goodB2G_385()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_preinc_51b_goodB2GSink(v4);
}

//----- (000000000045373A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_51_good()
{
  goodG2B_419();
  return goodB2G_385();
}

//----- (0000000000453754) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54c_badSink(a1);
}

//----- (000000000045376E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54c_goodG2BSink(a1);
}

//----- (0000000000453788) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_preinc_54b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54c_goodB2GSink(a1);
}

//----- (00000000004537A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_06_bad()
{
  return printIntLine(0x80000000);
}

//----- (00000000004537E2) ----------------------------------------------------
int goodB2G1_249()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000453843) ----------------------------------------------------
int goodB2G2_249()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000453898) ----------------------------------------------------
int goodG2B1_215()
{
  return printIntLine(3u);
}

//----- (00000000004538E4) ----------------------------------------------------
int goodG2B2_215()
{
  return printIntLine(3u);
}

//----- (0000000000453924) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_06_good()
{
  goodB2G1_249();
  goodB2G2_249();
  goodG2B1_215();
  return goodG2B2_215();
}

//----- (0000000000453952) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_12_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  else
  {
    v2 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v2 + 1);
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}

//----- (00000000004539F3) ----------------------------------------------------
int goodB2G_386()
{
  int v0; // eax
  int v1; // eax
  int result; // eax
  char v3; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v3 = v0;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v1) = rand();
    }
    else
    {
      rand();
      rand();
      v1 = ~rand();
    }
    v3 = v1;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v3 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v3 + 1);
  }
  else if ( v3 == 127 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printHexCharLine(v3 + 1);
  }
  return result;
}

//----- (0000000000453AD3) ----------------------------------------------------
int goodG2B_420()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(3);
}

//----- (0000000000453B35) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_12_good()
{
  goodB2G_386();
  return goodG2B_420();
}

//----- (0000000000453B4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000453BA0) ----------------------------------------------------
int goodB2G_387()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000453C10) ----------------------------------------------------
int goodG2B_421()
{
  return printLongLongLine(3LL);
}

//----- (0000000000453C45) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_good()
{
  goodB2G_387();
  return goodG2B_421();
}

//----- (0000000000453C5F) ----------------------------------------------------
int __fastcall badSink_66(int a1)
{
  int result; // eax

  result = badStatic_16;
  if ( badStatic_16 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9504: using guessed type int badStatic_16;

//----- (0000000000453C8A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_16 = 1;
  return badSink_66(v7);
}
// 6A9504: using guessed type int badStatic_16;
// 453C8A: using guessed type char buf[16];

//----- (0000000000453D7C) ----------------------------------------------------
int __fastcall goodB2G1Sink_16(int a1)
{
  if ( goodB2G1Static_16 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6A9508: using guessed type int goodB2G1Static_16;

//----- (0000000000453DC8) ----------------------------------------------------
int goodB2G1_250()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_16 = 0;
  return goodB2G1Sink_16(v7);
}
// 6A9508: using guessed type int goodB2G1Static_16;
// 453DC8: using guessed type char buf[16];

//----- (0000000000453EBA) ----------------------------------------------------
int __fastcall goodB2G2Sink_16(int a1)
{
  int result; // eax

  result = goodB2G2Static_16;
  if ( goodB2G2Static_16 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6A950C: using guessed type int goodB2G2Static_16;

//----- (0000000000453EFA) ----------------------------------------------------
int goodB2G2_250()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_16 = 1;
  return goodB2G2Sink_16(v7);
}
// 6A950C: using guessed type int goodB2G2Static_16;
// 453EFA: using guessed type char buf[16];

//----- (0000000000453FEC) ----------------------------------------------------
int __fastcall goodG2BSink_66(int a1)
{
  int result; // eax

  result = goodG2BStatic_16;
  if ( goodG2BStatic_16 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6A9510: using guessed type int goodG2BStatic_16;

//----- (0000000000454017) ----------------------------------------------------
int goodG2B_422()
{
  goodG2BStatic_16 = 1;
  return goodG2BSink_66(2);
}
// 6A9510: using guessed type int goodG2BStatic_16;

//----- (0000000000454043) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_21_good()
{
  goodB2G1_250();
  goodB2G2_250();
  return goodG2B_422();
}

//----- (0000000000454067) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 454067: using guessed type char buf[16];

//----- (0000000000454159) ----------------------------------------------------
int goodB2G1_251()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 454159: using guessed type char buf[16];

//----- (0000000000454260) ----------------------------------------------------
int goodB2G2_251()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 454260: using guessed type char buf[16];

//----- (0000000000454367) ----------------------------------------------------
int goodG2B1_216()
{
  return printIntLine(3u);
}

//----- (0000000000454393) ----------------------------------------------------
int goodG2B2_216()
{
  return printIntLine(3u);
}

//----- (00000000004543BF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_03_good()
{
  goodB2G1_251();
  goodB2G2_251();
  goodG2B1_216();
  return goodG2B2_216();
}

//----- (00000000004543ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_badSink(a1);
}

//----- (0000000000454404) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_goodG2BSink(a1);
}

//----- (000000000045441B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_53c_goodB2GSink(a1);
}

//----- (0000000000454432) ----------------------------------------------------
int badSink_67()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_preinc_45_badData + 1);
}
// 6A9514: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_45_badData;

//----- (0000000000454459) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_45_badData = v4;
  return badSink_67();
}
// 6A9514: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_45_badData;

//----- (00000000004544CA) ----------------------------------------------------
int goodG2BSink_67()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_preinc_45_goodG2BData + 1);
}
// 6A9518: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_45_goodG2BData;

//----- (00000000004544F1) ----------------------------------------------------
int goodG2B_423()
{
  CWE190_Integer_Overflow__int_fgets_preinc_45_goodG2BData = 2;
  return goodG2BSink_67();
}
// 6A9518: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_45_goodG2BData;

//----- (000000000045451C) ----------------------------------------------------
int goodB2GSink_49()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_preinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fgets_preinc_45_goodB2GData + 1);
  return result;
}
// 6A951C: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_45_goodB2GData;

//----- (0000000000454558) ----------------------------------------------------
int goodB2G_388()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_preinc_45_goodB2GData = v4;
  return goodB2GSink_49();
}
// 6A951C: using guessed type int CWE190_Integer_Overflow__int_fgets_preinc_45_goodB2GData;

//----- (00000000004545C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_45_good()
{
  goodG2B_423();
  return goodB2G_388();
}

//----- (00000000004545E3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000454659) ----------------------------------------------------
int goodB2G1_252()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004546E1) ----------------------------------------------------
int goodB2G2_252()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000454769) ----------------------------------------------------
int goodG2B1_217()
{
  return printUnsignedLine(3u);
}

//----- (0000000000454797) ----------------------------------------------------
int goodG2B2_217()
{
  return printUnsignedLine(3u);
}

//----- (00000000004547C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_15_good()
{
  goodB2G1_252();
  goodB2G2_252();
  goodG2B1_217();
  return goodG2B2_217();
}

//----- (00000000004547F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000454831) ----------------------------------------------------
int goodG2B_424()
{
  return CWE190_Integer_Overflow__int_fscanf_preinc_67b_goodG2BSink(2);
}

//----- (0000000000454859) ----------------------------------------------------
int goodB2G_389()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_preinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000454897) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_67_good()
{
  goodG2B_424();
  return goodB2G_389();
}

//----- (00000000004548B1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (00000000004548F9) ----------------------------------------------------
int goodB2G1_253()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (000000000045495F) ----------------------------------------------------
int goodB2G2_253()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (00000000004549B9) ----------------------------------------------------
int goodG2B1_218()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000454A0D) ----------------------------------------------------
int goodG2B2_218()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000454A55) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_11_good()
{
  goodB2G1_253();
  goodB2G2_253();
  goodG2B1_218();
  return goodG2B2_218();
}

//----- (0000000000454A83) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_68_badData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_badSink();
}
// 6A961C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_badData;

//----- (0000000000454AAE) ----------------------------------------------------
int goodG2B_425()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_goodG2BSink();
}
// 6A9620: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodG2BData;

//----- (0000000000454AD9) ----------------------------------------------------
int goodB2G_390()
{
  CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodB2GData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_68b_goodB2GSink();
}
// 6A9618: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_goodB2GData;

//----- (0000000000454B04) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_68_good()
{
  goodG2B_425();
  return goodB2G_390();
}

//----- (0000000000454B1E) ----------------------------------------------------
__int64 badSource_16()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000454B7D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_bad()
{
  int v0; // eax

  v0 = badSource_16();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000454BAF) ----------------------------------------------------
__int64 goodG2BSource_16()
{
  return 2LL;
}

//----- (0000000000454BC2) ----------------------------------------------------
int goodG2B_426()
{
  int v0; // eax

  v0 = goodG2BSource_16();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000454BF4) ----------------------------------------------------
__int64 goodB2GSource_16()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000454C53) ----------------------------------------------------
int goodB2G_391()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_16();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000454C97) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_42_good()
{
  goodB2G_391();
  return goodG2B_426();
}

//----- (0000000000454CB1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_66b_badSink((__int64)&v1);
}

//----- (0000000000454CE5) ----------------------------------------------------
int goodG2B_427()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000454D13) ----------------------------------------------------
int goodB2G_392()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_preinc_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000454D47) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_66_good()
{
  goodG2B_427();
  return goodB2G_392();
}

//----- (0000000000454D61) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_54_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000454D9A) ----------------------------------------------------
int goodG2B_428()
{
  return CWE190_Integer_Overflow__char_fscanf_preinc_54b_goodG2BSink(2);
}

//----- (0000000000454DB7) ----------------------------------------------------
int goodB2G_393()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_preinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000454DF0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_54_good()
{
  goodG2B_428();
  return goodB2G_393();
}

//----- (0000000000454E0A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_11_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (0000000000454E7B) ----------------------------------------------------
int goodB2G1_254()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}

//----- (0000000000454F0A) ----------------------------------------------------
int goodB2G2_254()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}

//----- (0000000000454F8D) ----------------------------------------------------
int goodG2B1_219()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000454FDD) ----------------------------------------------------
int goodG2B2_219()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000455021) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_11_good()
{
  goodB2G1_254();
  goodB2G2_254();
  goodG2B1_219();
  return goodG2B2_219();
}

//----- (000000000045504F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_02_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (00000000004550A4) ----------------------------------------------------
int goodB2G1_255()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000045510B) ----------------------------------------------------
int goodB2G2_255()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000455172) ----------------------------------------------------
int goodG2B1_220()
{
  return printHexCharLine(3);
}

//----- (000000000045519A) ----------------------------------------------------
int goodG2B2_220()
{
  return printHexCharLine(3);
}

//----- (00000000004551C2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_02_good()
{
  goodB2G1_255();
  goodB2G2_255();
  goodG2B1_220();
  return goodG2B2_220();
}

//----- (00000000004551F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045522B) ----------------------------------------------------
int goodG2B_429()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_goodG2BSink(2LL);
}

//----- (0000000000455251) ----------------------------------------------------
int goodB2G_394()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045528C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_51_good()
{
  goodG2B_429();
  return goodB2G_394();
}

//----- (00000000004552A6) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_61b_badSource(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004552D7) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004552ED) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_preinc_61b_goodB2GSource(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045531E) ----------------------------------------------------
__int64 staticReturnsTrue_16()
{
  return 1LL;
}

//----- (0000000000455329) ----------------------------------------------------
__int64 staticReturnsFalse_16()
{
  return 0LL;
}

//----- (0000000000455334) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_08_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_16() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_16();
  if ( result )
    result = printLongLongLine(v10 + 1);
  return result;
}

//----- (000000000045541E) ----------------------------------------------------
int goodB2G1_256()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_16() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)staticReturnsFalse_16() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (0000000000455530) ----------------------------------------------------
int goodB2G2_256()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_16() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_16();
  if ( result )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}

//----- (0000000000455636) ----------------------------------------------------
int goodG2B1_221()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_16() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_16();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000455691) ----------------------------------------------------
int goodG2B2_221()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = 2LL;
  result = staticReturnsTrue_16();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004556E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_08_good()
{
  goodB2G1_256();
  goodB2G2_256();
  goodG2B1_221();
  return goodG2B2_221();
}

//----- (000000000045570E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455751) ----------------------------------------------------
int goodG2B_430()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000045577F) ----------------------------------------------------
int goodB2G_395()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004557C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_preinc_66_good()
{
  goodG2B_430();
  return goodB2G_395();
}

//----- (00000000004557DC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_67_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_67b_badSink(v0);
}

//----- (000000000045582D) ----------------------------------------------------
int goodG2B_431()
{
  return CWE190_Integer_Overflow__char_rand_preinc_67b_goodG2BSink(2);
}

//----- (0000000000455851) ----------------------------------------------------
int goodB2G_396()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_preinc_67b_goodB2GSink(v0);
}

//----- (00000000004558A2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_67_good()
{
  goodG2B_431();
  return goodB2G_396();
}

//----- (00000000004558BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v7 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;
// 4558BC: using guessed type char buf[16];

//----- (00000000004559C8) ----------------------------------------------------
int goodB2G1_257()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;
// 4559C8: using guessed type char buf[16];

//----- (0000000000455AF5) ----------------------------------------------------
int goodB2G2_257()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;
// 455AF5: using guessed type char buf[16];

//----- (0000000000455C16) ----------------------------------------------------
int goodG2B1_222()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000455C64) ----------------------------------------------------
int goodG2B2_222()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47B034: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000455CA6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_13_good()
{
  goodB2G1_257();
  goodB2G2_257();
  goodG2B1_222();
  return goodG2B2_222();
}

//----- (0000000000455CD4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000455CFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000455D22) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000455D5E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_preinc_68_badData + 1);
}
// 6A9608: using guessed type int CWE190_Integer_Overflow__int_max_preinc_68_badData;

//----- (0000000000455D85) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_preinc_68_goodG2BData + 1);
}
// 6A9600: using guessed type int CWE190_Integer_Overflow__int_max_preinc_68_goodG2BData;

//----- (0000000000455DAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_preinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_max_preinc_68_goodB2GData + 1);
  return result;
}
// 6A9604: using guessed type int CWE190_Integer_Overflow__int_max_preinc_68_goodB2GData;

//----- (0000000000455DE8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_badSource();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000455E1A) ----------------------------------------------------
int goodG2B_432()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000455E4C) ----------------------------------------------------
int goodB2G_397()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_rand_preinc_61b_goodB2GSource();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000455E90) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_preinc_61_good()
{
  goodG2B_432();
  return goodB2G_397();
}

//----- (0000000000455EAA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_14_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFF;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000455EEE) ----------------------------------------------------
int goodB2G1_258()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFF;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000455F52) ----------------------------------------------------
int goodB2G2_258()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFF;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000455FAA) ----------------------------------------------------
int goodG2B1_223()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000455FFA) ----------------------------------------------------
int goodG2B2_223()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000045603E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_14_good()
{
  goodB2G1_258();
  goodB2G2_258();
  goodG2B1_223();
  return goodG2B2_223();
}

//----- (000000000045606C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54c_badSink(a1);
}

//----- (0000000000456086) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54c_goodG2BSink(a1);
}

//----- (00000000004560A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_54c_goodB2GSink(a1);
}

//----- (00000000004560BA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 32;
  __isoc99_fscanf(stdin, "%c", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__char_fscanf_preinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004560F8) ----------------------------------------------------
int goodG2B_433()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__char_fscanf_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000045611D) ----------------------------------------------------
int goodB2G_398()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 32;
  __isoc99_fscanf(stdin, "%c", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__char_fscanf_preinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045615B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_66_good()
{
  goodG2B_433();
  return goodB2G_398();
}

//----- (0000000000456175) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (00000000004561A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (00000000004561D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_preinc_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (0000000000456211) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_67b_badSink(v8);
}
// 456211: using guessed type char buf[16];

//----- (00000000004562FF) ----------------------------------------------------
int goodG2B_434()
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_67b_goodG2BSink(2);
}

//----- (0000000000456327) ----------------------------------------------------
int goodB2G_399()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_preinc_67b_goodB2GSink(v8);
}
// 456327: using guessed type char buf[16];

//----- (0000000000456415) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_preinc_67_good()
{
  goodG2B_434();
  return goodB2G_399();
}

//----- (000000000045642F) ----------------------------------------------------
int __fastcall badSink_68(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000456456) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_41_bad()
{
  return badSink_68(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000456482) ----------------------------------------------------
int __fastcall goodG2BSink_68(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004564A9) ----------------------------------------------------
int goodG2B_435()
{
  return goodG2BSink_68(2LL);
}

//----- (00000000004564CF) ----------------------------------------------------
int __fastcall goodB2GSink_50(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000456512) ----------------------------------------------------
int goodB2G_400()
{
  return goodB2GSink_50(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000045653E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_preinc_41_good()
{
  goodB2G_400();
  return goodG2B_435();
}

//----- (0000000000456558) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_11_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004565BB) ----------------------------------------------------
int goodB2G1_259()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045663E) ----------------------------------------------------
int goodB2G2_259()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004566B5) ----------------------------------------------------
int goodG2B1_224()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000456705) ----------------------------------------------------
int goodG2B2_224()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000456749) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_11_good()
{
  goodB2G1_259();
  goodB2G2_259();
  goodG2B1_224();
  return goodG2B2_224();
}

//----- (0000000000456777) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_34_bad()
{
  return printHexCharLine(-128);
}

//----- (00000000004567AD) ----------------------------------------------------
int goodG2B_436()
{
  return printHexCharLine(3);
}

//----- (00000000004567E3) ----------------------------------------------------
int goodB2G_401()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000045682B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_34_good()
{
  goodG2B_436();
  return goodB2G_401();
}

//----- (0000000000456845) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004568CF) ----------------------------------------------------
int goodB2G1_260()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000045697A) ----------------------------------------------------
int goodB2G2_260()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000456A19) ----------------------------------------------------
int goodG2B1_225()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000456A67) ----------------------------------------------------
int goodG2B2_225()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000456AA9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_preinc_14_good()
{
  goodB2G1_260();
  goodB2G2_260();
  goodG2B1_225();
  return goodG2B2_225();
}

//----- (0000000000456AD7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000456AFF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000456B27) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000456B63) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_04_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000456BA3) ----------------------------------------------------
int goodB2G1_261()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000456C03) ----------------------------------------------------
int goodB2G2_261()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000456C57) ----------------------------------------------------
int goodG2B1_226()
{
  return printIntLine(3u);
}

//----- (0000000000456CA3) ----------------------------------------------------
int goodG2B2_226()
{
  return printIntLine(3u);
}

//----- (0000000000456CE3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_04_good()
{
  goodB2G1_261();
  goodB2G2_261();
  goodG2B1_226();
  return goodG2B2_226();
}

//----- (0000000000456D11) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_31_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000456D4F) ----------------------------------------------------
int goodG2B_437()
{
  return printIntLine(3u);
}

//----- (0000000000456D8D) ----------------------------------------------------
int goodB2G_402()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000456DDF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_31_good()
{
  goodG2B_437();
  return goodB2G_402();
}

//----- (0000000000456DF9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_10_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000456E54) ----------------------------------------------------
int goodB2G1_262()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000456ECF) ----------------------------------------------------
int goodB2G2_262()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000456F3E) ----------------------------------------------------
int goodG2B1_227()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;
// 6A9538: using guessed type int globalFalse;

//----- (0000000000456F86) ----------------------------------------------------
int goodG2B2_227()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6A91B4: using guessed type int globalTrue;

//----- (0000000000456FC2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_preinc_10_good()
{
  goodB2G1_262();
  goodB2G2_262();
  goodG2B1_227();
  return goodG2B2_227();
}

//----- (0000000000456FF0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000457029) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000457062) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_preinc_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (00000000004570AF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54d_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54e_badSink(a1);
}

//----- (00000000004570C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54d_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54e_goodG2BSink(a1);
}

//----- (00000000004570E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_preinc_54d_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_preinc_54e_goodB2GSink(a1);
}

//----- (00000000004570FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000045711E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000045713F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000457172) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_16 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B0: using guessed type int staticTrue_16;

//----- (00000000004571CD) ----------------------------------------------------
int goodB2G1_263()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_16 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFalse_16 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B0: using guessed type int staticTrue_16;
// 6A9520: using guessed type int staticFalse_16;

//----- (0000000000457248) ----------------------------------------------------
int goodB2G2_263()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_16 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_16;
  if ( staticTrue_16 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B0: using guessed type int staticTrue_16;

//----- (00000000004572B7) ----------------------------------------------------
int goodG2B1_228()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_16 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B0: using guessed type int staticTrue_16;
// 6A9520: using guessed type int staticFalse_16;

//----- (0000000000457303) ----------------------------------------------------
int goodG2B2_228()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_16 )
    v1 = 2;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6A91B0: using guessed type int staticTrue_16;

//----- (0000000000457343) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_05_good()
{
  goodB2G1_263();
  goodB2G2_263();
  goodG2B1_228();
  return goodG2B2_228();
}

//----- (0000000000457371) ----------------------------------------------------
int __fastcall badSink_69(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000457392) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return badSink_69(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004573CA) ----------------------------------------------------
int __fastcall goodG2BSink_69(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004573EB) ----------------------------------------------------
int goodG2B_438()
{
  return goodG2BSink_69(2);
}

//----- (000000000045740D) ----------------------------------------------------
int __fastcall goodB2GSink_51(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000457440) ----------------------------------------------------
int goodB2G_403()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return goodB2GSink_51(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000457478) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_41_good()
{
  goodB2G_403();
  return goodG2B_438();
}

//----- (0000000000457492) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_03_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000457504) ----------------------------------------------------
int goodB2G1_264()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000045758B) ----------------------------------------------------
int goodB2G2_264()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000457612) ----------------------------------------------------
int goodG2B1_229()
{
  return printIntLine(3u);
}

//----- (000000000045763E) ----------------------------------------------------
int goodG2B2_229()
{
  return printIntLine(3u);
}

//----- (000000000045766A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_preinc_03_good()
{
  goodB2G1_264();
  goodB2G2_264();
  goodG2B1_229();
  return goodG2B2_229();
}

//----- (0000000000457698) ----------------------------------------------------
int __fastcall badSink_70(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004576BD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_41_bad()
{
  return badSink_70(127);
}

//----- (00000000004576DA) ----------------------------------------------------
int __fastcall goodG2BSink_70(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004576FF) ----------------------------------------------------
int goodG2B_439()
{
  return goodG2BSink_70(2);
}

//----- (000000000045771C) ----------------------------------------------------
int __fastcall goodB2GSink_52(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000457753) ----------------------------------------------------
int goodB2G_404()
{
  return goodB2GSink_52(127);
}

//----- (0000000000457770) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_41_good()
{
  goodB2G_404();
  return goodG2B_439();
}

//----- (000000000045778A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004577AB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004577CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_preinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000457802) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_63_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_63b_badSink(&v10);
}

//----- (00000000004578BF) ----------------------------------------------------
int goodG2B_440()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_63b_goodG2BSink(&v1);
}

//----- (00000000004578E5) ----------------------------------------------------
int goodB2G_405()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_preinc_63b_goodB2GSink(&v10);
}

//----- (00000000004579A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_63_good()
{
  goodG2B_440();
  return goodB2G_405();
}

//----- (00000000004579BC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_max_preinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_max_preinc_22_badGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9524: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_badGlobal;

//----- (00000000004579EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6A9528: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Global;

//----- (0000000000457A40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6A952C: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Global;

//----- (0000000000457A86) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_preinc_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_max_preinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_max_preinc_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6A9530: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_goodG2BGlobal;

//----- (0000000000457AB8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_61b_badSource()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (0000000000457AFC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000457B0F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_preinc_61b_goodB2GSource()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (0000000000457B53) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_64_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_64b_badSink(&v4);
}

//----- (0000000000457BB5) ----------------------------------------------------
int goodG2B_441()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_rand_preinc_64b_goodG2BSink(&v1);
}

//----- (0000000000457BD7) ----------------------------------------------------
int goodB2G_406()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_preinc_64b_goodB2GSink(&v4);
}

//----- (0000000000457C39) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_64_good()
{
  goodG2B_441();
  return goodB2G_406();
}

//----- (0000000000457C53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53d_badSink(a1);
}

//----- (0000000000457C6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53d_goodG2BSink(a1);
}

//----- (0000000000457C87) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_preinc_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_preinc_53d_goodB2GSink(a1);
}

//----- (0000000000457CA1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_65_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_badSink(-1);
}

//----- (0000000000457CCC) ----------------------------------------------------
int goodG2B_442()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_goodG2BSink(2);
}

//----- (0000000000457CF7) ----------------------------------------------------
int goodB2G_407()
{
  return CWE190_Integer_Overflow__unsigned_int_max_preinc_65b_goodB2GSink(-1);
}

//----- (0000000000457D22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_preinc_65_good()
{
  goodG2B_442();
  return goodB2G_407();
}

//----- (0000000000457D3C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54e_badSink(a1);
}

//----- (0000000000457D53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54e_goodG2BSink(a1);
}

//----- (0000000000457D6A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_preinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_preinc_54e_goodB2GSink(a1);
}

//----- (0000000000457D81) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (0000000000457DDE) ----------------------------------------------------
int goodB2G1_265()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (0000000000457E5D) ----------------------------------------------------
int goodB2G2_265()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6A91B8: using guessed type int globalFive;

//----- (0000000000457ED0) ----------------------------------------------------
int goodG2B1_230()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000457F1E) ----------------------------------------------------
int goodG2B2_230()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000457F60) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_14_good()
{
  goodB2G1_265();
  goodB2G2_265();
  goodG2B1_230();
  return goodG2B2_230();
}

//----- (0000000000457F8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_51b_badSink(v8);
}
// 457F8E: using guessed type char buf[16];

//----- (00000000004580BC) ----------------------------------------------------
int goodG2B_443()
{
  return CWE190_Integer_Overflow__int_listen_socket_preinc_51b_goodG2BSink(2);
}

//----- (00000000004580DE) ----------------------------------------------------
int goodB2G_408()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_preinc_51b_goodB2GSink(v8);
}
// 4580DE: using guessed type char buf[16];

//----- (000000000045820C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_51_good()
{
  goodG2B_443();
  return goodB2G_408();
}

//----- (0000000000458226) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v4 = v1;
  return printIntLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458293) ----------------------------------------------------
int goodG2B_444()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (00000000004582EA) ----------------------------------------------------
int goodB2G_409()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045836C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_preinc_32_good()
{
  goodG2B_444();
  return goodB2G_409();
}

//----- (0000000000458386) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_14_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (000000000045840A) ----------------------------------------------------
int goodB2G1_266()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004584AE) ----------------------------------------------------
int goodB2G2_266()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000458546) ----------------------------------------------------
int goodG2B1_231()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (0000000000458596) ----------------------------------------------------
int goodG2B2_231()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6A91B8: using guessed type int globalFive;

//----- (00000000004585DA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_preinc_14_good()
{
  goodB2G1_266();
  goodB2G2_266();
  goodG2B1_231();
  return goodG2B2_231();
}

//----- (0000000000458608) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_17_bad()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 127;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (0000000000458656) ----------------------------------------------------
int goodB2G_410()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 127;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(++v1);
  }
  return result;
}

//----- (00000000004586B6) ----------------------------------------------------
int goodG2B_445()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (0000000000458704) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_preinc_17_good()
{
  goodB2G_410();
  return goodG2B_445();
}

//----- (000000000045871E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_22_bad()
{
  CWE190_Integer_Overflow__short_max_preinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_max_preinc_22_badSink(0x7FFF);
}
// 6A9524: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_badGlobal;

//----- (0000000000458749) ----------------------------------------------------
int goodB2G1_267()
{
  CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Sink(0x7FFF);
}
// 6A9528: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_goodB2G1Global;

//----- (0000000000458774) ----------------------------------------------------
int goodB2G2_267()
{
  CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Sink(0x7FFF);
}
// 6A952C: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_goodB2G2Global;

//----- (000000000045879F) ----------------------------------------------------
int goodG2B_446()
{
  CWE190_Integer_Overflow__short_max_preinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_max_preinc_22_goodG2BSink(2);
}
// 6A9530: using guessed type int CWE190_Integer_Overflow__short_max_preinc_22_goodG2BGlobal;

//----- (00000000004587CA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_preinc_22_good()
{
  goodB2G1_267();
  goodB2G2_267();
  return goodG2B_446();
}

//----- (00000000004587EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000458819) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000458844) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000458884) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_18_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (00000000004588DB) ----------------------------------------------------
int goodB2G_411()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000458944) ----------------------------------------------------
int goodG2B_447()
{
  return printHexCharLine(3);
}

//----- (000000000045896E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_preinc_18_good()
{
  goodB2G_411();
  return goodG2B_447();
}

//----- (0000000000458988) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004589C8) ----------------------------------------------------
int goodG2B_448()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004589F2) ----------------------------------------------------
int goodB2G_412()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458A32) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_66_good()
{
  goodG2B_448();
  return goodB2G_412();
}

//----- (0000000000458A4C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 458A4C: using guessed type char buf[16];

//----- (0000000000458B9C) ----------------------------------------------------
int goodB2G1_268()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 458B9C: using guessed type char buf[16];

//----- (0000000000458D0D) ----------------------------------------------------
int goodB2G2_268()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 458D0D: using guessed type char buf[16];

//----- (0000000000458E72) ----------------------------------------------------
int goodG2B1_232()
{
  return printIntLine(3u);
}

//----- (0000000000458EBE) ----------------------------------------------------
int goodG2B2_232()
{
  return printIntLine(3u);
}

//----- (0000000000458EFE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_preinc_06_good()
{
  goodB2G1_268();
  goodB2G2_268();
  goodG2B1_232();
  return goodG2B2_232();
}

//----- (0000000000458F2C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_max_preinc_61b_badSource()
{
  return 127LL;
}

//----- (0000000000458F3F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_max_preinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000458F52) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_max_preinc_61b_goodB2GSource()
{
  return 127LL;
}

//----- (0000000000458F65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000458F90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000458FBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_preinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (0000000000458FF8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_preinc_68_badData + 1);
}
// 6A95A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_badData;

//----- (0000000000459026) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodG2BData + 1);
}
// 6A95B8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodG2BData;

//----- (0000000000459054) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_preinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodB2GData + 1);
  return result;
}
// 6A95B0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_preinc_68_goodB2GData;

//----- (000000000045909E) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (00000000004590BF) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (00000000004590EA) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000045910B) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (0000000000459130) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (0000000000459156) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045917A) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045919E) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (00000000004591C2) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (00000000004591E6) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000459216) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000459237) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000045925B) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (0000000000459286) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (00000000004592B2) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (0000000000459309) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400C60: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004593E2) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400D70: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459496) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (00000000004594A1) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (00000000004594AC) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (00000000004594C2) ----------------------------------------------------
void good1()
{
  ;
}

//----- (00000000004594C8) ----------------------------------------------------
void good2()
{
  ;
}

//----- (00000000004594CE) ----------------------------------------------------
void good3()
{
  ;
}

//----- (00000000004594D4) ----------------------------------------------------
void good4()
{
  ;
}

//----- (00000000004594DA) ----------------------------------------------------
void good5()
{
  ;
}

//----- (00000000004594E0) ----------------------------------------------------
void good6()
{
  ;
}

//----- (00000000004594E6) ----------------------------------------------------
void good7()
{
  ;
}

//----- (00000000004594EC) ----------------------------------------------------
void good8()
{
  ;
}

//----- (00000000004594F2) ----------------------------------------------------
void good9()
{
  ;
}

//----- (00000000004594F8) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (00000000004594FE) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (0000000000459504) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000045950A) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (0000000000459510) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (0000000000459516) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000045951C) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (0000000000459522) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (0000000000459528) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000045952E) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (0000000000459561) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (0000000000459605) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (0000000000459639) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000459658) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (00000000004596CD) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (00000000004596E7) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (0000000000459701) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (0000000000459730) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 6A8DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 6A8DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (00000000004597A4) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 4610 function(s) have been successfully decompiled
