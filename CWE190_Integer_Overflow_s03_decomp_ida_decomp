/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400B80();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// int listen(int fd, int n);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int bind(int fd, const struct sockaddr *addr, socklen_t len);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
__int64 CWE190_Integer_Overflow__int_max_multiply_61b_badSource();
__int64 CWE190_Integer_Overflow__int_max_multiply_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_max_multiply_61b_goodB2GSource();
int __fastcall badSink(int a1);
__int64 CWE190_Integer_Overflow__int_fgets_multiply_44_bad();
int __fastcall goodG2BSink(int a1);
int goodG2B();
int __fastcall goodB2GSink(int a1);
__int64 goodB2G();
__int64 CWE190_Integer_Overflow__int_fgets_multiply_44_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_15_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1();
int goodG2B2();
int CWE190_Integer_Overflow__int_listen_socket_add_15_good();
int __fastcall badSink_0(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_21_bad();
int __fastcall goodB2G1Sink(int a1);
int goodB2G1_0();
int __fastcall goodB2G2Sink(int a1);
int goodB2G2_0();
int __fastcall goodG2BSink_0(int a1);
int goodG2B_0();
int CWE190_Integer_Overflow__int_fscanf_square_21_good();
int CWE190_Integer_Overflow__int_fscanf_square_03_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_0();
int goodG2B2_0();
int CWE190_Integer_Overflow__int_fscanf_square_03_good();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_multiply_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fgets_multiply_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_multiply_61b_goodB2GSource(unsigned int a1);
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE190_Integer_Overflow__int_max_add_08_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_1();
int goodG2B2_1();
int CWE190_Integer_Overflow__int_max_add_08_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_18_bad();
int goodB2G_0();
int goodG2B_1();
int CWE190_Integer_Overflow__int_fscanf_square_18_good();
int CWE190_Integer_Overflow__int_max_multiply_61_bad();
int goodG2B_2();
int goodB2G_1();
int CWE190_Integer_Overflow__int_max_multiply_61_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_54_bad();
int goodG2B_3();
int goodB2G_2();
int CWE190_Integer_Overflow__int_fscanf_multiply_54_good();
__int64 CWE190_Integer_Overflow__int_listen_socket_add_65_bad();
int goodG2B_4();
__int64 goodB2G_3();
__int64 CWE190_Integer_Overflow__int_listen_socket_add_65_good();
__int64 CWE190_Integer_Overflow__int_fgets_square_65_bad();
int goodG2B_5();
__int64 goodB2G_4();
__int64 CWE190_Integer_Overflow__int_fgets_square_65_good();
int CWE190_Integer_Overflow__int_max_multiply_07_bad();
int goodB2G1_3();
int goodB2G2_3();
int goodG2B1_2();
int goodG2B2_2();
int CWE190_Integer_Overflow__int_max_multiply_07_good();
int CWE190_Integer_Overflow__int_fscanf_square_12_bad();
int goodB2G_5();
int goodG2B_6();
int CWE190_Integer_Overflow__int_fscanf_square_12_good();
int CWE190_Integer_Overflow__int_listen_socket_square_68_bad();
int goodG2B_7();
int goodB2G_6();
int CWE190_Integer_Overflow__int_listen_socket_square_68_good();
int __fastcall badSink_1(int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_square_44_bad();
int __fastcall goodG2BSink_1(int a1);
int goodG2B_8();
int __fastcall goodB2GSink_0(int a1);
__int64 goodB2G_7();
__int64 CWE190_Integer_Overflow__int_listen_socket_square_44_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_61_bad();
int goodG2B_9();
int goodB2G_8();
int CWE190_Integer_Overflow__int_fgets_multiply_61_good();
int CWE190_Integer_Overflow__int_max_add_06_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_3();
int goodG2B2_3();
int CWE190_Integer_Overflow__int_max_add_06_good();
int CWE190_Integer_Overflow__int_listen_socket_add_68b_badSink();
int CWE190_Integer_Overflow__int_listen_socket_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_listen_socket_add_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_max_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_15_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_4();
int goodG2B2_4();
int CWE190_Integer_Overflow__int_listen_socket_multiply_15_good();
int CWE190_Integer_Overflow__int_fgets_multiply_07_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_5();
int goodG2B2_5();
int CWE190_Integer_Overflow__int_fgets_multiply_07_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53c_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_square_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_square_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_square_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_11_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B1_6();
int goodG2B2_6();
int CWE190_Integer_Overflow__int_listen_socket_square_11_good();
__int64 __fastcall badSource(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_42_bad();
__int64 goodG2BSource();
int goodG2B_10();
__int64 __fastcall goodB2GSource(unsigned int a1);
int goodB2G_9();
int CWE190_Integer_Overflow__int_listen_socket_multiply_42_good();
__int64 __fastcall badSource_0(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_add_42_bad();
__int64 goodG2BSource_0();
int goodG2B_11();
__int64 __fastcall goodB2GSource_0(unsigned int a1);
int goodB2G_10();
int CWE190_Integer_Overflow__int_fscanf_add_42_good();
int CWE190_Integer_Overflow__int_fscanf_square_11_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_7();
int goodG2B2_7();
int CWE190_Integer_Overflow__int_fscanf_square_11_good();
int CWE190_Integer_Overflow__int_fscanf_square_02_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_8();
int goodG2B2_8();
int CWE190_Integer_Overflow__int_fscanf_square_02_good();
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_65_bad();
int goodG2B_12();
__int64 goodB2G_11();
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_65_good();
int CWE190_Integer_Overflow__int_max_add_54_bad();
int goodG2B_13();
int goodB2G_12();
int CWE190_Integer_Overflow__int_max_add_54_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_63b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_10_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_9();
int goodG2B2_9();
int CWE190_Integer_Overflow__int_fscanf_square_10_good();
int CWE190_Integer_Overflow__int_max_square_63_bad();
int goodG2B_14();
int goodB2G_13();
int CWE190_Integer_Overflow__int_max_square_63_good();
int CWE190_Integer_Overflow__int_listen_socket_add_68_bad();
int goodG2B_15();
int goodB2G_14();
int CWE190_Integer_Overflow__int_listen_socket_add_68_good();
int CWE190_Integer_Overflow__int_listen_socket_square_61_bad();
int goodG2B_16();
int goodB2G_15();
int CWE190_Integer_Overflow__int_listen_socket_square_61_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_05_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_10();
int goodG2B2_10();
int CWE190_Integer_Overflow__int_listen_socket_multiply_05_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_05_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_11();
int goodG2B2_11();
int CWE190_Integer_Overflow__int_fscanf_add_05_good();
int __fastcall badSink_2(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_41_bad();
int __fastcall goodG2BSink_2(int a1);
int goodG2B_17();
int __fastcall goodB2GSink_1(int a1);
int goodB2G_16();
int CWE190_Integer_Overflow__int_listen_socket_multiply_41_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink();
int CWE190_Integer_Overflow__int_fscanf_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fscanf_multiply_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_07_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_12();
int goodG2B2_12();
int CWE190_Integer_Overflow__int_listen_socket_square_07_good();
int CWE190_Integer_Overflow__int_listen_socket_add_53_bad();
int goodG2B_18();
int goodB2G_17();
int CWE190_Integer_Overflow__int_listen_socket_add_53_good();
int CWE190_Integer_Overflow__int_fgets_square_63_bad();
int goodG2B_19();
int goodB2G_18();
int CWE190_Integer_Overflow__int_fgets_square_63_good();
int CWE190_Integer_Overflow__int_max_square_05_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B1_13();
int goodG2B2_13();
int CWE190_Integer_Overflow__int_max_square_05_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_34_bad();
int goodG2B_20();
int goodB2G_19();
int CWE190_Integer_Overflow__int_listen_socket_multiply_34_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_34_bad();
int goodG2B_21();
int goodB2G_20();
int CWE190_Integer_Overflow__int_fscanf_add_34_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_66_bad();
int goodG2B_22();
int goodB2G_21();
int CWE190_Integer_Overflow__int_listen_socket_multiply_66_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE190_Integer_Overflow__int_fscanf_square_08_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_14();
int goodG2B2_14();
int CWE190_Integer_Overflow__int_fscanf_square_08_good();
int CWE190_Integer_Overflow__int_max_add_65_bad();
int goodG2B_23();
int goodB2G_22();
int CWE190_Integer_Overflow__int_max_add_65_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_68_bad();
int goodG2B_24();
int goodB2G_23();
int CWE190_Integer_Overflow__int_fscanf_multiply_68_good();
int CWE190_Integer_Overflow__int_max_square_17_bad();
int goodB2G_24();
int goodG2B_25();
int CWE190_Integer_Overflow__int_max_square_17_good();
int badSink_3();
int CWE190_Integer_Overflow__int_fgets_multiply_45_bad();
int goodG2BSink_3();
int goodG2B_26();
int goodB2GSink_2();
int goodB2G_25();
int CWE190_Integer_Overflow__int_fgets_multiply_45_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_67_bad();
int goodG2B_27();
int goodB2G_26();
int CWE190_Integer_Overflow__int_fscanf_multiply_67_good();
int CWE190_Integer_Overflow__int_listen_socket_square_16_bad();
int goodB2G_27();
int goodG2B_28();
int CWE190_Integer_Overflow__int_listen_socket_square_16_good();
int CWE190_Integer_Overflow__int_max_add_14_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_15();
int goodG2B2_15();
int CWE190_Integer_Overflow__int_max_add_14_good();
int CWE190_Integer_Overflow__int_max_add_32_bad();
int goodG2B_29();
int goodB2G_28();
int CWE190_Integer_Overflow__int_max_add_32_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_52_bad();
int goodG2B_30();
int goodB2G_29();
int CWE190_Integer_Overflow__int_listen_socket_square_52_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_64b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_53_bad();
int goodG2B_31();
int goodB2G_30();
int CWE190_Integer_Overflow__int_max_square_53_good();
int CWE190_Integer_Overflow__int_listen_socket_square_51_bad();
int goodG2B_32();
int goodB2G_31();
int CWE190_Integer_Overflow__int_listen_socket_square_51_good();
int CWE190_Integer_Overflow__int_fgets_square_68_bad();
int goodG2B_33();
int goodB2G_32();
int CWE190_Integer_Overflow__int_fgets_square_68_good();
int CWE190_Integer_Overflow__int_fgets_square_61_bad();
int goodG2B_34();
int goodB2G_33();
int CWE190_Integer_Overflow__int_fgets_square_61_good();
int CWE190_Integer_Overflow__int_max_add_04_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_16();
int goodG2B2_16();
int CWE190_Integer_Overflow__int_max_add_04_good();
int CWE190_Integer_Overflow__int_max_add_31_bad();
int goodG2B_35();
int goodB2G_34();
int CWE190_Integer_Overflow__int_max_add_31_good();
int CWE190_Integer_Overflow__int_fgets_square_34_bad();
int goodG2B_36();
int goodB2G_35();
int CWE190_Integer_Overflow__int_fgets_square_34_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_22_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B_37();
int CWE190_Integer_Overflow__int_fscanf_multiply_22_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_64_bad();
int goodG2B_38();
int goodB2G_36();
int CWE190_Integer_Overflow__int_fscanf_multiply_64_good();
int badSink_4();
int CWE190_Integer_Overflow__int_listen_socket_square_45_bad();
int goodG2BSink_4();
int goodG2B_39();
int goodB2GSink_3();
int goodB2G_37();
int CWE190_Integer_Overflow__int_listen_socket_square_45_good();
int CWE190_Integer_Overflow__int_max_multiply_64_bad();
int goodG2B_40();
int goodB2G_38();
int CWE190_Integer_Overflow__int_max_multiply_64_good();
int CWE190_Integer_Overflow__int_listen_socket_add_01_bad();
int goodG2B_41();
int goodB2G_39();
int CWE190_Integer_Overflow__int_listen_socket_add_01_good();
int CWE190_Integer_Overflow__int_listen_socket_square_06_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_17();
int goodG2B2_17();
int CWE190_Integer_Overflow__int_listen_socket_square_06_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_63b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_max_add_67_bad();
int goodG2B_42();
int goodB2G_40();
int CWE190_Integer_Overflow__int_max_add_67_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE190_Integer_Overflow__int_fgets_multiply_08_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_18();
int goodG2B2_18();
int CWE190_Integer_Overflow__int_fgets_multiply_08_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54d_goodB2GSink(int a1);
int __fastcall badSink_5(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_21_bad();
int __fastcall goodB2G1Sink_0(int a1);
int goodB2G1_21();
int __fastcall goodB2G2Sink_0(int a1);
int goodB2G2_21();
int __fastcall goodG2BSink_5(int a1);
int goodG2B_43();
int CWE190_Integer_Overflow__int_listen_socket_add_21_good();
int CWE190_Integer_Overflow__int_listen_socket_add_03_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_19();
int goodG2B2_19();
int CWE190_Integer_Overflow__int_listen_socket_add_03_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_18_bad();
int goodB2G_41();
int goodG2B_44();
int CWE190_Integer_Overflow__int_listen_socket_add_18_good();
int CWE190_Integer_Overflow__int_fgets_multiply_64_bad();
int goodG2B_45();
int goodB2G_42();
int CWE190_Integer_Overflow__int_fgets_multiply_64_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_13_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B1_20();
int goodG2B2_20();
int CWE190_Integer_Overflow__int_fscanf_multiply_13_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_61_bad();
int goodG2B_46();
int goodB2G_43();
int CWE190_Integer_Overflow__int_fscanf_multiply_61_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_67_bad();
int goodG2B_47();
int goodB2G_44();
int CWE190_Integer_Overflow__int_fgets_multiply_67_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_listen_socket_add_12_bad();
int goodB2G_45();
int goodG2B_48();
int CWE190_Integer_Overflow__int_listen_socket_add_12_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_add_22_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B_49();
int CWE190_Integer_Overflow__int_max_add_22_good();
int CWE190_Integer_Overflow__int_max_square_16_bad();
int goodB2G_46();
int goodG2B_50();
int CWE190_Integer_Overflow__int_max_square_16_good();
int __fastcall badSink_6(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_21_bad();
int __fastcall goodB2G1Sink_1(int a1);
int goodB2G1_25();
int __fastcall goodB2G2Sink_1(int a1);
int goodB2G2_25();
int __fastcall goodG2BSink_6(int a1);
int goodG2B_51();
int CWE190_Integer_Overflow__int_fscanf_multiply_21_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_03_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_21();
int goodG2B2_21();
int CWE190_Integer_Overflow__int_fscanf_multiply_03_good();
int __fastcall badSink_7(int a1);
int CWE190_Integer_Overflow__int_max_multiply_21_bad();
int __fastcall goodB2G1Sink_2(int a1);
int goodB2G1_27();
int __fastcall goodB2G2Sink_2(int a1);
int goodB2G2_27();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_52();
int CWE190_Integer_Overflow__int_max_multiply_21_good();
int CWE190_Integer_Overflow__int_listen_socket_square_13_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_22();
int goodG2B2_22();
int CWE190_Integer_Overflow__int_listen_socket_square_13_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_18_bad();
int goodB2G_47();
int goodG2B_53();
int CWE190_Integer_Overflow__int_fscanf_multiply_18_good();
int CWE190_Integer_Overflow__int_fgets_square_52_bad();
int goodG2B_54();
int goodB2G_48();
int CWE190_Integer_Overflow__int_fgets_square_52_good();
int CWE190_Integer_Overflow__int_listen_socket_square_64_bad();
int goodG2B_55();
int goodB2G_49();
int CWE190_Integer_Overflow__int_listen_socket_square_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_14_bad();
int goodB2G1_29();
int goodB2G2_29();
int goodG2B1_23();
int goodG2B2_23();
int CWE190_Integer_Overflow__int_fscanf_square_14_good();
int CWE190_Integer_Overflow__int_listen_socket_add_11_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_24();
int goodG2B2_24();
int CWE190_Integer_Overflow__int_listen_socket_add_11_good();
int CWE190_Integer_Overflow__int_listen_socket_add_02_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_25();
int goodG2B2_25();
int CWE190_Integer_Overflow__int_listen_socket_add_02_good();
int CWE190_Integer_Overflow__int_fscanf_square_32_bad();
int goodG2B_56();
int goodB2G_50();
int CWE190_Integer_Overflow__int_fscanf_square_32_good();
int CWE190_Integer_Overflow__int_fgets_square_16_bad();
int goodB2G_51();
int goodG2B_57();
int CWE190_Integer_Overflow__int_fgets_square_16_good();
int CWE190_Integer_Overflow__int_max_square_51_bad();
int goodG2B_58();
int goodB2G_52();
int CWE190_Integer_Overflow__int_max_square_51_good();
int CWE190_Integer_Overflow__int_max_add_13_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B1_26();
int goodG2B2_26();
int CWE190_Integer_Overflow__int_max_add_13_good();
void CWE190_Integer_Overflow__int_listen_socket_multiply_17_bad();
void goodB2G_53();
int goodG2B_59();
int CWE190_Integer_Overflow__int_listen_socket_multiply_17_good();
int CWE190_Integer_Overflow__int_fscanf_add_17_bad();
int goodB2G_54();
int goodG2B_60();
int CWE190_Integer_Overflow__int_fscanf_add_17_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_12_bad();
int goodB2G_55();
int goodG2B_61();
int CWE190_Integer_Overflow__int_fscanf_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_10_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_27();
int goodG2B2_27();
int CWE190_Integer_Overflow__int_listen_socket_add_10_good();
int __fastcall badSink_8(int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_44_bad();
int __fastcall goodG2BSink_8(int a1);
int goodG2B_62();
int __fastcall goodB2GSink_4(int a1);
__int64 goodB2G_56();
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_44_good();
int __fastcall badSink_9(int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_add_44_bad();
int __fastcall goodG2BSink_9(int a1);
int goodG2B_63();
int __fastcall goodB2GSink_5(int a1);
__int64 goodB2G_57();
__int64 CWE190_Integer_Overflow__int_fscanf_add_44_good();
__int64 CWE190_Integer_Overflow__int_fscanf_square_65_bad();
int goodG2B_64();
__int64 goodB2G_58();
__int64 CWE190_Integer_Overflow__int_fscanf_square_65_good();
int badSink_10();
int CWE190_Integer_Overflow__int_max_square_45_bad();
int goodG2BSink_10();
int goodG2B_65();
int goodB2GSink_6();
int goodB2G_59();
int CWE190_Integer_Overflow__int_max_square_45_good();
int CWE190_Integer_Overflow__int_fscanf_square_04_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_28();
int goodG2B2_28();
int CWE190_Integer_Overflow__int_fscanf_square_04_good();
int CWE190_Integer_Overflow__int_fgets_square_51_bad();
int goodG2B_66();
int goodB2G_60();
int CWE190_Integer_Overflow__int_fgets_square_51_good();
int CWE190_Integer_Overflow__int_max_square_06_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B1_29();
int goodG2B2_29();
int CWE190_Integer_Overflow__int_max_square_06_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_63b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_31_bad();
int goodG2B_67();
int goodB2G_61();
int CWE190_Integer_Overflow__int_fscanf_square_31_good();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_square_66_bad();
int goodG2B_68();
int goodB2G_62();
int CWE190_Integer_Overflow__int_fscanf_square_66_good();
int __fastcall badSink_11(int a1);
int CWE190_Integer_Overflow__int_max_add_21_bad();
int __fastcall goodB2G1Sink_3(int a1);
int goodB2G1_36();
int __fastcall goodB2G2Sink_3(int a1);
int goodB2G2_36();
int __fastcall goodG2BSink_11(int a1);
int goodG2B_69();
int CWE190_Integer_Overflow__int_max_add_21_good();
int CWE190_Integer_Overflow__int_max_add_03_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_30();
int goodG2B2_30();
int CWE190_Integer_Overflow__int_max_add_03_good();
int CWE190_Integer_Overflow__int_fscanf_add_64_bad();
int goodG2B_70();
int goodB2G_63();
int CWE190_Integer_Overflow__int_fscanf_add_64_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_11_bad();
int goodB2G1_38();
int goodB2G2_38();
int goodG2B1_31();
int goodG2B2_31();
int CWE190_Integer_Overflow__int_fscanf_multiply_11_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_02_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B1_32();
int goodG2B2_32();
int CWE190_Integer_Overflow__int_fscanf_multiply_02_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_53b_goodB2GSink(int a1);
int badSink_12();
int CWE190_Integer_Overflow__int_fgets_square_45_bad();
int goodG2BSink_12();
int goodG2B_71();
int goodB2GSink_7();
int goodB2G_64();
int CWE190_Integer_Overflow__int_fgets_square_45_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_67_bad();
int goodG2B_72();
int goodB2G_65();
int CWE190_Integer_Overflow__int_fscanf_square_67_good();
int CWE190_Integer_Overflow__int_max_add_18_bad();
int goodB2G_66();
int goodG2B_73();
int CWE190_Integer_Overflow__int_max_add_18_good();
int CWE190_Integer_Overflow__int_fgets_square_06_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_33();
int goodG2B2_33();
int CWE190_Integer_Overflow__int_fgets_square_06_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BSink(int a1);
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE190_Integer_Overflow__int_listen_socket_add_08_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_34();
int goodG2B2_34();
int CWE190_Integer_Overflow__int_listen_socket_add_08_good();
int CWE190_Integer_Overflow__int_max_multiply_63_bad();
int goodG2B_74();
int goodB2G_67();
int CWE190_Integer_Overflow__int_max_multiply_63_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_listen_socket_add_52_bad();
int goodG2B_75();
int goodB2G_68();
int CWE190_Integer_Overflow__int_listen_socket_add_52_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_61_bad();
int goodG2B_76();
int goodB2G_69();
int CWE190_Integer_Overflow__int_listen_socket_multiply_61_good();
int CWE190_Integer_Overflow__int_fscanf_add_61_bad();
int goodG2B_77();
int goodB2G_70();
int CWE190_Integer_Overflow__int_fscanf_add_61_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54c_goodB2GSink(int a1);
void CWE190_Integer_Overflow__int_listen_socket_square_17_bad();
void goodB2G_71();
int goodG2B_78();
int CWE190_Integer_Overflow__int_listen_socket_square_17_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_01_bad();
int goodG2B_79();
int goodB2G_72();
int CWE190_Integer_Overflow__int_fscanf_multiply_01_good();
int CWE190_Integer_Overflow__int_listen_socket_add_63_bad();
int goodG2B_80();
int goodB2G_73();
int CWE190_Integer_Overflow__int_listen_socket_add_63_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_07_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_35();
int goodG2B2_35();
int CWE190_Integer_Overflow__int_listen_socket_multiply_07_good();
int CWE190_Integer_Overflow__int_fscanf_add_07_bad();
int goodB2G1_43();
int goodB2G2_43();
int goodG2B1_36();
int goodG2B2_36();
int CWE190_Integer_Overflow__int_fscanf_add_07_good();
int CWE190_Integer_Overflow__int_fscanf_add_02_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_37();
int goodG2B2_37();
int CWE190_Integer_Overflow__int_fscanf_add_02_good();
int CWE190_Integer_Overflow__int_fgets_multiply_63_bad();
int goodG2B_81();
int goodB2G_74();
int CWE190_Integer_Overflow__int_fgets_multiply_63_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_22_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B_82();
int CWE190_Integer_Overflow__int_fscanf_square_22_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_68b_badSink();
int CWE190_Integer_Overflow__int_listen_socket_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_listen_socket_square_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_max_square_64_bad();
int goodG2B_83();
int goodB2G_75();
int CWE190_Integer_Overflow__int_max_square_64_good();
int CWE190_Integer_Overflow__int_max_add_11_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_38();
int goodG2B2_38();
int CWE190_Integer_Overflow__int_max_add_11_good();
int CWE190_Integer_Overflow__int_max_add_02_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B1_39();
int goodG2B2_39();
int CWE190_Integer_Overflow__int_max_add_02_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_63b_goodB2GSink(int *a1);
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE190_Integer_Overflow__int_fscanf_multiply_08_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_40();
int goodG2B2_40();
int CWE190_Integer_Overflow__int_fscanf_multiply_08_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_17_bad();
int goodB2G_76();
int goodG2B_84();
int CWE190_Integer_Overflow__int_max_multiply_17_good();
int CWE190_Integer_Overflow__int_max_add_10_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_41();
int goodG2B2_41();
int CWE190_Integer_Overflow__int_max_add_10_good();
int __fastcall badSink_13(int a1);
int CWE190_Integer_Overflow__int_max_multiply_44_bad();
int __fastcall goodG2BSink_13(int a1);
int goodG2B_85();
int __fastcall goodB2GSink_8(int a1);
int goodB2G_77();
int CWE190_Integer_Overflow__int_max_multiply_44_good();
int CWE190_Integer_Overflow__int_fgets_square_64_bad();
int goodG2B_86();
int goodB2G_78();
int CWE190_Integer_Overflow__int_fgets_square_64_good();
int CWE190_Integer_Overflow__int_fscanf_square_13_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_42();
int goodG2B2_42();
int CWE190_Integer_Overflow__int_fscanf_square_13_good();
int CWE190_Integer_Overflow__int_listen_socket_add_54_bad();
int goodG2B_87();
int goodB2G_79();
int CWE190_Integer_Overflow__int_listen_socket_add_54_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_add_01_bad();
int goodG2B_88();
int goodB2G_80();
int CWE190_Integer_Overflow__int_max_add_01_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_53d_goodB2GSink(int a1);
void CWE190_Integer_Overflow__int_fgets_multiply_17_bad();
void goodB2G_81();
int goodG2B_89();
int CWE190_Integer_Overflow__int_fgets_multiply_17_good();
int CWE190_Integer_Overflow__int_listen_socket_add_13_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_43();
int goodG2B2_43();
int CWE190_Integer_Overflow__int_listen_socket_add_13_good();
int CWE190_Integer_Overflow__int_listen_socket_square_67_bad();
int goodG2B_90();
int goodB2G_82();
int CWE190_Integer_Overflow__int_listen_socket_square_67_good();
int CWE190_Integer_Overflow__int_max_multiply_13_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_44();
int goodG2B2_44();
int CWE190_Integer_Overflow__int_max_multiply_13_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_17_bad();
int goodB2G_83();
int goodG2B_91();
int CWE190_Integer_Overflow__int_fscanf_multiply_17_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_10_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_45();
int goodG2B2_45();
int CWE190_Integer_Overflow__int_fscanf_add_10_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54d_goodB2GSink(int a1);
int __fastcall badSink_14(int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_44_bad();
int __fastcall goodG2BSink_14(int a1);
int goodG2B_92();
int __fastcall goodB2GSink_9(int a1);
__int64 goodB2G_84();
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_44_good();
int CWE190_Integer_Overflow__int_listen_socket_add_61_bad();
int goodG2B_93();
int goodB2G_85();
int CWE190_Integer_Overflow__int_listen_socket_add_61_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_01_bad();
int goodG2B_94();
int goodB2G_86();
int CWE190_Integer_Overflow__int_listen_socket_multiply_01_good();
int CWE190_Integer_Overflow__int_fgets_multiply_13_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_46();
int goodG2B2_46();
int CWE190_Integer_Overflow__int_fgets_multiply_13_good();
int CWE190_Integer_Overflow__int_fscanf_add_01_bad();
int goodG2B_95();
int goodB2G_87();
int CWE190_Integer_Overflow__int_fscanf_add_01_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53d_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_07_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_47();
int goodG2B2_47();
int CWE190_Integer_Overflow__int_listen_socket_add_07_good();
int CWE190_Integer_Overflow__int_max_multiply_03_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B1_48();
int goodG2B2_48();
int CWE190_Integer_Overflow__int_max_multiply_03_good();
int CWE190_Integer_Overflow__int_listen_socket_square_22_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B_96();
int CWE190_Integer_Overflow__int_listen_socket_square_22_good();
int CWE190_Integer_Overflow__int_max_multiply_18_bad();
int goodB2G_88();
int goodG2B_97();
int CWE190_Integer_Overflow__int_max_multiply_18_good();
int CWE190_Integer_Overflow__int_fgets_multiply_22_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B_98();
int CWE190_Integer_Overflow__int_fgets_multiply_22_good();
int CWE190_Integer_Overflow__int_max_square_14_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_49();
int goodG2B2_49();
int CWE190_Integer_Overflow__int_max_square_14_good();
int CWE190_Integer_Overflow__int_fgets_square_09_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B1_50();
int goodG2B2_50();
int CWE190_Integer_Overflow__int_fgets_square_09_good();
int CWE190_Integer_Overflow__int_max_square_32_bad();
int goodG2B_99();
int goodB2G_89();
int CWE190_Integer_Overflow__int_max_square_32_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_09_bad();
int goodB2G1_61();
int goodB2G2_61();
int goodG2B1_51();
int goodG2B2_51();
int CWE190_Integer_Overflow__int_listen_socket_multiply_09_good();
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE190_Integer_Overflow__int_fscanf_add_08_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B1_52();
int goodG2B2_52();
int CWE190_Integer_Overflow__int_fscanf_add_08_good();
int __fastcall badSink_15(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_21_bad();
int __fastcall goodB2G1Sink_4(int a1);
int goodB2G1_63();
int __fastcall goodB2G2Sink_4(int a1);
int goodB2G2_63();
int __fastcall goodG2BSink_15(int a1);
int goodG2B_100();
int CWE190_Integer_Overflow__int_fgets_multiply_21_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_10_bad();
int goodB2G1_64();
int goodB2G2_64();
int goodG2B1_53();
int goodG2B2_53();
int CWE190_Integer_Overflow__int_listen_socket_multiply_10_good();
int CWE190_Integer_Overflow__int_max_add_17_bad();
int goodB2G_90();
int goodG2B_101();
int CWE190_Integer_Overflow__int_max_add_17_good();
int CWE190_Integer_Overflow__int_max_multiply_12_bad();
int goodB2G_91();
int goodG2B_102();
int CWE190_Integer_Overflow__int_max_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_67b_goodB2GSink(int a1);
int __fastcall badSink_16(int a1);
int CWE190_Integer_Overflow__int_max_add_44_bad();
int __fastcall goodG2BSink_16(int a1);
int goodG2B_103();
int __fastcall goodB2GSink_10(int a1);
int goodB2G_92();
int CWE190_Integer_Overflow__int_max_add_44_good();
int CWE190_Integer_Overflow__int_fgets_multiply_18_bad();
int goodB2G_93();
int goodG2B_104();
int CWE190_Integer_Overflow__int_fgets_multiply_18_good();
int CWE190_Integer_Overflow__int_fgets_square_14_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_54();
int goodG2B2_54();
int CWE190_Integer_Overflow__int_fgets_square_14_good();
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE190_Integer_Overflow__int_listen_socket_square_08_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_55();
int goodG2B2_55();
int CWE190_Integer_Overflow__int_listen_socket_square_08_good();
int CWE190_Integer_Overflow__int_fgets_square_32_bad();
int goodG2B_105();
int goodB2G_94();
int CWE190_Integer_Overflow__int_fgets_square_32_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_07_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_56();
int goodG2B2_56();
int CWE190_Integer_Overflow__int_fscanf_multiply_07_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_max_square_04_bad();
int goodB2G1_68();
int goodB2G2_68();
int goodG2B1_57();
int goodG2B2_57();
int CWE190_Integer_Overflow__int_max_square_04_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B_106();
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_12_bad();
int goodB2G_95();
int goodG2B_107();
int CWE190_Integer_Overflow__int_fgets_multiply_12_good();
__int64 CWE190_Integer_Overflow__int_max_add_61b_badSource();
__int64 CWE190_Integer_Overflow__int_max_add_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_max_add_61b_goodB2GSource();
int CWE190_Integer_Overflow__int_max_multiply_11_bad();
int goodB2G1_70();
int goodB2G2_70();
int goodG2B1_58();
int goodG2B2_58();
int CWE190_Integer_Overflow__int_max_multiply_11_good();
int CWE190_Integer_Overflow__int_max_multiply_02_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_59();
int goodG2B2_59();
int CWE190_Integer_Overflow__int_max_multiply_02_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_max_square_67_bad();
int goodG2B_108();
int goodB2G_96();
int CWE190_Integer_Overflow__int_max_square_67_good();
int __fastcall badSink_17(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_21_bad();
int __fastcall goodB2G1Sink_5(int a1);
int goodB2G1_72();
int __fastcall goodB2G2Sink_5(int a1);
int goodB2G2_72();
int __fastcall goodG2BSink_17(int a1);
int goodG2B_109();
int CWE190_Integer_Overflow__int_listen_socket_square_21_good();
int CWE190_Integer_Overflow__int_listen_socket_square_03_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B1_60();
int goodG2B2_60();
int CWE190_Integer_Overflow__int_listen_socket_square_03_good();
int CWE190_Integer_Overflow__int_fgets_square_04_bad();
int goodB2G1_74();
int goodB2G2_74();
int goodG2B1_61();
int goodG2B2_61();
int CWE190_Integer_Overflow__int_fgets_square_04_good();
int CWE190_Integer_Overflow__int_fgets_square_31_bad();
int goodG2B_110();
int goodB2G_97();
int CWE190_Integer_Overflow__int_fgets_square_31_good();
int CWE190_Integer_Overflow__int_listen_socket_square_54_bad();
int goodG2B_111();
int goodB2G_98();
int CWE190_Integer_Overflow__int_listen_socket_square_54_good();
int CWE190_Integer_Overflow__int_max_multiply_10_bad();
int goodB2G1_75();
int goodB2G2_75();
int goodG2B1_62();
int goodG2B2_62();
int CWE190_Integer_Overflow__int_max_multiply_10_good();
int CWE190_Integer_Overflow__int_fgets_square_67_bad();
int goodG2B_112();
int goodB2G_99();
int CWE190_Integer_Overflow__int_fgets_square_67_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_18_bad();
int goodB2G_100();
int goodG2B_113();
int CWE190_Integer_Overflow__int_listen_socket_square_18_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_54_bad();
int goodG2B_114();
int goodB2G_101();
int CWE190_Integer_Overflow__int_listen_socket_multiply_54_good();
int CWE190_Integer_Overflow__int_fgets_multiply_02_bad();
int goodB2G1_76();
int goodB2G2_76();
int goodG2B1_63();
int goodG2B2_63();
int CWE190_Integer_Overflow__int_fgets_multiply_02_good();
int CWE190_Integer_Overflow__int_max_add_61_bad();
int goodG2B_115();
int goodB2G_102();
int CWE190_Integer_Overflow__int_max_add_61_good();
int CWE190_Integer_Overflow__int_fscanf_add_54_bad();
int goodG2B_116();
int goodB2G_103();
int CWE190_Integer_Overflow__int_fscanf_add_54_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_square_07_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_64();
int goodG2B2_64();
int CWE190_Integer_Overflow__int_fgets_square_07_good();
int CWE190_Integer_Overflow__int_max_multiply_01_bad();
int goodG2B_117();
int goodB2G_104();
int CWE190_Integer_Overflow__int_max_multiply_01_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_63_bad();
int goodG2B_118();
int goodB2G_105();
int CWE190_Integer_Overflow__int_fscanf_square_63_good();
int CWE190_Integer_Overflow__int_fgets_multiply_10_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B1_65();
int goodG2B2_65();
int CWE190_Integer_Overflow__int_fgets_multiply_10_good();
int CWE190_Integer_Overflow__int_max_add_07_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_66();
int goodG2B2_66();
int CWE190_Integer_Overflow__int_max_add_07_good();
int CWE190_Integer_Overflow__int_listen_socket_square_12_bad();
int goodB2G_106();
int goodG2B_119();
int CWE190_Integer_Overflow__int_listen_socket_square_12_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_22_bad();
int goodB2G1_80();
int goodB2G2_80();
int goodG2B_120();
int CWE190_Integer_Overflow__int_max_square_22_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_01_bad();
int goodG2B_121();
int goodB2G_107();
int CWE190_Integer_Overflow__int_fgets_multiply_01_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_09_bad();
int goodB2G1_81();
int goodB2G2_81();
int goodG2B1_67();
int goodG2B2_67();
int CWE190_Integer_Overflow__int_max_multiply_09_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_11_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B1_68();
int goodG2B2_68();
int CWE190_Integer_Overflow__int_fscanf_add_11_good();
__int64 __fastcall badSource_1(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_42_bad();
__int64 goodG2BSource_1();
int goodG2B_122();
__int64 __fastcall goodB2GSource_1(unsigned int a1);
int goodB2G_108();
int CWE190_Integer_Overflow__int_listen_socket_add_42_good();
int CWE190_Integer_Overflow__int_fgets_square_22_bad();
int goodB2G1_83();
int goodB2G2_83();
int goodG2B_123();
int CWE190_Integer_Overflow__int_fgets_square_22_good();
int CWE190_Integer_Overflow__int_listen_socket_square_02_bad();
int goodB2G1_84();
int goodB2G2_84();
int goodG2B1_69();
int goodG2B2_69();
int CWE190_Integer_Overflow__int_listen_socket_square_02_good();
int CWE190_Integer_Overflow__int_fgets_multiply_04_bad();
int goodB2G1_85();
int goodB2G2_85();
int goodG2B1_70();
int goodG2B2_70();
int CWE190_Integer_Overflow__int_fgets_multiply_04_good();
int CWE190_Integer_Overflow__int_max_square_13_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_71();
int goodG2B2_71();
int CWE190_Integer_Overflow__int_max_square_13_good();
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_65_bad();
int goodG2B_124();
__int64 goodB2G_109();
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_65_good();
__int64 CWE190_Integer_Overflow__int_fscanf_add_65_bad();
int goodG2B_125();
__int64 goodB2G_110();
__int64 CWE190_Integer_Overflow__int_fscanf_add_65_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_09_bad();
int goodB2G1_87();
int goodB2G2_87();
int goodG2B1_72();
int goodG2B2_72();
int CWE190_Integer_Overflow__int_fscanf_multiply_09_good();
int CWE190_Integer_Overflow__int_fgets_multiply_09_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_73();
int goodG2B2_73();
int CWE190_Integer_Overflow__int_fgets_multiply_09_good();
int CWE190_Integer_Overflow__int_listen_socket_square_10_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_74();
int goodG2B2_74();
int CWE190_Integer_Overflow__int_listen_socket_square_10_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54d_goodB2GSink(int a1);
int __fastcall badSink_18(int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_square_44_bad();
int __fastcall goodG2BSink_18(int a1);
int goodG2B_126();
int __fastcall goodB2GSink_11(int a1);
__int64 goodB2G_111();
__int64 CWE190_Integer_Overflow__int_fscanf_square_44_good();
int CWE190_Integer_Overflow__int_max_square_09_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B1_75();
int goodG2B2_75();
int CWE190_Integer_Overflow__int_max_square_09_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_61_bad();
int goodG2B_127();
int goodB2G_112();
int CWE190_Integer_Overflow__int_fscanf_square_61_good();
int CWE190_Integer_Overflow__int_listen_socket_add_05_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_76();
int goodG2B2_76();
int CWE190_Integer_Overflow__int_listen_socket_add_05_good();
int CWE190_Integer_Overflow__int_listen_socket_square_01_bad();
int goodG2B_128();
int goodB2G_113();
int CWE190_Integer_Overflow__int_listen_socket_square_01_good();
int CWE190_Integer_Overflow__int_fgets_square_13_bad();
int goodB2G1_92();
int goodB2G2_92();
int goodG2B1_77();
int goodG2B2_77();
int CWE190_Integer_Overflow__int_fgets_square_13_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_68b_badSink();
int CWE190_Integer_Overflow__int_listen_socket_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_listen_socket_multiply_68b_goodB2GSink();
int __fastcall badSink_19(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_41_bad();
int __fastcall goodG2BSink_19(int a1);
int goodG2B_129();
int __fastcall goodB2GSink_12(int a1);
int goodB2G_114();
int CWE190_Integer_Overflow__int_listen_socket_add_41_good();
int CWE190_Integer_Overflow__int_fscanf_add_68b_badSink();
int CWE190_Integer_Overflow__int_fscanf_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fscanf_add_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_fscanf_multiply_15_bad();
int goodB2G1_93();
int goodB2G2_93();
int goodG2B1_78();
int goodG2B2_78();
int CWE190_Integer_Overflow__int_fscanf_multiply_15_good();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_square_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_square_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_square_61b_goodB2GSource(unsigned int a1);
int __fastcall badSink_20(int a1);
int CWE190_Integer_Overflow__int_max_square_21_bad();
int __fastcall goodB2G1Sink_6(int a1);
int goodB2G1_94();
int __fastcall goodB2G2Sink_6(int a1);
int goodB2G2_94();
int __fastcall goodG2BSink_20(int a1);
int goodG2B_130();
int CWE190_Integer_Overflow__int_max_square_21_good();
int CWE190_Integer_Overflow__int_max_square_03_bad();
int goodB2G1_95();
int goodB2G2_95();
int goodG2B1_79();
int goodG2B2_79();
int CWE190_Integer_Overflow__int_max_square_03_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54b_goodB2GSink(int a1);
__int64 __fastcall badSource_2(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_42_bad();
__int64 goodG2BSource_2();
int goodG2B_131();
__int64 __fastcall goodB2GSource_2(unsigned int a1);
int goodB2G_115();
int CWE190_Integer_Overflow__int_fscanf_multiply_42_good();
int CWE190_Integer_Overflow__int_listen_socket_add_34_bad();
int goodG2B_132();
int goodB2G_116();
int CWE190_Integer_Overflow__int_listen_socket_add_34_good();
int CWE190_Integer_Overflow__int_max_square_18_bad();
int goodB2G_117();
int goodG2B_133();
int CWE190_Integer_Overflow__int_max_square_18_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_max_multiply_54_bad();
int goodG2B_134();
int goodB2G_118();
int CWE190_Integer_Overflow__int_max_multiply_54_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_63_bad();
int goodG2B_135();
int goodB2G_119();
int CWE190_Integer_Overflow__int_listen_socket_multiply_63_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_add_63_bad();
int goodG2B_136();
int goodB2G_120();
int CWE190_Integer_Overflow__int_max_add_63_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_09_bad();
int goodB2G1_96();
int goodB2G2_96();
int goodG2B1_80();
int goodG2B2_80();
int CWE190_Integer_Overflow__int_listen_socket_square_09_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_68_bad();
int goodG2B_137();
int goodB2G_121();
int CWE190_Integer_Overflow__int_max_square_68_good();
int __fastcall badSink_21(int a1);
int CWE190_Integer_Overflow__int_fgets_square_21_bad();
int __fastcall goodB2G1Sink_7(int a1);
int goodB2G1_97();
int __fastcall goodB2G2Sink_7(int a1);
int goodB2G2_97();
int __fastcall goodG2BSink_21(int a1);
int goodG2B_138();
int CWE190_Integer_Overflow__int_fgets_square_21_good();
int CWE190_Integer_Overflow__int_fgets_square_03_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_81();
int goodG2B2_81();
int CWE190_Integer_Overflow__int_fgets_square_03_good();
int CWE190_Integer_Overflow__int_fscanf_add_68_bad();
int goodG2B_139();
int goodB2G_122();
int CWE190_Integer_Overflow__int_fscanf_add_68_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_12_bad();
int goodB2G_123();
int goodG2B_140();
int CWE190_Integer_Overflow__int_max_square_12_good();
int CWE190_Integer_Overflow__int_fgets_square_18_bad();
int goodB2G_124();
int goodG2B_141();
int CWE190_Integer_Overflow__int_fgets_square_18_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_05_bad();
int goodB2G1_99();
int goodB2G2_99();
int goodG2B1_82();
int goodG2B2_82();
int CWE190_Integer_Overflow__int_fscanf_multiply_05_good();
int CWE190_Integer_Overflow__int_fgets_multiply_54_bad();
int goodG2B_142();
int goodB2G_125();
int CWE190_Integer_Overflow__int_fgets_multiply_54_good();
int __fastcall badSink_22(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_41_bad();
int __fastcall goodG2BSink_22(int a1);
int goodG2B_143();
int __fastcall goodB2GSink_13(int a1);
int goodB2G_126();
int CWE190_Integer_Overflow__int_fscanf_multiply_41_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_07_bad();
int goodB2G1_100();
int goodB2G2_100();
int goodG2B1_83();
int goodG2B2_83();
int CWE190_Integer_Overflow__int_fscanf_square_07_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_66_bad();
int goodG2B_144();
int goodB2G_127();
int CWE190_Integer_Overflow__int_listen_socket_add_66_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_53_bad();
int goodG2B_145();
int goodB2G_128();
int CWE190_Integer_Overflow__int_listen_socket_multiply_53_good();
int CWE190_Integer_Overflow__int_fscanf_add_53_bad();
int goodG2B_146();
int goodB2G_129();
int CWE190_Integer_Overflow__int_fscanf_add_53_good();
int CWE190_Integer_Overflow__int_max_add_15_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_84();
int goodG2B2_84();
int CWE190_Integer_Overflow__int_max_add_15_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_34_bad();
int goodG2B_147();
int goodB2G_130();
int CWE190_Integer_Overflow__int_fscanf_multiply_34_good();
int CWE190_Integer_Overflow__int_fgets_square_12_bad();
int goodB2G_131();
int goodG2B_148();
int CWE190_Integer_Overflow__int_fgets_square_12_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_65b_goodB2GSink(int a1);
__int64 badSource_3();
int CWE190_Integer_Overflow__int_max_add_42_bad();
__int64 goodG2BSource_3();
int goodG2B_149();
__int64 goodB2GSource_3();
int goodB2G_132();
int CWE190_Integer_Overflow__int_max_add_42_good();
int CWE190_Integer_Overflow__int_max_square_11_bad();
int goodB2G1_102();
int goodB2G2_102();
int goodG2B1_85();
int goodG2B2_85();
int CWE190_Integer_Overflow__int_max_square_11_good();
int CWE190_Integer_Overflow__int_max_square_02_bad();
int goodB2G1_103();
int goodB2G2_103();
int goodG2B1_86();
int goodG2B2_86();
int CWE190_Integer_Overflow__int_max_square_02_good();
int CWE190_Integer_Overflow__int_max_add_05_bad();
int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_87();
int goodG2B2_87();
int CWE190_Integer_Overflow__int_max_add_05_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_10_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B1_88();
int goodG2B2_88();
int CWE190_Integer_Overflow__int_max_square_10_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_square_11_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B1_89();
int goodG2B2_89();
int CWE190_Integer_Overflow__int_fgets_square_11_good();
int CWE190_Integer_Overflow__int_fgets_square_02_bad();
int goodB2G1_107();
int goodB2G2_107();
int goodG2B1_90();
int goodG2B2_90();
int CWE190_Integer_Overflow__int_fgets_square_02_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_68b_badSink();
int CWE190_Integer_Overflow__int_max_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_max_multiply_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_max_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_10_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_91();
int goodG2B2_91();
int CWE190_Integer_Overflow__int_fscanf_multiply_10_good();
int CWE190_Integer_Overflow__int_fscanf_add_04_bad();
int goodB2G1_109();
int goodB2G2_109();
int goodG2B1_92();
int goodG2B2_92();
int CWE190_Integer_Overflow__int_fscanf_add_04_good();
int CWE190_Integer_Overflow__int_max_multiply_04_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_93();
int goodG2B2_93();
int CWE190_Integer_Overflow__int_max_multiply_04_good();
int CWE190_Integer_Overflow__int_fgets_square_10_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_94();
int goodG2B2_94();
int CWE190_Integer_Overflow__int_fgets_square_10_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_add_34_bad();
int goodG2B_150();
int goodB2G_133();
int CWE190_Integer_Overflow__int_max_add_34_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_square_01_bad();
int goodG2B_151();
int goodB2G_134();
int CWE190_Integer_Overflow__int_fgets_square_01_good();
int CWE190_Integer_Overflow__int_fscanf_add_52_bad();
int goodG2B_152();
int goodB2G_135();
int CWE190_Integer_Overflow__int_fscanf_add_52_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_51b_goodB2GSink(int a1);
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE190_Integer_Overflow__int_max_square_08_bad();
int goodB2G1_112();
int goodB2G2_112();
int goodG2B1_95();
int goodG2B2_95();
int CWE190_Integer_Overflow__int_max_square_08_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad();
int goodB2G_136();
int goodG2B_153();
int CWE190_Integer_Overflow__int_listen_socket_multiply_16_good();
int CWE190_Integer_Overflow__int_fscanf_add_16_bad();
int goodB2G_137();
int goodG2B_154();
int CWE190_Integer_Overflow__int_fscanf_add_16_good();
int CWE190_Integer_Overflow__int_max_multiply_68_bad();
int goodG2B_155();
int goodB2G_138();
int CWE190_Integer_Overflow__int_max_multiply_68_good();
int CWE190_Integer_Overflow__int_max_square_01_bad();
int goodG2B_156();
int goodB2G_139();
int CWE190_Integer_Overflow__int_max_square_01_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_64b_goodB2GSink(int *a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_square_65_bad();
int goodG2B_157();
__int64 goodB2G_140();
__int64 CWE190_Integer_Overflow__int_listen_socket_square_65_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE190_Integer_Overflow__int_fgets_square_08_bad();
int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_96();
int goodG2B2_96();
int CWE190_Integer_Overflow__int_fgets_square_08_good();
int CWE190_Integer_Overflow__int_max_add_66_bad();
int goodG2B_158();
int goodB2G_141();
int CWE190_Integer_Overflow__int_max_add_66_good();
int CWE190_Integer_Overflow__int_max_multiply_53_bad();
int goodG2B_159();
int goodB2G_142();
int CWE190_Integer_Overflow__int_max_multiply_53_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_51_bad();
int goodG2B_160();
int goodB2G_143();
int CWE190_Integer_Overflow__int_listen_socket_multiply_51_good();
int CWE190_Integer_Overflow__int_fgets_multiply_68_bad();
int goodG2B_161();
int goodB2G_144();
int CWE190_Integer_Overflow__int_fgets_multiply_68_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_52_bad();
int goodG2B_162();
int goodB2G_145();
int CWE190_Integer_Overflow__int_listen_socket_multiply_52_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_52c_goodB2GSink(int a1);
int __fastcall badSink_23(int a1);
int CWE190_Integer_Overflow__int_max_add_41_bad();
int __fastcall goodG2BSink_23(int a1);
int goodG2B_163();
int __fastcall goodB2GSink_14(int a1);
int goodB2G_146();
int CWE190_Integer_Overflow__int_max_add_41_good();
int CWE190_Integer_Overflow__int_max_multiply_31_bad();
int goodG2B_164();
int goodB2G_147();
int CWE190_Integer_Overflow__int_max_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_65b_goodB2GSink(int a1);
int badSink_24();
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_bad();
int goodG2BSink_24();
int goodG2B_165();
int goodB2GSink_15();
int goodB2G_148();
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_good();
int badSink_25();
int CWE190_Integer_Overflow__int_fscanf_add_45_bad();
int goodG2BSink_25();
int goodG2B_166();
int goodB2GSink_16();
int goodB2G_149();
int CWE190_Integer_Overflow__int_fscanf_add_45_good();
int CWE190_Integer_Overflow__int_fgets_multiply_53_bad();
int goodG2B_167();
int goodB2G_150();
int CWE190_Integer_Overflow__int_fgets_multiply_53_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad();
int goodB2G1_114();
int goodB2G2_114();
int goodG2B1_97();
int goodG2B2_97();
int CWE190_Integer_Overflow__int_listen_socket_multiply_06_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_06_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_98();
int goodG2B2_98();
int CWE190_Integer_Overflow__int_fscanf_add_06_good();
__int64 __fastcall badSource_4(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_square_42_bad();
__int64 goodG2BSource_4();
int goodG2B_168();
__int64 __fastcall goodB2GSource_4(unsigned int a1);
int goodB2G_151();
int CWE190_Integer_Overflow__int_fscanf_square_42_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_54_bad();
int goodG2B_169();
int goodB2G_152();
int CWE190_Integer_Overflow__int_max_square_54_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_14_bad();
int goodB2G1_116();
int goodB2G2_116();
int goodG2B1_99();
int goodG2B2_99();
int CWE190_Integer_Overflow__int_listen_socket_add_14_good();
int CWE190_Integer_Overflow__int_listen_socket_add_32_bad();
int goodG2B_170();
int goodB2G_153();
int CWE190_Integer_Overflow__int_listen_socket_add_32_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_05_bad();
int goodB2G1_117();
int goodB2G2_117();
int goodG2B1_100();
int goodG2B2_100();
int CWE190_Integer_Overflow__int_fscanf_square_05_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_square_54_bad();
int goodG2B_171();
int goodB2G_154();
int CWE190_Integer_Overflow__int_fgets_square_54_good();
int __fastcall badSink_26(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_41_bad();
int __fastcall goodG2BSink_26(int a1);
int goodG2B_172();
int __fastcall goodB2GSink_17(int a1);
int goodB2G_155();
int CWE190_Integer_Overflow__int_fscanf_square_41_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_64b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_add_09_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_101();
int goodG2B2_101();
int CWE190_Integer_Overflow__int_listen_socket_add_09_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_52_bad();
int goodG2B_173();
int goodB2G_156();
int CWE190_Integer_Overflow__int_max_multiply_52_good();
int CWE190_Integer_Overflow__int_listen_socket_square_53_bad();
int goodG2B_174();
int goodB2G_157();
int CWE190_Integer_Overflow__int_listen_socket_square_53_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_square_34_bad();
int goodG2B_175();
int goodB2G_158();
int CWE190_Integer_Overflow__int_fscanf_square_34_good();
int CWE190_Integer_Overflow__int_fgets_multiply_03_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B1_102();
int goodG2B2_102();
int CWE190_Integer_Overflow__int_fgets_multiply_03_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_04_bad();
int goodB2G1_120();
int goodB2G2_120();
int goodG2B1_103();
int goodG2B2_103();
int CWE190_Integer_Overflow__int_listen_socket_add_04_good();
int CWE190_Integer_Overflow__int_listen_socket_add_31_bad();
int goodG2B_176();
int goodB2G_159();
int CWE190_Integer_Overflow__int_listen_socket_add_31_good();
int CWE190_Integer_Overflow__int_max_multiply_16_bad();
int goodB2G_160();
int goodG2B_177();
int CWE190_Integer_Overflow__int_max_multiply_16_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_52_bad();
int goodG2B_178();
int goodB2G_161();
int CWE190_Integer_Overflow__int_fgets_multiply_52_good();
int CWE190_Integer_Overflow__int_max_square_65_bad();
int goodG2B_179();
int goodB2G_162();
int CWE190_Integer_Overflow__int_max_square_65_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_64_bad();
int goodG2B_180();
int goodB2G_163();
int CWE190_Integer_Overflow__int_listen_socket_multiply_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_14_bad();
int goodB2G1_121();
int goodB2G2_121();
int goodG2B1_104();
int goodG2B2_104();
int CWE190_Integer_Overflow__int_fscanf_multiply_14_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_32_bad();
int goodG2B_181();
int goodB2G_164();
int CWE190_Integer_Overflow__int_fscanf_multiply_32_good();
int CWE190_Integer_Overflow__int_fgets_multiply_16_bad();
int goodB2G_165();
int goodG2B_182();
int CWE190_Integer_Overflow__int_fgets_multiply_16_good();
int CWE190_Integer_Overflow__int_listen_socket_add_67_bad();
int goodG2B_183();
int goodB2G_166();
int CWE190_Integer_Overflow__int_listen_socket_add_67_good();
int CWE190_Integer_Overflow__int_max_multiply_51_bad();
int goodG2B_184();
int goodB2G_167();
int CWE190_Integer_Overflow__int_max_multiply_51_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_68b_badSink();
int CWE190_Integer_Overflow__int_max_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_max_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_fgets_multiply_68b_badSink();
int CWE190_Integer_Overflow__int_fgets_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fgets_multiply_68b_goodB2GSink();
int badSink_27();
int CWE190_Integer_Overflow__int_max_multiply_45_bad();
int goodG2BSink_27();
int goodG2B_185();
int goodB2GSink_18();
int goodB2G_168();
int CWE190_Integer_Overflow__int_max_multiply_45_good();
int CWE190_Integer_Overflow__int_fscanf_add_51_bad();
int goodG2B_186();
int goodB2G_169();
int CWE190_Integer_Overflow__int_fscanf_add_51_good();
int CWE190_Integer_Overflow__int_fgets_multiply_51_bad();
int goodG2B_187();
int goodB2G_170();
int CWE190_Integer_Overflow__int_fgets_multiply_51_good();
int CWE190_Integer_Overflow__int_max_multiply_06_bad();
int goodB2G1_122();
int goodB2G2_122();
int goodG2B1_105();
int goodG2B2_105();
int CWE190_Integer_Overflow__int_max_multiply_06_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_04_bad();
int goodB2G1_123();
int goodB2G2_123();
int goodG2B1_106();
int goodG2B2_106();
int CWE190_Integer_Overflow__int_fscanf_multiply_04_good();
__int64 __fastcall badSource_5(unsigned int a1);
int CWE190_Integer_Overflow__int_fgets_square_42_bad();
__int64 goodG2BSource_5();
int goodG2B_188();
__int64 __fastcall goodB2GSource_5(unsigned int a1);
int goodB2G_171();
int CWE190_Integer_Overflow__int_fgets_square_42_good();
int CWE190_Integer_Overflow__int_fgets_square_68b_badSink();
int CWE190_Integer_Overflow__int_fgets_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fgets_square_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_add_22_bad();
int goodB2G1_124();
int goodB2G2_124();
int goodG2B_189();
int CWE190_Integer_Overflow__int_listen_socket_add_22_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_52c_goodB2GSink(int a1);
int __fastcall badSink_28(int a1);
int CWE190_Integer_Overflow__int_max_square_44_bad();
int __fastcall goodG2BSink_28(int a1);
int goodG2B_190();
int __fastcall goodB2GSink_19(int a1);
int goodB2G_172();
int CWE190_Integer_Overflow__int_max_square_44_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_06_bad();
int goodB2G1_125();
int goodB2G2_125();
int goodG2B1_107();
int goodG2B2_107();
int CWE190_Integer_Overflow__int_fscanf_multiply_06_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_66_bad();
int goodG2B_191();
int goodB2G_173();
int CWE190_Integer_Overflow__int_fscanf_add_66_good();
__int64 CWE190_Integer_Overflow__int_max_square_61b_badSource();
__int64 CWE190_Integer_Overflow__int_max_square_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_max_square_61b_goodB2GSource();
int CWE190_Integer_Overflow__int_fscanf_square_17_bad();
int goodB2G_174();
int goodG2B_192();
int CWE190_Integer_Overflow__int_fscanf_square_17_good();
int __fastcall badSink_29(int a1);
__int64 CWE190_Integer_Overflow__int_fgets_square_44_bad();
int __fastcall goodG2BSink_29(int a1);
int goodG2B_193();
int __fastcall goodB2GSink_20(int a1);
__int64 goodB2G_175();
__int64 CWE190_Integer_Overflow__int_fgets_square_44_good();
__int64 badSource_6();
int CWE190_Integer_Overflow__int_max_multiply_42_bad();
__int64 goodG2BSource_6();
int goodG2B_194();
__int64 goodB2GSource_6();
int goodB2G_176();
int CWE190_Integer_Overflow__int_max_multiply_42_good();
int CWE190_Integer_Overflow__int_fscanf_add_63_bad();
int goodG2B_195();
int goodB2G_177();
int CWE190_Integer_Overflow__int_fscanf_add_63_good();
int CWE190_Integer_Overflow__int_fgets_multiply_15_bad();
int goodB2G1_126();
int goodB2G2_126();
int goodG2B1_108();
int goodG2B2_108();
int CWE190_Integer_Overflow__int_fgets_multiply_15_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_51b_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_square_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fgets_square_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_square_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_square_68b_badSink();
int CWE190_Integer_Overflow__int_fscanf_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fscanf_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_listen_socket_add_16_bad();
int goodB2G_178();
int goodG2B_196();
int CWE190_Integer_Overflow__int_listen_socket_add_16_good();
__int64 CWE190_Integer_Overflow__int_fgets_multiply_65_bad();
int goodG2B_197();
__int64 goodB2G_179();
__int64 CWE190_Integer_Overflow__int_fgets_multiply_65_good();
__int64 __fastcall badSource_7(unsigned int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_42_bad();
__int64 goodG2BSource_7();
int goodG2B_198();
__int64 __fastcall goodB2GSource_7(unsigned int a1);
int goodB2G_180();
int CWE190_Integer_Overflow__int_fgets_multiply_42_good();
int CWE190_Integer_Overflow__int_max_add_68_bad();
int goodG2B_199();
int goodB2G_181();
int CWE190_Integer_Overflow__int_max_add_68_good();
int CWE190_Integer_Overflow__int_max_square_61_bad();
int goodG2B_200();
int goodB2G_182();
int CWE190_Integer_Overflow__int_max_square_61_good();
int CWE190_Integer_Overflow__int_fscanf_square_54_bad();
int goodG2B_201();
int goodB2G_183();
int CWE190_Integer_Overflow__int_fscanf_square_54_good();
int CWE190_Integer_Overflow__int_fgets_square_53_bad();
int goodG2B_202();
int goodB2G_184();
int CWE190_Integer_Overflow__int_fgets_square_53_good();
int __fastcall badSink_30(int a1);
int CWE190_Integer_Overflow__int_max_multiply_41_bad();
int __fastcall goodG2BSink_30(int a1);
int goodG2B_203();
int __fastcall goodB2GSink_21(int a1);
int goodB2G_185();
int CWE190_Integer_Overflow__int_max_multiply_41_good();
int CWE190_Integer_Overflow__int_max_square_07_bad();
int goodB2G1_127();
int goodB2G2_127();
int goodG2B1_109();
int goodG2B2_109();
int CWE190_Integer_Overflow__int_max_square_07_good();
int CWE190_Integer_Overflow__int_max_add_53_bad();
int goodG2B_204();
int goodB2G_186();
int CWE190_Integer_Overflow__int_max_add_53_good();
int CWE190_Integer_Overflow__int_listen_socket_add_51_bad();
int goodG2B_205();
int goodB2G_187();
int CWE190_Integer_Overflow__int_listen_socket_add_51_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_square_15_bad();
int goodB2G1_128();
int goodB2G2_128();
int goodG2B1_110();
int goodG2B2_110();
int CWE190_Integer_Overflow__int_fgets_square_15_good();
int CWE190_Integer_Overflow__int_fscanf_square_68_bad();
int goodG2B_206();
int goodB2G_188();
int CWE190_Integer_Overflow__int_fscanf_square_68_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_multiply_05_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_111();
int goodG2B2_111();
int CWE190_Integer_Overflow__int_fgets_multiply_05_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_52_bad();
int goodG2B_207();
int goodB2G_189();
int CWE190_Integer_Overflow__int_fscanf_multiply_52_good();
int badSink_31();
int CWE190_Integer_Overflow__int_listen_socket_add_45_bad();
int goodG2BSink_31();
int goodG2B_208();
int goodB2GSink_22();
int goodB2G_190();
int CWE190_Integer_Overflow__int_listen_socket_add_45_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_16_bad();
int goodB2G_191();
int goodG2B_209();
int CWE190_Integer_Overflow__int_fscanf_multiply_16_good();
int CWE190_Integer_Overflow__int_fscanf_square_09_bad();
int goodB2G1_130();
int goodB2G2_130();
int goodG2B1_112();
int goodG2B2_112();
int CWE190_Integer_Overflow__int_fscanf_square_09_good();
int CWE190_Integer_Overflow__int_listen_socket_add_06_bad();
int goodB2G1_131();
int goodB2G2_131();
int goodG2B1_113();
int goodG2B2_113();
int CWE190_Integer_Overflow__int_listen_socket_add_06_good();
__int64 __fastcall badSource_8(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_42_bad();
__int64 goodG2BSource_8();
int goodG2B_210();
__int64 __fastcall goodB2GSource_8(unsigned int a1);
int goodB2G_192();
int CWE190_Integer_Overflow__int_listen_socket_square_42_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_multiply_34_bad();
int goodG2B_211();
int goodB2G_193();
int CWE190_Integer_Overflow__int_fgets_multiply_34_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_66_bad();
int goodG2B_212();
int goodB2G_194();
int CWE190_Integer_Overflow__int_max_multiply_66_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_51_bad();
int goodG2B_213();
int goodB2G_195();
int CWE190_Integer_Overflow__int_fscanf_multiply_51_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_05_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B1_114();
int goodG2B2_114();
int CWE190_Integer_Overflow__int_listen_socket_square_05_good();
int __fastcall badSink_32(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_41_bad();
int __fastcall goodG2BSink_32(int a1);
int goodG2B_214();
int __fastcall goodB2GSink_23(int a1);
int goodB2G_196();
int CWE190_Integer_Overflow__int_listen_socket_square_41_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_square_63_bad();
int goodG2B_215();
int goodB2G_197();
int CWE190_Integer_Overflow__int_listen_socket_square_63_good();
int badSink_33();
int CWE190_Integer_Overflow__int_fscanf_multiply_45_bad();
int goodG2BSink_33();
int goodG2B_216();
int goodB2GSink_24();
int goodB2G_198();
int CWE190_Integer_Overflow__int_fscanf_multiply_45_good();
int CWE190_Integer_Overflow__int_fgets_multiply_66_bad();
int goodG2B_217();
int goodB2G_199();
int CWE190_Integer_Overflow__int_fgets_multiply_66_good();
int CWE190_Integer_Overflow__int_fscanf_square_15_bad();
int goodB2G1_133();
int goodB2G2_133();
int goodG2B1_115();
int goodG2B2_115();
int CWE190_Integer_Overflow__int_fscanf_square_15_good();
int CWE190_Integer_Overflow__int_max_add_52_bad();
int goodG2B_218();
int goodB2G_200();
int CWE190_Integer_Overflow__int_max_add_52_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_square_34_bad();
int goodG2B_219();
int goodB2G_201();
int CWE190_Integer_Overflow__int_listen_socket_square_34_good();
int CWE190_Integer_Overflow__int_max_add_16_bad();
int goodB2G_202();
int goodG2B_220();
int CWE190_Integer_Overflow__int_max_add_16_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_66b_goodB2GSink(__int64 a1);
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_add_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_add_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_add_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_11_bad();
int goodB2G1_134();
int goodB2G2_134();
int goodG2B1_116();
int goodG2B2_116();
int CWE190_Integer_Overflow__int_fgets_multiply_11_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_14_bad();
int goodB2G1_135();
int goodB2G2_135();
int goodG2B1_117();
int goodG2B2_117();
int CWE190_Integer_Overflow__int_listen_socket_multiply_14_good();
int CWE190_Integer_Overflow__int_listen_socket_add_64_bad();
int goodG2B_221();
int goodB2G_203();
int CWE190_Integer_Overflow__int_listen_socket_add_64_good();
int CWE190_Integer_Overflow__int_fscanf_add_14_bad();
int goodB2G1_136();
int goodB2G2_136();
int goodG2B1_118();
int goodG2B2_118();
int CWE190_Integer_Overflow__int_fscanf_add_14_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_32_bad();
int goodG2B_222();
int goodB2G_204();
int CWE190_Integer_Overflow__int_listen_socket_multiply_32_good();
int CWE190_Integer_Overflow__int_fscanf_add_32_bad();
int goodG2B_223();
int goodB2G_205();
int CWE190_Integer_Overflow__int_fscanf_add_32_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_13_bad();
int goodB2G1_137();
int goodB2G2_137();
int goodG2B1_119();
int goodG2B2_119();
int CWE190_Integer_Overflow__int_listen_socket_multiply_13_good();
int CWE190_Integer_Overflow__int_max_add_51_bad();
int goodG2B_224();
int goodB2G_206();
int CWE190_Integer_Overflow__int_max_add_51_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_max_add_68b_badSink();
int CWE190_Integer_Overflow__int_max_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_max_add_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_05_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_120();
int goodG2B2_120();
int CWE190_Integer_Overflow__int_max_multiply_05_good();
int CWE190_Integer_Overflow__int_listen_socket_square_66_bad();
int goodG2B_225();
int goodB2G_207();
int CWE190_Integer_Overflow__int_listen_socket_square_66_good();
int CWE190_Integer_Overflow__int_fscanf_square_53_bad();
int goodG2B_226();
int goodB2G_208();
int CWE190_Integer_Overflow__int_fscanf_square_53_good();
int CWE190_Integer_Overflow__int_max_square_15_bad();
int goodB2G1_139();
int goodB2G2_139();
int goodG2B1_121();
int goodG2B2_121();
int CWE190_Integer_Overflow__int_max_square_15_good();
int CWE190_Integer_Overflow__int_max_multiply_15_bad();
int goodB2G1_140();
int goodB2G2_140();
int goodG2B1_122();
int goodG2B2_122();
int CWE190_Integer_Overflow__int_max_multiply_15_good();
int badSink_34();
int CWE190_Integer_Overflow__int_max_add_45_bad();
int goodG2BSink_34();
int goodG2B_227();
int goodB2GSink_25();
int goodB2G_209();
int CWE190_Integer_Overflow__int_max_add_45_good();
__int64 badSource_9();
int CWE190_Integer_Overflow__int_max_square_42_bad();
__int64 goodG2BSource_9();
int goodG2B_228();
__int64 goodB2GSource_9();
int goodB2G_210();
int CWE190_Integer_Overflow__int_max_square_42_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_04_bad();
int goodB2G1_141();
int goodB2G2_141();
int goodG2B1_123();
int goodG2B2_123();
int CWE190_Integer_Overflow__int_listen_socket_multiply_04_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_31_bad();
int goodG2B_229();
int goodB2G_211();
int CWE190_Integer_Overflow__int_listen_socket_multiply_31_good();
int CWE190_Integer_Overflow__int_fscanf_add_31_bad();
int goodG2B_230();
int goodB2G_212();
int CWE190_Integer_Overflow__int_fscanf_add_31_good();
int CWE190_Integer_Overflow__int_listen_socket_square_15_bad();
int goodB2G1_142();
int goodB2G2_142();
int goodG2B1_124();
int goodG2B2_124();
int CWE190_Integer_Overflow__int_listen_socket_square_15_good();
int CWE190_Integer_Overflow__int_max_add_12_bad();
int goodB2G_213();
int goodG2B_231();
int CWE190_Integer_Overflow__int_max_add_12_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_67_bad();
int goodG2B_232();
int goodB2G_214();
int CWE190_Integer_Overflow__int_listen_socket_multiply_67_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_67_bad();
int goodG2B_233();
int goodB2G_215();
int CWE190_Integer_Overflow__int_fscanf_add_67_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_66_bad();
int goodG2B_234();
int goodB2G_216();
int CWE190_Integer_Overflow__int_fscanf_multiply_66_good();
int CWE190_Integer_Overflow__int_fscanf_square_01_bad();
int goodG2B_235();
int goodB2G_217();
int CWE190_Integer_Overflow__int_fscanf_square_01_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int_max_add_09_bad();
int goodB2G1_143();
int goodB2G2_143();
int goodG2B1_125();
int goodG2B2_125();
int CWE190_Integer_Overflow__int_max_add_09_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BSink(int a1);
int __fastcall badSink_35(int a1);
int CWE190_Integer_Overflow__int_max_square_41_bad();
int __fastcall goodG2BSink_35(int a1);
int goodG2B_236();
int __fastcall goodB2GSink_26(int a1);
int goodB2G_218();
int CWE190_Integer_Overflow__int_max_square_41_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_03_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B1_126();
int goodG2B2_126();
int CWE190_Integer_Overflow__int_listen_socket_multiply_03_good();
int CWE190_Integer_Overflow__int_max_multiply_34_bad();
int goodG2B_237();
int goodB2G_219();
int CWE190_Integer_Overflow__int_max_multiply_34_good();
int CWE190_Integer_Overflow__int_max_square_34_bad();
int goodG2B_238();
int goodB2G_220();
int CWE190_Integer_Overflow__int_max_square_34_good();
int CWE190_Integer_Overflow__int_fscanf_add_18_bad();
int goodB2G_221();
int goodG2B_239();
int CWE190_Integer_Overflow__int_fscanf_add_18_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_square_05_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B1_127();
int goodG2B2_127();
int CWE190_Integer_Overflow__int_fgets_square_05_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53d_goodB2GSink(int a1);
int __fastcall badSink_36(int a1);
int CWE190_Integer_Overflow__int_fgets_square_41_bad();
int __fastcall goodG2BSink_36(int a1);
int goodG2B_240();
int __fastcall goodB2GSink_27(int a1);
int goodB2G_222();
int CWE190_Integer_Overflow__int_fgets_square_41_good();
int CWE190_Integer_Overflow__int_fscanf_square_52_bad();
int goodG2B_241();
int goodB2G_223();
int CWE190_Integer_Overflow__int_fscanf_square_52_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_22_bad();
int goodB2G1_146();
int goodB2G2_146();
int goodG2B_242();
int CWE190_Integer_Overflow__int_fscanf_add_22_good();
int CWE190_Integer_Overflow__int_fscanf_square_16_bad();
int goodB2G_224();
int goodG2B_243();
int CWE190_Integer_Overflow__int_fscanf_square_16_good();
int CWE190_Integer_Overflow__int_max_multiply_14_bad();
int goodB2G1_147();
int goodB2G2_147();
int goodG2B1_128();
int goodG2B2_128();
int CWE190_Integer_Overflow__int_max_multiply_14_good();
int CWE190_Integer_Overflow__int_max_add_64_bad();
int goodG2B_244();
int goodB2G_225();
int CWE190_Integer_Overflow__int_max_add_64_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_multiply_32_bad();
int goodG2B_245();
int goodB2G_226();
int CWE190_Integer_Overflow__int_max_multiply_32_good();
int __fastcall badSink_37(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_41_bad();
int __fastcall goodG2BSink_37(int a1);
int goodG2B_246();
int __fastcall goodB2GSink_28(int a1);
int goodB2G_227();
int CWE190_Integer_Overflow__int_fscanf_add_41_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_fscanf_multiply_31_bad();
int goodG2B_247();
int goodB2G_228();
int CWE190_Integer_Overflow__int_fscanf_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_31_bad();
int goodG2B_248();
int goodB2G_229();
int CWE190_Integer_Overflow__int_max_square_31_good();
int __fastcall CWE190_Integer_Overflow__int_max_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_square_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_square_66_bad();
int goodG2B_249();
int goodB2G_230();
int CWE190_Integer_Overflow__int_max_square_66_good();
int CWE190_Integer_Overflow__int_fscanf_add_15_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B1_129();
int goodG2B2_129();
int CWE190_Integer_Overflow__int_fscanf_add_15_good();
int CWE190_Integer_Overflow__int_fgets_multiply_14_bad();
int goodB2G1_149();
int goodB2G2_149();
int goodG2B1_130();
int goodG2B2_130();
int CWE190_Integer_Overflow__int_fgets_multiply_14_good();
int CWE190_Integer_Overflow__int_fscanf_square_51_bad();
int goodG2B_250();
int goodB2G_231();
int CWE190_Integer_Overflow__int_fscanf_square_51_good();
int __fastcall badSink_38(int a1);
int CWE190_Integer_Overflow__int_fgets_multiply_41_bad();
int __fastcall goodG2BSink_38(int a1);
int goodG2B_251();
int __fastcall goodB2GSink_29(int a1);
int goodB2G_232();
int CWE190_Integer_Overflow__int_fgets_multiply_41_good();
int CWE190_Integer_Overflow__int_fscanf_add_13_bad();
int goodB2G1_150();
int goodB2G2_150();
int goodG2B1_131();
int goodG2B2_131();
int CWE190_Integer_Overflow__int_fscanf_add_13_good();
int CWE190_Integer_Overflow__int_fgets_multiply_32_bad();
int goodG2B_252();
int goodB2G_233();
int CWE190_Integer_Overflow__int_fgets_multiply_32_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_67b_goodB2GSink(int a1);
int badSink_39();
int CWE190_Integer_Overflow__int_fscanf_square_45_bad();
int goodG2BSink_39();
int goodG2B_253();
int goodB2GSink_30();
int goodB2G_234();
int CWE190_Integer_Overflow__int_fscanf_square_45_good();
int CWE190_Integer_Overflow__int_fgets_square_66_bad();
int goodG2B_254();
int goodB2G_235();
int CWE190_Integer_Overflow__int_fgets_square_66_good();
int CWE190_Integer_Overflow__int_fscanf_square_06_bad();
int goodB2G1_151();
int goodB2G2_151();
int goodG2B1_132();
int goodG2B2_132();
int CWE190_Integer_Overflow__int_fscanf_square_06_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_max_multiply_67_bad();
int goodG2B_255();
int goodB2G_236();
int CWE190_Integer_Overflow__int_max_multiply_67_good();
int __fastcall badSink_40(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_21_bad();
int __fastcall goodB2G1Sink_8(int a1);
int goodB2G1_152();
int __fastcall goodB2G2Sink_8(int a1);
int goodB2G2_152();
int __fastcall goodG2BSink_40(int a1);
int goodG2B_256();
int CWE190_Integer_Overflow__int_listen_socket_multiply_21_good();
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE190_Integer_Overflow__int_max_multiply_08_bad();
int goodB2G1_153();
int goodB2G2_153();
int goodG2B1_133();
int goodG2B2_133();
int CWE190_Integer_Overflow__int_max_multiply_08_good();
int __fastcall badSink_41(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_21_bad();
int __fastcall goodB2G1Sink_9(int a1);
int goodB2G1_154();
int __fastcall goodB2G2Sink_9(int a1);
int goodB2G2_154();
int __fastcall goodG2BSink_41(int a1);
int goodG2B_257();
int CWE190_Integer_Overflow__int_fscanf_add_21_good();
int CWE190_Integer_Overflow__int_fscanf_add_03_bad();
int goodB2G1_155();
int goodB2G2_155();
int goodG2B1_134();
int goodG2B2_134();
int CWE190_Integer_Overflow__int_fscanf_add_03_good();
int CWE190_Integer_Overflow__int_max_square_52_bad();
int goodG2B_258();
int goodB2G_237();
int CWE190_Integer_Overflow__int_max_square_52_good();
int CWE190_Integer_Overflow__int_fgets_multiply_31_bad();
int goodG2B_259();
int goodB2G_238();
int CWE190_Integer_Overflow__int_fgets_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad();
int goodB2G_239();
int goodG2B_260();
int CWE190_Integer_Overflow__int_listen_socket_multiply_18_good();
int CWE190_Integer_Overflow__int_listen_socket_square_14_bad();
int goodB2G1_156();
int goodB2G2_156();
int goodG2B1_135();
int goodG2B2_135();
int CWE190_Integer_Overflow__int_listen_socket_square_14_good();
int CWE190_Integer_Overflow__int_listen_socket_square_32_bad();
int goodG2B_261();
int goodB2G_240();
int CWE190_Integer_Overflow__int_listen_socket_square_32_good();
int CWE190_Integer_Overflow__int_max_multiply_65_bad();
int goodG2B_262();
int goodB2G_241();
int CWE190_Integer_Overflow__int_max_multiply_65_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_63_bad();
int goodG2B_263();
int goodB2G_242();
int CWE190_Integer_Overflow__int_fscanf_multiply_63_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_fscanf_add_09_bad();
int goodB2G1_157();
int goodB2G2_157();
int goodG2B1_136();
int goodG2B2_136();
int CWE190_Integer_Overflow__int_fscanf_add_09_good();
int CWE190_Integer_Overflow__int_fscanf_multiply_53_bad();
int goodG2B_264();
int goodB2G_243();
int CWE190_Integer_Overflow__int_fscanf_multiply_53_good();
void CWE190_Integer_Overflow__int_listen_socket_add_17_bad();
void goodB2G_244();
int goodG2B_265();
int CWE190_Integer_Overflow__int_listen_socket_add_17_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_12_bad();
int goodB2G_245();
int goodG2B_266();
int CWE190_Integer_Overflow__int_listen_socket_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_add_12_bad();
int goodB2G_246();
int goodG2B_267();
int CWE190_Integer_Overflow__int_fscanf_add_12_good();
int CWE190_Integer_Overflow__int_fgets_multiply_06_bad();
int goodB2G1_158();
int goodB2G2_158();
int goodG2B1_137();
int goodG2B2_137();
int CWE190_Integer_Overflow__int_fgets_multiply_06_good();
int __fastcall badSink_42(int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_add_44_bad();
int __fastcall goodG2BSink_42(int a1);
int goodG2B_268();
int __fastcall goodB2GSink_31(int a1);
__int64 goodB2G_247();
__int64 CWE190_Integer_Overflow__int_listen_socket_add_44_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int_max_multiply_22_bad();
int goodB2G1_159();
int goodB2G2_159();
int goodG2B_269();
int CWE190_Integer_Overflow__int_max_multiply_22_good();
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE190_Integer_Overflow__int_listen_socket_multiply_08_bad();
int goodB2G1_160();
int goodB2G2_160();
int goodG2B1_138();
int goodG2B2_138();
int CWE190_Integer_Overflow__int_listen_socket_multiply_08_good();
int __fastcall CWE190_Integer_Overflow__int_max_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_add_54b_goodB2GSink(int a1);
void CWE190_Integer_Overflow__int_fgets_square_17_bad();
void goodB2G_248();
int goodG2B_270();
int CWE190_Integer_Overflow__int_fgets_square_17_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_bad();
int goodG2B_271();
int goodB2G_249();
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_good();
int CWE190_Integer_Overflow__int_listen_socket_square_04_bad();
int goodB2G1_161();
int goodB2G2_161();
int goodG2B1_139();
int goodG2B2_139();
int CWE190_Integer_Overflow__int_listen_socket_square_04_good();
int CWE190_Integer_Overflow__int_listen_socket_square_31_bad();
int goodG2B_272();
int goodB2G_250();
int CWE190_Integer_Overflow__int_listen_socket_square_31_good();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_add_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_add_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_add_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_multiply_02_bad();
int goodB2G1_162();
int goodB2G2_162();
int goodG2B1_140();
int goodG2B2_140();
int CWE190_Integer_Overflow__int_listen_socket_multiply_02_good();
int CWE190_Integer_Overflow__int_fscanf_square_64_bad();
int goodG2B_273();
int goodB2G_251();
int CWE190_Integer_Overflow__int_fscanf_square_64_good();
int CWE190_Integer_Overflow__int_listen_socket_multiply_11_bad();
int goodB2G1_163();
int goodB2G2_163();
int goodG2B1_141();
int goodG2B2_141();
int CWE190_Integer_Overflow__int_listen_socket_multiply_11_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_44ED18; // weak
_UNKNOWN unk_451560; // weak
_UNKNOWN unk_451B74; // weak
_UNKNOWN unk_4523C8; // weak
_UNKNOWN unk_452544; // weak
_UNKNOWN unk_453CE4; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_671010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticFive_0 = 5; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive_1 = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int staticFive_4 = 5; // weak
int staticFive_5 = 5; // weak
int staticFive_6 = 5; // weak
int staticFive_7 = 5; // weak
int staticTrue_2 = 1; // weak
int staticTrue_3 = 1; // weak
int staticFive_8 = 5; // weak
int staticTrue_4 = 1; // weak
int staticTrue_5 = 1; // weak
int staticFive_9 = 5; // weak
int staticTrue_6 = 1; // weak
int staticTrue_7 = 1; // weak
int staticTrue_8 = 1; // weak
int staticTrue_9 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int staticFalse; // weak
int staticFalse_0; // weak
int staticFalse_1; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_45_badData; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_45_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int CWE190_Integer_Overflow__int_max_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_max_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_max_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_max_add_22_goodG2BGlobal; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int CWE190_Integer_Overflow__int_max_square_45_badData; // weak
int CWE190_Integer_Overflow__int_max_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_square_45_goodB2GData; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int CWE190_Integer_Overflow__int_fgets_square_45_badData; // weak
int CWE190_Integer_Overflow__int_fgets_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BGlobal; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BGlobal; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
int CWE190_Integer_Overflow__int_max_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_max_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_max_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_max_square_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fgets_square_22_goodG2BGlobal; // weak
int staticFalse_2; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int staticFalse_3; // weak
int staticFalse_4; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_add_45_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_add_45_goodB2GData; // weak
int staticFalse_5; // weak
int CWE190_Integer_Overflow__int_max_multiply_45_badData; // weak
int CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BGlobal; // weak
int staticFalse_6; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_45_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_45_goodB2GData; // weak
int staticFalse_7; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_45_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData; // weak
int staticFalse_8; // weak
int CWE190_Integer_Overflow__int_max_add_45_badData; // weak
int CWE190_Integer_Overflow__int_max_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_add_45_goodB2GData; // weak
int staticFalse_9; // weak
int CWE190_Integer_Overflow__int_fscanf_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_fscanf_square_45_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int badStatic_9; // weak
int goodB2G1Static_9; // weak
int goodB2G2Static_9; // weak
int goodG2BStatic_9; // weak
int CWE190_Integer_Overflow__int_max_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_max_multiply_22_goodG2BGlobal; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_68_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_add_68_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_multiply_68_badData; // weak
int CWE190_Integer_Overflow__int_fgets_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_square_68_badData; // weak
int CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_max_square_68_badData; // weak
int CWE190_Integer_Overflow__int_max_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_max_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_add_68_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_max_multiply_68_badData; // weak
int CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_68_badData; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_add_68_badData; // weak
int CWE190_Integer_Overflow__int_max_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_square_68_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400B60) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400D80: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400B80) ----------------------------------------------------
__int64 sub_400B80()
{
  return qword_671010();
}
// 671010: using guessed type __int64 (*qword_671010)(void);

//----- (0000000000400D90) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400D96: positive sp value 8 has been found

//----- (0000000000400DC0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6754687LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6754687LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400DF0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400E30) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 671180: using guessed type char completed_6355;

//----- (0000000000400E50) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400E50: could not find valid save-restore pair for rbp

//----- (0000000000400E7D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_45_good();");
  CWE190_Integer_Overflow__int_max_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_61_good();");
  CWE190_Integer_Overflow__int_max_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_44_good();");
  CWE190_Integer_Overflow__int_fscanf_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_17_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_09_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_02_good();");
  CWE190_Integer_Overflow__int_fscanf_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_65_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_51_good();");
  CWE190_Integer_Overflow__int_fscanf_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_45_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_15_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_61_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_01_good();");
  CWE190_Integer_Overflow__int_max_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_04_good();");
  CWE190_Integer_Overflow__int_max_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_53_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_67_good();");
  CWE190_Integer_Overflow__int_max_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_09_good();");
  CWE190_Integer_Overflow__int_fgets_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_18_good();");
  CWE190_Integer_Overflow__int_fscanf_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_04_good();");
  CWE190_Integer_Overflow__int_fscanf_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_68_good();");
  CWE190_Integer_Overflow__int_fscanf_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_14_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_21_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_42_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_42_good();");
  CWE190_Integer_Overflow__int_max_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_64_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_17_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_66_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_18_good();");
  CWE190_Integer_Overflow__int_max_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_32_good();");
  CWE190_Integer_Overflow__int_fscanf_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_02_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_14_good();");
  CWE190_Integer_Overflow__int_max_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_11_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_04_good();");
  CWE190_Integer_Overflow__int_max_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_61_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_54_good();");
  CWE190_Integer_Overflow__int_max_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_34_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_01_good();");
  CWE190_Integer_Overflow__int_fscanf_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_44_good();");
  CWE190_Integer_Overflow__int_fscanf_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_41_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_22_good();");
  CWE190_Integer_Overflow__int_fscanf_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_12_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_31_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_05_good();");
  CWE190_Integer_Overflow__int_max_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_16_good();");
  CWE190_Integer_Overflow__int_max_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_51_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_13_good();");
  CWE190_Integer_Overflow__int_fgets_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_68_good();");
  CWE190_Integer_Overflow__int_max_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_12_good();");
  CWE190_Integer_Overflow__int_max_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_54_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_53_good();");
  CWE190_Integer_Overflow__int_fgets_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_03_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_08_good();");
  CWE190_Integer_Overflow__int_fscanf_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_44_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_09_good();");
  CWE190_Integer_Overflow__int_fscanf_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_02_good();");
  CWE190_Integer_Overflow__int_max_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_06_good();");
  CWE190_Integer_Overflow__int_max_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_07_good();");
  CWE190_Integer_Overflow__int_fgets_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_41_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_45_good();");
  CWE190_Integer_Overflow__int_fscanf_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_61_good();");
  CWE190_Integer_Overflow__int_max_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_61_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_44_good();");
  CWE190_Integer_Overflow__int_max_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_07_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_16_good();");
  CWE190_Integer_Overflow__int_fscanf_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_67_good();");
  CWE190_Integer_Overflow__int_fscanf_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_31_good();");
  CWE190_Integer_Overflow__int_fscanf_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_66_good();");
  CWE190_Integer_Overflow__int_max_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_13_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_65_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_41_good();");
  CWE190_Integer_Overflow__int_fscanf_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_17_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_54_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_22_good();");
  CWE190_Integer_Overflow__int_fgets_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_68_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_51_good();");
  CWE190_Integer_Overflow__int_max_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_32_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_67_good();");
  CWE190_Integer_Overflow__int_max_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_42_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_65_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_10_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_64_good();");
  CWE190_Integer_Overflow__int_max_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_31_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_32_good();");
  CWE190_Integer_Overflow__int_max_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_07_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_63_good();");
  CWE190_Integer_Overflow__int_max_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_09_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_08_good();");
  CWE190_Integer_Overflow__int_max_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_17_good();");
  CWE190_Integer_Overflow__int_max_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_17_good();");
  CWE190_Integer_Overflow__int_fscanf_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_09_good();");
  CWE190_Integer_Overflow__int_max_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_53_good();");
  CWE190_Integer_Overflow__int_fscanf_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_13_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_10_good();");
  CWE190_Integer_Overflow__int_fscanf_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_05_good();");
  CWE190_Integer_Overflow__int_max_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_41_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_44_good();");
  CWE190_Integer_Overflow__int_fgets_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_61_good();");
  CWE190_Integer_Overflow__int_fscanf_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_11_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_02_good();");
  CWE190_Integer_Overflow__int_max_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_22_good();");
  CWE190_Integer_Overflow__int_max_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_04_good();");
  CWE190_Integer_Overflow__int_fscanf_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_52_good();");
  CWE190_Integer_Overflow__int_max_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_07_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_22_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_63_good();");
  CWE190_Integer_Overflow__int_max_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_17_good();");
  CWE190_Integer_Overflow__int_fgets_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_53_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_08_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_66_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_14_good();");
  CWE190_Integer_Overflow__int_fscanf_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_42_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_32_good();");
  CWE190_Integer_Overflow__int_fgets_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_54_good();");
  CWE190_Integer_Overflow__int_max_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_05_good();");
  CWE190_Integer_Overflow__int_fgets_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_18_good();");
  CWE190_Integer_Overflow__int_fscanf_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_06_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_64_good();");
  CWE190_Integer_Overflow__int_fscanf_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_64_good();");
  CWE190_Integer_Overflow__int_max_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_32_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_51_good();");
  CWE190_Integer_Overflow__int_max_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_64_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_54_good();");
  CWE190_Integer_Overflow__int_fscanf_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_66_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_54_good();");
  CWE190_Integer_Overflow__int_fscanf_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_14_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_16_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_67_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_21_good();");
  CWE190_Integer_Overflow__int_fscanf_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_45_good();");
  CWE190_Integer_Overflow__int_max_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_08_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_41_good();");
  CWE190_Integer_Overflow__int_max_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_65_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_16_good();");
  CWE190_Integer_Overflow__int_max_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_34_good();");
  CWE190_Integer_Overflow__int_max_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_44_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_53_good();");
  CWE190_Integer_Overflow__int_max_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_34_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_05_good();");
  CWE190_Integer_Overflow__int_fscanf_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_07_good();");
  CWE190_Integer_Overflow__int_fscanf_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_17_good();");
  CWE190_Integer_Overflow__int_fscanf_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_21_good();");
  CWE190_Integer_Overflow__int_fgets_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_01_good();");
  CWE190_Integer_Overflow__int_fscanf_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_04_good();");
  CWE190_Integer_Overflow__int_max_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_31_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_22_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_42_good();");
  CWE190_Integer_Overflow__int_fscanf_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_15_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_06_good();");
  CWE190_Integer_Overflow__int_fscanf_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_68_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_45_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_03_good();");
  CWE190_Integer_Overflow__int_fscanf_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_65_good();");
  CWE190_Integer_Overflow__int_max_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_66_good();");
  CWE190_Integer_Overflow__int_fgets_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_54_good();");
  CWE190_Integer_Overflow__int_max_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_17_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_11_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_32_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_11_good();");
  CWE190_Integer_Overflow__int_fscanf_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_63_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_18_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_12_good();");
  CWE190_Integer_Overflow__int_max_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_11_good();");
  CWE190_Integer_Overflow__int_fgets_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_66_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_51_good();");
  CWE190_Integer_Overflow__int_fgets_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_31_good();");
  CWE190_Integer_Overflow__int_fgets_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_67_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_18_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_34_good();");
  CWE190_Integer_Overflow__int_fgets_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_68_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_03_good();");
  CWE190_Integer_Overflow__int_fgets_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_68_good();");
  CWE190_Integer_Overflow__int_fgets_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_65_good();");
  CWE190_Integer_Overflow__int_fscanf_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_09_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_16_good();");
  CWE190_Integer_Overflow__int_max_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_41_good();");
  CWE190_Integer_Overflow__int_max_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_54_good();");
  CWE190_Integer_Overflow__int_fgets_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_53_good();");
  CWE190_Integer_Overflow__int_fscanf_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_01_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_66_good();");
  CWE190_Integer_Overflow__int_fscanf_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_11_good();");
  CWE190_Integer_Overflow__int_fscanf_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_03_good();");
  CWE190_Integer_Overflow__int_max_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_21_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_67_good();");
  CWE190_Integer_Overflow__int_fgets_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_16_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_08_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_31_good();");
  CWE190_Integer_Overflow__int_max_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_03_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_08_good();");
  CWE190_Integer_Overflow__int_fscanf_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_64_good();");
  CWE190_Integer_Overflow__int_fscanf_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_63_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_03_good();");
  CWE190_Integer_Overflow__int_max_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_14_good();");
  CWE190_Integer_Overflow__int_fscanf_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_21_good();");
  CWE190_Integer_Overflow__int_max_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_02_good();");
  CWE190_Integer_Overflow__int_fscanf_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_12_good();");
  CWE190_Integer_Overflow__int_fgets_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_67_good();");
  CWE190_Integer_Overflow__int_max_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_09_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_06_good();");
  CWE190_Integer_Overflow__int_max_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_18_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_18_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_34_good();");
  CWE190_Integer_Overflow__int_fscanf_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_53_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_11_good();");
  CWE190_Integer_Overflow__int_max_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_10_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_06_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_04_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_09_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_08_good();");
  CWE190_Integer_Overflow__int_max_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_54_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_14_good();");
  CWE190_Integer_Overflow__int_fgets_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_52_good();");
  CWE190_Integer_Overflow__int_max_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_01_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_22_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_16_good();");
  CWE190_Integer_Overflow__int_fscanf_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_53_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_10_good();");
  CWE190_Integer_Overflow__int_fgets_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_22_good();");
  CWE190_Integer_Overflow__int_fscanf_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_09_good();");
  CWE190_Integer_Overflow__int_max_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_63_good();");
  CWE190_Integer_Overflow__int_max_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_09_good();");
  CWE190_Integer_Overflow__int_max_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_52_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_61_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_68_good();");
  CWE190_Integer_Overflow__int_fscanf_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_21_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_04_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_66_good();");
  CWE190_Integer_Overflow__int_max_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_41_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_41_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_18_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_13_good();");
  CWE190_Integer_Overflow__int_fscanf_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_32_good();");
  CWE190_Integer_Overflow__int_max_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_53_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_66_good();");
  CWE190_Integer_Overflow__int_fscanf_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_52_good();");
  CWE190_Integer_Overflow__int_fscanf_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_12_good();");
  CWE190_Integer_Overflow__int_max_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_01_good();");
  CWE190_Integer_Overflow__int_fgets_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_66_good();");
  CWE190_Integer_Overflow__int_max_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_15_good();");
  CWE190_Integer_Overflow__int_fscanf_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_22_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_31_good();");
  CWE190_Integer_Overflow__int_max_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_03_good();");
  CWE190_Integer_Overflow__int_fscanf_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_08_good();");
  CWE190_Integer_Overflow__int_max_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_67_good();");
  CWE190_Integer_Overflow__int_fscanf_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_12_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_52_good();");
  CWE190_Integer_Overflow__int_max_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_41_good();");
  CWE190_Integer_Overflow__int_max_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_67_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_52_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_21_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_52_good();");
  CWE190_Integer_Overflow__int_fscanf_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_51_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_22_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_12_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_51_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_06_good();");
  CWE190_Integer_Overflow__int_fgets_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_52_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_61_good();");
  CWE190_Integer_Overflow__int_fscanf_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_32_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_06_good();");
  CWE190_Integer_Overflow__int_fscanf_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_10_good();");
  CWE190_Integer_Overflow__int_max_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_53_good();");
  CWE190_Integer_Overflow__int_max_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_61_good();");
  CWE190_Integer_Overflow__int_fgets_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_08_good();");
  CWE190_Integer_Overflow__int_fgets_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_32_good();");
  CWE190_Integer_Overflow__int_fscanf_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_64_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_31_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_16_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_11_good();");
  CWE190_Integer_Overflow__int_max_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_65_good();");
  CWE190_Integer_Overflow__int_fgets_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_14_good();");
  CWE190_Integer_Overflow__int_max_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_15_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_64_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_15_good();");
  CWE190_Integer_Overflow__int_max_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_02_good();");
  CWE190_Integer_Overflow__int_max_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_18_good();");
  CWE190_Integer_Overflow__int_fgets_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_07_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_42_good();");
  CWE190_Integer_Overflow__int_fgets_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_10_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_07_good();");
  CWE190_Integer_Overflow__int_max_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_01_good();");
  CWE190_Integer_Overflow__int_max_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_63_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_17_good();");
  CWE190_Integer_Overflow__int_max_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_53_good();");
  CWE190_Integer_Overflow__int_max_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_15_good();");
  CWE190_Integer_Overflow__int_max_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_52_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_44_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_13_good();");
  CWE190_Integer_Overflow__int_max_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_05_good();");
  CWE190_Integer_Overflow__int_max_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_13_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_10_good();");
  CWE190_Integer_Overflow__int_fscanf_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_15_good();");
  CWE190_Integer_Overflow__int_max_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_32_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_04_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_52_good();");
  CWE190_Integer_Overflow__int_fgets_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_01_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_10_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_15_good();");
  CWE190_Integer_Overflow__int_fgets_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_45_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_54_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_63_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_03_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_21_good();");
  CWE190_Integer_Overflow__int_max_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_34_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_02_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_13_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_64_good();");
  CWE190_Integer_Overflow__int_max_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_65_good();");
  CWE190_Integer_Overflow__int_max_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_01_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_06_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_42_good();");
  CWE190_Integer_Overflow__int_max_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_06_good();");
  CWE190_Integer_Overflow__int_max_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_63_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_03_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_51_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_63_good();");
  CWE190_Integer_Overflow__int_fscanf_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_16_good();");
  CWE190_Integer_Overflow__int_fgets_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_14_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_42_good();");
  CWE190_Integer_Overflow__int_fscanf_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_08_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_65_good();");
  CWE190_Integer_Overflow__int_fscanf_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_02_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_12_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_31_good();");
  CWE190_Integer_Overflow__int_max_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_07_good();");
  CWE190_Integer_Overflow__int_fscanf_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_44_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_04_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_16_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_01_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_22_good();");
  CWE190_Integer_Overflow__int_max_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_21_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_51_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_68_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_64_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_45_good();");
  CWE190_Integer_Overflow__int_fgets_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_05_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_17_good();");
  CWE190_Integer_Overflow__int_max_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_65_good();");
  CWE190_Integer_Overflow__int_max_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_42_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_11_good();");
  CWE190_Integer_Overflow__int_max_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_42_good();");
  CWE190_Integer_Overflow__int_max_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_05_good();");
  CWE190_Integer_Overflow__int_fscanf_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_02_good();");
  CWE190_Integer_Overflow__int_fgets_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_65_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_18_good();");
  CWE190_Integer_Overflow__int_max_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_13_good();");
  CWE190_Integer_Overflow__int_max_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_67_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_04_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_21_good();");
  CWE190_Integer_Overflow__int_max_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_68_good();");
  CWE190_Integer_Overflow__int_max_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_63_good();");
  CWE190_Integer_Overflow__int_fscanf_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_32_good();");
  CWE190_Integer_Overflow__int_max_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_02_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_14_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_10_good();");
  CWE190_Integer_Overflow__int_max_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_06_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_03_good();");
  CWE190_Integer_Overflow__int_max_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_34_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_63_good();");
  CWE190_Integer_Overflow__int_fgets_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_68_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_44_good();");
  CWE190_Integer_Overflow__int_max_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_34_good();");
  CWE190_Integer_Overflow__int_max_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_15_good();");
  CWE190_Integer_Overflow__int_fscanf_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_06_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_44_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_34_good();");
  CWE190_Integer_Overflow__int_max_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_18_good();");
  CWE190_Integer_Overflow__int_max_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_08_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_05_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_54_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_15_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_45_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_61_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_21_good();");
  CWE190_Integer_Overflow__int_fscanf_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_22_good();");
  CWE190_Integer_Overflow__int_max_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_64_good();");
  CWE190_Integer_Overflow__int_fgets_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_45_good();");
  CWE190_Integer_Overflow__int_max_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_61_good();");
  CWE190_Integer_Overflow__int_max_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_41_good();");
  CWE190_Integer_Overflow__int_fgets_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_67_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_14_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_45_good();");
  CWE190_Integer_Overflow__int_fscanf_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_44_good();");
  CWE190_Integer_Overflow__int_max_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_07_good();");
  CWE190_Integer_Overflow__int_max_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_03_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_15_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_07_good();");
  CWE190_Integer_Overflow__int_max_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_02_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_68_good();");
  CWE190_Integer_Overflow__int_max_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_42_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_41_good();");
  CWE190_Integer_Overflow__int_fscanf_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_16_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_45_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_13_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_01_good();");
  CWE190_Integer_Overflow__int_max_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_05_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_05_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_52_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_13_good();");
  CWE190_Integer_Overflow__int_fscanf_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_12_good();");
  CWE190_Integer_Overflow__int_fscanf_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_12_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_09_good();");
  CWE190_Integer_Overflow__int_fscanf_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_66_good();");
  CWE190_Integer_Overflow__int_fscanf_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_05_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_31_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_34_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_14_good();");
  CWE190_Integer_Overflow__int_max_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_11_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_34_good();");
  CWE190_Integer_Overflow__int_fscanf_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_13_good();");
  CWE190_Integer_Overflow__int_max_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_51_good();");
  CWE190_Integer_Overflow__int_max_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_10_good();");
  CWE190_Integer_Overflow__int_max_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_17_good();");
  CWE190_Integer_Overflow__int_listen_socket_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_07_good();");
  CWE190_Integer_Overflow__int_listen_socket_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_51_good();");
  CWE190_Integer_Overflow__int_fscanf_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_10_good();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_11_good();");
  CWE190_Integer_Overflow__int_fgets_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_04_good();");
  CWE190_Integer_Overflow__int_fgets_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_12_good();");
  CWE190_Integer_Overflow__int_fscanf_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_31_good();");
  CWE190_Integer_Overflow__int_fscanf_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_45_bad();");
  CWE190_Integer_Overflow__int_max_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_61_bad();");
  CWE190_Integer_Overflow__int_max_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_44_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_17_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_09_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_02_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_65_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_51_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_45_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_15_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_61_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_01_bad();");
  CWE190_Integer_Overflow__int_max_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_04_bad();");
  CWE190_Integer_Overflow__int_max_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_53_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_67_bad();");
  CWE190_Integer_Overflow__int_max_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_09_bad();");
  CWE190_Integer_Overflow__int_fgets_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_18_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_04_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_68_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_14_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_21_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_42_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_42_bad();");
  CWE190_Integer_Overflow__int_max_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_64_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_17_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_66_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_18_bad();");
  CWE190_Integer_Overflow__int_max_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_32_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_02_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_14_bad();");
  CWE190_Integer_Overflow__int_max_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_11_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_04_bad();");
  CWE190_Integer_Overflow__int_max_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_61_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_54_bad();");
  CWE190_Integer_Overflow__int_max_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_34_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_01_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_44_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_41_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_22_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_12_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_31_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_05_bad();");
  CWE190_Integer_Overflow__int_max_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_16_bad();");
  CWE190_Integer_Overflow__int_max_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_51_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_13_bad();");
  CWE190_Integer_Overflow__int_fgets_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_68_bad();");
  CWE190_Integer_Overflow__int_max_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_12_bad();");
  CWE190_Integer_Overflow__int_max_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_54_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_53_bad();");
  CWE190_Integer_Overflow__int_fgets_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_03_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_08_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_44_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_09_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_02_bad();");
  CWE190_Integer_Overflow__int_max_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_06_bad();");
  CWE190_Integer_Overflow__int_max_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_07_bad();");
  CWE190_Integer_Overflow__int_fgets_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_41_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_45_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_61_bad();");
  CWE190_Integer_Overflow__int_max_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_61_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_44_bad();");
  CWE190_Integer_Overflow__int_max_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_07_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_16_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_67_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_31_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_66_bad();");
  CWE190_Integer_Overflow__int_max_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_13_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_65_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_41_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_17_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_54_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_22_bad();");
  CWE190_Integer_Overflow__int_fgets_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_68_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_51_bad();");
  CWE190_Integer_Overflow__int_max_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_32_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_67_bad();");
  CWE190_Integer_Overflow__int_max_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_42_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_65_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_10_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_64_bad();");
  CWE190_Integer_Overflow__int_max_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_31_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_32_bad();");
  CWE190_Integer_Overflow__int_max_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_07_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_63_bad();");
  CWE190_Integer_Overflow__int_max_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_09_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_08_bad();");
  CWE190_Integer_Overflow__int_max_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_17_bad();");
  CWE190_Integer_Overflow__int_max_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_17_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_09_bad();");
  CWE190_Integer_Overflow__int_max_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_53_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_13_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_10_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_05_bad();");
  CWE190_Integer_Overflow__int_max_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_41_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_44_bad();");
  CWE190_Integer_Overflow__int_fgets_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_61_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_11_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_02_bad();");
  CWE190_Integer_Overflow__int_max_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_22_bad();");
  CWE190_Integer_Overflow__int_max_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_04_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_52_bad();");
  CWE190_Integer_Overflow__int_max_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_07_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_22_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_63_bad();");
  CWE190_Integer_Overflow__int_max_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_17_bad();");
  CWE190_Integer_Overflow__int_fgets_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_53_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_08_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_66_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_14_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_42_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_32_bad();");
  CWE190_Integer_Overflow__int_fgets_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_54_bad();");
  CWE190_Integer_Overflow__int_max_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_05_bad();");
  CWE190_Integer_Overflow__int_fgets_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_18_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_06_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_64_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_64_bad();");
  CWE190_Integer_Overflow__int_max_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_32_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_51_bad();");
  CWE190_Integer_Overflow__int_max_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_64_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_54_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_66_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_54_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_14_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_67_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_21_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_45_bad();");
  CWE190_Integer_Overflow__int_max_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_08_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_41_bad();");
  CWE190_Integer_Overflow__int_max_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_65_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_16_bad();");
  CWE190_Integer_Overflow__int_max_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_34_bad();");
  CWE190_Integer_Overflow__int_max_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_44_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_53_bad();");
  CWE190_Integer_Overflow__int_max_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_34_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_05_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_07_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_17_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_21_bad();");
  CWE190_Integer_Overflow__int_fgets_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_01_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_04_bad();");
  CWE190_Integer_Overflow__int_max_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_31_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_22_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_42_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_15_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_06_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_68_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_45_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_03_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_65_bad();");
  CWE190_Integer_Overflow__int_max_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_66_bad();");
  CWE190_Integer_Overflow__int_fgets_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_54_bad();");
  CWE190_Integer_Overflow__int_max_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_17_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_11_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_32_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_11_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_63_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_18_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_12_bad();");
  CWE190_Integer_Overflow__int_max_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_11_bad();");
  CWE190_Integer_Overflow__int_fgets_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_66_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_51_bad();");
  CWE190_Integer_Overflow__int_fgets_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_31_bad();");
  CWE190_Integer_Overflow__int_fgets_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_67_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_18_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_34_bad();");
  CWE190_Integer_Overflow__int_fgets_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_68_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_03_bad();");
  CWE190_Integer_Overflow__int_fgets_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_68_bad();");
  CWE190_Integer_Overflow__int_fgets_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_65_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_09_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_16_bad();");
  CWE190_Integer_Overflow__int_max_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_41_bad();");
  CWE190_Integer_Overflow__int_max_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_54_bad();");
  CWE190_Integer_Overflow__int_fgets_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_53_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_01_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_66_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_11_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_03_bad();");
  CWE190_Integer_Overflow__int_max_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_21_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_67_bad();");
  CWE190_Integer_Overflow__int_fgets_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_16_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_08_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_31_bad();");
  CWE190_Integer_Overflow__int_max_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_03_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_08_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_64_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_63_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_03_bad();");
  CWE190_Integer_Overflow__int_max_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_14_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_21_bad();");
  CWE190_Integer_Overflow__int_max_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_02_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_12_bad();");
  CWE190_Integer_Overflow__int_fgets_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_67_bad();");
  CWE190_Integer_Overflow__int_max_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_09_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_06_bad();");
  CWE190_Integer_Overflow__int_max_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_18_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_18_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_34_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_53_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_11_bad();");
  CWE190_Integer_Overflow__int_max_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_10_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_06_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_04_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_09_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_08_bad();");
  CWE190_Integer_Overflow__int_max_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_54_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_14_bad();");
  CWE190_Integer_Overflow__int_fgets_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_52_bad();");
  CWE190_Integer_Overflow__int_max_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_01_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_22_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_16_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_53_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_10_bad();");
  CWE190_Integer_Overflow__int_fgets_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_22_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_09_bad();");
  CWE190_Integer_Overflow__int_max_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_63_bad();");
  CWE190_Integer_Overflow__int_max_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_09_bad();");
  CWE190_Integer_Overflow__int_max_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_52_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_61_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_68_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_21_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_04_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_66_bad();");
  CWE190_Integer_Overflow__int_max_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_41_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_41_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_13_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_32_bad();");
  CWE190_Integer_Overflow__int_max_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_53_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_66_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_52_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_12_bad();");
  CWE190_Integer_Overflow__int_max_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_01_bad();");
  CWE190_Integer_Overflow__int_fgets_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_66_bad();");
  CWE190_Integer_Overflow__int_max_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_15_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_22_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_31_bad();");
  CWE190_Integer_Overflow__int_max_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_03_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_08_bad();");
  CWE190_Integer_Overflow__int_max_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_67_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_12_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_52_bad();");
  CWE190_Integer_Overflow__int_max_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_41_bad();");
  CWE190_Integer_Overflow__int_max_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_67_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_52_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_21_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_52_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_51_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_22_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_12_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_51_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_06_bad();");
  CWE190_Integer_Overflow__int_fgets_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_52_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_61_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_32_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_06_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_10_bad();");
  CWE190_Integer_Overflow__int_max_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_53_bad();");
  CWE190_Integer_Overflow__int_max_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_61_bad();");
  CWE190_Integer_Overflow__int_fgets_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_08_bad();");
  CWE190_Integer_Overflow__int_fgets_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_32_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_64_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_31_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_16_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_11_bad();");
  CWE190_Integer_Overflow__int_max_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_65_bad();");
  CWE190_Integer_Overflow__int_fgets_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_14_bad();");
  CWE190_Integer_Overflow__int_max_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_15_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_64_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_15_bad();");
  CWE190_Integer_Overflow__int_max_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_02_bad();");
  CWE190_Integer_Overflow__int_max_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_18_bad();");
  CWE190_Integer_Overflow__int_fgets_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_07_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_42_bad();");
  CWE190_Integer_Overflow__int_fgets_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_10_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_07_bad();");
  CWE190_Integer_Overflow__int_max_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_01_bad();");
  CWE190_Integer_Overflow__int_max_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_63_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_17_bad();");
  CWE190_Integer_Overflow__int_max_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_53_bad();");
  CWE190_Integer_Overflow__int_max_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_15_bad();");
  CWE190_Integer_Overflow__int_max_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_52_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_44_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_13_bad();");
  CWE190_Integer_Overflow__int_max_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_05_bad();");
  CWE190_Integer_Overflow__int_max_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_13_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_10_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_15_bad();");
  CWE190_Integer_Overflow__int_max_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_32_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_04_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_52_bad();");
  CWE190_Integer_Overflow__int_fgets_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_01_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_10_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_15_bad();");
  CWE190_Integer_Overflow__int_fgets_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_45_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_54_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_63_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_03_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_21_bad();");
  CWE190_Integer_Overflow__int_max_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_34_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_02_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_13_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_64_bad();");
  CWE190_Integer_Overflow__int_max_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_65_bad();");
  CWE190_Integer_Overflow__int_max_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_01_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_06_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_42_bad();");
  CWE190_Integer_Overflow__int_max_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_06_bad();");
  CWE190_Integer_Overflow__int_max_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_63_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_03_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_51_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_63_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_16_bad();");
  CWE190_Integer_Overflow__int_fgets_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_14_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_42_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_08_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_65_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_02_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_12_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_31_bad();");
  CWE190_Integer_Overflow__int_max_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_07_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_44_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_04_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_16_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_01_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_22_bad();");
  CWE190_Integer_Overflow__int_max_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_21_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_51_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_68_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_64_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_45_bad();");
  CWE190_Integer_Overflow__int_fgets_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_05_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_17_bad();");
  CWE190_Integer_Overflow__int_max_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_65_bad();");
  CWE190_Integer_Overflow__int_max_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_42_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_11_bad();");
  CWE190_Integer_Overflow__int_max_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_42_bad();");
  CWE190_Integer_Overflow__int_max_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_05_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_02_bad();");
  CWE190_Integer_Overflow__int_fgets_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_65_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_18_bad();");
  CWE190_Integer_Overflow__int_max_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_13_bad();");
  CWE190_Integer_Overflow__int_max_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_67_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_04_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_21_bad();");
  CWE190_Integer_Overflow__int_max_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_68_bad();");
  CWE190_Integer_Overflow__int_max_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_63_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_32_bad();");
  CWE190_Integer_Overflow__int_max_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_02_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_14_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_10_bad();");
  CWE190_Integer_Overflow__int_max_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_03_bad();");
  CWE190_Integer_Overflow__int_max_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_34_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_63_bad();");
  CWE190_Integer_Overflow__int_fgets_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_68_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_44_bad();");
  CWE190_Integer_Overflow__int_max_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_34_bad();");
  CWE190_Integer_Overflow__int_max_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_15_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_06_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_44_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_34_bad();");
  CWE190_Integer_Overflow__int_max_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_18_bad();");
  CWE190_Integer_Overflow__int_max_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_08_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_05_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_54_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_15_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_45_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_61_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_21_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_22_bad();");
  CWE190_Integer_Overflow__int_max_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_64_bad();");
  CWE190_Integer_Overflow__int_fgets_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_45_bad();");
  CWE190_Integer_Overflow__int_max_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_61_bad();");
  CWE190_Integer_Overflow__int_max_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_41_bad();");
  CWE190_Integer_Overflow__int_fgets_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_67_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_14_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_45_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_44_bad();");
  CWE190_Integer_Overflow__int_max_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_07_bad();");
  CWE190_Integer_Overflow__int_max_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_03_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_15_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_07_bad();");
  CWE190_Integer_Overflow__int_max_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_02_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_68_bad();");
  CWE190_Integer_Overflow__int_max_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_42_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_41_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_16_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_45_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_13_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_01_bad();");
  CWE190_Integer_Overflow__int_max_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_05_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_05_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_52_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_13_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_12_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_12_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_09_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_multiply_66_bad();");
  CWE190_Integer_Overflow__int_fscanf_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_05_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_31_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_34_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_multiply_14_bad();");
  CWE190_Integer_Overflow__int_max_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_11_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_34_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_add_13_bad();");
  CWE190_Integer_Overflow__int_max_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_51_bad();");
  CWE190_Integer_Overflow__int_max_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_square_10_bad();");
  CWE190_Integer_Overflow__int_max_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_add_17_bad();");
  CWE190_Integer_Overflow__int_listen_socket_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_square_07_bad();");
  CWE190_Integer_Overflow__int_listen_socket_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_51_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_multiply_10_bad();");
  CWE190_Integer_Overflow__int_listen_socket_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_multiply_11_bad();");
  CWE190_Integer_Overflow__int_fgets_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_square_04_bad();");
  CWE190_Integer_Overflow__int_fgets_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_square_12_bad();");
  CWE190_Integer_Overflow__int_fscanf_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_add_31_bad();");
  CWE190_Integer_Overflow__int_fscanf_add_31_bad();
  return 0;
}
// 67139C: using guessed type int globalArgc;
// 6713A0: using guessed type __int64 globalArgv;

//----- (0000000000405008) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_multiply_61b_badSource()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000040501B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040502E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_multiply_61b_goodB2GSource()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000405041) ----------------------------------------------------
int __fastcall badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000405066) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_multiply_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (00000000004050D7) ----------------------------------------------------
int __fastcall goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004050FC) ----------------------------------------------------
int goodG2B()
{
  return goodG2BSink(2);
}

//----- (0000000000405127) ----------------------------------------------------
int __fastcall goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000405161) ----------------------------------------------------
__int64 goodB2G()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (00000000004051D2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_multiply_44_good()
{
  goodG2B();
  return goodB2G();
}

//----- (00000000004051EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040520C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040522C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000405261) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 405261: using guessed type char buf[16];

//----- (000000000040539A) ----------------------------------------------------
int goodB2G1()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40539A: using guessed type char buf[16];

//----- (00000000004054E8) ----------------------------------------------------
int goodB2G2()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 4054E8: using guessed type char buf[16];

//----- (0000000000405636) ----------------------------------------------------
int goodG2B1()
{
  return printIntLine(3u);
}

//----- (0000000000405663) ----------------------------------------------------
int goodG2B2()
{
  return printIntLine(3u);
}

//----- (0000000000405690) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_15_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1();
  return goodG2B2();
}

//----- (00000000004056BE) ----------------------------------------------------
int __fastcall badSink_0(int a1)
{
  int result; // eax

  result = badStatic;
  if ( badStatic )
    result = printIntLine(a1 * a1);
  return result;
}
// 671184: using guessed type int badStatic;

//----- (00000000004056E9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic = 1;
  return badSink_0(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671184: using guessed type int badStatic;

//----- (000000000040572B) ----------------------------------------------------
int __fastcall goodB2G1Sink(int a1)
{
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 671188: using guessed type int goodB2G1Static;

//----- (0000000000405789) ----------------------------------------------------
int goodB2G1_0()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static = 0;
  return goodB2G1Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671188: using guessed type int goodB2G1Static;

//----- (00000000004057CB) ----------------------------------------------------
int __fastcall goodB2G2Sink(int a1)
{
  int result; // eax

  result = goodB2G2Static;
  if ( goodB2G2Static )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 67118C: using guessed type int goodB2G2Static;

//----- (000000000040581D) ----------------------------------------------------
int goodB2G2_0()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static = 1;
  return goodB2G2Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67118C: using guessed type int goodB2G2Static;

//----- (000000000040585F) ----------------------------------------------------
int __fastcall goodG2BSink_0(int a1)
{
  int result; // eax

  result = goodG2BStatic;
  if ( goodG2BStatic )
    result = printIntLine(a1 * a1);
  return result;
}
// 671190: using guessed type int goodG2BStatic;

//----- (000000000040588A) ----------------------------------------------------
int goodG2B_0()
{
  goodG2BStatic = 1;
  return goodG2BSink_0(2);
}
// 671190: using guessed type int goodG2BStatic;

//----- (00000000004058B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_21_good()
{
  goodB2G1_0();
  goodB2G2_0();
  return goodG2B_0();
}

//----- (00000000004058DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040591E) ----------------------------------------------------
int goodB2G1_1()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040598C) ----------------------------------------------------
int goodB2G2_1()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004059FA) ----------------------------------------------------
int goodG2B1_0()
{
  return printIntLine(4u);
}

//----- (0000000000405A26) ----------------------------------------------------
int goodG2B2_0()
{
  return printIntLine(4u);
}

//----- (0000000000405A52) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_03_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (0000000000405A80) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_multiply_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000405ADD) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000405AF0) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_multiply_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000405B4D) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000405B58) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000405B63) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000405BAA) ----------------------------------------------------
int goodB2G1_2()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (0000000000405C12) ----------------------------------------------------
int goodB2G2_2()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (0000000000405C6E) ----------------------------------------------------
int goodG2B1_1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000405CC1) ----------------------------------------------------
int goodG2B2_1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000405D08) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_08_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (0000000000405D36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53d_badSink(a1);
}

//----- (0000000000405D4D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53d_goodG2BSink(a1);
}

//----- (0000000000405D64) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53d_goodB2GSink(a1);
}

//----- (0000000000405D7B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405DC1) ----------------------------------------------------
int goodB2G_0()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405E31) ----------------------------------------------------
int goodG2B_1()
{
  return printIntLine(4u);
}

//----- (0000000000405E5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_18_good()
{
  goodB2G_0();
  return goodG2B_1();
}

//----- (0000000000405E79) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_61b_badSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000405EAF) ----------------------------------------------------
int goodG2B_2()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_61b_goodG2BSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000405EE5) ----------------------------------------------------
int goodB2G_1()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_61b_goodB2GSource();
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (0000000000405F30) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_61_good()
{
  goodG2B_2();
  return goodB2G_1();
}

//----- (0000000000405F4A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_54b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405F82) ----------------------------------------------------
int goodG2B_3()
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54b_goodG2BSink(2);
}

//----- (0000000000405FA4) ----------------------------------------------------
int goodB2G_2()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_54b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405FDC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_54_good()
{
  goodG2B_3();
  return goodB2G_2();
}

//----- (0000000000405FF6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_add_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_add_65b_badSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 405FF6: using guessed type char buf[16];

//----- (000000000040612D) ----------------------------------------------------
int goodG2B_4()
{
  return CWE190_Integer_Overflow__int_listen_socket_add_65b_goodG2BSink(2);
}

//----- (0000000000406158) ----------------------------------------------------
__int64 goodB2G_3()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_add_65b_goodB2GSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 406158: using guessed type char buf[16];

//----- (000000000040628F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_add_65_good()
{
  goodG2B_4();
  return goodB2G_3();
}

//----- (00000000004062A9) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_square_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_square_65b_badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000040631A) ----------------------------------------------------
int goodG2B_5()
{
  return CWE190_Integer_Overflow__int_fgets_square_65b_goodG2BSink(2);
}

//----- (0000000000406345) ----------------------------------------------------
__int64 goodB2G_4()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_square_65b_goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (00000000004063B6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_square_65_good()
{
  goodG2B_5();
  return goodB2G_4();
}

//----- (00000000004063D0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive;
  if ( staticFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671114: using guessed type int staticFive;

//----- (0000000000406416) ----------------------------------------------------
int goodB2G1_3()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive;
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 671114: using guessed type int staticFive;

//----- (000000000040647D) ----------------------------------------------------
int goodB2G2_3()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive;
  if ( staticFive == 5 && v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 671114: using guessed type int staticFive;

//----- (00000000004064D8) ----------------------------------------------------
int goodG2B1_2()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671114: using guessed type int staticFive;

//----- (000000000040652A) ----------------------------------------------------
int goodG2B2_2()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  result = staticFive;
  if ( staticFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671114: using guessed type int staticFive;

//----- (0000000000406570) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_07_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (000000000040659E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_12_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v3 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  else if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000406649) ----------------------------------------------------
int goodB2G_5()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  else if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000406735) ----------------------------------------------------
int goodG2B_6()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000040679C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_12_good()
{
  goodB2G_5();
  return goodG2B_6();
}

//----- (00000000004067B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_68_badData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_square_68b_badSink();
}
// 6713A8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_68_badData;
// 4067B6: using guessed type char buf[16];

//----- (00000000004068ED) ----------------------------------------------------
int goodG2B_7()
{
  CWE190_Integer_Overflow__int_listen_socket_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_listen_socket_square_68b_goodG2BSink();
}
// 6713AC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_68_goodG2BData;

//----- (0000000000406918) ----------------------------------------------------
int goodB2G_6()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_square_68b_goodB2GSink();
}
// 6713B0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData;
// 406918: using guessed type char buf[16];

//----- (0000000000406A4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_68_good()
{
  goodG2B_7();
  return goodB2G_6();
}

//----- (0000000000406A69) ----------------------------------------------------
int __fastcall badSink_1(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000406A8A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_square_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_1;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 406A8A: using guessed type char buf[16];

//----- (0000000000406BC1) ----------------------------------------------------
int __fastcall goodG2BSink_1(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000406BE2) ----------------------------------------------------
int goodG2B_8()
{
  return goodG2BSink_1(2);
}

//----- (0000000000406C0D) ----------------------------------------------------
int __fastcall goodB2GSink_0(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000406C55) ----------------------------------------------------
__int64 goodB2G_7()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_0;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 406C55: using guessed type char buf[16];

//----- (0000000000406D8C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_square_44_good()
{
  goodG2B_8();
  return goodB2G_7();
}

//----- (0000000000406DA6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000406DCB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000406DF0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000406E2A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_61b_badSource(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000406E60) ----------------------------------------------------
int goodG2B_9()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_61b_goodG2BSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000406E96) ----------------------------------------------------
int goodB2G_8()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_61b_goodB2GSource(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (0000000000406EE1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_61_good()
{
  goodG2B_9();
  return goodB2G_8();
}

//----- (0000000000406EFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_06_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000406F3A) ----------------------------------------------------
int goodB2G1_4()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000406F9A) ----------------------------------------------------
int goodB2G2_4()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000406FEE) ----------------------------------------------------
int goodG2B1_3()
{
  return printIntLine(3u);
}

//----- (0000000000407039) ----------------------------------------------------
int goodG2B2_3()
{
  return printIntLine(3u);
}

//----- (0000000000407078) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_06_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (00000000004070A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_add_68_badData + 1);
}
// 6713BC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_68_badData;

//----- (00000000004070CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_add_68_goodG2BData + 1);
}
// 6713B4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_68_goodG2BData;

//----- (00000000004070F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_add_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_listen_socket_add_68_goodB2GData + 1);
  return result;
}
// 6713B8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_68_goodB2GData;

//----- (000000000040712D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000407158) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000407183) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (00000000004071D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_15_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 4071D5: using guessed type char buf[16];

//----- (0000000000407313) ----------------------------------------------------
int goodB2G1_5()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 407313: using guessed type char buf[16];

//----- (0000000000407466) ----------------------------------------------------
int goodB2G2_5()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 407466: using guessed type char buf[16];

//----- (00000000004075B9) ----------------------------------------------------
int goodG2B1_4()
{
  return printIntLine(4u);
}

//----- (00000000004075EB) ----------------------------------------------------
int goodG2B2_4()
{
  return printIntLine(4u);
}

//----- (000000000040761D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_15_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (000000000040764B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_0 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_0;
  if ( staticFive_0 == 5 && v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}
// 671118: using guessed type int staticFive_0;

//----- (00000000004076D7) ----------------------------------------------------
int goodB2G1_6()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_0 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_0;
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 671118: using guessed type int staticFive_0;

//----- (0000000000407784) ----------------------------------------------------
int goodB2G2_6()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_0 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_0;
  if ( staticFive_0 == 5 && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 671118: using guessed type int staticFive_0;

//----- (0000000000407825) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671118: using guessed type int staticFive_0;

//----- (0000000000407877) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  result = staticFive_0;
  if ( staticFive_0 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671118: using guessed type int staticFive_0;

//----- (00000000004078BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_07_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (00000000004078EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53d_badSink(a1);
}

//----- (0000000000407902) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53d_goodG2BSink(a1);
}

//----- (0000000000407919) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53d_goodB2GSink(a1);
}

//----- (0000000000407930) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_square_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 407930: using guessed type char buf[16];

//----- (0000000000407A53) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000407A66) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_square_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 407A66: using guessed type char buf[16];

//----- (0000000000407B89) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 407B89: using guessed type char buf[16];

//----- (0000000000407CE1) ----------------------------------------------------
int goodB2G1_7()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 407CE1: using guessed type char buf[16];

//----- (0000000000407E6C) ----------------------------------------------------
int goodB2G2_7()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 407E6C: using guessed type char buf[16];

//----- (0000000000407FEB) ----------------------------------------------------
int goodG2B1_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040803F) ----------------------------------------------------
int goodG2B2_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000408087) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_11_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (00000000004080B5) ----------------------------------------------------
__int64 __fastcall badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4080B5: using guessed type char buf[16];

//----- (00000000004081D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_42_bad()
{
  int result; // eax

  result = badSource(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000040820E) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 2LL;
}

//----- (0000000000408221) ----------------------------------------------------
int goodG2B_10()
{
  int result; // eax

  result = goodG2BSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000408257) ----------------------------------------------------
__int64 __fastcall goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 408257: using guessed type char buf[16];

//----- (000000000040837A) ----------------------------------------------------
int goodB2G_9()
{
  int result; // eax

  result = goodB2GSource(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (00000000004083C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_42_good()
{
  goodB2G_9();
  return goodG2B_10();
}

//----- (00000000004083DF) ----------------------------------------------------
__int64 __fastcall badSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040840C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_42_bad()
{
  int v0; // eax

  v0 = badSource_0(0);
  return printIntLine(v0 + 1);
}

//----- (000000000040843D) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 2LL;
}

//----- (0000000000408450) ----------------------------------------------------
int goodG2B_11()
{
  int v0; // eax

  v0 = goodG2BSource_0();
  return printIntLine(v0 + 1);
}

//----- (0000000000408481) ----------------------------------------------------
__int64 __fastcall goodB2GSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004084AE) ----------------------------------------------------
int goodB2G_10()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_0(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004084F4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_42_good()
{
  goodB2G_10();
  return goodG2B_11();
}

//----- (000000000040850E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040856E) ----------------------------------------------------
int goodB2G1_8()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408604) ----------------------------------------------------
int goodB2G2_8()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040868E) ----------------------------------------------------
int goodG2B1_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004086E2) ----------------------------------------------------
int goodG2B2_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040872A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_11_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (0000000000408758) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040879C) ----------------------------------------------------
int goodB2G1_9()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040880A) ----------------------------------------------------
int goodB2G2_9()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408878) ----------------------------------------------------
int goodG2B1_8()
{
  return printIntLine(4u);
}

//----- (00000000004088A4) ----------------------------------------------------
int goodG2B2_8()
{
  return printIntLine(4u);
}

//----- (00000000004088D0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_02_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (00000000004088FE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_multiply_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040893F) ----------------------------------------------------
int goodG2B_12()
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_65b_goodG2BSink(2);
}

//----- (000000000040896A) ----------------------------------------------------
__int64 goodB2G_11()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_multiply_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004089AB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_65_good()
{
  goodG2B_12();
  return goodB2G_11();
}

//----- (00000000004089C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_54_bad()
{
  return CWE190_Integer_Overflow__int_max_add_54b_badSink(0x7FFFFFFF);
}

//----- (00000000004089E7) ----------------------------------------------------
int goodG2B_13()
{
  return CWE190_Integer_Overflow__int_max_add_54b_goodG2BSink(2);
}

//----- (0000000000408A09) ----------------------------------------------------
int goodB2G_12()
{
  return CWE190_Integer_Overflow__int_max_add_54b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000408A2B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_54_good()
{
  goodG2B_13();
  return goodB2G_12();
}

//----- (0000000000408A45) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53c_badSink(a1);
}

//----- (0000000000408A5C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53c_goodG2BSink(a1);
}

//----- (0000000000408A73) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53c_goodB2GSink(a1);
}

//----- (0000000000408A8A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000408AB5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000408AE0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (0000000000408B32) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000408B52) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000408B72) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000408BA7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;

//----- (0000000000408BFF) ----------------------------------------------------
int goodB2G1_10()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000408C8D) ----------------------------------------------------
int goodB2G2_10()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;

//----- (0000000000408D0F) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000408D5B) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000408D9B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_10_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (0000000000408DC9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_63b_badSink(&v1);
}

//----- (0000000000408DED) ----------------------------------------------------
int goodG2B_14()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_square_63b_goodG2BSink(&v1);
}

//----- (0000000000408E11) ----------------------------------------------------
int goodB2G_13()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_63b_goodB2GSink(&v1);
}

//----- (0000000000408E35) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_63_good()
{
  goodG2B_14();
  return goodB2G_13();
}

//----- (0000000000408E4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_68_badData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_add_68b_badSink();
}
// 6713BC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_68_badData;
// 408E4F: using guessed type char buf[16];

//----- (0000000000408F86) ----------------------------------------------------
int goodG2B_15()
{
  CWE190_Integer_Overflow__int_listen_socket_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_listen_socket_add_68b_goodG2BSink();
}
// 6713B4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_68_goodG2BData;

//----- (0000000000408FB1) ----------------------------------------------------
int goodB2G_14()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_68_goodB2GData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_add_68b_goodB2GSink();
}
// 6713B8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_68_goodB2GData;
// 408FB1: using guessed type char buf[16];

//----- (00000000004090E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_68_good()
{
  goodG2B_15();
  return goodB2G_14();
}

//----- (0000000000409102) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_square_61b_badSource(0);
  return printIntLine(v0 * v0);
}

//----- (0000000000409134) ----------------------------------------------------
int goodG2B_16()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_square_61b_goodG2BSource();
  return printIntLine(v0 * v0);
}

//----- (0000000000409166) ----------------------------------------------------
int goodB2G_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_listen_socket_square_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004091BF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_61_good()
{
  goodG2B_16();
  return goodB2G_15();
}

//----- (00000000004091D9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54d_badSink(a1);
}

//----- (00000000004091F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54d_goodG2BSink(a1);
}

//----- (0000000000409207) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54d_goodB2GSink(a1);
}

//----- (000000000040921E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v9 > 0 )
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67111C: using guessed type int staticTrue;
// 40921E: using guessed type char buf[16];

//----- (0000000000409372) ----------------------------------------------------
int goodB2G1_11()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFalse;
  if ( staticFalse )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67111C: using guessed type int staticTrue;
// 671194: using guessed type int staticFalse;
// 409372: using guessed type char buf[16];

//----- (00000000004094E7) ----------------------------------------------------
int goodB2G2_11()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticTrue;
  if ( staticTrue && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67111C: using guessed type int staticTrue;
// 4094E7: using guessed type char buf[16];

//----- (0000000000409650) ----------------------------------------------------
int goodG2B1_10()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67111C: using guessed type int staticTrue;
// 671194: using guessed type int staticFalse;

//----- (00000000004096A0) ----------------------------------------------------
int goodG2B2_10()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67111C: using guessed type int staticTrue;

//----- (00000000004096E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_05_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (0000000000409712) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000409732) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000409752) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000409787) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671120: using guessed type int staticTrue_0;

//----- (00000000004097DC) ----------------------------------------------------
int goodB2G1_12()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671120: using guessed type int staticTrue_0;
// 671198: using guessed type int staticFalse_0;

//----- (0000000000409853) ----------------------------------------------------
int goodB2G2_12()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671120: using guessed type int staticTrue_0;

//----- (00000000004098BE) ----------------------------------------------------
int goodG2B1_11()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671120: using guessed type int staticTrue_0;
// 671198: using guessed type int staticFalse_0;

//----- (0000000000409909) ----------------------------------------------------
int goodG2B2_11()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671120: using guessed type int staticTrue_0;

//----- (0000000000409948) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_05_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (0000000000409976) ----------------------------------------------------
int __fastcall badSink_2(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040999B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_2(v8);
}
// 40999B: using guessed type char buf[16];

//----- (0000000000409AC9) ----------------------------------------------------
int __fastcall goodG2BSink_2(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000409AEE) ----------------------------------------------------
int goodG2B_17()
{
  return goodG2BSink_2(2);
}

//----- (0000000000409B10) ----------------------------------------------------
int __fastcall goodB2GSink_1(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000409B4A) ----------------------------------------------------
int goodB2G_16()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_1(v8);
}
// 409B4A: using guessed type char buf[16];

//----- (0000000000409C78) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_41_good()
{
  goodB2G_16();
  return goodG2B_17();
}

//----- (0000000000409C92) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_68_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fscanf_multiply_68_badData);
  return result;
}
// 6713C8: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;

//----- (0000000000409CBD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData);
  return result;
}
// 6713C0: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData;

//----- (0000000000409CE8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData);
  }
  return result;
}
// 6713C4: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData;

//----- (0000000000409D28) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53d_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000409D49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000409D6A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000409DB2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_1 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 671124: using guessed type int staticFive_1;
// 409DB2: using guessed type char buf[16];

//----- (0000000000409F04) ----------------------------------------------------
int goodB2G1_13()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_1 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 671124: using guessed type int staticFive_1;
// 409F04: using guessed type char buf[16];

//----- (000000000040A089) ----------------------------------------------------
int goodB2G2_13()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_1 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 671124: using guessed type int staticFive_1;
// 40A089: using guessed type char buf[16];

//----- (000000000040A202) ----------------------------------------------------
int goodG2B1_12()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671124: using guessed type int staticFive_1;

//----- (000000000040A250) ----------------------------------------------------
int goodG2B2_12()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671124: using guessed type int staticFive_1;

//----- (000000000040A292) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_07_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040A2C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_53b_badSink(v8);
}
// 40A2C0: using guessed type char buf[16];

//----- (000000000040A3EE) ----------------------------------------------------
int goodG2B_18()
{
  return CWE190_Integer_Overflow__int_listen_socket_add_53b_goodG2BSink(2);
}

//----- (000000000040A410) ----------------------------------------------------
int goodB2G_17()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_53b_goodB2GSink(v8);
}
// 40A410: using guessed type char buf[16];

//----- (000000000040A53E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_53_good()
{
  goodG2B_18();
  return goodB2G_17();
}

//----- (000000000040A558) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_63b_badSink(&v4);
}

//----- (000000000040A5C2) ----------------------------------------------------
int goodG2B_19()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_square_63b_goodG2BSink(&v1);
}

//----- (000000000040A5E6) ----------------------------------------------------
int goodB2G_18()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_63b_goodB2GSink(&v4);
}

//----- (000000000040A650) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_63_good()
{
  goodG2B_19();
  return goodB2G_18();
}

//----- (000000000040A66A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671128: using guessed type int staticTrue_1;

//----- (000000000040A6AA) ----------------------------------------------------
int goodB2G1_14()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 0x7FFFFFFF;
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}
// 671128: using guessed type int staticTrue_1;
// 67119C: using guessed type int staticFalse_1;

//----- (000000000040A71D) ----------------------------------------------------
int goodB2G2_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}
// 671128: using guessed type int staticTrue_1;

//----- (000000000040A784) ----------------------------------------------------
int goodG2B1_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671128: using guessed type int staticTrue_1;
// 67119C: using guessed type int staticFalse_1;

//----- (000000000040A7D0) ----------------------------------------------------
int goodG2B2_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671128: using guessed type int staticTrue_1;

//----- (000000000040A810) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_05_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040A83E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_34_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  result = v11;
  v7 = v11;
  if ( v11 > 0 )
  {
    v6 = 2 * v7;
    result = printIntLine(2 * v7);
  }
  return result;
}
// 40A83E: using guessed type char buf[16];

//----- (000000000040A986) ----------------------------------------------------
int goodG2B_20()
{
  return printIntLine(4u);
}

//----- (000000000040A9C2) ----------------------------------------------------
int goodB2G_19()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  result = v11;
  v7 = v11;
  if ( v11 > 0 )
  {
    if ( v7 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v6 = 2 * v7;
      result = printIntLine(2 * v7);
    }
  }
  return result;
}
// 40A9C2: using guessed type char buf[16];

//----- (000000000040AB1F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_34_good()
{
  goodG2B_20();
  return goodB2G_19();
}

//----- (000000000040AB39) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_53d_badSink(a1);
}

//----- (000000000040AB50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_53d_goodG2BSink(a1);
}

//----- (000000000040AB67) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_53d_goodB2GSink(a1);
}

//----- (000000000040AB7E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040ABCB) ----------------------------------------------------
int goodG2B_21()
{
  return printIntLine(3u);
}

//----- (000000000040AC02) ----------------------------------------------------
int goodB2G_20()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 + 1;
  return printIntLine(v3 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AC64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_34_good()
{
  goodG2B_21();
  return goodB2G_20();
}

//----- (000000000040AC7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (000000000040ACAE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (000000000040ACDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000040AD23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040AD4E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040AD79) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000040ADB9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53c_badSink(a1);
}

//----- (000000000040ADD0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53c_goodG2BSink(a1);
}

//----- (000000000040ADE7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53c_goodB2GSink(a1);
}

//----- (000000000040ADFE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_66b_badSink((__int64)&v5);
}
// 40ADFE: using guessed type char buf[16];

//----- (000000000040AF34) ----------------------------------------------------
int goodG2B_22()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040AF5E) ----------------------------------------------------
int goodB2G_21()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_66b_goodB2GSink((__int64)&v5);
}
// 40AF5E: using guessed type char buf[16];

//----- (000000000040B094) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_66_good()
{
  goodG2B_22();
  return goodB2G_21();
}

//----- (000000000040B0AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040B0D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040B0F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000040B132) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (000000000040B13D) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (000000000040B148) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_0();
  if ( result )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B1A8) ----------------------------------------------------
int goodB2G1_15()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B23E) ----------------------------------------------------
int goodB2G2_15()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B2C8) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040B31C) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040B364) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_08_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040B392) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_65_bad()
{
  return CWE190_Integer_Overflow__int_max_add_65b_badSink(0x7FFFFFFF);
}

//----- (000000000040B3BD) ----------------------------------------------------
int goodG2B_23()
{
  return CWE190_Integer_Overflow__int_max_add_65b_goodG2BSink(2);
}

//----- (000000000040B3E8) ----------------------------------------------------
int goodB2G_22()
{
  return CWE190_Integer_Overflow__int_max_add_65b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000040B413) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_65_good()
{
  goodG2B_23();
  return goodB2G_22();
}

//----- (000000000040B42D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_68_badData = v1;
  return CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6713C8: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;

//----- (000000000040B46E) ----------------------------------------------------
int goodG2B_24()
{
  CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fscanf_multiply_68b_goodG2BSink();
}
// 6713C0: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_68_goodG2BData;

//----- (000000000040B499) ----------------------------------------------------
int goodB2G_23()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int_fscanf_multiply_68b_goodB2GSink();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6713C4: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_68_goodB2GData;

//----- (000000000040B4DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_68_good()
{
  goodG2B_24();
  return goodB2G_23();
}

//----- (000000000040B4F4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040B546) ----------------------------------------------------
int goodB2G_24()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}

//----- (000000000040B5BF) ----------------------------------------------------
int goodG2B_25()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040B611) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_17_good()
{
  goodB2G_24();
  return goodG2B_25();
}

//----- (000000000040B62B) ----------------------------------------------------
int badSink_3()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_45_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fgets_multiply_45_badData);
  return result;
}
// 6711A0: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_45_badData;

//----- (000000000040B656) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_45_badData = v4;
  return badSink_3();
}
// 6711A0: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_45_badData;

//----- (000000000040B6C7) ----------------------------------------------------
int goodG2BSink_3()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData);
  return result;
}
// 6711A4: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData;

//----- (000000000040B6F2) ----------------------------------------------------
int goodG2B_26()
{
  CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData = 2;
  return goodG2BSink_3();
}
// 6711A4: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData;

//----- (000000000040B71D) ----------------------------------------------------
int goodB2GSink_2()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData);
  }
  return result;
}
// 6711A8: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData;

//----- (000000000040B75D) ----------------------------------------------------
int goodB2G_25()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData = v4;
  return goodB2GSink_2();
}
// 6711A8: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData;

//----- (000000000040B7CE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_45_good()
{
  goodG2B_26();
  return goodB2G_25();
}

//----- (000000000040B7E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_67b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B826) ----------------------------------------------------
int goodG2B_27()
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_67b_goodG2BSink(2);
}

//----- (000000000040B84E) ----------------------------------------------------
int goodB2G_26()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_67b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B88C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_67_good()
{
  goodG2B_27();
  return goodB2G_26();
}

//----- (000000000040B8A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 40B8A6: using guessed type char buf[16];

//----- (000000000040B9E0) ----------------------------------------------------
int goodB2G_27()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 40B9E0: using guessed type char buf[16];

//----- (000000000040BB41) ----------------------------------------------------
int goodG2B_28()
{
  return printIntLine(4u);
}

//----- (000000000040BB6F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_16_good()
{
  goodB2G_27();
  return goodG2B_28();
}

//----- (000000000040BB89) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000040BBCA) ----------------------------------------------------
int goodB2G1_16()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 671170: using guessed type int globalFive;

//----- (000000000040BC2C) ----------------------------------------------------
int goodB2G2_16()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000040BC82) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000040BCCF) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000040BD10) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_14_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040BD3E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v3 = 0x7FFFFFFF;
  v2 = 2147483648;
  return printIntLine(0x80000000);
}

//----- (000000000040BD94) ----------------------------------------------------
int goodG2B_29()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000040BDEA) ----------------------------------------------------
int goodB2G_28()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040BE55) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_32_good()
{
  goodG2B_29();
  return goodB2G_28();
}

//----- (000000000040BE6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711AC: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_badGlobal;

//----- (000000000040BE9E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711B0: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Global;

//----- (000000000040BEEE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711B4: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Global;

//----- (000000000040BF32) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711B8: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BGlobal;

//----- (000000000040BF61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54e_badSink(a1);
}

//----- (000000000040BF78) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54e_goodG2BSink(a1);
}

//----- (000000000040BF8F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54e_goodB2GSink(a1);
}

//----- (000000000040BFA6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_52b_badSink(v8);
}
// 40BFA6: using guessed type char buf[16];

//----- (000000000040C0D4) ----------------------------------------------------
int goodG2B_30()
{
  return CWE190_Integer_Overflow__int_listen_socket_square_52b_goodG2BSink(2);
}

//----- (000000000040C0F6) ----------------------------------------------------
int goodB2G_29()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_52b_goodB2GSink(v8);
}
// 40C0F6: using guessed type char buf[16];

//----- (000000000040C224) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_52_good()
{
  goodG2B_30();
  return goodB2G_29();
}

//----- (000000000040C23E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000040C275) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000040C2AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000040C2F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_53c_badSink(a1);
}

//----- (000000000040C30F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_53c_goodG2BSink(a1);
}

//----- (000000000040C326) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_53c_goodB2GSink(a1);
}

//----- (000000000040C33D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040C363) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040C389) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040C3C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52c_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000040C3E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000040C406) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000040C44E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_53_bad()
{
  return CWE190_Integer_Overflow__int_max_square_53b_badSink(0x7FFFFFFF);
}

//----- (000000000040C470) ----------------------------------------------------
int goodG2B_31()
{
  return CWE190_Integer_Overflow__int_max_square_53b_goodG2BSink(2);
}

//----- (000000000040C492) ----------------------------------------------------
int goodB2G_30()
{
  return CWE190_Integer_Overflow__int_max_square_53b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000040C4B4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_53_good()
{
  goodG2B_31();
  return goodB2G_30();
}

//----- (000000000040C4CE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_51b_badSink(v8);
}
// 40C4CE: using guessed type char buf[16];

//----- (000000000040C5FC) ----------------------------------------------------
int goodG2B_32()
{
  return CWE190_Integer_Overflow__int_listen_socket_square_51b_goodG2BSink(2);
}

//----- (000000000040C61E) ----------------------------------------------------
int goodB2G_31()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_51b_goodB2GSink(v8);
}
// 40C61E: using guessed type char buf[16];

//----- (000000000040C74C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_51_good()
{
  goodG2B_32();
  return goodB2G_31();
}

//----- (000000000040C766) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_68_badData = v4;
  return CWE190_Integer_Overflow__int_fgets_square_68b_badSink();
}
// 6713D0: using guessed type int CWE190_Integer_Overflow__int_fgets_square_68_badData;

//----- (000000000040C7D7) ----------------------------------------------------
int goodG2B_33()
{
  CWE190_Integer_Overflow__int_fgets_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fgets_square_68b_goodG2BSink();
}
// 6713CC: using guessed type int CWE190_Integer_Overflow__int_fgets_square_68_goodG2BData;

//----- (000000000040C802) ----------------------------------------------------
int goodB2G_32()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int_fgets_square_68b_goodB2GSink();
}
// 6713D4: using guessed type int CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData;

//----- (000000000040C873) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_68_good()
{
  goodG2B_33();
  return goodB2G_32();
}

//----- (000000000040C88D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_square_61b_badSource(0);
  return printIntLine(v0 * v0);
}

//----- (000000000040C8BF) ----------------------------------------------------
int goodG2B_34()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_square_61b_goodG2BSource();
  return printIntLine(v0 * v0);
}

//----- (000000000040C8F1) ----------------------------------------------------
int goodB2G_33()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fgets_square_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000040C94A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_61_good()
{
  goodG2B_34();
  return goodB2G_33();
}

//----- (000000000040C964) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_04_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000040C9A1) ----------------------------------------------------
int goodB2G1_17()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040C9FF) ----------------------------------------------------
int goodB2G2_17()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040CA51) ----------------------------------------------------
int goodG2B1_16()
{
  return printIntLine(3u);
}

//----- (000000000040CA9A) ----------------------------------------------------
int goodG2B2_16()
{
  return printIntLine(3u);
}

//----- (000000000040CAD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_04_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040CB05) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_31_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000040CB3C) ----------------------------------------------------
int goodG2B_35()
{
  return printIntLine(3u);
}

//----- (000000000040CB73) ----------------------------------------------------
int goodB2G_34()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040CBBF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_31_good()
{
  goodG2B_35();
  return goodB2G_34();
}

//----- (000000000040CBD9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_34_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7;
  v5 = v7 * v7;
  return printIntLine(v7 * v7);
}

//----- (000000000040CC57) ----------------------------------------------------
int goodG2B_36()
{
  return printIntLine(4u);
}

//----- (000000000040CC8F) ----------------------------------------------------
int goodB2G_35()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7;
  if ( v7 == 0x80000000 || v6 < -46339 || v6 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 * v6;
  return printIntLine(v6 * v6);
}

//----- (000000000040CD34) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_34_good()
{
  goodG2B_36();
  return goodB2G_35();
}

//----- (000000000040CD4E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_multiply_22_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6711AC: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_badGlobal;

//----- (000000000040CD90) ----------------------------------------------------
int goodB2G1_18()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6711B0: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G1Global;

//----- (000000000040CDD2) ----------------------------------------------------
int goodB2G2_18()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6711B4: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodB2G2Global;

//----- (000000000040CE14) ----------------------------------------------------
int goodG2B_37()
{
  CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BSink(2);
}
// 6711B8: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_22_goodG2BGlobal;

//----- (000000000040CE40) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_22_good()
{
  goodB2G1_18();
  goodB2G2_18();
  return goodG2B_37();
}

//----- (000000000040CE64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_64b_badSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CE9E) ----------------------------------------------------
int goodG2B_38()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_multiply_64b_goodG2BSink(&v1);
}

//----- (000000000040CEC2) ----------------------------------------------------
int goodB2G_36()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_64b_goodB2GSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CEFC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_64_good()
{
  goodG2B_38();
  return goodB2G_36();
}

//----- (000000000040CF16) ----------------------------------------------------
int badSink_4()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_listen_socket_square_45_badData
         * CWE190_Integer_Overflow__int_listen_socket_square_45_badData);
}
// 6711BC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_45_badData;

//----- (000000000040CF3D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_45_badData = v8;
  return badSink_4();
}
// 6711BC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_45_badData;
// 40CF3D: using guessed type char buf[16];

//----- (000000000040D074) ----------------------------------------------------
int goodG2BSink_4()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_listen_socket_square_45_goodG2BData
         * CWE190_Integer_Overflow__int_listen_socket_square_45_goodG2BData);
}
// 6711C0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_45_goodG2BData;

//----- (000000000040D09B) ----------------------------------------------------
int goodG2B_39()
{
  CWE190_Integer_Overflow__int_listen_socket_square_45_goodG2BData = 2;
  return goodG2BSink_4();
}
// 6711C0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_45_goodG2BData;

//----- (000000000040D0C6) ----------------------------------------------------
int goodB2GSink_3()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData
             * CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData);
  }
  return result;
}
// 6711C4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData;

//----- (000000000040D114) ----------------------------------------------------
int goodB2G_37()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData = v8;
  return goodB2GSink_3();
}
// 6711C4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_45_goodB2GData;
// 40D114: using guessed type char buf[16];

//----- (000000000040D24B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_45_good()
{
  goodG2B_39();
  return goodB2G_37();
}

//----- (000000000040D265) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_64b_badSink(&v1);
}

//----- (000000000040D289) ----------------------------------------------------
int goodG2B_40()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_multiply_64b_goodG2BSink(&v1);
}

//----- (000000000040D2AD) ----------------------------------------------------
int goodB2G_38()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_64b_goodB2GSink(&v1);
}

//----- (000000000040D2D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_64_good()
{
  goodG2B_40();
  return goodB2G_38();
}

//----- (000000000040D2EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40D2EB: using guessed type char buf[16];

//----- (000000000040D422) ----------------------------------------------------
int goodG2B_41()
{
  return printIntLine(3u);
}

//----- (000000000040D44D) ----------------------------------------------------
int goodB2G_39()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40D44D: using guessed type char buf[16];

//----- (000000000040D599) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_01_good()
{
  goodG2B_41();
  return goodB2G_39();
}

//----- (000000000040D5B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 40D5B3: using guessed type char buf[16];

//----- (000000000040D703) ----------------------------------------------------
int goodB2G1_19()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 40D703: using guessed type char buf[16];

//----- (000000000040D886) ----------------------------------------------------
int goodB2G2_19()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 40D886: using guessed type char buf[16];

//----- (000000000040D9FD) ----------------------------------------------------
int goodG2B1_17()
{
  return printIntLine(4u);
}

//----- (000000000040DA49) ----------------------------------------------------
int goodG2B2_17()
{
  return printIntLine(4u);
}

//----- (000000000040DA89) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_06_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040DAB7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000040DAE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000040DB15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000040DB59) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000040DB83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000040DBAD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000040DBEC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_67_bad()
{
  return CWE190_Integer_Overflow__int_max_add_67b_badSink(0x7FFFFFFF);
}

//----- (000000000040DC14) ----------------------------------------------------
int goodG2B_42()
{
  return CWE190_Integer_Overflow__int_max_add_67b_goodG2BSink(2);
}

//----- (000000000040DC3C) ----------------------------------------------------
int goodB2G_40()
{
  return CWE190_Integer_Overflow__int_max_add_67b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000040DC64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_67_good()
{
  goodG2B_42();
  return goodB2G_40();
}

//----- (000000000040DC7E) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000040DC89) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (000000000040DC94) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v5 > 0 )
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000040DD26) ----------------------------------------------------
int goodB2G1_20()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsFalse_1();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000040DDD9) ----------------------------------------------------
int goodB2G2_20()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_1();
  if ( result && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000040DE80) ----------------------------------------------------
int goodG2B1_18()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000040DED8) ----------------------------------------------------
int goodG2B2_18()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000040DF24) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_08_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040DF52) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54e_badSink(a1);
}

//----- (000000000040DF69) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54e_goodG2BSink(a1);
}

//----- (000000000040DF80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54e_goodB2GSink(a1);
}

//----- (000000000040DF97) ----------------------------------------------------
int __fastcall badSink_5(int a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6711C8: using guessed type int badStatic_0;

//----- (000000000040DFC1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_0 = 1;
  return badSink_5(v8);
}
// 6711C8: using guessed type int badStatic_0;
// 40DFC1: using guessed type char buf[16];

//----- (000000000040E0F9) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(int a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6711CC: using guessed type int goodB2G1Static_0;

//----- (000000000040E144) ----------------------------------------------------
int goodB2G1_21()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(v8);
}
// 6711CC: using guessed type int goodB2G1Static_0;
// 40E144: using guessed type char buf[16];

//----- (000000000040E27C) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(int a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6711D0: using guessed type int goodB2G2Static_0;

//----- (000000000040E2BB) ----------------------------------------------------
int goodB2G2_21()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(v8);
}
// 6711D0: using guessed type int goodB2G2Static_0;
// 40E2BB: using guessed type char buf[16];

//----- (000000000040E3F3) ----------------------------------------------------
int __fastcall goodG2BSink_5(int a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6711D4: using guessed type int goodG2BStatic_0;

//----- (000000000040E41D) ----------------------------------------------------
int goodG2B_43()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_5(2);
}
// 6711D4: using guessed type int goodG2BStatic_0;

//----- (000000000040E449) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_21_good()
{
  goodB2G1_21();
  goodB2G2_21();
  return goodG2B_43();
}

//----- (000000000040E46D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40E46D: using guessed type char buf[16];

//----- (000000000040E5A4) ----------------------------------------------------
int goodB2G1_22()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40E5A4: using guessed type char buf[16];

//----- (000000000040E6F0) ----------------------------------------------------
int goodB2G2_22()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40E6F0: using guessed type char buf[16];

//----- (000000000040E83C) ----------------------------------------------------
int goodG2B1_19()
{
  return printIntLine(3u);
}

//----- (000000000040E867) ----------------------------------------------------
int goodG2B2_19()
{
  return printIntLine(3u);
}

//----- (000000000040E892) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_03_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040E8C0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_52c_badSink(a1);
}

//----- (000000000040E8D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_52c_goodG2BSink(a1);
}

//----- (000000000040E8EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_52c_goodB2GSink(a1);
}

//----- (000000000040E905) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_max_add_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6711D8: using guessed type int CWE190_Integer_Overflow__int_max_add_22_badGlobal;

//----- (000000000040E92F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_max_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6711DC: using guessed type int CWE190_Integer_Overflow__int_max_add_22_goodB2G1Global;

//----- (000000000040E97A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_max_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6711E0: using guessed type int CWE190_Integer_Overflow__int_max_add_22_goodB2G2Global;

//----- (000000000040E9B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_max_add_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6711E4: using guessed type int CWE190_Integer_Overflow__int_max_add_22_goodG2BGlobal;

//----- (000000000040E9E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040EA08) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040EA2D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000040EA67) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40EA67: using guessed type char buf[16];

//----- (000000000040EBA0) ----------------------------------------------------
int goodB2G_41()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 40EBA0: using guessed type char buf[16];

//----- (000000000040ECEE) ----------------------------------------------------
int goodG2B_44()
{
  return printIntLine(3u);
}

//----- (000000000040ED1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_18_good()
{
  goodB2G_41();
  return goodG2B_44();
}

//----- (000000000040ED35) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&v4);
}

//----- (000000000040ED9F) ----------------------------------------------------
int goodG2B_45()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_multiply_64b_goodG2BSink(&v1);
}

//----- (000000000040EDC3) ----------------------------------------------------
int goodB2G_42()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_64b_goodB2GSink(&v4);
}

//----- (000000000040EE2D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_64_good()
{
  goodG2B_45();
  return goodB2G_42();
}

//----- (000000000040EE47) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040EEA4) ----------------------------------------------------
int goodB2G1_23()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040EF23) ----------------------------------------------------
int goodB2G2_23()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040EF96) ----------------------------------------------------
int goodG2B1_20()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040EFE8) ----------------------------------------------------
int goodG2B2_20()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F02E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_13_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040F05C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_61b_badSource(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000040F092) ----------------------------------------------------
int goodG2B_46()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_61b_goodG2BSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000040F0C8) ----------------------------------------------------
int goodB2G_43()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_61b_goodB2GSource(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (000000000040F113) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_61_good()
{
  goodG2B_46();
  return goodB2G_43();
}

//----- (000000000040F12D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53d_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000040F14E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000040F16F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000040F1B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040F1DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040F201) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000040F23B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_multiply_67b_badSink(v5);
}

//----- (000000000040F2A9) ----------------------------------------------------
int goodG2B_47()
{
  return CWE190_Integer_Overflow__int_fgets_multiply_67b_goodG2BSink(2);
}

//----- (000000000040F2D1) ----------------------------------------------------
int goodB2G_44()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_multiply_67b_goodB2GSink(v5);
}

//----- (000000000040F33F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_67_good()
{
  goodG2B_47();
  return goodB2G_44();
}

//----- (000000000040F359) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671250: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_badGlobal;

//----- (000000000040F388) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671254: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Global;

//----- (000000000040F3D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671258: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Global;

//----- (000000000040F41C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67125C: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BGlobal;

//----- (000000000040F44B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000040F47E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000040F4B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (000000000040F50B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v9 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v9 = accept(fd, 0LL, 0LL);
        if ( v9 != -1 )
        {
          v7 = recv(v9, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v10 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v9 != -1 )
      close(v9);
  }
  else
  {
    v10 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = v10 + 1;
    result = printIntLine(v10 + 1);
  }
  else if ( v10 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v5 = v10 + 1;
    result = printIntLine(v10 + 1);
  }
  return result;
}
// 40F50B: using guessed type char buf[16];

//----- (000000000040F697) ----------------------------------------------------
int goodB2G_45()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+4Ch] [rbp-24h]
  int v8; // [rsp+50h] [rbp-20h]
  int v9; // [rsp+54h] [rbp-1Ch]
  int v10; // [rsp+58h] [rbp-18h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v13; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v14 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v14 = accept(fd, 0LL, 0LL);
        if ( v14 != -1 )
        {
          v11 = recv(v14, buf, 0xDuLL, 0);
          if ( v11 != -1 )
          {
            if ( v11 )
            {
              buf[v11] = 0;
              v15 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v14 != -1 )
      close(v14);
  }
  else
  {
    v13 = -1;
    v10 = socket(2, 1, 6);
    if ( v10 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v10, &addr, 0x10u) != -1 && listen(v10, 5) != -1 )
      {
        v13 = accept(v10, 0LL, 0LL);
        if ( v13 != -1 )
        {
          v9 = recv(v13, nptr, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              nptr[v9] = 0;
              v15 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v10 != -1 )
      close(v10);
    if ( v13 != -1 )
      close(v13);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v15 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v8 = v15 + 1;
      result = printIntLine(v15 + 1);
    }
  }
  else if ( v15 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v7 = v15 + 1;
    result = printIntLine(v15 + 1);
  }
  return result;
}
// 40F697: using guessed type char buf[16];
// 40F697: using guessed type char nptr[16];

//----- (000000000040F94A) ----------------------------------------------------
int goodG2B_48()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000040F9AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_12_good()
{
  goodB2G_45();
  return goodG2B_48();
}

//----- (000000000040F9C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_51b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000040F9EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000040FA0B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000040FA53) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_22_bad()
{
  CWE190_Integer_Overflow__int_max_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_max_add_22_badSink(0x7FFFFFFF);
}
// 6711D8: using guessed type int CWE190_Integer_Overflow__int_max_add_22_badGlobal;

//----- (000000000040FA7F) ----------------------------------------------------
int goodB2G1_24()
{
  CWE190_Integer_Overflow__int_max_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_max_add_22_goodB2G1Sink(0x7FFFFFFF);
}
// 6711DC: using guessed type int CWE190_Integer_Overflow__int_max_add_22_goodB2G1Global;

//----- (000000000040FAAB) ----------------------------------------------------
int goodB2G2_24()
{
  CWE190_Integer_Overflow__int_max_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_max_add_22_goodB2G2Sink(0x7FFFFFFF);
}
// 6711E0: using guessed type int CWE190_Integer_Overflow__int_max_add_22_goodB2G2Global;

//----- (000000000040FAD7) ----------------------------------------------------
int goodG2B_49()
{
  CWE190_Integer_Overflow__int_max_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_max_add_22_goodG2BSink(2);
}
// 6711E4: using guessed type int CWE190_Integer_Overflow__int_max_add_22_goodG2BGlobal;

//----- (000000000040FB03) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_22_good()
{
  goodB2G1_24();
  goodB2G2_24();
  return goodG2B_49();
}

//----- (000000000040FB27) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_16_bad()
{
  return printIntLine(1u);
}

//----- (000000000040FB55) ----------------------------------------------------
int goodB2G_46()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040FBAA) ----------------------------------------------------
int goodG2B_50()
{
  return printIntLine(4u);
}

//----- (000000000040FBD8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_16_good()
{
  goodB2G_46();
  return goodG2B_50();
}

//----- (000000000040FBF2) ----------------------------------------------------
int __fastcall badSink_6(int a1)
{
  int result; // eax

  result = badStatic_1;
  if ( badStatic_1 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711E8: using guessed type int badStatic_1;

//----- (000000000040FC21) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_1 = 1;
  return badSink_6(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6711E8: using guessed type int badStatic_1;

//----- (000000000040FC63) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(int a1)
{
  int result; // eax

  result = goodB2G1Static_1;
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711EC: using guessed type int goodB2G1Static_1;

//----- (000000000040FCB3) ----------------------------------------------------
int goodB2G1_25()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6711EC: using guessed type int goodB2G1Static_1;

//----- (000000000040FCF5) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(int a1)
{
  int result; // eax

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711F0: using guessed type int goodB2G2Static_1;

//----- (000000000040FD39) ----------------------------------------------------
int goodB2G2_25()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6711F0: using guessed type int goodB2G2Static_1;

//----- (000000000040FD7B) ----------------------------------------------------
int __fastcall goodG2BSink_6(int a1)
{
  int result; // eax

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711F4: using guessed type int goodG2BStatic_1;

//----- (000000000040FDAA) ----------------------------------------------------
int goodG2B_51()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_6(2);
}
// 6711F4: using guessed type int goodG2BStatic_1;

//----- (000000000040FDD6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_21_good()
{
  goodB2G1_25();
  goodB2G2_25();
  return goodG2B_51();
}

//----- (000000000040FDFA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_03_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FE41) ----------------------------------------------------
int goodB2G1_26()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FE9E) ----------------------------------------------------
int goodB2G2_26()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FEFB) ----------------------------------------------------
int goodG2B1_21()
{
  return printIntLine(4u);
}

//----- (000000000040FF2B) ----------------------------------------------------
int goodG2B2_21()
{
  return printIntLine(4u);
}

//----- (000000000040FF5B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_03_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040FF89) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711F8: using guessed type int badStatic_2;

//----- (000000000040FFB8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_21_bad()
{
  badStatic_2 = 1;
  return badSink_7(0x7FFFFFFF);
}
// 6711F8: using guessed type int badStatic_2;

//----- (000000000040FFE4) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(int a1)
{
  int result; // eax

  result = goodB2G1Static_2;
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 6711FC: using guessed type int goodB2G1Static_2;

//----- (0000000000410034) ----------------------------------------------------
int goodB2G1_27()
{
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(0x7FFFFFFF);
}
// 6711FC: using guessed type int goodB2G1Static_2;

//----- (0000000000410060) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(int a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671200: using guessed type int goodB2G2Static_2;

//----- (00000000004100A4) ----------------------------------------------------
int goodB2G2_27()
{
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(0x7FFFFFFF);
}
// 671200: using guessed type int goodB2G2Static_2;

//----- (00000000004100D0) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671204: using guessed type int goodG2BStatic_2;

//----- (00000000004100FF) ----------------------------------------------------
int goodG2B_52()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_7(2);
}
// 671204: using guessed type int goodG2BStatic_2;

//----- (000000000041012B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_21_good()
{
  goodB2G1_27();
  goodB2G2_27();
  return goodG2B_52();
}

//----- (000000000041014F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 41014F: using guessed type char buf[16];

//----- (00000000004102A1) ----------------------------------------------------
int goodB2G1_28()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 4102A1: using guessed type char buf[16];

//----- (0000000000410426) ----------------------------------------------------
int goodB2G2_28()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 410426: using guessed type char buf[16];

//----- (000000000041059F) ----------------------------------------------------
int goodG2B1_22()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004105ED) ----------------------------------------------------
int goodG2B2_22()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041062F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_13_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000041065D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54e_badSink(a1);
}

//----- (0000000000410674) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54e_goodG2BSink(a1);
}

//----- (000000000041068B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54e_goodB2GSink(a1);
}

//----- (00000000004106A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_18_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004106EB) ----------------------------------------------------
int goodB2G_47()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041074A) ----------------------------------------------------
int goodG2B_53()
{
  return printIntLine(4u);
}

//----- (000000000041077C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_18_good()
{
  goodB2G_47();
  return goodG2B_53();
}

//----- (0000000000410796) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_52b_badSink(v4);
}

//----- (00000000004107FE) ----------------------------------------------------
int goodG2B_54()
{
  return CWE190_Integer_Overflow__int_fgets_square_52b_goodG2BSink(2);
}

//----- (0000000000410820) ----------------------------------------------------
int goodB2G_48()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_52b_goodB2GSink(v4);
}

//----- (0000000000410888) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_52_good()
{
  goodG2B_54();
  return goodB2G_48();
}

//----- (00000000004108A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_square_64b_badSink(&v5);
}
// 4108A2: using guessed type char buf[16];

//----- (00000000004109D2) ----------------------------------------------------
int goodG2B_55()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_square_64b_goodG2BSink(&v1);
}

//----- (00000000004109F6) ----------------------------------------------------
int goodB2G_49()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_square_64b_goodB2GSink(&v5);
}
// 4109F6: using guessed type char buf[16];

//----- (0000000000410B26) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_64_good()
{
  goodG2B_55();
  return goodB2G_49();
}

//----- (0000000000410B40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_51b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000410B61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000410B82) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000410BCA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (0000000000410C24) ----------------------------------------------------
int goodB2G1_29()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (0000000000410CB4) ----------------------------------------------------
int goodB2G2_29()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (0000000000410D38) ----------------------------------------------------
int goodG2B1_23()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000410D86) ----------------------------------------------------
int goodG2B2_23()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000410DC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_14_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (0000000000410DF6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 410DF6: using guessed type char buf[16];

//----- (0000000000410F4D) ----------------------------------------------------
int goodB2G1_30()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 410F4D: using guessed type char buf[16];

//----- (00000000004110C5) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 4110C5: using guessed type char buf[16];

//----- (0000000000411231) ----------------------------------------------------
int goodG2B1_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000411284) ----------------------------------------------------
int goodG2B2_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004112CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_11_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (00000000004112F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 4112F9: using guessed type char buf[16];

//----- (0000000000411430) ----------------------------------------------------
int goodB2G1_31()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 411430: using guessed type char buf[16];

//----- (000000000041157C) ----------------------------------------------------
int goodB2G2_31()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 41157C: using guessed type char buf[16];

//----- (00000000004116C8) ----------------------------------------------------
int goodG2B1_25()
{
  return printIntLine(3u);
}

//----- (00000000004116F3) ----------------------------------------------------
int goodG2B2_25()
{
  return printIntLine(3u);
}

//----- (000000000041171E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_02_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (000000000041174C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v4 = v1;
  return printIntLine(*v3 * *v3);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004117B9) ----------------------------------------------------
int goodG2B_56()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printIntLine(4u);
}

//----- (0000000000411810) ----------------------------------------------------
int goodB2G_50()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v6 = v1;
  v4 = *v5;
  if ( v4 == 0x80000000 || v4 < -46339 || v4 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v3 = v4 * v4;
  return printIntLine(v4 * v4);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004118A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_32_good()
{
  goodG2B_56();
  return goodB2G_50();
}

//----- (00000000004118BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_16_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000411932) ----------------------------------------------------
int goodB2G_51()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (00000000004119CD) ----------------------------------------------------
int goodG2B_57()
{
  return printIntLine(4u);
}

//----- (00000000004119FB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_16_good()
{
  goodB2G_51();
  return goodG2B_57();
}

//----- (0000000000411A15) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_51_bad()
{
  return CWE190_Integer_Overflow__int_max_square_51b_badSink(0x7FFFFFFF);
}

//----- (0000000000411A37) ----------------------------------------------------
int goodG2B_58()
{
  return CWE190_Integer_Overflow__int_max_square_51b_goodG2BSink(2);
}

//----- (0000000000411A59) ----------------------------------------------------
int goodB2G_52()
{
  return CWE190_Integer_Overflow__int_max_square_51b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000411A7B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_51_good()
{
  goodG2B_58();
  return goodB2G_52();
}

//----- (0000000000411A95) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411AD6) ----------------------------------------------------
int goodB2G1_32()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411B38) ----------------------------------------------------
int goodB2G2_32()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411B8E) ----------------------------------------------------
int goodG2B1_26()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411BDB) ----------------------------------------------------
int goodG2B2_26()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411C1C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_13_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (0000000000411C4A) ----------------------------------------------------
void CWE190_Integer_Overflow__int_listen_socket_multiply_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 > 0 )
    {
      v4 = 2 * v8;
      printIntLine(2 * v8);
    }
  }
}
// 411C4A: using guessed type char buf[16];

//----- (0000000000411DB3) ----------------------------------------------------
void goodB2G_53()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 > 0 )
    {
      if ( v8 > 1073741822 )
      {
        printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v4 = 2 * v8;
        printIntLine(2 * v8);
      }
    }
  }
}
// 411DB3: using guessed type char buf[16];

//----- (0000000000411F31) ----------------------------------------------------
int goodG2B_59()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000411F87) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_17_good()
{
  goodB2G_53();
  return goodG2B_59();
}

//----- (0000000000411FA1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_17_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412008) ----------------------------------------------------
int goodB2G_54()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412085) ----------------------------------------------------
int goodG2B_60()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004120D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_17_good()
{
  goodB2G_54();
  return goodG2B_60();
}

//----- (00000000004120F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_12_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v3 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  else
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041218D) ----------------------------------------------------
int goodB2G_55()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v3 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  else
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412256) ----------------------------------------------------
int goodG2B_61()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (00000000004122C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_12_good()
{
  goodB2G_55();
  return goodG2B_61();
}

//----- (00000000004122DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_67b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000412306) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000041232D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000041237B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 41237B: using guessed type char buf[16];

//----- (00000000004124CA) ----------------------------------------------------
int goodB2G1_33()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;
// 4124CA: using guessed type char buf[16];

//----- (000000000041263A) ----------------------------------------------------
int goodB2G2_33()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 41263A: using guessed type char buf[16];

//----- (000000000041279E) ----------------------------------------------------
int goodG2B1_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (00000000004127E9) ----------------------------------------------------
int goodG2B2_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000412828) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_10_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (0000000000412856) ----------------------------------------------------
int __fastcall badSink_8(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041287B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_8;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 41287B: using guessed type char buf[16];

//----- (00000000004129B2) ----------------------------------------------------
int __fastcall goodG2BSink_8(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004129D7) ----------------------------------------------------
int goodG2B_62()
{
  return goodG2BSink_8(2);
}

//----- (0000000000412A02) ----------------------------------------------------
int __fastcall goodB2GSink_4(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000412A3C) ----------------------------------------------------
__int64 goodB2G_56()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_4;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 412A3C: using guessed type char buf[16];

//----- (0000000000412B73) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_44_good()
{
  goodG2B_62();
  return goodB2G_56();
}

//----- (0000000000412B8D) ----------------------------------------------------
int __fastcall badSink_9(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000412BAD) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_add_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_9;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412BEE) ----------------------------------------------------
int __fastcall goodG2BSink_9(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000412C0E) ----------------------------------------------------
int goodG2B_63()
{
  return goodG2BSink_9(2);
}

//----- (0000000000412C39) ----------------------------------------------------
int __fastcall goodB2GSink_5(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000412C6E) ----------------------------------------------------
__int64 goodB2G_57()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_5;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412CAF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_add_44_good()
{
  goodG2B_63();
  return goodB2G_57();
}

//----- (0000000000412CC9) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_square_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_square_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412D0A) ----------------------------------------------------
int goodG2B_64()
{
  return CWE190_Integer_Overflow__int_fscanf_square_65b_goodG2BSink(2);
}

//----- (0000000000412D35) ----------------------------------------------------
__int64 goodB2G_58()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_square_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412D76) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_square_65_good()
{
  goodG2B_64();
  return goodB2G_58();
}

//----- (0000000000412D90) ----------------------------------------------------
int badSink_10()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_square_45_badData * CWE190_Integer_Overflow__int_max_square_45_badData);
}
// 671208: using guessed type int CWE190_Integer_Overflow__int_max_square_45_badData;

//----- (0000000000412DB7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_45_bad()
{
  CWE190_Integer_Overflow__int_max_square_45_badData = 0x7FFFFFFF;
  return badSink_10();
}
// 671208: using guessed type int CWE190_Integer_Overflow__int_max_square_45_badData;

//----- (0000000000412DE2) ----------------------------------------------------
int goodG2BSink_10()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_max_square_45_goodG2BData
         * CWE190_Integer_Overflow__int_max_square_45_goodG2BData);
}
// 67120C: using guessed type int CWE190_Integer_Overflow__int_max_square_45_goodG2BData;

//----- (0000000000412E09) ----------------------------------------------------
int goodG2B_65()
{
  CWE190_Integer_Overflow__int_max_square_45_goodG2BData = 2;
  return goodG2BSink_10();
}
// 67120C: using guessed type int CWE190_Integer_Overflow__int_max_square_45_goodG2BData;

//----- (0000000000412E34) ----------------------------------------------------
int goodB2GSink_6()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_square_45_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_max_square_45_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_max_square_45_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_max_square_45_goodB2GData
             * CWE190_Integer_Overflow__int_max_square_45_goodB2GData);
  }
  return result;
}
// 671210: using guessed type int CWE190_Integer_Overflow__int_max_square_45_goodB2GData;

//----- (0000000000412E82) ----------------------------------------------------
int goodB2G_59()
{
  CWE190_Integer_Overflow__int_max_square_45_goodB2GData = 0x7FFFFFFF;
  return goodB2GSink_6();
}
// 671210: using guessed type int CWE190_Integer_Overflow__int_max_square_45_goodB2GData;

//----- (0000000000412EAD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_45_good()
{
  goodG2B_65();
  return goodB2G_59();
}

//----- (0000000000412EC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_44ED18, &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412F1D) ----------------------------------------------------
int goodB2G1_34()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_44ED18, &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412FA9) ----------------------------------------------------
int goodB2G2_34()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_44ED18, &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413029) ----------------------------------------------------
int goodG2B1_28()
{
  return printIntLine(4u);
}

//----- (0000000000413073) ----------------------------------------------------
int goodG2B2_28()
{
  return printIntLine(4u);
}

//----- (00000000004130B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_04_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (00000000004130DF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_51b_badSink(v4);
}

//----- (0000000000413147) ----------------------------------------------------
int goodG2B_66()
{
  return CWE190_Integer_Overflow__int_fgets_square_51b_goodG2BSink(2);
}

//----- (0000000000413169) ----------------------------------------------------
int goodB2G_60()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_51b_goodB2GSink(v4);
}

//----- (00000000004131D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_51_good()
{
  goodG2B_66();
  return goodB2G_60();
}

//----- (00000000004131EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_06_bad()
{
  return printIntLine(1u);
}

//----- (000000000041322B) ----------------------------------------------------
int goodB2G1_35()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041329E) ----------------------------------------------------
int goodB2G2_35()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413305) ----------------------------------------------------
int goodG2B1_29()
{
  return printIntLine(4u);
}

//----- (0000000000413351) ----------------------------------------------------
int goodG2B2_29()
{
  return printIntLine(4u);
}

//----- (0000000000413391) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_06_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (00000000004133BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (00000000004133EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000041341D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (0000000000413461) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000413481) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004134A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004134D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1;
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413524) ----------------------------------------------------
int goodG2B_67()
{
  return printIntLine(4u);
}

//----- (000000000041355C) ----------------------------------------------------
int goodB2G_61()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1;
  if ( v1 == 0x80000000 || v3 < -46339 || v3 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printIntLine(v3 * v3);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004135D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_31_good()
{
  goodG2B_67();
  return goodB2G_61();
}

//----- (00000000004135EB) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4135EB: using guessed type char buf[16];

//----- (000000000041370E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000413721) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 413721: using guessed type char buf[16];

//----- (0000000000413844) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_square_66b_badSink((__int64)&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413884) ----------------------------------------------------
int goodG2B_68()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fscanf_square_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004138AE) ----------------------------------------------------
int goodB2G_62()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_square_66b_goodB2GSink((__int64)&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004138EE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_66_good()
{
  goodG2B_68();
  return goodB2G_62();
}

//----- (0000000000413908) ----------------------------------------------------
int __fastcall badSink_11(int a1)
{
  int result; // eax

  result = badStatic_3;
  if ( badStatic_3 )
    result = printIntLine(a1 + 1);
  return result;
}
// 671214: using guessed type int badStatic_3;

//----- (0000000000413932) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_21_bad()
{
  badStatic_3 = 1;
  return badSink_11(0x7FFFFFFF);
}
// 671214: using guessed type int badStatic_3;

//----- (000000000041395E) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(int a1)
{
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 671218: using guessed type int goodB2G1Static_3;

//----- (00000000004139A9) ----------------------------------------------------
int goodB2G1_36()
{
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(0x7FFFFFFF);
}
// 671218: using guessed type int goodB2G1Static_3;

//----- (00000000004139D5) ----------------------------------------------------
int __fastcall goodB2G2Sink_3(int a1)
{
  int result; // eax

  result = goodB2G2Static_3;
  if ( goodB2G2Static_3 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 67121C: using guessed type int goodB2G2Static_3;

//----- (0000000000413A14) ----------------------------------------------------
int goodB2G2_36()
{
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(0x7FFFFFFF);
}
// 67121C: using guessed type int goodB2G2Static_3;

//----- (0000000000413A40) ----------------------------------------------------
int __fastcall goodG2BSink_11(int a1)
{
  int result; // eax

  result = goodG2BStatic_3;
  if ( goodG2BStatic_3 )
    result = printIntLine(a1 + 1);
  return result;
}
// 671220: using guessed type int goodG2BStatic_3;

//----- (0000000000413A6A) ----------------------------------------------------
int goodG2B_69()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_11(2);
}
// 671220: using guessed type int goodG2BStatic_3;

//----- (0000000000413A96) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_21_good()
{
  goodB2G1_36();
  goodB2G2_36();
  return goodG2B_69();
}

//----- (0000000000413ABA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_03_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000413AE5) ----------------------------------------------------
int goodB2G1_37()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413B25) ----------------------------------------------------
int goodB2G2_37()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413B65) ----------------------------------------------------
int goodG2B1_30()
{
  return printIntLine(3u);
}

//----- (0000000000413B90) ----------------------------------------------------
int goodG2B2_30()
{
  return printIntLine(3u);
}

//----- (0000000000413BBB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_03_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (0000000000413BE9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_64b_badSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413C23) ----------------------------------------------------
int goodG2B_70()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_add_64b_goodG2BSink(&v1);
}

//----- (0000000000413C47) ----------------------------------------------------
int goodB2G_63()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_64b_goodB2GSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413C81) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_64_good()
{
  goodG2B_70();
  return goodB2G_63();
}

//----- (0000000000413C9B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413CFE) ----------------------------------------------------
int goodB2G1_38()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413D83) ----------------------------------------------------
int goodB2G2_38()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413DFC) ----------------------------------------------------
int goodG2B1_31()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000413E54) ----------------------------------------------------
int goodG2B2_31()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000413EA0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_11_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (0000000000413ECE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_02_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413F15) ----------------------------------------------------
int goodB2G1_39()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413F72) ----------------------------------------------------
int goodB2G2_39()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413FCF) ----------------------------------------------------
int goodG2B1_32()
{
  return printIntLine(4u);
}

//----- (0000000000413FFF) ----------------------------------------------------
int goodG2B2_32()
{
  return printIntLine(4u);
}

//----- (000000000041402F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_02_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (000000000041405D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_53c_badSink(a1);
}

//----- (0000000000414074) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_53c_goodG2BSink(a1);
}

//----- (000000000041408B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_53c_goodB2GSink(a1);
}

//----- (00000000004140A2) ----------------------------------------------------
int badSink_12()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_square_45_badData * CWE190_Integer_Overflow__int_fgets_square_45_badData);
}
// 671224: using guessed type int CWE190_Integer_Overflow__int_fgets_square_45_badData;

//----- (00000000004140C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_45_badData = v4;
  return badSink_12();
}
// 671224: using guessed type int CWE190_Integer_Overflow__int_fgets_square_45_badData;

//----- (000000000041413A) ----------------------------------------------------
int goodG2BSink_12()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_fgets_square_45_goodG2BData
         * CWE190_Integer_Overflow__int_fgets_square_45_goodG2BData);
}
// 671228: using guessed type int CWE190_Integer_Overflow__int_fgets_square_45_goodG2BData;

//----- (0000000000414161) ----------------------------------------------------
int goodG2B_71()
{
  CWE190_Integer_Overflow__int_fgets_square_45_goodG2BData = 2;
  return goodG2BSink_12();
}
// 671228: using guessed type int CWE190_Integer_Overflow__int_fgets_square_45_goodG2BData;

//----- (000000000041418C) ----------------------------------------------------
int goodB2GSink_7()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData
             * CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData);
  }
  return result;
}
// 67122C: using guessed type int CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData;

//----- (00000000004141DA) ----------------------------------------------------
int goodB2G_64()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData = v4;
  return goodB2GSink_7();
}
// 67122C: using guessed type int CWE190_Integer_Overflow__int_fgets_square_45_goodB2GData;

//----- (000000000041424B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_45_good()
{
  goodG2B_71();
  return goodB2G_64();
}

//----- (0000000000414265) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54d_badSink(a1);
}

//----- (000000000041427C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54d_goodG2BSink(a1);
}

//----- (0000000000414293) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54d_goodB2GSink(a1);
}

//----- (00000000004142AA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_67b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004142E8) ----------------------------------------------------
int goodG2B_72()
{
  return CWE190_Integer_Overflow__int_fscanf_square_67b_goodG2BSink(2);
}

//----- (0000000000414310) ----------------------------------------------------
int goodB2G_65()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_67b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041434E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_67_good()
{
  goodG2B_72();
  return goodB2G_65();
}

//----- (0000000000414368) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_18_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000414395) ----------------------------------------------------
int goodB2G_66()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004143D7) ----------------------------------------------------
int goodG2B_73()
{
  return printIntLine(3u);
}

//----- (0000000000414404) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_18_good()
{
  goodB2G_66();
  return goodG2B_73();
}

//----- (000000000041441E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_06_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (00000000004144A4) ----------------------------------------------------
int goodB2G1_40()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000041455D) ----------------------------------------------------
int goodB2G2_40()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000041460A) ----------------------------------------------------
int goodG2B1_33()
{
  return printIntLine(4u);
}

//----- (0000000000414656) ----------------------------------------------------
int goodG2B2_33()
{
  return printIntLine(4u);
}

//----- (0000000000414696) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_06_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (00000000004146C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_square_22_badGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 671230: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_badGlobal;

//----- (00000000004146EF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 671234: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Global;

//----- (000000000041474D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 671238: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Global;

//----- (000000000041479F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 67123C: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BGlobal;

//----- (00000000004147CA) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (00000000004147D5) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (00000000004147E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_2();
  if ( result )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 4147E0: using guessed type char buf[16];

//----- (0000000000414937) ----------------------------------------------------
int goodB2G1_41()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 414937: using guessed type char buf[16];

//----- (0000000000414AAF) ----------------------------------------------------
int goodB2G2_41()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_2();
  if ( result )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 414AAF: using guessed type char buf[16];

//----- (0000000000414C1B) ----------------------------------------------------
int goodG2B1_34()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000414C6E) ----------------------------------------------------
int goodG2B2_34()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000414CB5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_08_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (0000000000414CE3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_63b_badSink(&v1);
}

//----- (0000000000414D07) ----------------------------------------------------
int goodG2B_74()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_multiply_63b_goodG2BSink(&v1);
}

//----- (0000000000414D2B) ----------------------------------------------------
int goodB2G_67()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_63b_goodB2GSink(&v1);
}

//----- (0000000000414D4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_63_good()
{
  goodG2B_74();
  return goodB2G_67();
}

//----- (0000000000414D69) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000414D9C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000414DCF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (0000000000414E29) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_52b_badSink(v8);
}
// 414E29: using guessed type char buf[16];

//----- (0000000000414F57) ----------------------------------------------------
int goodG2B_75()
{
  return CWE190_Integer_Overflow__int_listen_socket_add_52b_goodG2BSink(2);
}

//----- (0000000000414F79) ----------------------------------------------------
int goodB2G_68()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_52b_goodB2GSink(v8);
}
// 414F79: using guessed type char buf[16];

//----- (00000000004150A7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_52_good()
{
  goodG2B_75();
  return goodB2G_68();
}

//----- (00000000004150C1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_61b_badSource(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (00000000004150F7) ----------------------------------------------------
int goodG2B_76()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_61b_goodG2BSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000041512D) ----------------------------------------------------
int goodB2G_69()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_61b_goodB2GSource(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (0000000000415178) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_61_good()
{
  goodG2B_76();
  return goodB2G_69();
}

//----- (0000000000415192) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_add_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004151C3) ----------------------------------------------------
int goodG2B_77()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_add_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (00000000004151F4) ----------------------------------------------------
int goodB2G_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fscanf_add_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041523A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_61_good()
{
  goodG2B_77();
  return goodB2G_70();
}

//----- (0000000000415254) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54d_badSink(a1);
}

//----- (000000000041526B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54d_goodG2BSink(a1);
}

//----- (0000000000415282) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54d_goodB2GSink(a1);
}

//----- (0000000000415299) ----------------------------------------------------
void CWE190_Integer_Overflow__int_listen_socket_square_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = v8 * v8;
    printIntLine(v8 * v8);
  }
}
// 415299: using guessed type char buf[16];

//----- (00000000004153FE) ----------------------------------------------------
void goodB2G_71()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v8 * v8;
      printIntLine(v8 * v8);
    }
  }
}
// 4153FE: using guessed type char buf[16];

//----- (000000000041558A) ----------------------------------------------------
int goodG2B_78()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004155DC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_17_good()
{
  goodB2G_71();
  return goodG2B_78();
}

//----- (00000000004155F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_01_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041563D) ----------------------------------------------------
int goodG2B_79()
{
  return printIntLine(4u);
}

//----- (000000000041566D) ----------------------------------------------------
int goodB2G_72()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004156CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_01_good()
{
  goodG2B_79();
  return goodB2G_72();
}

//----- (00000000004156E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink(&v5);
}
// 4156E4: using guessed type char buf[16];

//----- (0000000000415814) ----------------------------------------------------
int goodG2B_80()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_add_63b_goodG2BSink(&v1);
}

//----- (0000000000415838) ----------------------------------------------------
int goodB2G_73()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_add_63b_goodB2GSink(&v5);
}
// 415838: using guessed type char buf[16];

//----- (0000000000415968) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_63_good()
{
  goodG2B_80();
  return goodB2G_73();
}

//----- (0000000000415982) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_2 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 && v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 67112C: using guessed type int staticFive_2;
// 415982: using guessed type char buf[16];

//----- (0000000000415AD8) ----------------------------------------------------
int goodB2G1_42()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_2 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_2;
  if ( staticFive_2 != 5 )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67112C: using guessed type int staticFive_2;
// 415AD8: using guessed type char buf[16];

//----- (0000000000415C4F) ----------------------------------------------------
int goodB2G2_42()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_2 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67112C: using guessed type int staticFive_2;
// 415C4F: using guessed type char buf[16];

//----- (0000000000415DBA) ----------------------------------------------------
int goodG2B1_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 67112C: using guessed type int staticFive_2;

//----- (0000000000415E0C) ----------------------------------------------------
int goodG2B2_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  result = staticFive_2;
  if ( staticFive_2 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 67112C: using guessed type int staticFive_2;

//----- (0000000000415E52) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_07_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (0000000000415E80) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671130: using guessed type int staticFive_3;

//----- (0000000000415ED7) ----------------------------------------------------
int goodB2G1_43()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671130: using guessed type int staticFive_3;

//----- (0000000000415F50) ----------------------------------------------------
int goodB2G2_43()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671130: using guessed type int staticFive_3;

//----- (0000000000415FBD) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671130: using guessed type int staticFive_3;

//----- (000000000041600A) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671130: using guessed type int staticFive_3;

//----- (000000000041604B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_07_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (0000000000416079) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004160BA) ----------------------------------------------------
int goodB2G1_44()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416111) ----------------------------------------------------
int goodB2G2_44()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416168) ----------------------------------------------------
int goodG2B1_37()
{
  return printIntLine(3u);
}

//----- (0000000000416193) ----------------------------------------------------
int goodG2B2_37()
{
  return printIntLine(3u);
}

//----- (00000000004161BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_02_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (00000000004161EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_63b_badSink(&v4);
}

//----- (0000000000416256) ----------------------------------------------------
int goodG2B_81()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000041627A) ----------------------------------------------------
int goodB2G_74()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_63b_goodB2GSink(&v4);
}

//----- (00000000004162E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_63_good()
{
  goodG2B_81();
  return goodB2G_74();
}

//----- (00000000004162FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54c_badSink(a1);
}

//----- (0000000000416315) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54c_goodG2BSink(a1);
}

//----- (000000000041632C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54c_goodB2GSink(a1);
}

//----- (0000000000416343) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_square_22_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671230: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_badGlobal;

//----- (0000000000416385) ----------------------------------------------------
int goodB2G1_45()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671234: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G1Global;

//----- (00000000004163C7) ----------------------------------------------------
int goodB2G2_45()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671238: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_goodB2G2Global;

//----- (0000000000416409) ----------------------------------------------------
int goodG2B_82()
{
  CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BSink(2);
}
// 67123C: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_22_goodG2BGlobal;

//----- (0000000000416435) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_22_good()
{
  goodB2G1_45();
  goodB2G2_45();
  return goodG2B_82();
}

//----- (0000000000416459) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54c_badSink(a1);
}

//----- (0000000000416470) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54c_goodG2BSink(a1);
}

//----- (0000000000416487) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_54c_goodB2GSink(a1);
}

//----- (000000000041649E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_68b_badSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_listen_socket_square_68_badData
         * CWE190_Integer_Overflow__int_listen_socket_square_68_badData);
}
// 6713A8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_68_badData;

//----- (00000000004164C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_68b_goodG2BSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_listen_socket_square_68_goodG2BData
         * CWE190_Integer_Overflow__int_listen_socket_square_68_goodG2BData);
}
// 6713AC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_68_goodG2BData;

//----- (00000000004164EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData
             * CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData);
  }
  return result;
}
// 6713B0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_68_goodB2GData;

//----- (000000000041653A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000416569) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000416598) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (00000000004165DC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_64b_badSink(&v1);
}

//----- (0000000000416600) ----------------------------------------------------
int goodG2B_83()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_square_64b_goodG2BSink(&v1);
}

//----- (0000000000416624) ----------------------------------------------------
int goodB2G_75()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_64b_goodB2GSink(&v1);
}

//----- (0000000000416648) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_64_good()
{
  goodG2B_83();
  return goodB2G_75();
}

//----- (0000000000416662) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004166A9) ----------------------------------------------------
int goodB2G1_46()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (0000000000416711) ----------------------------------------------------
int goodB2G2_46()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (000000000041676D) ----------------------------------------------------
int goodG2B1_38()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004167C0) ----------------------------------------------------
int goodG2B2_38()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000416807) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_11_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (0000000000416835) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_02_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000416860) ----------------------------------------------------
int goodB2G1_47()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004168A0) ----------------------------------------------------
int goodB2G2_47()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004168E0) ----------------------------------------------------
int goodG2B1_39()
{
  return printIntLine(3u);
}

//----- (000000000041690B) ----------------------------------------------------
int goodG2B2_39()
{
  return printIntLine(3u);
}

//----- (0000000000416936) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_02_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (0000000000416964) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000041698F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (00000000004169BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (0000000000416A0C) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (0000000000416A17) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (0000000000416A22) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_3();
  if ( result )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416A85) ----------------------------------------------------
int goodB2G1_48()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416B0A) ----------------------------------------------------
int goodB2G2_48()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_3();
  if ( result )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416B83) ----------------------------------------------------
int goodG2B1_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000416BDB) ----------------------------------------------------
int goodG2B2_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000416C27) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_08_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (0000000000416C55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54e_badSink(a1);
}

//----- (0000000000416C6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54e_goodG2BSink(a1);
}

//----- (0000000000416C83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54e_goodB2GSink(a1);
}

//----- (0000000000416C9A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000416CF0) ----------------------------------------------------
int goodB2G_76()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (0000000000416D5B) ----------------------------------------------------
int goodG2B_84()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000416DB1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_17_good()
{
  goodB2G_76();
  return goodG2B_84();
}

//----- (0000000000416DCB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000416E0A) ----------------------------------------------------
int goodB2G1_49()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000416E6A) ----------------------------------------------------
int goodB2G2_49()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000416EBE) ----------------------------------------------------
int goodG2B1_41()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000416F09) ----------------------------------------------------
int goodG2B2_41()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000416F48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_10_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000416F76) ----------------------------------------------------
int __fastcall badSink_13(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000416F9B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_44_bad()
{
  return badSink_13(0x7FFFFFFF);
}

//----- (0000000000416FC6) ----------------------------------------------------
int __fastcall goodG2BSink_13(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000416FEB) ----------------------------------------------------
int goodG2B_85()
{
  return goodG2BSink_13(2);
}

//----- (0000000000417016) ----------------------------------------------------
int __fastcall goodB2GSink_8(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000417050) ----------------------------------------------------
int goodB2G_77()
{
  return goodB2GSink_8(0x7FFFFFFF);
}

//----- (000000000041707B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_44_good()
{
  goodG2B_85();
  return goodB2G_77();
}

//----- (0000000000417095) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_64b_badSink(&v4);
}

//----- (00000000004170FF) ----------------------------------------------------
int goodG2B_86()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_square_64b_goodG2BSink(&v1);
}

//----- (0000000000417123) ----------------------------------------------------
int goodB2G_78()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_64b_goodB2GSink(&v4);
}

//----- (000000000041718D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_64_good()
{
  goodG2B_86();
  return goodB2G_78();
}

//----- (00000000004171A7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000417201) ----------------------------------------------------
int goodB2G1_50()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000417291) ----------------------------------------------------
int goodB2G2_50()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000417315) ----------------------------------------------------
int goodG2B1_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000417363) ----------------------------------------------------
int goodG2B2_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004173A5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_13_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (00000000004173D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_54b_badSink(v8);
}
// 4173D3: using guessed type char buf[16];

//----- (0000000000417501) ----------------------------------------------------
int goodG2B_87()
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54b_goodG2BSink(2);
}

//----- (0000000000417523) ----------------------------------------------------
int goodB2G_79()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_54b_goodB2GSink(v8);
}
// 417523: using guessed type char buf[16];

//----- (0000000000417651) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_54_good()
{
  goodG2B_87();
  return goodB2G_79();
}

//----- (000000000041766B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54d_badSink(a1);
}

//----- (0000000000417682) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54d_goodG2BSink(a1);
}

//----- (0000000000417699) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54d_goodB2GSink(a1);
}

//----- (00000000004176B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_01_bad()
{
  return printIntLine(0x80000000);
}

//----- (00000000004176DB) ----------------------------------------------------
int goodG2B_88()
{
  return printIntLine(3u);
}

//----- (0000000000417706) ----------------------------------------------------
int goodB2G_80()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000417746) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_01_good()
{
  goodG2B_88();
  return goodB2G_80();
}

//----- (0000000000417760) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000417780) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004177A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004177D5) ----------------------------------------------------
void CWE190_Integer_Overflow__int_fgets_multiply_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 > 0 )
    {
      v3 = 2 * v4;
      printIntLine(2 * v4);
    }
  }
}

//----- (0000000000417871) ----------------------------------------------------
void goodB2G_81()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 > 0 )
    {
      if ( v4 > 1073741822 )
      {
        printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v3 = 2 * v4;
        printIntLine(2 * v4);
      }
    }
  }
}

//----- (0000000000417922) ----------------------------------------------------
int goodG2B_89()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000417978) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_17_good()
{
  goodB2G_81();
  return goodG2B_89();
}

//----- (0000000000417992) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 417992: using guessed type char buf[16];

//----- (0000000000417AE3) ----------------------------------------------------
int goodB2G1_51()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 417AE3: using guessed type char buf[16];

//----- (0000000000417C55) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 417C55: using guessed type char buf[16];

//----- (0000000000417DBB) ----------------------------------------------------
int goodG2B1_43()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000417E08) ----------------------------------------------------
int goodG2B2_43()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000417E49) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_13_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (0000000000417E77) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_square_67b_badSink(v9);
}
// 417E77: using guessed type char buf[16];

//----- (0000000000417FAB) ----------------------------------------------------
int goodG2B_90()
{
  return CWE190_Integer_Overflow__int_listen_socket_square_67b_goodG2BSink(2);
}

//----- (0000000000417FD3) ----------------------------------------------------
int goodB2G_82()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_square_67b_goodB2GSink(v9);
}
// 417FD3: using guessed type char buf[16];

//----- (0000000000418107) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_67_good()
{
  goodG2B_90();
  return goodB2G_82();
}

//----- (0000000000418121) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418167) ----------------------------------------------------
int goodB2G1_52()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004181CE) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418229) ----------------------------------------------------
int goodG2B1_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041827B) ----------------------------------------------------
int goodG2B2_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004182C1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_13_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (00000000004182EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_17_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041835C) ----------------------------------------------------
int goodB2G_83()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004183DF) ----------------------------------------------------
int goodG2B_91()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000418435) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_17_good()
{
  goodB2G_83();
  return goodG2B_91();
}

//----- (000000000041844F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_square_22_badGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 671240: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_badGlobal;

//----- (000000000041847A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 671244: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Global;

//----- (00000000004184D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 671248: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Global;

//----- (000000000041852A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 67124C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BGlobal;

//----- (0000000000418555) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;

//----- (00000000004185AA) ----------------------------------------------------
int goodB2G1_53()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000418621) ----------------------------------------------------
int goodB2G2_53()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;

//----- (000000000041868C) ----------------------------------------------------
int goodG2B1_45()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (00000000004186D7) ----------------------------------------------------
int goodG2B2_45()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000418716) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_10_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (0000000000418744) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54e_badSink(a1);
}

//----- (000000000041875B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54e_goodG2BSink(a1);
}

//----- (0000000000418772) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54e_goodB2GSink(a1);
}

//----- (0000000000418789) ----------------------------------------------------
int __fastcall badSink_14(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004187AE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_14;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004187EF) ----------------------------------------------------
int __fastcall goodG2BSink_14(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000418814) ----------------------------------------------------
int goodG2B_92()
{
  return goodG2BSink_14(2);
}

//----- (000000000041883F) ----------------------------------------------------
int __fastcall goodB2GSink_9(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000418879) ----------------------------------------------------
__int64 goodB2G_84()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_9;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004188BA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_44_good()
{
  goodG2B_92();
  return goodB2G_84();
}

//----- (00000000004188D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_add_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (0000000000418905) ----------------------------------------------------
int goodG2B_93()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_add_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000418936) ----------------------------------------------------
int goodB2G_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_listen_socket_add_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041897C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_61_good()
{
  goodG2B_93();
  return goodB2G_85();
}

//----- (0000000000418996) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_67b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004189BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004189E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000418A32) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54d_badSink(a1);
}

//----- (0000000000418A49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54d_goodG2BSink(a1);
}

//----- (0000000000418A60) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54d_goodB2GSink(a1);
}

//----- (0000000000418A77) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_01_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 418A77: using guessed type char buf[16];

//----- (0000000000418BB3) ----------------------------------------------------
int goodG2B_94()
{
  return printIntLine(4u);
}

//----- (0000000000418BE3) ----------------------------------------------------
int goodB2G_86()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 418BE3: using guessed type char buf[16];

//----- (0000000000418D34) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_01_good()
{
  goodG2B_94();
  return goodB2G_86();
}

//----- (0000000000418D4E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418DDA) ----------------------------------------------------
int goodB2G1_54()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418E87) ----------------------------------------------------
int goodB2G2_54()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418F28) ----------------------------------------------------
int goodG2B1_46()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418F7A) ----------------------------------------------------
int goodG2B2_46()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000418FC0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_13_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (0000000000418FEE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041902F) ----------------------------------------------------
int goodG2B_95()
{
  return printIntLine(3u);
}

//----- (000000000041905A) ----------------------------------------------------
int goodB2G_87()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004190B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_01_good()
{
  goodG2B_95();
  return goodB2G_87();
}

//----- (00000000004190CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004190EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041910B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000419140) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041916D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000419180) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004191AD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_4 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 671134: using guessed type int staticFive_4;
// 4191AD: using guessed type char buf[16];

//----- (00000000004192FE) ----------------------------------------------------
int goodB2G1_55()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_4 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 671134: using guessed type int staticFive_4;
// 4192FE: using guessed type char buf[16];

//----- (0000000000419470) ----------------------------------------------------
int goodB2G2_55()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticFive_4 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 671134: using guessed type int staticFive_4;
// 419470: using guessed type char buf[16];

//----- (00000000004195D6) ----------------------------------------------------
int goodG2B1_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671134: using guessed type int staticFive_4;

//----- (0000000000419623) ----------------------------------------------------
int goodG2B2_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671134: using guessed type int staticFive_4;

//----- (0000000000419664) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_07_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (0000000000419692) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_03_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (00000000004196C2) ----------------------------------------------------
int goodB2G1_56()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000419707) ----------------------------------------------------
int goodB2G2_56()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041974C) ----------------------------------------------------
int goodG2B1_48()
{
  return printIntLine(4u);
}

//----- (000000000041977C) ----------------------------------------------------
int goodG2B2_48()
{
  return printIntLine(4u);
}

//----- (00000000004197AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_03_good()
{
  goodB2G1_56();
  goodB2G2_56();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (00000000004197DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_square_22_badSink(v8);
}
// 671240: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_badGlobal;
// 4197DA: using guessed type char buf[16];

//----- (0000000000419912) ----------------------------------------------------
int goodB2G1_57()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Sink(v8);
}
// 671244: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G1Global;
// 419912: using guessed type char buf[16];

//----- (0000000000419A4A) ----------------------------------------------------
int goodB2G2_57()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Sink(v8);
}
// 671248: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_goodB2G2Global;
// 419A4A: using guessed type char buf[16];

//----- (0000000000419B82) ----------------------------------------------------
int goodG2B_96()
{
  CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BSink(2);
}
// 67124C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_square_22_goodG2BGlobal;

//----- (0000000000419BAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_22_good()
{
  goodB2G1_57();
  goodB2G2_57();
  return goodG2B_96();
}

//----- (0000000000419BD2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_18_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (0000000000419C04) ----------------------------------------------------
int goodB2G_88()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000419C4B) ----------------------------------------------------
int goodG2B_97()
{
  return printIntLine(4u);
}

//----- (0000000000419C7D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_18_good()
{
  goodB2G_88();
  return goodG2B_97();
}

//----- (0000000000419C97) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_multiply_22_badSink(v4);
}
// 671250: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_badGlobal;

//----- (0000000000419D09) ----------------------------------------------------
int goodB2G1_58()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Sink(v4);
}
// 671254: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G1Global;

//----- (0000000000419D7B) ----------------------------------------------------
int goodB2G2_58()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Sink(v4);
}
// 671258: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_goodB2G2Global;

//----- (0000000000419DED) ----------------------------------------------------
int goodG2B_98()
{
  CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BSink(2);
}
// 67125C: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_22_goodG2BGlobal;

//----- (0000000000419E19) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_22_good()
{
  goodB2G1_58();
  goodB2G2_58();
  return goodG2B_98();
}

//----- (0000000000419E3D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000419E7F) ----------------------------------------------------
int goodB2G1_59()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}
// 671170: using guessed type int globalFive;

//----- (0000000000419EF4) ----------------------------------------------------
int goodB2G2_59()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000419F5D) ----------------------------------------------------
int goodG2B1_49()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000419FAB) ----------------------------------------------------
int goodG2B2_49()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000419FED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_14_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (000000000041A01B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041A0A1) ----------------------------------------------------
int goodB2G1_60()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041A15A) ----------------------------------------------------
int goodB2G2_60()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041A207) ----------------------------------------------------
int goodG2B1_50()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041A253) ----------------------------------------------------
int goodG2B2_50()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041A293) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_09_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (000000000041A2C1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v3 = 0x7FFFFFFF;
  v2 = 1;
  return printIntLine(1u);
}

//----- (000000000041A318) ----------------------------------------------------
int goodG2B_99()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printIntLine(4u);
}

//----- (000000000041A36F) ----------------------------------------------------
int goodB2G_89()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v3 = 0x7FFFFFFF;
  if ( v3 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printIntLine(v3 * v3);
}

//----- (000000000041A3ED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_32_good()
{
  goodG2B_99();
  return goodB2G_89();
}

//----- (000000000041A407) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_53c_badSink(a1);
}

//----- (000000000041A41E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_53c_goodG2BSink(a1);
}

//----- (000000000041A435) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_53c_goodB2GSink(a1);
}

//----- (000000000041A44C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v9 > 0 )
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 41A44C: using guessed type char buf[16];

//----- (000000000041A5A0) ----------------------------------------------------
int goodB2G1_61()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;
// 41A5A0: using guessed type char buf[16];

//----- (000000000041A715) ----------------------------------------------------
int goodB2G2_61()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 41A715: using guessed type char buf[16];

//----- (000000000041A87E) ----------------------------------------------------
int goodG2B1_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041A8CE) ----------------------------------------------------
int goodG2B2_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041A912) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_09_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (000000000041A940) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (000000000041A94B) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (000000000041A956) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_4();
  if ( result )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A9B3) ----------------------------------------------------
int goodB2G1_62()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_4() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AA32) ----------------------------------------------------
int goodB2G2_62()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AAA5) ----------------------------------------------------
int goodG2B1_52()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041AAF8) ----------------------------------------------------
int goodG2B2_52()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041AB3F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_08_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (000000000041AB6D) ----------------------------------------------------
int __fastcall badSink_15(int a1)
{
  int result; // eax

  result = badStatic_4;
  if ( badStatic_4 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671260: using guessed type int badStatic_4;

//----- (000000000041AB9C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_4 = 1;
  return badSink_15(v4);
}
// 671260: using guessed type int badStatic_4;

//----- (000000000041AC0E) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(int a1)
{
  int result; // eax

  result = goodB2G1Static_4;
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671264: using guessed type int goodB2G1Static_4;

//----- (000000000041AC5E) ----------------------------------------------------
int goodB2G1_63()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v4);
}
// 671264: using guessed type int goodB2G1Static_4;

//----- (000000000041ACD0) ----------------------------------------------------
int __fastcall goodB2G2Sink_4(int a1)
{
  int result; // eax

  result = goodB2G2Static_4;
  if ( goodB2G2Static_4 && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671268: using guessed type int goodB2G2Static_4;

//----- (000000000041AD14) ----------------------------------------------------
int goodB2G2_63()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v4);
}
// 671268: using guessed type int goodB2G2Static_4;

//----- (000000000041AD86) ----------------------------------------------------
int __fastcall goodG2BSink_15(int a1)
{
  int result; // eax

  result = goodG2BStatic_4;
  if ( goodG2BStatic_4 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67126C: using guessed type int goodG2BStatic_4;

//----- (000000000041ADB5) ----------------------------------------------------
int goodG2B_100()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_15(2);
}
// 67126C: using guessed type int goodG2BStatic_4;

//----- (000000000041ADE1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_21_good()
{
  goodB2G1_63();
  goodB2G2_63();
  return goodG2B_100();
}

//----- (000000000041AE05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54e_badSink(a1);
}

//----- (000000000041AE1C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54e_goodG2BSink(a1);
}

//----- (000000000041AE33) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54e_goodB2GSink(a1);
}

//----- (000000000041AE4A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v9 > 0 )
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 41AE4A: using guessed type char buf[16];

//----- (000000000041AF9E) ----------------------------------------------------
int goodB2G1_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;
// 41AF9E: using guessed type char buf[16];

//----- (000000000041B113) ----------------------------------------------------
int goodB2G2_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalTrue;
  if ( globalTrue && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 41B113: using guessed type char buf[16];

//----- (000000000041B27C) ----------------------------------------------------
int goodG2B1_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (000000000041B2CC) ----------------------------------------------------
int goodG2B2_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041B310) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_10_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (000000000041B33E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041B38F) ----------------------------------------------------
int goodB2G_90()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (000000000041B3F5) ----------------------------------------------------
int goodG2B_101()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041B446) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_17_good()
{
  goodB2G_90();
  return goodG2B_101();
}

//----- (000000000041B460) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(2 * v1);
  if ( v1 > 1073741822 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(2 * v1);
}

//----- (000000000041B4E4) ----------------------------------------------------
int goodB2G_91()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041B57D) ----------------------------------------------------
int goodG2B_102()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000041B5EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_12_good()
{
  goodB2G_91();
  return goodG2B_102();
}

//----- (000000000041B606) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_67b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000041B62D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000041B654) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000041B6A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041B6CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041B6F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_67b_goodB2GSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000041B738) ----------------------------------------------------
int __fastcall badSink_16(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041B758) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_44_bad()
{
  return badSink_16(0x7FFFFFFF);
}

//----- (000000000041B783) ----------------------------------------------------
int __fastcall goodG2BSink_16(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041B7A3) ----------------------------------------------------
int goodG2B_103()
{
  return goodG2BSink_16(2);
}

//----- (000000000041B7CE) ----------------------------------------------------
int __fastcall goodB2GSink_10(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041B803) ----------------------------------------------------
int goodB2G_92()
{
  return goodB2GSink_10(0x7FFFFFFF);
}

//----- (000000000041B82E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_44_good()
{
  goodG2B_103();
  return goodB2G_92();
}

//----- (000000000041B848) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_18_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000041B8C0) ----------------------------------------------------
int goodB2G_93()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000041B94D) ----------------------------------------------------
int goodG2B_104()
{
  return printIntLine(4u);
}

//----- (000000000041B97F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_18_good()
{
  goodB2G_93();
  return goodG2B_104();
}

//----- (000000000041B999) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000041BA21) ----------------------------------------------------
int goodB2G1_65()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}
// 671170: using guessed type int globalFive;

//----- (000000000041BADC) ----------------------------------------------------
int goodB2G2_65()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000041BB8B) ----------------------------------------------------
int goodG2B1_54()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000041BBD9) ----------------------------------------------------
int goodG2B2_54()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000041BC1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_14_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (000000000041BC49) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (000000000041BC54) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (000000000041BC5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_5();
  if ( result )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 41BC5F: using guessed type char buf[16];

//----- (000000000041BDB7) ----------------------------------------------------
int goodB2G1_66()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)staticReturnsFalse_5() )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 41BDB7: using guessed type char buf[16];

//----- (000000000041BF42) ----------------------------------------------------
int goodB2G2_66()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 41BF42: using guessed type char buf[16];

//----- (000000000041C0C1) ----------------------------------------------------
int goodG2B1_55()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000041C115) ----------------------------------------------------
int goodG2B2_55()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000041C15D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_08_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (000000000041C18B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_32_bad()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int *v5; // [rsp+28h] [rbp-18h]
  int *v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v6 = &v4;
  v5 = &v4;
  v4 = 0;
  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  *v6 = v7;
  return printIntLine(*v5 * *v5);
}

//----- (000000000041C228) ----------------------------------------------------
int goodG2B_105()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printIntLine(4u);
}

//----- (000000000041C27F) ----------------------------------------------------
int goodB2G_94()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int *v7; // [rsp+28h] [rbp-18h]
  int *v8; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v9 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  *v8 = v9;
  v6 = *v7;
  if ( v6 == 0x80000000 || v6 < -46339 || v6 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 * v6;
  return printIntLine(v6 * v6);
}

//----- (000000000041C343) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_32_good()
{
  goodG2B_105();
  return goodB2G_94();
}

//----- (000000000041C35D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671138: using guessed type int staticFive_5;

//----- (000000000041C3BA) ----------------------------------------------------
int goodB2G1_67()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671138: using guessed type int staticFive_5;

//----- (000000000041C439) ----------------------------------------------------
int goodB2G2_67()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671138: using guessed type int staticFive_5;

//----- (000000000041C4AC) ----------------------------------------------------
int goodG2B1_56()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_5;
  if ( staticFive_5 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671138: using guessed type int staticFive_5;

//----- (000000000041C4FE) ----------------------------------------------------
int goodG2B2_56()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    v1 = 2;
  result = staticFive_5;
  if ( staticFive_5 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671138: using guessed type int staticFive_5;

//----- (000000000041C544) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_07_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (000000000041C572) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000041C59C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000041C5C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000041C605) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_04_bad()
{
  return printIntLine(1u);
}

//----- (000000000041C643) ----------------------------------------------------
int goodB2G1_68()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041C6B4) ----------------------------------------------------
int goodB2G2_68()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041C719) ----------------------------------------------------
int goodG2B1_57()
{
  return printIntLine(4u);
}

//----- (000000000041C763) ----------------------------------------------------
int goodG2B2_57()
{
  return printIntLine(4u);
}

//----- (000000000041C7A1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_04_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (000000000041C7CF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_22_badSink(v8);
}
// 671270: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_badGlobal;
// 41C7CF: using guessed type char buf[16];

//----- (000000000041C907) ----------------------------------------------------
int goodB2G1_69()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Sink(v8);
}
// 671274: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Global;
// 41C907: using guessed type char buf[16];

//----- (000000000041CA3F) ----------------------------------------------------
int goodB2G2_69()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Sink(v8);
}
// 671278: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Global;
// 41CA3F: using guessed type char buf[16];

//----- (000000000041CB77) ----------------------------------------------------
int goodG2B_106()
{
  CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BSink(2);
}
// 67127C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BGlobal;

//----- (000000000041CBA3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_22_good()
{
  goodB2G1_69();
  goodB2G2_69();
  return goodG2B_106();
}

//----- (000000000041CBC7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54c_badSink(a1);
}

//----- (000000000041CBDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54c_goodG2BSink(a1);
}

//----- (000000000041CBF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54c_goodB2GSink(a1);
}

//----- (000000000041CC0C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_12_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v6 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v6 = 2;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v6 > 0 )
    {
      v5 = 2 * v6;
      result = printIntLine(2 * v6);
    }
  }
  else if ( v6 > 0 )
  {
    if ( v6 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v6;
      result = printIntLine(2 * v6);
    }
  }
  return result;
}

//----- (000000000041CCD6) ----------------------------------------------------
int goodB2G_95()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  int v7; // [rsp+24h] [rbp-Ch]
  int v8; // [rsp+28h] [rbp-8h]
  int v9; // [rsp+2Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v9 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v9 > 0 )
    {
      if ( v9 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v8 = 2 * v9;
        result = printIntLine(2 * v9);
      }
    }
  }
  else if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v7 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}

//----- (000000000041CDFB) ----------------------------------------------------
int goodG2B_107()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000041CE6A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_12_good()
{
  goodB2G_95();
  return goodG2B_107();
}

//----- (000000000041CE84) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_add_61b_badSource()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000041CE97) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041CEAA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_add_61b_goodB2GSource()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000041CEBD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000041CF09) ----------------------------------------------------
int goodB2G1_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041CF76) ----------------------------------------------------
int goodB2G2_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (000000000041CFD7) ----------------------------------------------------
int goodG2B1_58()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000041D02F) ----------------------------------------------------
int goodG2B2_58()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000041D07B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_11_good()
{
  goodB2G1_70();
  goodB2G2_70();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (000000000041D0A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_02_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (000000000041D0D9) ----------------------------------------------------
int goodB2G1_71()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041D11E) ----------------------------------------------------
int goodB2G2_71()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041D163) ----------------------------------------------------
int goodG2B1_59()
{
  return printIntLine(4u);
}

//----- (000000000041D193) ----------------------------------------------------
int goodG2B2_59()
{
  return printIntLine(4u);
}

//----- (000000000041D1C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_02_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (000000000041D1F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000041D21C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000041D247) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (000000000041D299) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_67_bad()
{
  return CWE190_Integer_Overflow__int_max_square_67b_badSink(0x7FFFFFFF);
}

//----- (000000000041D2C1) ----------------------------------------------------
int goodG2B_108()
{
  return CWE190_Integer_Overflow__int_max_square_67b_goodG2BSink(2);
}

//----- (000000000041D2E9) ----------------------------------------------------
int goodB2G_96()
{
  return CWE190_Integer_Overflow__int_max_square_67b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000041D311) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_67_good()
{
  goodG2B_108();
  return goodB2G_96();
}

//----- (000000000041D32B) ----------------------------------------------------
int __fastcall badSink_17(int a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
    result = printIntLine(a1 * a1);
  return result;
}
// 671280: using guessed type int badStatic_5;

//----- (000000000041D356) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_5 = 1;
  return badSink_17(v8);
}
// 671280: using guessed type int badStatic_5;
// 41D356: using guessed type char buf[16];

//----- (000000000041D48E) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(int a1)
{
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 671284: using guessed type int goodB2G1Static_5;

//----- (000000000041D4EC) ----------------------------------------------------
int goodB2G1_72()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(v8);
}
// 671284: using guessed type int goodB2G1Static_5;
// 41D4EC: using guessed type char buf[16];

//----- (000000000041D624) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(int a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 671288: using guessed type int goodB2G2Static_5;

//----- (000000000041D676) ----------------------------------------------------
int goodB2G2_72()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(v8);
}
// 671288: using guessed type int goodB2G2Static_5;
// 41D676: using guessed type char buf[16];

//----- (000000000041D7AE) ----------------------------------------------------
int __fastcall goodG2BSink_17(int a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
    result = printIntLine(a1 * a1);
  return result;
}
// 67128C: using guessed type int goodG2BStatic_5;

//----- (000000000041D7D9) ----------------------------------------------------
int goodG2B_109()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_17(2);
}
// 67128C: using guessed type int goodG2BStatic_5;

//----- (000000000041D805) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_21_good()
{
  goodB2G1_72();
  goodB2G2_72();
  return goodG2B_109();
}

//----- (000000000041D829) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 41D829: using guessed type char buf[16];

//----- (000000000041D961) ----------------------------------------------------
int goodB2G1_73()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 41D961: using guessed type char buf[16];

//----- (000000000041DAC0) ----------------------------------------------------
int goodB2G2_73()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 41DAC0: using guessed type char buf[16];

//----- (000000000041DC1F) ----------------------------------------------------
int goodG2B1_60()
{
  return printIntLine(4u);
}

//----- (000000000041DC4B) ----------------------------------------------------
int goodG2B2_60()
{
  return printIntLine(4u);
}

//----- (000000000041DC77) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_03_good()
{
  goodB2G1_73();
  goodB2G2_73();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (000000000041DCA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_04_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000041DD29) ----------------------------------------------------
int goodB2G1_74()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000041DDE0) ----------------------------------------------------
int goodB2G2_74()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000041DE8B) ----------------------------------------------------
int goodG2B1_61()
{
  return printIntLine(4u);
}

//----- (000000000041DED5) ----------------------------------------------------
int goodG2B2_61()
{
  return printIntLine(4u);
}

//----- (000000000041DF13) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_04_good()
{
  goodB2G1_74();
  goodB2G2_74();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (000000000041DF41) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_31_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7;
  v4 = v7 * v7;
  return printIntLine(v7 * v7);
}

//----- (000000000041DFBF) ----------------------------------------------------
int goodG2B_110()
{
  return printIntLine(4u);
}

//----- (000000000041DFF7) ----------------------------------------------------
int goodB2G_97()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7;
  if ( v7 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000041E09C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_31_good()
{
  goodG2B_110();
  return goodB2G_97();
}

//----- (000000000041E0B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_54b_badSink(v8);
}
// 41E0B6: using guessed type char buf[16];

//----- (000000000041E1E4) ----------------------------------------------------
int goodG2B_111()
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54b_goodG2BSink(2);
}

//----- (000000000041E206) ----------------------------------------------------
int goodB2G_98()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_54b_goodB2GSink(v8);
}
// 41E206: using guessed type char buf[16];

//----- (000000000041E334) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_54_good()
{
  goodG2B_111();
  return goodB2G_98();
}

//----- (000000000041E34E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041E392) ----------------------------------------------------
int goodB2G1_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (000000000041E3F7) ----------------------------------------------------
int goodB2G2_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041E450) ----------------------------------------------------
int goodG2B1_62()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (000000000041E4A0) ----------------------------------------------------
int goodG2B2_62()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041E4E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_10_good()
{
  goodB2G1_75();
  goodB2G2_75();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (000000000041E512) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_square_67b_badSink(v5);
}

//----- (000000000041E580) ----------------------------------------------------
int goodG2B_112()
{
  return CWE190_Integer_Overflow__int_fgets_square_67b_goodG2BSink(2);
}

//----- (000000000041E5A8) ----------------------------------------------------
int goodB2G_99()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_square_67b_goodB2GSink(v5);
}

//----- (000000000041E616) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_67_good()
{
  goodG2B_112();
  return goodB2G_99();
}

//----- (000000000041E630) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_square_22_badGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 6712A0: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_badGlobal;

//----- (000000000041E65B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 6712A4: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Global;

//----- (000000000041E6B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 6712A8: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Global;

//----- (000000000041E70B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_square_22_goodG2BGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 6712AC: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_goodG2BGlobal;

//----- (000000000041E736) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 41E736: using guessed type char buf[16];

//----- (000000000041E870) ----------------------------------------------------
int goodB2G_100()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 41E870: using guessed type char buf[16];

//----- (000000000041E9D1) ----------------------------------------------------
int goodG2B_113()
{
  return printIntLine(4u);
}

//----- (000000000041E9FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_18_good()
{
  goodB2G_100();
  return goodG2B_113();
}

//----- (000000000041EA19) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54b_badSink(v8);
}
// 41EA19: using guessed type char buf[16];

//----- (000000000041EB47) ----------------------------------------------------
int goodG2B_114()
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54b_goodG2BSink(2);
}

//----- (000000000041EB69) ----------------------------------------------------
int goodB2G_101()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54b_goodB2GSink(v8);
}
// 41EB69: using guessed type char buf[16];

//----- (000000000041EC97) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_54_good()
{
  goodG2B_114();
  return goodB2G_101();
}

//----- (000000000041ECB1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_02_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000041ED27) ----------------------------------------------------
int goodB2G1_76()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000041EDB2) ----------------------------------------------------
int goodB2G2_76()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000041EE3D) ----------------------------------------------------
int goodG2B1_63()
{
  return printIntLine(4u);
}

//----- (000000000041EE6D) ----------------------------------------------------
int goodG2B2_63()
{
  return printIntLine(4u);
}

//----- (000000000041EE9D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_02_good()
{
  goodB2G1_76();
  goodB2G2_76();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041EECB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_add_61b_badSource();
  return printIntLine(v0 + 1);
}

//----- (000000000041EEFC) ----------------------------------------------------
int goodG2B_115()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_add_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000041EF2D) ----------------------------------------------------
int goodB2G_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_max_add_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041EF73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_61_good()
{
  goodG2B_115();
  return goodB2G_102();
}

//----- (000000000041EF8D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_54b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041EFC5) ----------------------------------------------------
int goodG2B_116()
{
  return CWE190_Integer_Overflow__int_fscanf_add_54b_goodG2BSink(2);
}

//----- (000000000041EFE7) ----------------------------------------------------
int goodB2G_103()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_54b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F01F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_54_good()
{
  goodG2B_116();
  return goodB2G_103();
}

//----- (000000000041F039) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54d_badSink(a1);
}

//----- (000000000041F050) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54d_goodG2BSink(a1);
}

//----- (000000000041F067) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54d_goodB2GSink(a1);
}

//----- (000000000041F07E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_6 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}
// 67113C: using guessed type int staticFive_6;

//----- (000000000041F106) ----------------------------------------------------
int goodB2G1_77()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_6 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}
// 67113C: using guessed type int staticFive_6;

//----- (000000000041F1C1) ----------------------------------------------------
int goodB2G2_77()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_6 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}
// 67113C: using guessed type int staticFive_6;

//----- (000000000041F270) ----------------------------------------------------
int goodG2B1_64()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 67113C: using guessed type int staticFive_6;

//----- (000000000041F2BE) ----------------------------------------------------
int goodG2B2_64()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    v1 = 2;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 67113C: using guessed type int staticFive_6;

//----- (000000000041F300) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_07_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041F32E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_01_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (000000000041F35E) ----------------------------------------------------
int goodG2B_117()
{
  return printIntLine(4u);
}

//----- (000000000041F38E) ----------------------------------------------------
int goodB2G_104()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F3D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_01_good()
{
  goodG2B_117();
  return goodB2G_104();
}

//----- (000000000041F3ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041F412) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041F437) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000041F471) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_63b_badSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F4AB) ----------------------------------------------------
int goodG2B_118()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_square_63b_goodG2BSink(&v1);
}

//----- (000000000041F4CF) ----------------------------------------------------
int goodB2G_105()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_63b_goodB2GSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F509) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_63_good()
{
  goodG2B_118();
  return goodB2G_105();
}

//----- (000000000041F523) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v5 > 0 )
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041F5AD) ----------------------------------------------------
int goodB2G1_78()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (000000000041F658) ----------------------------------------------------
int goodB2G2_78()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041F6F7) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (000000000041F747) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000041F78B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_10_good()
{
  goodB2G1_78();
  goodB2G2_78();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041F7B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671140: using guessed type int staticFive_7;

//----- (000000000041F7FA) ----------------------------------------------------
int goodB2G1_79()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 0x7FFFFFFF;
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 671140: using guessed type int staticFive_7;

//----- (000000000041F85C) ----------------------------------------------------
int goodB2G2_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 671140: using guessed type int staticFive_7;

//----- (000000000041F8B2) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671140: using guessed type int staticFive_7;

//----- (000000000041F8FF) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 2;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671140: using guessed type int staticFive_7;

//----- (000000000041F940) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_07_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041F96E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v9 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v9 = accept(fd, 0LL, 0LL);
        if ( v9 != -1 )
        {
          v7 = recv(v9, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v10 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v9 != -1 )
      close(v9);
  }
  else
  {
    v10 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = v10 * v10;
    result = printIntLine(v10 * v10);
  }
  else if ( v10 == 0x80000000 || v10 < -46339 || v10 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v5 = v10 * v10;
    result = printIntLine(v10 * v10);
  }
  return result;
}
// 41F96E: using guessed type char buf[16];

//----- (000000000041FB0E) ----------------------------------------------------
int goodB2G_106()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+4Ch] [rbp-24h]
  int v8; // [rsp+50h] [rbp-20h]
  int v9; // [rsp+54h] [rbp-1Ch]
  int v10; // [rsp+58h] [rbp-18h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v13; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v14 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v14 = accept(fd, 0LL, 0LL);
        if ( v14 != -1 )
        {
          v11 = recv(v14, buf, 0xDuLL, 0);
          if ( v11 != -1 )
          {
            if ( v11 )
            {
              buf[v11] = 0;
              v15 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v14 != -1 )
      close(v14);
  }
  else
  {
    v13 = -1;
    v10 = socket(2, 1, 6);
    if ( v10 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v10, &addr, 0x10u) != -1 && listen(v10, 5) != -1 )
      {
        v13 = accept(v10, 0LL, 0LL);
        if ( v13 != -1 )
        {
          v9 = recv(v13, nptr, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              nptr[v9] = 0;
              v15 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v10 != -1 )
      close(v10);
    if ( v13 != -1 )
      close(v13);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v15 == 0x80000000 || v15 < -46339 || v15 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v8 = v15 * v15;
      result = printIntLine(v15 * v15);
    }
  }
  else if ( v15 == 0x80000000 || v15 < -46339 || v15 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v7 = v15 * v15;
    result = printIntLine(v15 * v15);
  }
  return result;
}
// 41FB0E: using guessed type char buf[16];
// 41FB0E: using guessed type char nptr[16];

//----- (000000000041FDE8) ----------------------------------------------------
int goodG2B_119()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000041FE4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_12_good()
{
  goodB2G_106();
  return goodG2B_119();
}

//----- (000000000041FE69) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041FE8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000041FEB3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000041FEED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FF0D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FF2D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041FF62) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_22_bad()
{
  CWE190_Integer_Overflow__int_max_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_max_square_22_badSink(0x7FFFFFFF);
}
// 671290: using guessed type int CWE190_Integer_Overflow__int_max_square_22_badGlobal;

//----- (000000000041FF8E) ----------------------------------------------------
int goodB2G1_80()
{
  CWE190_Integer_Overflow__int_max_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_max_square_22_goodB2G1Sink(0x7FFFFFFF);
}
// 671294: using guessed type int CWE190_Integer_Overflow__int_max_square_22_goodB2G1Global;

//----- (000000000041FFBA) ----------------------------------------------------
int goodB2G2_80()
{
  CWE190_Integer_Overflow__int_max_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_max_square_22_goodB2G2Sink(0x7FFFFFFF);
}
// 671298: using guessed type int CWE190_Integer_Overflow__int_max_square_22_goodB2G2Global;

//----- (000000000041FFE6) ----------------------------------------------------
int goodG2B_120()
{
  CWE190_Integer_Overflow__int_max_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_max_square_22_goodG2BSink(2);
}
// 67129C: using guessed type int CWE190_Integer_Overflow__int_max_square_22_goodG2BGlobal;

//----- (0000000000420012) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_22_good()
{
  goodB2G1_80();
  goodB2G2_80();
  return goodG2B_120();
}

//----- (0000000000420036) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54d_badSink(a1);
}

//----- (000000000042004D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54d_goodG2BSink(a1);
}

//----- (0000000000420064) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54d_goodB2GSink(a1);
}

//----- (000000000042007B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_01_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (00000000004200F1) ----------------------------------------------------
int goodG2B_121()
{
  return printIntLine(4u);
}

//----- (0000000000420121) ----------------------------------------------------
int goodB2G_107()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (00000000004201AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_01_good()
{
  goodG2B_121();
  return goodB2G_107();
}

//----- (00000000004201C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004201EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000420210) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042024A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042028E) ----------------------------------------------------
int goodB2G1_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004202F3) ----------------------------------------------------
int goodB2G2_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042034C) ----------------------------------------------------
int goodG2B1_67()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042039C) ----------------------------------------------------
int goodG2B2_67()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004203E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_09_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000042040E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53d_badSink(a1);
}

//----- (0000000000420425) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53d_goodG2BSink(a1);
}

//----- (000000000042043C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53d_goodB2GSink(a1);
}

//----- (0000000000420453) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_53d_badSink(a1);
}

//----- (000000000042046A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_53d_goodG2BSink(a1);
}

//----- (0000000000420481) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_53d_goodB2GSink(a1);
}

//----- (0000000000420498) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004204F5) ----------------------------------------------------
int goodB2G1_82()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420574) ----------------------------------------------------
int goodB2G2_82()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004205E7) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042063A) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000420681) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_11_good()
{
  goodB2G1_82();
  goodB2G2_82();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (00000000004206AF) ----------------------------------------------------
__int64 __fastcall badSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4206AF: using guessed type char buf[16];

//----- (00000000004207D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_42_bad()
{
  int v0; // eax

  v0 = badSource_1(0);
  return printIntLine(v0 + 1);
}

//----- (0000000000420803) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 2LL;
}

//----- (0000000000420816) ----------------------------------------------------
int goodG2B_122()
{
  int v0; // eax

  v0 = goodG2BSource_1();
  return printIntLine(v0 + 1);
}

//----- (0000000000420847) ----------------------------------------------------
__int64 __fastcall goodB2GSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 420847: using guessed type char buf[16];

//----- (000000000042096A) ----------------------------------------------------
int goodB2G_108()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_1(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004209B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_42_good()
{
  goodB2G_108();
  return goodG2B_122();
}

//----- (00000000004209CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_square_22_badSink(v4);
}
// 6712A0: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_badGlobal;

//----- (0000000000420A3C) ----------------------------------------------------
int goodB2G1_83()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Sink(v4);
}
// 6712A4: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_goodB2G1Global;

//----- (0000000000420AAE) ----------------------------------------------------
int goodB2G2_83()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Sink(v4);
}
// 6712A8: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_goodB2G2Global;

//----- (0000000000420B20) ----------------------------------------------------
int goodG2B_123()
{
  CWE190_Integer_Overflow__int_fgets_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_square_22_goodG2BSink(2);
}
// 6712AC: using guessed type int CWE190_Integer_Overflow__int_fgets_square_22_goodG2BGlobal;

//----- (0000000000420B4C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_22_good()
{
  goodB2G1_83();
  goodB2G2_83();
  return goodG2B_123();
}

//----- (0000000000420B70) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 420B70: using guessed type char buf[16];

//----- (0000000000420CA8) ----------------------------------------------------
int goodB2G1_84()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 420CA8: using guessed type char buf[16];

//----- (0000000000420E07) ----------------------------------------------------
int goodB2G2_84()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 420E07: using guessed type char buf[16];

//----- (0000000000420F66) ----------------------------------------------------
int goodG2B1_69()
{
  return printIntLine(4u);
}

//----- (0000000000420F92) ----------------------------------------------------
int goodG2B2_69()
{
  return printIntLine(4u);
}

//----- (0000000000420FBE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_02_good()
{
  goodB2G1_84();
  goodB2G2_84();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (0000000000420FEC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_04_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 1;
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (0000000000421074) ----------------------------------------------------
int goodB2G1_85()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 0;
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000042111D) ----------------------------------------------------
int goodB2G2_85()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 1;
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (00000000004211BA) ----------------------------------------------------
int goodG2B1_70()
{
  return printIntLine(4u);
}

//----- (0000000000421208) ----------------------------------------------------
int goodG2B2_70()
{
  return printIntLine(4u);
}

//----- (000000000042124A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_04_good()
{
  goodB2G1_85();
  goodB2G2_85();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (0000000000421278) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004212BA) ----------------------------------------------------
int goodB2G1_86()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042132F) ----------------------------------------------------
int goodB2G2_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000421398) ----------------------------------------------------
int goodG2B1_71()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004213E6) ----------------------------------------------------
int goodG2B2_71()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000421428) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_13_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (0000000000421456) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_multiply_65b_badSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 421456: using guessed type char buf[16];

//----- (000000000042158D) ----------------------------------------------------
int goodG2B_124()
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodG2BSink(2);
}

//----- (00000000004215B8) ----------------------------------------------------
__int64 goodB2G_109()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodB2GSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 4215B8: using guessed type char buf[16];

//----- (00000000004216EF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_multiply_65_good()
{
  goodG2B_124();
  return goodB2G_109();
}

//----- (0000000000421709) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_add_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_add_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042174A) ----------------------------------------------------
int goodG2B_125()
{
  return CWE190_Integer_Overflow__int_fscanf_add_65b_goodG2BSink(2);
}

//----- (0000000000421775) ----------------------------------------------------
__int64 goodB2G_110()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_add_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004217B6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_add_65_good()
{
  goodG2B_125();
  return goodB2G_110();
}

//----- (00000000004217D0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042182B) ----------------------------------------------------
int goodB2G1_87()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004218A8) ----------------------------------------------------
int goodB2G2_87()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000421919) ----------------------------------------------------
int goodG2B1_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000421969) ----------------------------------------------------
int goodG2B2_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004219AD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_09_good()
{
  goodB2G1_87();
  goodB2G2_87();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (00000000004219DB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v5 > 0 )
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000421A65) ----------------------------------------------------
int goodB2G1_88()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000421B10) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000421BAF) ----------------------------------------------------
int goodG2B1_73()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000421BFF) ----------------------------------------------------
int goodG2B2_73()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000421C43) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_09_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (0000000000421C71) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 421C71: using guessed type char buf[16];

//----- (0000000000421DC1) ----------------------------------------------------
int goodB2G1_89()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;
// 421DC1: using guessed type char buf[16];

//----- (0000000000421F44) ----------------------------------------------------
int goodB2G2_89()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 421F44: using guessed type char buf[16];

//----- (00000000004220BB) ----------------------------------------------------
int goodG2B1_74()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000422107) ----------------------------------------------------
int goodG2B2_74()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000422147) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_10_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (0000000000422175) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54e_badSink(a1);
}

//----- (000000000042218C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54e_goodG2BSink(a1);
}

//----- (00000000004221A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54e_goodB2GSink(a1);
}

//----- (00000000004221BA) ----------------------------------------------------
int __fastcall badSink_18(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004221DB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_square_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_18;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042221C) ----------------------------------------------------
int __fastcall goodG2BSink_18(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042223D) ----------------------------------------------------
int goodG2B_126()
{
  return goodG2BSink_18(2);
}

//----- (0000000000422268) ----------------------------------------------------
int __fastcall goodB2GSink_11(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (00000000004222B0) ----------------------------------------------------
__int64 goodB2G_111()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_11;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004222F1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_square_44_good()
{
  goodG2B_126();
  return goodB2G_111();
}

//----- (000000000042230B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042234B) ----------------------------------------------------
int goodB2G1_90()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004223BE) ----------------------------------------------------
int goodB2G2_90()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000422425) ----------------------------------------------------
int goodG2B1_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000422471) ----------------------------------------------------
int goodG2B2_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004224B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_09_good()
{
  goodB2G1_90();
  goodB2G2_90();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (00000000004224DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54c_badSink(a1);
}

//----- (00000000004224F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54c_goodG2BSink(a1);
}

//----- (000000000042250D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000422524) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54d_badSink(a1);
}

//----- (000000000042253B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54d_goodG2BSink(a1);
}

//----- (0000000000422552) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54d_goodB2GSink(a1);
}

//----- (0000000000422569) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_square_61b_badSource(0);
  return printIntLine(v0 * v0);
}

//----- (000000000042259B) ----------------------------------------------------
int goodG2B_127()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_square_61b_goodG2BSource();
  return printIntLine(v0 * v0);
}

//----- (00000000004225CD) ----------------------------------------------------
int goodB2G_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fscanf_square_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000422626) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_61_good()
{
  goodG2B_127();
  return goodB2G_112();
}

//----- (0000000000422640) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue_2 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 671144: using guessed type int staticTrue_2;
// 422640: using guessed type char buf[16];

//----- (000000000042278F) ----------------------------------------------------
int goodB2G1_91()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue_2 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 671144: using guessed type int staticTrue_2;
// 6712B0: using guessed type int staticFalse_2;
// 42278F: using guessed type char buf[16];

//----- (00000000004228FF) ----------------------------------------------------
int goodB2G2_91()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue_2 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 671144: using guessed type int staticTrue_2;
// 4228FF: using guessed type char buf[16];

//----- (0000000000422A63) ----------------------------------------------------
int goodG2B1_76()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671144: using guessed type int staticTrue_2;
// 6712B0: using guessed type int staticFalse_2;

//----- (0000000000422AAE) ----------------------------------------------------
int goodG2B2_76()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_2 )
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671144: using guessed type int staticTrue_2;

//----- (0000000000422AED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_05_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (0000000000422B1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 422B1B: using guessed type char buf[16];

//----- (0000000000422C53) ----------------------------------------------------
int goodG2B_128()
{
  return printIntLine(4u);
}

//----- (0000000000422C7F) ----------------------------------------------------
int goodB2G_113()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 422C7F: using guessed type char buf[16];

//----- (0000000000422DDE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_01_good()
{
  goodG2B_128();
  return goodB2G_113();
}

//----- (0000000000422DF8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422E80) ----------------------------------------------------
int goodB2G1_92()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422F3B) ----------------------------------------------------
int goodB2G2_92()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422FEA) ----------------------------------------------------
int goodG2B1_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423038) ----------------------------------------------------
int goodG2B2_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042307A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_13_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (00000000004230A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData);
  return result;
}
// 671428: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData;

//----- (00000000004230D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData);
  return result;
}
// 671424: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData;

//----- (00000000004230FE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData);
  }
  return result;
}
// 671420: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData;

//----- (000000000042313E) ----------------------------------------------------
int __fastcall badSink_19(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042315E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_19(v8);
}
// 42315E: using guessed type char buf[16];

//----- (000000000042328C) ----------------------------------------------------
int __fastcall goodG2BSink_19(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004232AC) ----------------------------------------------------
int goodG2B_129()
{
  return goodG2BSink_19(2);
}

//----- (00000000004232CE) ----------------------------------------------------
int __fastcall goodB2GSink_12(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000423303) ----------------------------------------------------
int goodB2G_114()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_12(v8);
}
// 423303: using guessed type char buf[16];

//----- (0000000000423431) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_41_good()
{
  goodB2G_114();
  return goodG2B_129();
}

//----- (000000000042344B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_add_68_badData + 1);
}
// 6713E4: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_68_badData;

//----- (0000000000423471) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_add_68_goodG2BData + 1);
}
// 6713E8: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_68_goodG2BData;

//----- (0000000000423497) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_add_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fscanf_add_68_goodB2GData + 1);
  return result;
}
// 6713EC: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_68_goodB2GData;

//----- (00000000004234D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_15_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042351B) ----------------------------------------------------
int goodB2G1_93()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042357A) ----------------------------------------------------
int goodB2G2_93()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004235D9) ----------------------------------------------------
int goodG2B1_78()
{
  return printIntLine(4u);
}

//----- (000000000042360B) ----------------------------------------------------
int goodG2B2_78()
{
  return printIntLine(4u);
}

//----- (000000000042363D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_15_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (000000000042366B) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_square_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423698) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004236AB) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_square_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004236D8) ----------------------------------------------------
int __fastcall badSink_20(int a1)
{
  int result; // eax

  result = badStatic_6;
  if ( badStatic_6 )
    result = printIntLine(a1 * a1);
  return result;
}
// 6712B4: using guessed type int badStatic_6;

//----- (0000000000423703) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_21_bad()
{
  badStatic_6 = 1;
  return badSink_20(0x7FFFFFFF);
}
// 6712B4: using guessed type int badStatic_6;

//----- (000000000042372F) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(int a1)
{
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 6712B8: using guessed type int goodB2G1Static_6;

//----- (000000000042378D) ----------------------------------------------------
int goodB2G1_94()
{
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(0x7FFFFFFF);
}
// 6712B8: using guessed type int goodB2G1Static_6;

//----- (00000000004237B9) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(int a1)
{
  int result; // eax

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 6712BC: using guessed type int goodB2G2Static_6;

//----- (000000000042380B) ----------------------------------------------------
int goodB2G2_94()
{
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(0x7FFFFFFF);
}
// 6712BC: using guessed type int goodB2G2Static_6;

//----- (0000000000423837) ----------------------------------------------------
int __fastcall goodG2BSink_20(int a1)
{
  int result; // eax

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
    result = printIntLine(a1 * a1);
  return result;
}
// 6712C0: using guessed type int goodG2BStatic_6;

//----- (0000000000423862) ----------------------------------------------------
int goodG2B_130()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_20(2);
}
// 6712C0: using guessed type int goodG2BStatic_6;

//----- (000000000042388E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_21_good()
{
  goodB2G1_94();
  goodB2G2_94();
  return goodG2B_130();
}

//----- (00000000004238B2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_03_bad()
{
  return printIntLine(1u);
}

//----- (00000000004238DE) ----------------------------------------------------
int goodB2G1_95()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423931) ----------------------------------------------------
int goodB2G2_95()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423984) ----------------------------------------------------
int goodG2B1_79()
{
  return printIntLine(4u);
}

//----- (00000000004239B0) ----------------------------------------------------
int goodG2B2_79()
{
  return printIntLine(4u);
}

//----- (00000000004239DC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_03_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (0000000000423A0A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54c_badSink(a1);
}

//----- (0000000000423A21) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54c_goodG2BSink(a1);
}

//----- (0000000000423A38) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000423A4F) ----------------------------------------------------
__int64 __fastcall badSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423A7C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_42_bad()
{
  int result; // eax

  result = badSource_2(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000423AB2) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 2LL;
}

//----- (0000000000423AC5) ----------------------------------------------------
int goodG2B_131()
{
  int result; // eax

  result = goodG2BSource_2();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000423AFB) ----------------------------------------------------
__int64 __fastcall goodB2GSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423B28) ----------------------------------------------------
int goodB2G_115()
{
  int result; // eax

  result = goodB2GSource_2(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (0000000000423B73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_42_good()
{
  goodB2G_115();
  return goodG2B_131();
}

//----- (0000000000423B8D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11;
  v6 = v11 + 1;
  return printIntLine(v11 + 1);
}
// 423B8D: using guessed type char buf[16];

//----- (0000000000423CD0) ----------------------------------------------------
int goodG2B_132()
{
  return printIntLine(3u);
}

//----- (0000000000423D07) ----------------------------------------------------
int goodB2G_116()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11;
  if ( v11 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 + 1;
  return printIntLine(v7 + 1);
}
// 423D07: using guessed type char buf[16];

//----- (0000000000423E5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_34_good()
{
  goodG2B_132();
  return goodB2G_116();
}

//----- (0000000000423E79) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_18_bad()
{
  return printIntLine(1u);
}

//----- (0000000000423EA7) ----------------------------------------------------
int goodB2G_117()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423EFC) ----------------------------------------------------
int goodG2B_133()
{
  return printIntLine(4u);
}

//----- (0000000000423F2A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_18_good()
{
  goodB2G_117();
  return goodG2B_133();
}

//----- (0000000000423F44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000423F6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000423F9A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000423FDA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_54_bad()
{
  return CWE190_Integer_Overflow__int_max_multiply_54b_badSink(0x7FFFFFFF);
}

//----- (0000000000423FFC) ----------------------------------------------------
int goodG2B_134()
{
  return CWE190_Integer_Overflow__int_max_multiply_54b_goodG2BSink(2);
}

//----- (000000000042401E) ----------------------------------------------------
int goodB2G_118()
{
  return CWE190_Integer_Overflow__int_max_multiply_54b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000424040) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_54_good()
{
  goodG2B_134();
  return goodB2G_118();
}

//----- (000000000042405A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_63b_badSink(&v5);
}
// 42405A: using guessed type char buf[16];

//----- (000000000042418A) ----------------------------------------------------
int goodG2B_135()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_63b_goodG2BSink(&v1);
}

//----- (00000000004241AE) ----------------------------------------------------
int goodB2G_119()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_63b_goodB2GSink(&v5);
}
// 4241AE: using guessed type char buf[16];

//----- (00000000004242DE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_63_good()
{
  goodG2B_135();
  return goodB2G_119();
}

//----- (00000000004242F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53c_badSink(a1);
}

//----- (000000000042430F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53c_goodG2BSink(a1);
}

//----- (0000000000424326) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53c_goodB2GSink(a1);
}

//----- (000000000042433D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_63b_badSink(&v1);
}

//----- (0000000000424361) ----------------------------------------------------
int goodG2B_136()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_add_63b_goodG2BSink(&v1);
}

//----- (0000000000424385) ----------------------------------------------------
int goodB2G_120()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_63b_goodB2GSink(&v1);
}

//----- (00000000004243A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_63_good()
{
  goodG2B_136();
  return goodB2G_120();
}

//----- (00000000004243C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_53c_badSink(a1);
}

//----- (00000000004243DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_53c_goodG2BSink(a1);
}

//----- (00000000004243F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_53c_goodB2GSink(a1);
}

//----- (0000000000424408) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042442D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000424452) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042448C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 42448C: using guessed type char buf[16];

//----- (00000000004245DC) ----------------------------------------------------
int goodB2G1_96()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;
// 4245DC: using guessed type char buf[16];

//----- (000000000042475F) ----------------------------------------------------
int goodB2G2_96()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 42475F: using guessed type char buf[16];

//----- (00000000004248D6) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000424922) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000424962) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_09_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (0000000000424990) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004249B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004249D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000424A05) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_68_bad()
{
  CWE190_Integer_Overflow__int_max_square_68_badData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_68b_badSink();
}
// 6713D8: using guessed type int CWE190_Integer_Overflow__int_max_square_68_badData;

//----- (0000000000424A30) ----------------------------------------------------
int goodG2B_137()
{
  CWE190_Integer_Overflow__int_max_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_max_square_68b_goodG2BSink();
}
// 6713E0: using guessed type int CWE190_Integer_Overflow__int_max_square_68_goodG2BData;

//----- (0000000000424A5B) ----------------------------------------------------
int goodB2G_121()
{
  CWE190_Integer_Overflow__int_max_square_68_goodB2GData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_68b_goodB2GSink();
}
// 6713DC: using guessed type int CWE190_Integer_Overflow__int_max_square_68_goodB2GData;

//----- (0000000000424A86) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_68_good()
{
  goodG2B_137();
  return goodB2G_121();
}

//----- (0000000000424AA0) ----------------------------------------------------
int __fastcall badSink_21(int a1)
{
  int result; // eax

  result = badStatic_7;
  if ( badStatic_7 )
    result = printIntLine(a1 * a1);
  return result;
}
// 6712C4: using guessed type int badStatic_7;

//----- (0000000000424ACB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_7 = 1;
  return badSink_21(v4);
}
// 6712C4: using guessed type int badStatic_7;

//----- (0000000000424B3D) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(int a1)
{
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 6712C8: using guessed type int goodB2G1Static_7;

//----- (0000000000424B9B) ----------------------------------------------------
int goodB2G1_97()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(v4);
}
// 6712C8: using guessed type int goodB2G1Static_7;

//----- (0000000000424C0D) ----------------------------------------------------
int __fastcall goodB2G2Sink_7(int a1)
{
  int result; // eax

  result = goodB2G2Static_7;
  if ( goodB2G2Static_7 )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 6712CC: using guessed type int goodB2G2Static_7;

//----- (0000000000424C5F) ----------------------------------------------------
int goodB2G2_97()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(v4);
}
// 6712CC: using guessed type int goodB2G2Static_7;

//----- (0000000000424CD1) ----------------------------------------------------
int __fastcall goodG2BSink_21(int a1)
{
  int result; // eax

  result = goodG2BStatic_7;
  if ( goodG2BStatic_7 )
    result = printIntLine(a1 * a1);
  return result;
}
// 6712D0: using guessed type int goodG2BStatic_7;

//----- (0000000000424CFC) ----------------------------------------------------
int goodG2B_138()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_21(2);
}
// 6712D0: using guessed type int goodG2BStatic_7;

//----- (0000000000424D28) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_21_good()
{
  goodB2G1_97();
  goodB2G2_97();
  return goodG2B_138();
}

//----- (0000000000424D4C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_03_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000424DBE) ----------------------------------------------------
int goodB2G1_98()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000424E57) ----------------------------------------------------
int goodB2G2_98()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000424EF0) ----------------------------------------------------
int goodG2B1_81()
{
  return printIntLine(4u);
}

//----- (0000000000424F1C) ----------------------------------------------------
int goodG2B2_81()
{
  return printIntLine(4u);
}

//----- (0000000000424F48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_03_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000424F76) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_68_badData = v1;
  return CWE190_Integer_Overflow__int_fscanf_add_68b_badSink();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6713E4: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_68_badData;

//----- (0000000000424FB7) ----------------------------------------------------
int goodG2B_139()
{
  CWE190_Integer_Overflow__int_fscanf_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fscanf_add_68b_goodG2BSink();
}
// 6713E8: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_68_goodG2BData;

//----- (0000000000424FE2) ----------------------------------------------------
int goodB2G_122()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int_fscanf_add_68b_goodB2GSink();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6713EC: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_68_goodB2GData;

//----- (0000000000425023) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_68_good()
{
  goodG2B_139();
  return goodB2G_122();
}

//----- (000000000042503D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54e_badSink(a1);
}

//----- (0000000000425054) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54e_goodG2BSink(a1);
}

//----- (000000000042506B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54e_goodB2GSink(a1);
}

//----- (0000000000425082) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 * v1);
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}

//----- (0000000000425110) ----------------------------------------------------
int goodB2G_123()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004251C6) ----------------------------------------------------
int goodG2B_140()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000042522D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_12_good()
{
  goodB2G_123();
  return goodG2B_140();
}

//----- (0000000000425247) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_18_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (00000000004252BB) ----------------------------------------------------
int goodB2G_124()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000425356) ----------------------------------------------------
int goodG2B_141()
{
  return printIntLine(4u);
}

//----- (0000000000425384) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_18_good()
{
  goodB2G_124();
  return goodG2B_141();
}

//----- (000000000042539E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004253C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004253E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000425422) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671148: using guessed type int staticTrue_3;

//----- (000000000042547D) ----------------------------------------------------
int goodB2G1_99()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse_3 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671148: using guessed type int staticTrue_3;
// 6712D4: using guessed type int staticFalse_3;

//----- (00000000004254FA) ----------------------------------------------------
int goodB2G2_99()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671148: using guessed type int staticTrue_3;

//----- (000000000042556B) ----------------------------------------------------
int goodG2B1_82()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 671148: using guessed type int staticTrue_3;
// 6712D4: using guessed type int staticFalse_3;

//----- (00000000004255BB) ----------------------------------------------------
int goodG2B2_82()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 671148: using guessed type int staticTrue_3;

//----- (00000000004255FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_05_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (000000000042562D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_54b_badSink(v4);
}

//----- (0000000000425695) ----------------------------------------------------
int goodG2B_142()
{
  return CWE190_Integer_Overflow__int_fgets_multiply_54b_goodG2BSink(2);
}

//----- (00000000004256B7) ----------------------------------------------------
int goodB2G_125()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_54b_goodB2GSink(v4);
}

//----- (000000000042571F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_54_good()
{
  goodG2B_142();
  return goodB2G_125();
}

//----- (0000000000425739) ----------------------------------------------------
int __fastcall badSink_22(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042575E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_22(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000425796) ----------------------------------------------------
int __fastcall goodG2BSink_22(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004257BB) ----------------------------------------------------
int goodG2B_143()
{
  return goodG2BSink_22(2);
}

//----- (00000000004257DD) ----------------------------------------------------
int __fastcall goodB2GSink_13(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000425817) ----------------------------------------------------
int goodB2G_126()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_13(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042584F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_41_good()
{
  goodB2G_126();
  return goodG2B_143();
}

//----- (0000000000425869) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_max_square_22_badGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 671290: using guessed type int CWE190_Integer_Overflow__int_max_square_22_badGlobal;

//----- (0000000000425894) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_max_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 671294: using guessed type int CWE190_Integer_Overflow__int_max_square_22_goodB2G1Global;

//----- (00000000004258F2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_max_square_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 671298: using guessed type int CWE190_Integer_Overflow__int_max_square_22_goodB2G2Global;

//----- (0000000000425944) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_max_square_22_goodG2BGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 67129C: using guessed type int CWE190_Integer_Overflow__int_max_square_22_goodG2BGlobal;

//----- (000000000042596F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67114C: using guessed type int staticFive_8;

//----- (00000000004259C9) ----------------------------------------------------
int goodB2G1_100()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67114C: using guessed type int staticFive_8;

//----- (0000000000425A59) ----------------------------------------------------
int goodB2G2_100()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67114C: using guessed type int staticFive_8;

//----- (0000000000425ADD) ----------------------------------------------------
int goodG2B1_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 67114C: using guessed type int staticFive_8;

//----- (0000000000425B2B) ----------------------------------------------------
int goodG2B2_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = 2;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 67114C: using guessed type int staticFive_8;

//----- (0000000000425B6D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_07_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (0000000000425B9B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000425BBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000425BDB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000425C10) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_add_66b_badSink((__int64)&v5);
}
// 425C10: using guessed type char buf[16];

//----- (0000000000425D46) ----------------------------------------------------
int goodG2B_144()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_add_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000425D70) ----------------------------------------------------
int goodB2G_127()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_add_66b_goodB2GSink((__int64)&v5);
}
// 425D70: using guessed type char buf[16];

//----- (0000000000425EA6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_66_good()
{
  goodG2B_144();
  return goodB2G_127();
}

//----- (0000000000425EC0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53b_badSink(v8);
}
// 425EC0: using guessed type char buf[16];

//----- (0000000000425FEE) ----------------------------------------------------
int goodG2B_145()
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53b_goodG2BSink(2);
}

//----- (0000000000426010) ----------------------------------------------------
int goodB2G_128()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_53b_goodB2GSink(v8);
}
// 426010: using guessed type char buf[16];

//----- (000000000042613E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_53_good()
{
  goodG2B_145();
  return goodB2G_128();
}

//----- (0000000000426158) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_53b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426190) ----------------------------------------------------
int goodG2B_146()
{
  return CWE190_Integer_Overflow__int_fscanf_add_53b_goodG2BSink(2);
}

//----- (00000000004261B2) ----------------------------------------------------
int goodB2G_129()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_53b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004261EA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_53_good()
{
  goodG2B_146();
  return goodB2G_129();
}

//----- (0000000000426204) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_15_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000426231) ----------------------------------------------------
int goodB2G1_101()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000426273) ----------------------------------------------------
int goodB2G2_101()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004262B5) ----------------------------------------------------
int goodG2B1_84()
{
  return printIntLine(3u);
}

//----- (00000000004262E2) ----------------------------------------------------
int goodG2B2_84()
{
  return printIntLine(3u);
}

//----- (000000000042630F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_15_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (000000000042633D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54c_badSink(a1);
}

//----- (0000000000426354) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54c_goodG2BSink(a1);
}

//----- (000000000042636B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_54c_goodB2GSink(a1);
}

//----- (0000000000426382) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_53d_badSink(a1);
}

//----- (0000000000426399) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_53d_goodG2BSink(a1);
}

//----- (00000000004263B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_53d_goodB2GSink(a1);
}

//----- (00000000004263C7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_34_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  v3 = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v3;
    result = printIntLine(2 * v3);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426419) ----------------------------------------------------
int goodG2B_147()
{
  return printIntLine(4u);
}

//----- (0000000000426455) ----------------------------------------------------
int goodB2G_130()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  v3 = v1;
  if ( v1 > 0 )
  {
    if ( v3 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v3;
      result = printIntLine(2 * v3);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004264BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_34_good()
{
  goodG2B_147();
  return goodB2G_130();
}

//----- (00000000004264D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_12_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v6 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v5 = v6 * v6;
    result = printIntLine(v6 * v6);
  }
  else if ( v6 == 0x80000000 || v6 < -46339 || v6 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v4 = v6 * v6;
    result = printIntLine(v6 * v6);
  }
  return result;
}

//----- (00000000004265AA) ----------------------------------------------------
int goodB2G_131()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  int v7; // [rsp+24h] [rbp-Ch]
  int v8; // [rsp+28h] [rbp-8h]
  int v9; // [rsp+2Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v9 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v8 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  else if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v7 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}

//----- (00000000004266EC) ----------------------------------------------------
int goodG2B_148()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (0000000000426753) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_12_good()
{
  goodB2G_131();
  return goodG2B_148();
}

//----- (000000000042676D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54c_badSink(a1);
}

//----- (0000000000426784) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54c_goodG2BSink(a1);
}

//----- (000000000042679B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_54c_goodB2GSink(a1);
}

//----- (00000000004267B2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (00000000004267E2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (0000000000426812) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (0000000000426857) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042687C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004268A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (00000000004268DB) ----------------------------------------------------
__int64 badSource_3()
{
  return 0x7FFFFFFFLL;
}

//----- (00000000004268EE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_42_bad()
{
  int v0; // eax

  v0 = badSource_3();
  return printIntLine(v0 + 1);
}

//----- (000000000042691F) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 2LL;
}

//----- (0000000000426932) ----------------------------------------------------
int goodG2B_149()
{
  int v0; // eax

  v0 = goodG2BSource_3();
  return printIntLine(v0 + 1);
}

//----- (0000000000426963) ----------------------------------------------------
__int64 goodB2GSource_3()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000426976) ----------------------------------------------------
int goodB2G_132()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_3();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004269BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_42_good()
{
  goodB2G_132();
  return goodG2B_149();
}

//----- (00000000004269D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000426A1E) ----------------------------------------------------
int goodB2G1_102()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}

//----- (0000000000426A99) ----------------------------------------------------
int goodB2G2_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}

//----- (0000000000426B08) ----------------------------------------------------
int goodG2B1_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000426B5C) ----------------------------------------------------
int goodG2B2_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000426BA4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_11_good()
{
  goodB2G1_102();
  goodB2G2_102();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000426BD2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_02_bad()
{
  return printIntLine(1u);
}

//----- (0000000000426BFE) ----------------------------------------------------
int goodB2G1_103()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000426C51) ----------------------------------------------------
int goodB2G2_103()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000426CA4) ----------------------------------------------------
int goodG2B1_86()
{
  return printIntLine(4u);
}

//----- (0000000000426CD0) ----------------------------------------------------
int goodG2B2_86()
{
  return printIntLine(4u);
}

//----- (0000000000426CFC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_02_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000426D2A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671150: using guessed type int staticTrue_4;

//----- (0000000000426D69) ----------------------------------------------------
int goodB2G1_104()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 0x7FFFFFFF;
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 671150: using guessed type int staticTrue_4;
// 6712D8: using guessed type int staticFalse_4;

//----- (0000000000426DC9) ----------------------------------------------------
int goodB2G2_104()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 671150: using guessed type int staticTrue_4;

//----- (0000000000426E1D) ----------------------------------------------------
int goodG2B1_87()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671150: using guessed type int staticTrue_4;
// 6712D8: using guessed type int staticFalse_4;

//----- (0000000000426E68) ----------------------------------------------------
int goodG2B2_87()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671150: using guessed type int staticTrue_4;

//----- (0000000000426EA7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_05_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (0000000000426ED5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53d_badSink(a1);
}

//----- (0000000000426EEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53d_goodG2BSink(a1);
}

//----- (0000000000426F03) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53d_goodB2GSink(a1);
}

//----- (0000000000426F1A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000426F5A) ----------------------------------------------------
int goodB2G1_105()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000426FCD) ----------------------------------------------------
int goodB2G2_105()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000427034) ----------------------------------------------------
int goodG2B1_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000427080) ----------------------------------------------------
int goodG2B2_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (00000000004270C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_10_good()
{
  goodB2G1_105();
  goodB2G2_105();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (00000000004270EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_52c_badSink(a1);
}

//----- (0000000000427105) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_52c_goodG2BSink(a1);
}

//----- (000000000042711C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_52c_goodB2GSink(a1);
}

//----- (0000000000427133) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}

//----- (00000000004271C1) ----------------------------------------------------
int goodB2G1_106()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000427282) ----------------------------------------------------
int goodB2G2_106()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}

//----- (0000000000427337) ----------------------------------------------------
int goodG2B1_89()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042738B) ----------------------------------------------------
int goodG2B2_89()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004273D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_11_good()
{
  goodB2G1_106();
  goodB2G2_106();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (0000000000427401) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_02_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000427473) ----------------------------------------------------
int goodB2G1_107()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000042750C) ----------------------------------------------------
int goodB2G2_107()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (00000000004275A5) ----------------------------------------------------
int goodG2B1_90()
{
  return printIntLine(4u);
}

//----- (00000000004275D1) ----------------------------------------------------
int goodG2B2_90()
{
  return printIntLine(4u);
}

//----- (00000000004275FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_02_good()
{
  goodB2G1_107();
  goodB2G2_107();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (000000000042762B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_52c_badSink(a1);
}

//----- (0000000000427642) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_52c_goodG2BSink(a1);
}

//----- (0000000000427659) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_52c_goodB2GSink(a1);
}

//----- (0000000000427670) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54d_badSink(a1);
}

//----- (0000000000427687) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54d_goodG2BSink(a1);
}

//----- (000000000042769E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54d_goodB2GSink(a1);
}

//----- (00000000004276B5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004276DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004276FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000427739) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int_max_multiply_68_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_max_multiply_68_badData);
  return result;
}
// 6713F0: using guessed type int CWE190_Integer_Overflow__int_max_multiply_68_badData;

//----- (0000000000427764) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData);
  return result;
}
// 6713F4: using guessed type int CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData;

//----- (000000000042778F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData);
  }
  return result;
}
// 6713F8: using guessed type int CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData;

//----- (00000000004277CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53d_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004277F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000427811) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000427859) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;

//----- (00000000004278B4) ----------------------------------------------------
int goodB2G1_108()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000427931) ----------------------------------------------------
int goodB2G2_108()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67116C: using guessed type int globalTrue;

//----- (00000000004279A2) ----------------------------------------------------
int goodG2B1_91()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (00000000004279F2) ----------------------------------------------------
int goodG2B2_91()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000427A36) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_10_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (0000000000427A64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_451560, &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427AB7) ----------------------------------------------------
int goodB2G1_109()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_451560, &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427B2C) ----------------------------------------------------
int goodB2G2_109()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_451560, &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427B95) ----------------------------------------------------
int goodG2B1_92()
{
  return printIntLine(3u);
}

//----- (0000000000427BDE) ----------------------------------------------------
int goodG2B2_92()
{
  return printIntLine(3u);
}

//----- (0000000000427C1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_04_good()
{
  goodB2G1_109();
  goodB2G2_109();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (0000000000427C49) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_04_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (0000000000427C8B) ----------------------------------------------------
int goodB2G1_110()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000427CEE) ----------------------------------------------------
int goodB2G2_110()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000427D45) ----------------------------------------------------
int goodG2B1_93()
{
  return printIntLine(4u);
}

//----- (0000000000427D93) ----------------------------------------------------
int goodG2B2_93()
{
  return printIntLine(4u);
}

//----- (0000000000427DD5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_04_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (0000000000427E03) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000427E89) ----------------------------------------------------
int goodB2G1_111()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (0000000000427F42) ----------------------------------------------------
int goodB2G2_111()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (0000000000427FEF) ----------------------------------------------------
int goodG2B1_94()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;
// 671398: using guessed type int globalFalse;

//----- (000000000042803B) ----------------------------------------------------
int goodG2B2_94()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 67116C: using guessed type int globalTrue;

//----- (000000000042807B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_10_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (00000000004280A9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54e_badSink(a1);
}

//----- (00000000004280C0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54e_goodG2BSink(a1);
}

//----- (00000000004280D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54e_goodB2GSink(a1);
}

//----- (00000000004280EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_65b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042810F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000428130) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000428178) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_34_bad()
{
  return printIntLine(0x80000000);
}

//----- (00000000004281AF) ----------------------------------------------------
int goodG2B_150()
{
  return printIntLine(3u);
}

//----- (00000000004281E6) ----------------------------------------------------
int goodB2G_133()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000428232) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_34_good()
{
  goodG2B_150();
  return goodB2G_133();
}

//----- (000000000042824C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54d_badSink(a1);
}

//----- (0000000000428263) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54d_goodG2BSink(a1);
}

//----- (000000000042827A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54d_goodB2GSink(a1);
}

//----- (0000000000428291) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (00000000004282BC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (00000000004282E7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000428327) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_01_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000428399) ----------------------------------------------------
int goodG2B_151()
{
  return printIntLine(4u);
}

//----- (00000000004283C5) ----------------------------------------------------
int goodB2G_134()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000042845E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_01_good()
{
  goodG2B_151();
  return goodB2G_134();
}

//----- (0000000000428478) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_52b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004284B0) ----------------------------------------------------
int goodG2B_152()
{
  return CWE190_Integer_Overflow__int_fscanf_add_52b_goodG2BSink(2);
}

//----- (00000000004284D2) ----------------------------------------------------
int goodB2G_135()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_52b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042850A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_52_good()
{
  goodG2B_152();
  return goodB2G_135();
}

//----- (0000000000428524) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000428549) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042856E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (00000000004285A8) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (00000000004285B3) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (00000000004285BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000428606) ----------------------------------------------------
int goodB2G1_112()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}

//----- (0000000000428681) ----------------------------------------------------
int goodB2G2_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_6();
  if ( result )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}

//----- (00000000004286F0) ----------------------------------------------------
int goodG2B1_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000428744) ----------------------------------------------------
int goodG2B2_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042878C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_08_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (00000000004287BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53d_badSink(a1);
}

//----- (00000000004287D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53d_goodG2BSink(a1);
}

//----- (00000000004287E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53d_goodB2GSink(a1);
}

//----- (00000000004287FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 4287FF: using guessed type char buf[16];

//----- (000000000042893D) ----------------------------------------------------
int goodB2G_136()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 42893D: using guessed type char buf[16];

//----- (0000000000428A90) ----------------------------------------------------
int goodG2B_153()
{
  return printIntLine(4u);
}

//----- (0000000000428AC2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_16_good()
{
  goodB2G_136();
  return goodG2B_153();
}

//----- (0000000000428ADC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428B1F) ----------------------------------------------------
int goodB2G_137()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428B78) ----------------------------------------------------
int goodG2B_154()
{
  return printIntLine(3u);
}

//----- (0000000000428BA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_16_good()
{
  goodB2G_137();
  return goodG2B_154();
}

//----- (0000000000428BBF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_68_bad()
{
  CWE190_Integer_Overflow__int_max_multiply_68_badData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_68b_badSink();
}
// 6713F0: using guessed type int CWE190_Integer_Overflow__int_max_multiply_68_badData;

//----- (0000000000428BEA) ----------------------------------------------------
int goodG2B_155()
{
  CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_max_multiply_68b_goodG2BSink();
}
// 6713F4: using guessed type int CWE190_Integer_Overflow__int_max_multiply_68_goodG2BData;

//----- (0000000000428C15) ----------------------------------------------------
int goodB2G_138()
{
  CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_68b_goodB2GSink();
}
// 6713F8: using guessed type int CWE190_Integer_Overflow__int_max_multiply_68_goodB2GData;

//----- (0000000000428C40) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_68_good()
{
  goodG2B_155();
  return goodB2G_138();
}

//----- (0000000000428C5A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_01_bad()
{
  return printIntLine(1u);
}

//----- (0000000000428C86) ----------------------------------------------------
int goodG2B_156()
{
  return printIntLine(4u);
}

//----- (0000000000428CB2) ----------------------------------------------------
int goodB2G_139()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000428D05) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_01_good()
{
  goodG2B_156();
  return goodB2G_139();
}

//----- (0000000000428D1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000428D44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000428D69) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000428DA3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000428DDA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000428E11) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (0000000000428E5D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_square_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_square_65b_badSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 428E5D: using guessed type char buf[16];

//----- (0000000000428F94) ----------------------------------------------------
int goodG2B_157()
{
  return CWE190_Integer_Overflow__int_listen_socket_square_65b_goodG2BSink(2);
}

//----- (0000000000428FBF) ----------------------------------------------------
__int64 goodB2G_140()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_square_65b_goodB2GSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 428FBF: using guessed type char buf[16];

//----- (00000000004290F6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_square_65_good()
{
  goodG2B_157();
  return goodB2G_140();
}

//----- (0000000000429110) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53c_badSink(a1);
}

//----- (0000000000429127) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53c_goodG2BSink(a1);
}

//----- (000000000042913E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53c_goodB2GSink(a1);
}

//----- (0000000000429155) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042917A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042919F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (00000000004291D9) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (00000000004291E4) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (00000000004291EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_7();
  if ( result )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}

//----- (000000000042927D) ----------------------------------------------------
int goodB2G1_113()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_7() )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000042933E) ----------------------------------------------------
int goodB2G2_113()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}

//----- (00000000004293F3) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000429447) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042948F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_08_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (00000000004294BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_66b_badSink((__int64)&v1);
}

//----- (00000000004294E7) ----------------------------------------------------
int goodG2B_158()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_max_add_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000429511) ----------------------------------------------------
int goodB2G_141()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000042953B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_66_good()
{
  goodG2B_158();
  return goodB2G_141();
}

//----- (0000000000429555) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_53_bad()
{
  return CWE190_Integer_Overflow__int_max_multiply_53b_badSink(0x7FFFFFFF);
}

//----- (0000000000429577) ----------------------------------------------------
int goodG2B_159()
{
  return CWE190_Integer_Overflow__int_max_multiply_53b_goodG2BSink(2);
}

//----- (0000000000429599) ----------------------------------------------------
int goodB2G_142()
{
  return CWE190_Integer_Overflow__int_max_multiply_53b_goodB2GSink(0x7FFFFFFF);
}

//----- (00000000004295BB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_53_good()
{
  goodG2B_159();
  return goodB2G_142();
}

//----- (00000000004295D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_51b_badSink(v8);
}
// 4295D5: using guessed type char buf[16];

//----- (0000000000429703) ----------------------------------------------------
int goodG2B_160()
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_51b_goodG2BSink(2);
}

//----- (0000000000429725) ----------------------------------------------------
int goodB2G_143()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_51b_goodB2GSink(v8);
}
// 429725: using guessed type char buf[16];

//----- (0000000000429853) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_51_good()
{
  goodG2B_160();
  return goodB2G_143();
}

//----- (000000000042986D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_68_badData = v4;
  return CWE190_Integer_Overflow__int_fgets_multiply_68b_badSink();
}
// 6713FC: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_68_badData;

//----- (00000000004298DE) ----------------------------------------------------
int goodG2B_161()
{
  CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fgets_multiply_68b_goodG2BSink();
}
// 671404: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData;

//----- (0000000000429909) ----------------------------------------------------
int goodB2G_144()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int_fgets_multiply_68b_goodB2GSink();
}
// 671400: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData;

//----- (000000000042997A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_68_good()
{
  goodG2B_161();
  return goodB2G_144();
}

//----- (0000000000429994) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_52b_badSink(v8);
}
// 429994: using guessed type char buf[16];

//----- (0000000000429AC2) ----------------------------------------------------
int goodG2B_162()
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_52b_goodG2BSink(2);
}

//----- (0000000000429AE4) ----------------------------------------------------
int goodB2G_145()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_52b_goodB2GSink(v8);
}
// 429AE4: using guessed type char buf[16];

//----- (0000000000429C12) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_52_good()
{
  goodG2B_162();
  return goodB2G_145();
}

//----- (0000000000429C2C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429C4C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429C6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000429CA1) ----------------------------------------------------
int __fastcall badSink_23(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429CC1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_41_bad()
{
  return badSink_23(0x7FFFFFFF);
}

//----- (0000000000429CE3) ----------------------------------------------------
int __fastcall goodG2BSink_23(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429D03) ----------------------------------------------------
int goodG2B_163()
{
  return goodG2BSink_23(2);
}

//----- (0000000000429D25) ----------------------------------------------------
int __fastcall goodB2GSink_14(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000429D5A) ----------------------------------------------------
int goodB2G_146()
{
  return goodB2GSink_14(0x7FFFFFFF);
}

//----- (0000000000429D7C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_41_good()
{
  goodB2G_146();
  return goodG2B_163();
}

//----- (0000000000429D96) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_31_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (0000000000429DD2) ----------------------------------------------------
int goodG2B_164()
{
  return printIntLine(4u);
}

//----- (0000000000429E0E) ----------------------------------------------------
int goodB2G_147()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429E5F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_31_good()
{
  goodG2B_164();
  return goodB2G_147();
}

//----- (0000000000429E79) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_65b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000429E9A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000429EBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000429F03) ----------------------------------------------------
int badSink_24()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData);
  return result;
}
// 6712DC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData;

//----- (0000000000429F2E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData = v8;
  return badSink_24();
}
// 6712DC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_45_badData;
// 429F2E: using guessed type char buf[16];

//----- (000000000042A065) ----------------------------------------------------
int goodG2BSink_24()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData);
  return result;
}
// 6712E0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData;

//----- (000000000042A090) ----------------------------------------------------
int goodG2B_165()
{
  CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData = 2;
  return goodG2BSink_24();
}
// 6712E0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodG2BData;

//----- (000000000042A0BB) ----------------------------------------------------
int goodB2GSink_15()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData);
  }
  return result;
}
// 6712E4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData;

//----- (000000000042A0FB) ----------------------------------------------------
int goodB2G_148()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData = v8;
  return goodB2GSink_15();
}
// 6712E4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_45_goodB2GData;
// 42A0FB: using guessed type char buf[16];

//----- (000000000042A232) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_45_good()
{
  goodG2B_165();
  return goodB2G_148();
}

//----- (000000000042A24C) ----------------------------------------------------
int badSink_25()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_add_45_badData + 1);
}
// 6712E8: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_45_badData;

//----- (000000000042A272) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_45_badData = v1;
  return badSink_25();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6712E8: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_45_badData;

//----- (000000000042A2B3) ----------------------------------------------------
int goodG2BSink_25()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_add_45_goodG2BData + 1);
}
// 6712EC: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_45_goodG2BData;

//----- (000000000042A2D9) ----------------------------------------------------
int goodG2B_166()
{
  CWE190_Integer_Overflow__int_fscanf_add_45_goodG2BData = 2;
  return goodG2BSink_25();
}
// 6712EC: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_45_goodG2BData;

//----- (000000000042A304) ----------------------------------------------------
int goodB2GSink_16()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_add_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fscanf_add_45_goodB2GData + 1);
  return result;
}
// 6712F0: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_45_goodB2GData;

//----- (000000000042A33F) ----------------------------------------------------
int goodB2G_149()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_45_goodB2GData = v1;
  return goodB2GSink_16();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6712F0: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_45_goodB2GData;

//----- (000000000042A380) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_45_good()
{
  goodG2B_166();
  return goodB2G_149();
}

//----- (000000000042A39A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_53b_badSink(v4);
}

//----- (000000000042A402) ----------------------------------------------------
int goodG2B_167()
{
  return CWE190_Integer_Overflow__int_fgets_multiply_53b_goodG2BSink(2);
}

//----- (000000000042A424) ----------------------------------------------------
int goodB2G_150()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_53b_goodB2GSink(v4);
}

//----- (000000000042A48C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_53_good()
{
  goodG2B_167();
  return goodB2G_150();
}

//----- (000000000042A4A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 5;
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 42A4A6: using guessed type char buf[16];

//----- (000000000042A5FA) ----------------------------------------------------
int goodB2G1_114()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 5;
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 42A5FA: using guessed type char buf[16];

//----- (000000000042A76F) ----------------------------------------------------
int goodB2G2_114()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 5;
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 42A76F: using guessed type char buf[16];

//----- (000000000042A8D8) ----------------------------------------------------
int goodG2B1_97()
{
  return printIntLine(4u);
}

//----- (000000000042A928) ----------------------------------------------------
int goodG2B2_97()
{
  return printIntLine(4u);
}

//----- (000000000042A96C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_06_good()
{
  goodB2G1_114();
  goodB2G2_114();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (000000000042A99A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54c_badSink(a1);
}

//----- (000000000042A9B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54c_goodG2BSink(a1);
}

//----- (000000000042A9C8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_54c_goodB2GSink(a1);
}

//----- (000000000042A9DF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_451B74, &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042AA34) ----------------------------------------------------
int goodB2G1_115()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_451B74, &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042AAAB) ----------------------------------------------------
int goodB2G2_115()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_451B74, &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042AB16) ----------------------------------------------------
int goodG2B1_98()
{
  return printIntLine(3u);
}

//----- (000000000042AB61) ----------------------------------------------------
int goodG2B2_98()
{
  return printIntLine(3u);
}

//----- (000000000042ABA0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_06_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (000000000042ABCE) ----------------------------------------------------
__int64 __fastcall badSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042ABFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_42_bad()
{
  int v0; // eax

  v0 = badSource_4(0);
  return printIntLine(v0 * v0);
}

//----- (000000000042AC2D) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 2LL;
}

//----- (000000000042AC40) ----------------------------------------------------
int goodG2B_168()
{
  int v0; // eax

  v0 = goodG2BSource_4();
  return printIntLine(v0 * v0);
}

//----- (000000000042AC72) ----------------------------------------------------
__int64 __fastcall goodB2GSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042AC9F) ----------------------------------------------------
int goodB2G_151()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_4(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042ACF8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_42_good()
{
  goodB2G_151();
  return goodG2B_168();
}

//----- (000000000042AD12) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_53d_badSink(a1);
}

//----- (000000000042AD29) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_53d_goodG2BSink(a1);
}

//----- (000000000042AD40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_53d_goodB2GSink(a1);
}

//----- (000000000042AD57) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_52c_badSink(a1);
}

//----- (000000000042AD6E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_52c_goodG2BSink(a1);
}

//----- (000000000042AD85) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_52c_goodB2GSink(a1);
}

//----- (000000000042AD9C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_54_bad()
{
  return CWE190_Integer_Overflow__int_max_square_54b_badSink(0x7FFFFFFF);
}

//----- (000000000042ADBE) ----------------------------------------------------
int goodG2B_169()
{
  return CWE190_Integer_Overflow__int_max_square_54b_goodG2BSink(2);
}

//----- (000000000042ADE0) ----------------------------------------------------
int goodB2G_152()
{
  return CWE190_Integer_Overflow__int_max_square_54b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000042AE02) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_54_good()
{
  goodG2B_169();
  return goodB2G_152();
}

//----- (000000000042AE1C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53c_badSink(a1);
}

//----- (000000000042AE33) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53c_goodG2BSink(a1);
}

//----- (000000000042AE4A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53c_goodB2GSink(a1);
}

//----- (000000000042AE61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042AE81) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042AEA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042AED6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_52c_badSink(a1);
}

//----- (000000000042AEED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_52c_goodG2BSink(a1);
}

//----- (000000000042AF04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_52c_goodB2GSink(a1);
}

//----- (000000000042AF1B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52c_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042AF3C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042AF5D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042AFA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 42AFA5: using guessed type char buf[16];

//----- (000000000042B0F6) ----------------------------------------------------
int goodB2G1_116()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 671170: using guessed type int globalFive;
// 42B0F6: using guessed type char buf[16];

//----- (000000000042B268) ----------------------------------------------------
int goodB2G2_116()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 42B268: using guessed type char buf[16];

//----- (000000000042B3CE) ----------------------------------------------------
int goodG2B1_99()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000042B41B) ----------------------------------------------------
int goodG2B2_99()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000042B45C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_14_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (000000000042B48A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v6 = recv(v10, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  *v9 = v11;
  return printIntLine(*v8 + 1);
}
// 42B48A: using guessed type char buf[16];

//----- (000000000042B5EC) ----------------------------------------------------
int goodG2B_170()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000042B642) ----------------------------------------------------
int goodB2G_153()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v13 = 0;
  fd = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v8 = recv(v12, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  *v11 = v13;
  v7 = *v10;
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 + 1;
  return printIntLine(v7 + 1);
}
// 42B642: using guessed type char buf[16];

//----- (000000000042B7B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_32_good()
{
  goodG2B_170();
  return goodB2G_153();
}

//----- (000000000042B7D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_65b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042B7F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042B815) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042B85D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671154: using guessed type int staticTrue_5;

//----- (000000000042B8B5) ----------------------------------------------------
int goodB2G1_117()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671154: using guessed type int staticTrue_5;
// 6712F4: using guessed type int staticFalse_5;

//----- (000000000042B943) ----------------------------------------------------
int goodB2G2_117()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671154: using guessed type int staticTrue_5;

//----- (000000000042B9C5) ----------------------------------------------------
int goodG2B1_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671154: using guessed type int staticTrue_5;
// 6712F4: using guessed type int staticFalse_5;

//----- (000000000042BA11) ----------------------------------------------------
int goodG2B2_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671154: using guessed type int staticTrue_5;

//----- (000000000042BA51) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_05_good()
{
  goodB2G1_117();
  goodB2G2_117();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (000000000042BA7F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_52c_badSink(a1);
}

//----- (000000000042BA96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_52c_goodG2BSink(a1);
}

//----- (000000000042BAAD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_multiply_52c_goodB2GSink(a1);
}

//----- (000000000042BAC4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_54b_badSink(v4);
}

//----- (000000000042BB2C) ----------------------------------------------------
int goodG2B_171()
{
  return CWE190_Integer_Overflow__int_fgets_square_54b_goodG2BSink(2);
}

//----- (000000000042BB4E) ----------------------------------------------------
int goodB2G_154()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_54b_goodB2GSink(v4);
}

//----- (000000000042BBB6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_54_good()
{
  goodG2B_171();
  return goodB2G_154();
}

//----- (000000000042BBD0) ----------------------------------------------------
int __fastcall badSink_26(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042BBF1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_26(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BC29) ----------------------------------------------------
int __fastcall goodG2BSink_26(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042BC4A) ----------------------------------------------------
int goodG2B_172()
{
  return goodG2BSink_26(2);
}

//----- (000000000042BC6C) ----------------------------------------------------
int __fastcall goodB2GSink_17(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042BCB4) ----------------------------------------------------
int goodB2G_155()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_17(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BCEC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_41_good()
{
  goodB2G_155();
  return goodG2B_172();
}

//----- (000000000042BD06) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000042BD3D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000042BD74) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000042BDC0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042BDF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042BE24) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042BE6B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 42BE6B: using guessed type char buf[16];

//----- (000000000042BFBA) ----------------------------------------------------
int goodB2G1_118()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;
// 42BFBA: using guessed type char buf[16];

//----- (000000000042C12A) ----------------------------------------------------
int goodB2G2_118()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 42C12A: using guessed type char buf[16];

//----- (000000000042C28E) ----------------------------------------------------
int goodG2B1_101()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042C2D9) ----------------------------------------------------
int goodG2B2_101()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042C318) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_09_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (000000000042C346) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042C36C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042C392) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042C3CD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_52_bad()
{
  return CWE190_Integer_Overflow__int_max_multiply_52b_badSink(0x7FFFFFFF);
}

//----- (000000000042C3EF) ----------------------------------------------------
int goodG2B_173()
{
  return CWE190_Integer_Overflow__int_max_multiply_52b_goodG2BSink(2);
}

//----- (000000000042C411) ----------------------------------------------------
int goodB2G_156()
{
  return CWE190_Integer_Overflow__int_max_multiply_52b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000042C433) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_52_good()
{
  goodG2B_173();
  return goodB2G_156();
}

//----- (000000000042C44D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_53b_badSink(v8);
}
// 42C44D: using guessed type char buf[16];

//----- (000000000042C57B) ----------------------------------------------------
int goodG2B_174()
{
  return CWE190_Integer_Overflow__int_listen_socket_square_53b_goodG2BSink(2);
}

//----- (000000000042C59D) ----------------------------------------------------
int goodB2G_157()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_square_53b_goodB2GSink(v8);
}
// 42C59D: using guessed type char buf[16];

//----- (000000000042C6CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_53_good()
{
  goodG2B_174();
  return goodB2G_157();
}

//----- (000000000042C6E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042C70A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042C72F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042C769) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_53d_badSink(a1);
}

//----- (000000000042C780) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_53d_goodG2BSink(a1);
}

//----- (000000000042C797) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_53d_goodB2GSink(a1);
}

//----- (000000000042C7AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C7FC) ----------------------------------------------------
int goodG2B_175()
{
  return printIntLine(4u);
}

//----- (000000000042C834) ----------------------------------------------------
int goodB2G_158()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  if ( v1 == 0x80000000 || v3 < -46339 || v3 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printIntLine(v3 * v3);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C8A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_34_good()
{
  goodG2B_175();
  return goodB2G_158();
}

//----- (000000000042C8C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_03_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000042C939) ----------------------------------------------------
int goodB2G1_119()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000042C9C4) ----------------------------------------------------
int goodB2G2_119()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000042CA4F) ----------------------------------------------------
int goodG2B1_102()
{
  return printIntLine(4u);
}

//----- (000000000042CA7F) ----------------------------------------------------
int goodG2B2_102()
{
  return printIntLine(4u);
}

//----- (000000000042CAAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_03_good()
{
  goodB2G1_119();
  goodB2G2_119();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (000000000042CADD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54c_badSink(a1);
}

//----- (000000000042CAF4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54c_goodG2BSink(a1);
}

//----- (000000000042CB0B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_54c_goodB2GSink(a1);
}

//----- (000000000042CB22) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_65b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042CB43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042CB64) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042CBAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 42CBAC: using guessed type char buf[16];

//----- (000000000042CCF9) ----------------------------------------------------
int goodB2G1_120()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 42CCF9: using guessed type char buf[16];

//----- (000000000042CE67) ----------------------------------------------------
int goodB2G2_120()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 42CE67: using guessed type char buf[16];

//----- (000000000042CFC9) ----------------------------------------------------
int goodG2B1_103()
{
  return printIntLine(3u);
}

//----- (000000000042D012) ----------------------------------------------------
int goodG2B2_103()
{
  return printIntLine(3u);
}

//----- (000000000042D04F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_04_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (000000000042D07D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11;
  v5 = v11 + 1;
  return printIntLine(v11 + 1);
}
// 42D07D: using guessed type char buf[16];

//----- (000000000042D1C0) ----------------------------------------------------
int goodG2B_176()
{
  return printIntLine(3u);
}

//----- (000000000042D1F7) ----------------------------------------------------
int goodB2G_159()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11;
  if ( v11 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 + 1;
  return printIntLine(v6 + 1);
}
// 42D1F7: using guessed type char buf[16];

//----- (000000000042D34F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_31_good()
{
  goodG2B_176();
  return goodB2G_159();
}

//----- (000000000042D369) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_16_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (000000000042D39B) ----------------------------------------------------
int goodB2G_160()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042D3E2) ----------------------------------------------------
int goodG2B_177()
{
  return printIntLine(4u);
}

//----- (000000000042D414) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_16_good()
{
  goodB2G_160();
  return goodG2B_177();
}

//----- (000000000042D42E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042D453) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042D478) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042D4B2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_52b_badSink(v4);
}

//----- (000000000042D51A) ----------------------------------------------------
int goodG2B_178()
{
  return CWE190_Integer_Overflow__int_fgets_multiply_52b_goodG2BSink(2);
}

//----- (000000000042D53C) ----------------------------------------------------
int goodB2G_161()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_52b_goodB2GSink(v4);
}

//----- (000000000042D5A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_52_good()
{
  goodG2B_178();
  return goodB2G_161();
}

//----- (000000000042D5BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_65_bad()
{
  return CWE190_Integer_Overflow__int_max_square_65b_badSink(0x7FFFFFFF);
}

//----- (000000000042D5E9) ----------------------------------------------------
int goodG2B_179()
{
  return CWE190_Integer_Overflow__int_max_square_65b_goodG2BSink(2);
}

//----- (000000000042D614) ----------------------------------------------------
int goodB2G_162()
{
  return CWE190_Integer_Overflow__int_max_square_65b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000042D63F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_65_good()
{
  goodG2B_179();
  return goodB2G_162();
}

//----- (000000000042D659) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_64b_badSink(&v5);
}
// 42D659: using guessed type char buf[16];

//----- (000000000042D789) ----------------------------------------------------
int goodG2B_180()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_64b_goodG2BSink(&v1);
}

//----- (000000000042D7AD) ----------------------------------------------------
int goodB2G_163()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_multiply_64b_goodB2GSink(&v5);
}
// 42D7AD: using guessed type char buf[16];

//----- (000000000042D8DD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_64_good()
{
  goodG2B_180();
  return goodB2G_163();
}

//----- (000000000042D8F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042D91C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042D941) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042D97B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (000000000042D9D8) ----------------------------------------------------
int goodB2G1_121()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (000000000042DA57) ----------------------------------------------------
int goodB2G2_121()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    result = v1;
    if ( v1 > 0 )
    {
      if ( v1 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printIntLine(2 * v1);
      }
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (000000000042DACA) ----------------------------------------------------
int goodG2B1_104()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000042DB1C) ----------------------------------------------------
int goodG2B2_104()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000042DB62) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_14_good()
{
  goodB2G1_121();
  goodB2G2_121();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (000000000042DB90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_53d_badSink(a1);
}

//----- (000000000042DBA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_53d_goodG2BSink(a1);
}

//----- (000000000042DBBE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_53d_goodB2GSink(a1);
}

//----- (000000000042DBD5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_32_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v6 = v1;
  result = *v5;
  v4 = *v5;
  if ( v4 > 0 )
  {
    v3 = 2 * v4;
    result = printIntLine(2 * v4);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DC46) ----------------------------------------------------
int goodG2B_181()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printIntLine(4u);
}

//----- (000000000042DCA1) ----------------------------------------------------
int goodB2G_164()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v6 = v1;
  result = *v5;
  v4 = *v5;
  if ( v4 > 0 )
  {
    if ( v4 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = 2 * v4;
      result = printIntLine(2 * v4);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DD27) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_32_good()
{
  goodG2B_181();
  return goodB2G_164();
}

//----- (000000000042DD41) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_16_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000042DDB9) ----------------------------------------------------
int goodB2G_165()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000042DE46) ----------------------------------------------------
int goodG2B_182()
{
  return printIntLine(4u);
}

//----- (000000000042DE78) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_16_good()
{
  goodB2G_165();
  return goodG2B_182();
}

//----- (000000000042DE92) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_add_67b_badSink(v9);
}
// 42DE92: using guessed type char buf[16];

//----- (000000000042DFC6) ----------------------------------------------------
int goodG2B_183()
{
  return CWE190_Integer_Overflow__int_listen_socket_add_67b_goodG2BSink(2);
}

//----- (000000000042DFEE) ----------------------------------------------------
int goodB2G_166()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_add_67b_goodB2GSink(v9);
}
// 42DFEE: using guessed type char buf[16];

//----- (000000000042E122) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_67_good()
{
  goodG2B_183();
  return goodB2G_166();
}

//----- (000000000042E13C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_51_bad()
{
  return CWE190_Integer_Overflow__int_max_multiply_51b_badSink(0x7FFFFFFF);
}

//----- (000000000042E15E) ----------------------------------------------------
int goodG2B_184()
{
  return CWE190_Integer_Overflow__int_max_multiply_51b_goodG2BSink(2);
}

//----- (000000000042E180) ----------------------------------------------------
int goodB2G_167()
{
  return CWE190_Integer_Overflow__int_max_multiply_51b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000042E1A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_51_good()
{
  goodG2B_184();
  return goodB2G_167();
}

//----- (000000000042E1BC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_52c_badSink(a1);
}

//----- (000000000042E1D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_52c_goodG2BSink(a1);
}

//----- (000000000042E1EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_square_52c_goodB2GSink(a1);
}

//----- (000000000042E201) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042E22C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042E257) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_67b_goodB2GSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042E297) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_add_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 671304: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_badGlobal;

//----- (000000000042E2C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 671308: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Global;

//----- (000000000042E30C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 67130C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Global;

//----- (000000000042E34B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 671310: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BGlobal;

//----- (000000000042E375) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54e_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042E396) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042E3B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042E3FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_square_68_badData * CWE190_Integer_Overflow__int_max_square_68_badData);
}
// 6713D8: using guessed type int CWE190_Integer_Overflow__int_max_square_68_badData;

//----- (000000000042E426) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_68b_goodG2BSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_max_square_68_goodG2BData
         * CWE190_Integer_Overflow__int_max_square_68_goodG2BData);
}
// 6713E0: using guessed type int CWE190_Integer_Overflow__int_max_square_68_goodG2BData;

//----- (000000000042E44D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_square_68_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_max_square_68_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_max_square_68_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_max_square_68_goodB2GData
             * CWE190_Integer_Overflow__int_max_square_68_goodB2GData);
  }
  return result;
}
// 6713DC: using guessed type int CWE190_Integer_Overflow__int_max_square_68_goodB2GData;

//----- (000000000042E49B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_68_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fgets_multiply_68_badData);
  return result;
}
// 6713FC: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_68_badData;

//----- (000000000042E4C6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData);
  return result;
}
// 671404: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_68_goodG2BData;

//----- (000000000042E4F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData);
  }
  return result;
}
// 671400: using guessed type int CWE190_Integer_Overflow__int_fgets_multiply_68_goodB2GData;

//----- (000000000042E531) ----------------------------------------------------
int badSink_27()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int_max_multiply_45_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_max_multiply_45_badData);
  return result;
}
// 6712F8: using guessed type int CWE190_Integer_Overflow__int_max_multiply_45_badData;

//----- (000000000042E55C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_45_bad()
{
  CWE190_Integer_Overflow__int_max_multiply_45_badData = 0x7FFFFFFF;
  return badSink_27();
}
// 6712F8: using guessed type int CWE190_Integer_Overflow__int_max_multiply_45_badData;

//----- (000000000042E587) ----------------------------------------------------
int goodG2BSink_27()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData);
  return result;
}
// 6712FC: using guessed type int CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData;

//----- (000000000042E5B2) ----------------------------------------------------
int goodG2B_185()
{
  CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData = 2;
  return goodG2BSink_27();
}
// 6712FC: using guessed type int CWE190_Integer_Overflow__int_max_multiply_45_goodG2BData;

//----- (000000000042E5DD) ----------------------------------------------------
int goodB2GSink_18()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData);
  }
  return result;
}
// 671300: using guessed type int CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData;

//----- (000000000042E61D) ----------------------------------------------------
int goodB2G_168()
{
  CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData = 0x7FFFFFFF;
  return goodB2GSink_18();
}
// 671300: using guessed type int CWE190_Integer_Overflow__int_max_multiply_45_goodB2GData;

//----- (000000000042E648) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_45_good()
{
  goodG2B_185();
  return goodB2G_168();
}

//----- (000000000042E662) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_51b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E69A) ----------------------------------------------------
int goodG2B_186()
{
  return CWE190_Integer_Overflow__int_fscanf_add_51b_goodG2BSink(2);
}

//----- (000000000042E6BC) ----------------------------------------------------
int goodB2G_169()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_51b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E6F4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_51_good()
{
  goodG2B_186();
  return goodB2G_169();
}

//----- (000000000042E70E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_51b_badSink(v4);
}

//----- (000000000042E776) ----------------------------------------------------
int goodG2B_187()
{
  return CWE190_Integer_Overflow__int_fgets_multiply_51b_goodG2BSink(2);
}

//----- (000000000042E798) ----------------------------------------------------
int goodB2G_170()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_multiply_51b_goodB2GSink(v4);
}

//----- (000000000042E800) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_51_good()
{
  goodG2B_187();
  return goodB2G_170();
}

//----- (000000000042E81A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_06_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (000000000042E85E) ----------------------------------------------------
int goodB2G1_122()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042E8C3) ----------------------------------------------------
int goodB2G2_122()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042E91C) ----------------------------------------------------
int goodG2B1_105()
{
  return printIntLine(4u);
}

//----- (000000000042E96C) ----------------------------------------------------
int goodG2B2_105()
{
  return printIntLine(4u);
}

//----- (000000000042E9B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_06_good()
{
  goodB2G1_122();
  goodB2G2_122();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (000000000042E9DE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_04_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4523C8, &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042EA37) ----------------------------------------------------
int goodB2G1_123()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4523C8, &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042EAB2) ----------------------------------------------------
int goodB2G2_123()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4523C8, &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042EB21) ----------------------------------------------------
int goodG2B1_106()
{
  return printIntLine(4u);
}

//----- (000000000042EB6F) ----------------------------------------------------
int goodG2B2_106()
{
  return printIntLine(4u);
}

//----- (000000000042EBB1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_04_good()
{
  goodB2G1_123();
  goodB2G2_123();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (000000000042EBDF) ----------------------------------------------------
__int64 __fastcall badSource_5(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000042EC3C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_42_bad()
{
  int v0; // eax

  v0 = badSource_5(0);
  return printIntLine(v0 * v0);
}

//----- (000000000042EC6E) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 2LL;
}

//----- (000000000042EC81) ----------------------------------------------------
int goodG2B_188()
{
  int v0; // eax

  v0 = goodG2BSource_5();
  return printIntLine(v0 * v0);
}

//----- (000000000042ECB3) ----------------------------------------------------
__int64 __fastcall goodB2GSource_5(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000042ED10) ----------------------------------------------------
int goodB2G_171()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_5(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042ED69) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_42_good()
{
  goodB2G_171();
  return goodG2B_188();
}

//----- (000000000042ED83) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_square_68_badData * CWE190_Integer_Overflow__int_fgets_square_68_badData);
}
// 6713D0: using guessed type int CWE190_Integer_Overflow__int_fgets_square_68_badData;

//----- (000000000042EDAA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_68b_goodG2BSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_fgets_square_68_goodG2BData
         * CWE190_Integer_Overflow__int_fgets_square_68_goodG2BData);
}
// 6713CC: using guessed type int CWE190_Integer_Overflow__int_fgets_square_68_goodG2BData;

//----- (000000000042EDD1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData
             * CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData);
  }
  return result;
}
// 6713D4: using guessed type int CWE190_Integer_Overflow__int_fgets_square_68_goodB2GData;

//----- (000000000042EE1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_51b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042EE40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042EE61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042EEA9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_add_22_badSink(v8);
}
// 671304: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_badGlobal;
// 42EEA9: using guessed type char buf[16];

//----- (000000000042EFE1) ----------------------------------------------------
int goodB2G1_124()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Sink(v8);
}
// 671308: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G1Global;
// 42EFE1: using guessed type char buf[16];

//----- (000000000042F119) ----------------------------------------------------
int goodB2G2_124()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Sink(v8);
}
// 67130C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_goodB2G2Global;
// 42F119: using guessed type char buf[16];

//----- (000000000042F251) ----------------------------------------------------
int goodG2B_189()
{
  CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BSink(2);
}
// 671310: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_22_goodG2BGlobal;

//----- (000000000042F27D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_22_good()
{
  goodB2G1_124();
  goodB2G2_124();
  return goodG2B_189();
}

//----- (000000000042F2A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_53c_badSink(a1);
}

//----- (000000000042F2B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_53c_goodG2BSink(a1);
}

//----- (000000000042F2CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_53c_goodB2GSink(a1);
}

//----- (000000000042F2E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_52c_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042F307) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042F328) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042F370) ----------------------------------------------------
int __fastcall badSink_28(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042F391) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_44_bad()
{
  return badSink_28(0x7FFFFFFF);
}

//----- (000000000042F3BC) ----------------------------------------------------
int __fastcall goodG2BSink_28(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042F3DD) ----------------------------------------------------
int goodG2B_190()
{
  return goodG2BSink_28(2);
}

//----- (000000000042F408) ----------------------------------------------------
int __fastcall goodB2GSink_19(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042F450) ----------------------------------------------------
int goodB2G_172()
{
  return goodB2GSink_19(0x7FFFFFFF);
}

//----- (000000000042F47B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_44_good()
{
  goodG2B_190();
  return goodB2G_172();
}

//----- (000000000042F495) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_52c_badSink(a1);
}

//----- (000000000042F4AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_52c_goodG2BSink(a1);
}

//----- (000000000042F4C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_52c_goodB2GSink(a1);
}

//----- (000000000042F4DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_06_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_452544, &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F535) ----------------------------------------------------
int goodB2G1_125()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_452544, &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F5B2) ----------------------------------------------------
int goodB2G2_125()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_452544, &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F623) ----------------------------------------------------
int goodG2B1_107()
{
  return printIntLine(4u);
}

//----- (000000000042F673) ----------------------------------------------------
int goodG2B2_107()
{
  return printIntLine(4u);
}

//----- (000000000042F6B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_06_good()
{
  goodB2G1_125();
  goodB2G2_125();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (000000000042F6E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54e_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042F706) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042F727) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042F76F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042F794) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042F7B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042F7F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042F813) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042F833) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042F868) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_add_66b_badSink((__int64)&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F8A8) ----------------------------------------------------
int goodG2B_191()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fscanf_add_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042F8D2) ----------------------------------------------------
int goodB2G_173()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_add_66b_goodB2GSink((__int64)&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F912) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_66_good()
{
  goodG2B_191();
  return goodB2G_173();
}

//----- (000000000042F92C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_square_61b_badSource()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000042F93F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042F952) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_square_61b_goodB2GSource()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000042F965) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_17_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F9CF) ----------------------------------------------------
int goodB2G_174()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FA63) ----------------------------------------------------
int goodG2B_192()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042FAB5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_17_good()
{
  goodB2G_174();
  return goodG2B_192();
}

//----- (000000000042FACF) ----------------------------------------------------
int __fastcall badSink_29(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042FAF0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_square_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_29;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042FB61) ----------------------------------------------------
int __fastcall goodG2BSink_29(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042FB82) ----------------------------------------------------
int goodG2B_193()
{
  return goodG2BSink_29(2);
}

//----- (000000000042FBAD) ----------------------------------------------------
int __fastcall goodB2GSink_20(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042FBF5) ----------------------------------------------------
__int64 goodB2G_175()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_20;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042FC66) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_square_44_good()
{
  goodG2B_193();
  return goodB2G_175();
}

//----- (000000000042FC80) ----------------------------------------------------
__int64 badSource_6()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000042FC93) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_42_bad()
{
  int result; // eax

  result = badSource_6();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000042FCC9) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return 2LL;
}

//----- (000000000042FCDC) ----------------------------------------------------
int goodG2B_194()
{
  int result; // eax

  result = goodG2BSource_6();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000042FD12) ----------------------------------------------------
__int64 goodB2GSource_6()
{
  return 0x7FFFFFFFLL;
}

//----- (000000000042FD25) ----------------------------------------------------
int goodB2G_176()
{
  int result; // eax

  result = goodB2GSource_6();
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (000000000042FD70) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_42_good()
{
  goodB2G_176();
  return goodG2B_194();
}

//----- (000000000042FD8A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_63b_badSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FDC4) ----------------------------------------------------
int goodG2B_195()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_add_63b_goodG2BSink(&v1);
}

//----- (000000000042FDE8) ----------------------------------------------------
int goodB2G_177()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_63b_goodB2GSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FE22) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_63_good()
{
  goodG2B_195();
  return goodB2G_177();
}

//----- (000000000042FE3C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_15_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000042FEB4) ----------------------------------------------------
int goodB2G1_126()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000042FF41) ----------------------------------------------------
int goodB2G2_126()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000042FFCE) ----------------------------------------------------
int goodG2B1_108()
{
  return printIntLine(4u);
}

//----- (0000000000430000) ----------------------------------------------------
int goodG2B2_108()
{
  return printIntLine(4u);
}

//----- (0000000000430032) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_15_good()
{
  goodB2G1_126();
  goodB2G2_126();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (0000000000430060) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000430080) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004300A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004300D5) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_square_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000430132) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000430145) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_square_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (00000000004301A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_square_68_badData * CWE190_Integer_Overflow__int_fscanf_square_68_badData);
}
// 671418: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_68_badData;

//----- (00000000004301C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_68b_goodG2BSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_fscanf_square_68_goodG2BData
         * CWE190_Integer_Overflow__int_fscanf_square_68_goodG2BData);
}
// 671414: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_68_goodG2BData;

//----- (00000000004301F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData
             * CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData);
  }
  return result;
}
// 67141C: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData;

//----- (000000000043023E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 43023E: using guessed type char buf[16];

//----- (0000000000430377) ----------------------------------------------------
int goodB2G_178()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 430377: using guessed type char buf[16];

//----- (00000000004304C5) ----------------------------------------------------
int goodG2B_196()
{
  return printIntLine(3u);
}

//----- (00000000004304F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_16_good()
{
  goodB2G_178();
  return goodG2B_196();
}

//----- (000000000043050C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_multiply_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_multiply_65b_badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000043057D) ----------------------------------------------------
int goodG2B_197()
{
  return CWE190_Integer_Overflow__int_fgets_multiply_65b_goodG2BSink(2);
}

//----- (00000000004305A8) ----------------------------------------------------
__int64 goodB2G_179()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_multiply_65b_goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000430619) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_multiply_65_good()
{
  goodG2B_197();
  return goodB2G_179();
}

//----- (0000000000430633) ----------------------------------------------------
__int64 __fastcall badSource_7(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000430690) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_42_bad()
{
  int result; // eax

  result = badSource_7(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (00000000004306C6) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return 2LL;
}

//----- (00000000004306D9) ----------------------------------------------------
int goodG2B_198()
{
  int result; // eax

  result = goodG2BSource_7();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000043070F) ----------------------------------------------------
__int64 __fastcall goodB2GSource_7(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000043076C) ----------------------------------------------------
int goodB2G_180()
{
  int result; // eax

  result = goodB2GSource_7(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (00000000004307B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_42_good()
{
  goodB2G_180();
  return goodG2B_198();
}

//----- (00000000004307D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_68_bad()
{
  CWE190_Integer_Overflow__int_max_add_68_badData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_68b_badSink();
}
// 67140C: using guessed type int CWE190_Integer_Overflow__int_max_add_68_badData;

//----- (00000000004307FC) ----------------------------------------------------
int goodG2B_199()
{
  CWE190_Integer_Overflow__int_max_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_max_add_68b_goodG2BSink();
}
// 671408: using guessed type int CWE190_Integer_Overflow__int_max_add_68_goodG2BData;

//----- (0000000000430827) ----------------------------------------------------
int goodB2G_181()
{
  CWE190_Integer_Overflow__int_max_add_68_goodB2GData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_68b_goodB2GSink();
}
// 671410: using guessed type int CWE190_Integer_Overflow__int_max_add_68_goodB2GData;

//----- (0000000000430852) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_68_good()
{
  goodG2B_199();
  return goodB2G_181();
}

//----- (000000000043086C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_square_61b_badSource();
  return printIntLine(v0 * v0);
}

//----- (000000000043089E) ----------------------------------------------------
int goodG2B_200()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_square_61b_goodG2BSource();
  return printIntLine(v0 * v0);
}

//----- (00000000004308D0) ----------------------------------------------------
int goodB2G_182()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_max_square_61b_goodB2GSource();
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000430929) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_61_good()
{
  goodG2B_200();
  return goodB2G_182();
}

//----- (0000000000430943) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_54b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043097B) ----------------------------------------------------
int goodG2B_201()
{
  return CWE190_Integer_Overflow__int_fscanf_square_54b_goodG2BSink(2);
}

//----- (000000000043099D) ----------------------------------------------------
int goodB2G_183()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_54b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004309D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_54_good()
{
  goodG2B_201();
  return goodB2G_183();
}

//----- (00000000004309EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_53b_badSink(v4);
}

//----- (0000000000430A57) ----------------------------------------------------
int goodG2B_202()
{
  return CWE190_Integer_Overflow__int_fgets_square_53b_goodG2BSink(2);
}

//----- (0000000000430A79) ----------------------------------------------------
int goodB2G_184()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_square_53b_goodB2GSink(v4);
}

//----- (0000000000430AE1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_53_good()
{
  goodG2B_202();
  return goodB2G_184();
}

//----- (0000000000430AFB) ----------------------------------------------------
int __fastcall badSink_30(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000430B20) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_41_bad()
{
  return badSink_30(0x7FFFFFFF);
}

//----- (0000000000430B42) ----------------------------------------------------
int __fastcall goodG2BSink_30(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000430B67) ----------------------------------------------------
int goodG2B_203()
{
  return goodG2BSink_30(2);
}

//----- (0000000000430B89) ----------------------------------------------------
int __fastcall goodB2GSink_21(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000430BC3) ----------------------------------------------------
int goodB2G_185()
{
  return goodB2GSink_21(0x7FFFFFFF);
}

//----- (0000000000430BE5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_41_good()
{
  goodB2G_185();
  return goodG2B_203();
}

//----- (0000000000430BFF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671158: using guessed type int staticFive_9;

//----- (0000000000430C41) ----------------------------------------------------
int goodB2G1_127()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 0x7FFFFFFF;
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 * v1);
}
// 671158: using guessed type int staticFive_9;

//----- (0000000000430CB6) ----------------------------------------------------
int goodB2G2_127()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    if ( v1 == 0x80000000 || v1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 * v1);
  }
  return result;
}
// 671158: using guessed type int staticFive_9;

//----- (0000000000430D1F) ----------------------------------------------------
int goodG2B1_109()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671158: using guessed type int staticFive_9;

//----- (0000000000430D6D) ----------------------------------------------------
int goodG2B2_109()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_9 == 5 )
    v1 = 2;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671158: using guessed type int staticFive_9;

//----- (0000000000430DAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_07_good()
{
  goodB2G1_127();
  goodB2G2_127();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (0000000000430DDD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_53_bad()
{
  return CWE190_Integer_Overflow__int_max_add_53b_badSink(0x7FFFFFFF);
}

//----- (0000000000430DFF) ----------------------------------------------------
int goodG2B_204()
{
  return CWE190_Integer_Overflow__int_max_add_53b_goodG2BSink(2);
}

//----- (0000000000430E21) ----------------------------------------------------
int goodB2G_186()
{
  return CWE190_Integer_Overflow__int_max_add_53b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000430E43) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_53_good()
{
  goodG2B_204();
  return goodB2G_186();
}

//----- (0000000000430E5D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_51b_badSink(v8);
}
// 430E5D: using guessed type char buf[16];

//----- (0000000000430F8B) ----------------------------------------------------
int goodG2B_205()
{
  return CWE190_Integer_Overflow__int_listen_socket_add_51b_goodG2BSink(2);
}

//----- (0000000000430FAD) ----------------------------------------------------
int goodB2G_187()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_add_51b_goodB2GSink(v8);
}
// 430FAD: using guessed type char buf[16];

//----- (00000000004310DB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_51_good()
{
  goodG2B_205();
  return goodB2G_187();
}

//----- (00000000004310F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000431121) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (000000000043114D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (00000000004311A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_15_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (0000000000431214) ----------------------------------------------------
int goodB2G1_128()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (00000000004312AF) ----------------------------------------------------
int goodB2G2_128()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}

//----- (000000000043134A) ----------------------------------------------------
int goodG2B1_110()
{
  return printIntLine(4u);
}

//----- (0000000000431378) ----------------------------------------------------
int goodG2B2_110()
{
  return printIntLine(4u);
}

//----- (00000000004313A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_15_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (00000000004313D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_68_badData = v1;
  return CWE190_Integer_Overflow__int_fscanf_square_68b_badSink();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671418: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_68_badData;

//----- (0000000000431415) ----------------------------------------------------
int goodG2B_206()
{
  CWE190_Integer_Overflow__int_fscanf_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fscanf_square_68b_goodG2BSink();
}
// 671414: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_68_goodG2BData;

//----- (0000000000431440) ----------------------------------------------------
int goodB2G_188()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int_fscanf_square_68b_goodB2GSink();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67141C: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_68_goodB2GData;

//----- (0000000000431481) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_68_good()
{
  goodG2B_206();
  return goodB2G_188();
}

//----- (000000000043149B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (00000000004314CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (00000000004314FB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (0000000000431540) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_6 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v5 > 0 )
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 67115C: using guessed type int staticTrue_6;

//----- (00000000004315CA) ----------------------------------------------------
int goodB2G1_129()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_6 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFalse_6;
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 67115C: using guessed type int staticTrue_6;
// 671314: using guessed type int staticFalse_6;

//----- (0000000000431675) ----------------------------------------------------
int goodB2G2_129()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_6 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_6;
  if ( staticTrue_6 && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 67115C: using guessed type int staticTrue_6;

//----- (0000000000431714) ----------------------------------------------------
int goodG2B1_111()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67115C: using guessed type int staticTrue_6;
// 671314: using guessed type int staticFalse_6;

//----- (0000000000431764) ----------------------------------------------------
int goodG2B2_111()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_6 )
    v1 = 2;
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 67115C: using guessed type int staticTrue_6;

//----- (00000000004317A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_05_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (00000000004317D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_52b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043180E) ----------------------------------------------------
int goodG2B_207()
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_52b_goodG2BSink(2);
}

//----- (0000000000431830) ----------------------------------------------------
int goodB2G_189()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_52b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431868) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_52_good()
{
  goodG2B_207();
  return goodB2G_189();
}

//----- (0000000000431882) ----------------------------------------------------
int badSink_31()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_add_45_badData + 1);
}
// 671318: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_45_badData;

//----- (00000000004318A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_45_badData = v8;
  return badSink_31();
}
// 671318: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_45_badData;
// 4318A8: using guessed type char buf[16];

//----- (00000000004319DF) ----------------------------------------------------
int goodG2BSink_31()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_add_45_goodG2BData + 1);
}
// 67131C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_45_goodG2BData;

//----- (0000000000431A05) ----------------------------------------------------
int goodG2B_208()
{
  CWE190_Integer_Overflow__int_listen_socket_add_45_goodG2BData = 2;
  return goodG2BSink_31();
}
// 67131C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_45_goodG2BData;

//----- (0000000000431A30) ----------------------------------------------------
int goodB2GSink_22()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_add_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_listen_socket_add_45_goodB2GData + 1);
  return result;
}
// 671320: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_45_goodB2GData;

//----- (0000000000431A6B) ----------------------------------------------------
int goodB2G_190()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_add_45_goodB2GData = v8;
  return goodB2GSink_22();
}
// 671320: using guessed type int CWE190_Integer_Overflow__int_listen_socket_add_45_goodB2GData;
// 431A6B: using guessed type char buf[16];

//----- (0000000000431BA2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_45_good()
{
  goodG2B_208();
  return goodB2G_190();
}

//----- (0000000000431BBC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_16_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v1;
    result = printIntLine(2 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431C05) ----------------------------------------------------
int goodB2G_191()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  if ( v1 > 0 )
  {
    if ( v1 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printIntLine(2 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431C64) ----------------------------------------------------
int goodG2B_209()
{
  return printIntLine(4u);
}

//----- (0000000000431C96) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_16_good()
{
  goodB2G_191();
  return goodG2B_209();
}

//----- (0000000000431CB0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = v1 * v1;
    result = printIntLine(v1 * v1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000431D08) ----------------------------------------------------
int goodB2G1_130()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000431D96) ----------------------------------------------------
int goodB2G2_130()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printIntLine(v1 * v1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000431E18) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000431E64) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000431EA4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_09_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (0000000000431ED2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 431ED2: using guessed type char buf[16];

//----- (0000000000432021) ----------------------------------------------------
int goodB2G1_131()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 432021: using guessed type char buf[16];

//----- (0000000000432191) ----------------------------------------------------
int goodB2G2_131()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 + 1;
  return printIntLine(v9 + 1);
}
// 432191: using guessed type char buf[16];

//----- (00000000004322F5) ----------------------------------------------------
int goodG2B1_113()
{
  return printIntLine(3u);
}

//----- (0000000000432340) ----------------------------------------------------
int goodG2B2_113()
{
  return printIntLine(3u);
}

//----- (000000000043237F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_06_good()
{
  goodB2G1_131();
  goodB2G2_131();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (00000000004323AD) ----------------------------------------------------
__int64 __fastcall badSource_8(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4323AD: using guessed type char buf[16];

//----- (00000000004324D0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_42_bad()
{
  int v0; // eax

  v0 = badSource_8(0);
  return printIntLine(v0 * v0);
}

//----- (0000000000432502) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 2LL;
}

//----- (0000000000432515) ----------------------------------------------------
int goodG2B_210()
{
  int v0; // eax

  v0 = goodG2BSource_8();
  return printIntLine(v0 * v0);
}

//----- (0000000000432547) ----------------------------------------------------
__int64 __fastcall goodB2GSource_8(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 432547: using guessed type char buf[16];

//----- (000000000043266A) ----------------------------------------------------
int goodB2G_192()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_8(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004326C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_42_good()
{
  goodB2G_192();
  return goodG2B_210();
}

//----- (00000000004326DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (000000000043270D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (000000000043273D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (0000000000432782) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_34_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  result = v7;
  v6 = v7;
  if ( v7 > 0 )
  {
    v5 = 2 * v6;
    result = printIntLine(2 * v6);
  }
  return result;
}

//----- (0000000000432804) ----------------------------------------------------
int goodG2B_211()
{
  return printIntLine(4u);
}

//----- (0000000000432840) ----------------------------------------------------
int goodB2G_193()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  result = v7;
  v6 = v7;
  if ( v7 > 0 )
  {
    if ( v6 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v6;
      result = printIntLine(2 * v6);
    }
  }
  return result;
}

//----- (00000000004328D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_34_good()
{
  goodG2B_211();
  return goodB2G_193();
}

//----- (00000000004328F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_52c_badSink(a1);
}

//----- (0000000000432908) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_52c_goodG2BSink(a1);
}

//----- (000000000043291F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_square_52c_goodB2GSink(a1);
}

//----- (0000000000432936) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_52c_badSink(a1);
}

//----- (000000000043294D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_52c_goodG2BSink(a1);
}

//----- (0000000000432964) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_52c_goodB2GSink(a1);
}

//----- (000000000043297B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004329A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004329C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (00000000004329FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_66b_badSink((__int64)&v1);
}

//----- (0000000000432A29) ----------------------------------------------------
int goodG2B_212()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_max_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000432A53) ----------------------------------------------------
int goodB2G_194()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_multiply_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000432A7D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_66_good()
{
  goodG2B_212();
  return goodB2G_194();
}

//----- (0000000000432A97) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_51b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432ACF) ----------------------------------------------------
int goodG2B_213()
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_51b_goodG2BSink(2);
}

//----- (0000000000432AF1) ----------------------------------------------------
int goodB2G_195()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_51b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432B29) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_51_good()
{
  goodG2B_213();
  return goodB2G_195();
}

//----- (0000000000432B43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000432B68) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000432B8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000432BC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue_7 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 671160: using guessed type int staticTrue_7;
// 432BC7: using guessed type char buf[16];

//----- (0000000000432D17) ----------------------------------------------------
int goodB2G1_132()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue_7 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 671160: using guessed type int staticTrue_7;
// 671324: using guessed type int staticFalse_7;
// 432D17: using guessed type char buf[16];

//----- (0000000000432E9A) ----------------------------------------------------
int goodB2G2_132()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( staticTrue_7 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 671160: using guessed type int staticTrue_7;
// 432E9A: using guessed type char buf[16];

//----- (0000000000433011) ----------------------------------------------------
int goodG2B1_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671160: using guessed type int staticTrue_7;
// 671324: using guessed type int staticFalse_7;

//----- (000000000043305D) ----------------------------------------------------
int goodG2B2_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    v1 = 2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671160: using guessed type int staticTrue_7;

//----- (000000000043309D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_05_good()
{
  goodB2G1_132();
  goodB2G2_132();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (00000000004330CB) ----------------------------------------------------
int __fastcall badSink_32(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004330EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_32(v8);
}
// 4330EC: using guessed type char buf[16];

//----- (000000000043321A) ----------------------------------------------------
int __fastcall goodG2BSink_32(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000043323B) ----------------------------------------------------
int goodG2B_214()
{
  return goodG2BSink_32(2);
}

//----- (000000000043325D) ----------------------------------------------------
int __fastcall goodB2GSink_23(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (00000000004332A5) ----------------------------------------------------
int goodB2G_196()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_23(v8);
}
// 4332A5: using guessed type char buf[16];

//----- (00000000004333D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_41_good()
{
  goodB2G_196();
  return goodG2B_214();
}

//----- (00000000004333ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000043341F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000433451) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000433498) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_square_63b_badSink(&v5);
}
// 433498: using guessed type char buf[16];

//----- (00000000004335C8) ----------------------------------------------------
int goodG2B_215()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_square_63b_goodG2BSink(&v1);
}

//----- (00000000004335EC) ----------------------------------------------------
int goodB2G_197()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_square_63b_goodB2GSink(&v5);
}
// 4335EC: using guessed type char buf[16];

//----- (000000000043371C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_63_good()
{
  goodG2B_215();
  return goodB2G_197();
}

//----- (0000000000433736) ----------------------------------------------------
int badSink_33()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_45_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fscanf_multiply_45_badData);
  return result;
}
// 671328: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_45_badData;

//----- (0000000000433761) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_45_badData = v1;
  return badSink_33();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671328: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_45_badData;

//----- (00000000004337A2) ----------------------------------------------------
int goodG2BSink_33()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData);
  return result;
}
// 67132C: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData;

//----- (00000000004337CD) ----------------------------------------------------
int goodG2B_216()
{
  CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData = 2;
  return goodG2BSink_33();
}
// 67132C: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_45_goodG2BData;

//----- (00000000004337F8) ----------------------------------------------------
int goodB2GSink_24()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData);
  }
  return result;
}
// 671330: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData;

//----- (0000000000433838) ----------------------------------------------------
int goodB2G_198()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData = v1;
  return goodB2GSink_24();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671330: using guessed type int CWE190_Integer_Overflow__int_fscanf_multiply_45_goodB2GData;

//----- (0000000000433879) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_45_good()
{
  goodG2B_216();
  return goodB2G_198();
}

//----- (0000000000433893) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_multiply_66b_badSink((__int64)&v4);
}

//----- (0000000000433903) ----------------------------------------------------
int goodG2B_217()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fgets_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043392D) ----------------------------------------------------
int goodB2G_199()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_multiply_66b_goodB2GSink((__int64)&v4);
}

//----- (000000000043399D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_66_good()
{
  goodG2B_217();
  return goodB2G_199();
}

//----- (00000000004339B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004339FD) ----------------------------------------------------
int goodB2G1_133()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433A6D) ----------------------------------------------------
int goodB2G2_133()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433ADD) ----------------------------------------------------
int goodG2B1_115()
{
  return printIntLine(4u);
}

//----- (0000000000433B0B) ----------------------------------------------------
int goodG2B2_115()
{
  return printIntLine(4u);
}

//----- (0000000000433B39) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_15_good()
{
  goodB2G1_133();
  goodB2G2_133();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (0000000000433B67) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_52_bad()
{
  return CWE190_Integer_Overflow__int_max_add_52b_badSink(0x7FFFFFFF);
}

//----- (0000000000433B89) ----------------------------------------------------
int goodG2B_218()
{
  return CWE190_Integer_Overflow__int_max_add_52b_goodG2BSink(2);
}

//----- (0000000000433BAB) ----------------------------------------------------
int goodB2G_200()
{
  return CWE190_Integer_Overflow__int_max_add_52b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000433BCD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_52_good()
{
  goodG2B_218();
  return goodB2G_200();
}

//----- (0000000000433BE7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000433C07) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000433C27) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000433C5C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11;
  v6 = v11 * v11;
  return printIntLine(v11 * v11);
}
// 433C5C: using guessed type char buf[16];

//----- (0000000000433DA0) ----------------------------------------------------
int goodG2B_219()
{
  return printIntLine(4u);
}

//----- (0000000000433DD8) ----------------------------------------------------
int goodB2G_201()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11;
  if ( v11 == 0x80000000 || v7 < -46339 || v7 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 * v7;
  return printIntLine(v7 * v7);
}
// 433DD8: using guessed type char buf[16];

//----- (0000000000433F43) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_34_good()
{
  goodG2B_219();
  return goodB2G_201();
}

//----- (0000000000433F5D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_16_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000433F8A) ----------------------------------------------------
int goodB2G_202()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000433FCC) ----------------------------------------------------
int goodG2B_220()
{
  return printIntLine(3u);
}

//----- (0000000000433FF9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_16_good()
{
  goodB2G_202();
  return goodG2B_220();
}

//----- (0000000000434013) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (000000000043403F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (000000000043406B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (00000000004340BE) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_add_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004340EB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004340FE) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_add_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043412B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_53c_badSink(a1);
}

//----- (0000000000434142) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_53c_goodG2BSink(a1);
}

//----- (0000000000434159) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_53c_goodB2GSink(a1);
}

//----- (0000000000434170) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v5 > 0 )
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (0000000000434202) ----------------------------------------------------
int goodB2G1_134()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (00000000004342B5) ----------------------------------------------------
int goodB2G2_134()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000043435C) ----------------------------------------------------
int goodG2B1_116()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (00000000004343B4) ----------------------------------------------------
int goodG2B2_116()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (0000000000434400) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_11_good()
{
  goodB2G1_134();
  goodB2G2_134();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (000000000043442E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043444E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043446E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004344A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52c_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004344C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004344E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000043452D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive == 5 && v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 43452D: using guessed type char buf[16];

//----- (0000000000434683) ----------------------------------------------------
int goodB2G1_135()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 434683: using guessed type char buf[16];

//----- (00000000004347FA) ----------------------------------------------------
int goodB2G2_135()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive == 5 && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 4347FA: using guessed type char buf[16];

//----- (0000000000434965) ----------------------------------------------------
int goodG2B1_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (00000000004349B7) ----------------------------------------------------
int goodG2B2_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (00000000004349FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_14_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (0000000000434A2B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink(&v5);
}
// 434A2B: using guessed type char buf[16];

//----- (0000000000434B5B) ----------------------------------------------------
int goodG2B_221()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_add_64b_goodG2BSink(&v1);
}

//----- (0000000000434B7F) ----------------------------------------------------
int goodB2G_203()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_add_64b_goodB2GSink(&v5);
}
// 434B7F: using guessed type char buf[16];

//----- (0000000000434CAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_64_good()
{
  goodG2B_221();
  return goodB2G_203();
}

//----- (0000000000434CC9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (0000000000434D20) ----------------------------------------------------
int goodB2G1_136()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (0000000000434D99) ----------------------------------------------------
int goodB2G2_136()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671170: using guessed type int globalFive;

//----- (0000000000434E06) ----------------------------------------------------
int goodG2B1_118()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000434E53) ----------------------------------------------------
int goodG2B2_118()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000434E94) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_14_good()
{
  goodB2G1_136();
  goodB2G2_136();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (0000000000434EC2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_32_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v13 = 0;
  fd = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v8 = recv(v12, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  *v11 = v13;
  result = *v10;
  v7 = *v10;
  if ( v7 > 0 )
  {
    v6 = 2 * v7;
    result = printIntLine(2 * v7);
  }
  return result;
}
// 434EC2: using guessed type char buf[16];

//----- (0000000000435029) ----------------------------------------------------
int goodG2B_222()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printIntLine(4u);
}

//----- (0000000000435084) ----------------------------------------------------
int goodB2G_204()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v13 = 0;
  fd = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v8 = recv(v12, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  *v11 = v13;
  result = *v10;
  v7 = *v10;
  if ( v7 > 0 )
  {
    if ( v7 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v6 = 2 * v7;
      result = printIntLine(2 * v7);
    }
  }
  return result;
}
// 435084: using guessed type char buf[16];

//----- (0000000000435200) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_32_good()
{
  goodG2B_222();
  return goodB2G_204();
}

//----- (000000000043521A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v4 = v1;
  return printIntLine(*v3 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435286) ----------------------------------------------------
int goodG2B_223()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printIntLine(3u);
}

//----- (00000000004352DC) ----------------------------------------------------
int goodB2G_205()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v6 = v1;
  v4 = *v5;
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v3 = v4 + 1;
  return printIntLine(v4 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043535D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_32_good()
{
  goodG2B_223();
  return goodB2G_205();
}

//----- (0000000000435377) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 435377: using guessed type char buf[16];

//----- (00000000004354CD) ----------------------------------------------------
int goodB2G1_137()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 4354CD: using guessed type char buf[16];

//----- (0000000000435644) ----------------------------------------------------
int goodB2G2_137()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;
// 435644: using guessed type char buf[16];

//----- (00000000004357AF) ----------------------------------------------------
int goodG2B1_119()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000435801) ----------------------------------------------------
int goodG2B2_119()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000435847) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_13_good()
{
  goodB2G1_137();
  goodB2G2_137();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (0000000000435875) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_51_bad()
{
  return CWE190_Integer_Overflow__int_max_add_51b_badSink(0x7FFFFFFF);
}

//----- (0000000000435897) ----------------------------------------------------
int goodG2B_224()
{
  return CWE190_Integer_Overflow__int_max_add_51b_goodG2BSink(2);
}

//----- (00000000004358B9) ----------------------------------------------------
int goodB2G_206()
{
  return CWE190_Integer_Overflow__int_max_add_51b_goodB2GSink(0x7FFFFFFF);
}

//----- (00000000004358DB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_51_good()
{
  goodG2B_224();
  return goodB2G_206();
}

//----- (00000000004358F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000043592C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000435963) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (00000000004359AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_add_68_badData + 1);
}
// 67140C: using guessed type int CWE190_Integer_Overflow__int_max_add_68_badData;

//----- (00000000004359D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_add_68_goodG2BData + 1);
}
// 671408: using guessed type int CWE190_Integer_Overflow__int_max_add_68_goodG2BData;

//----- (00000000004359FB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_add_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_max_add_68_goodB2GData + 1);
  return result;
}
// 671410: using guessed type int CWE190_Integer_Overflow__int_max_add_68_goodB2GData;

//----- (0000000000435A36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000435A61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000435A8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_67b_goodB2GSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000435ACC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000435AF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000435B18) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000435B53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54e_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000435B74) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000435B95) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000435BDD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 671164: using guessed type int staticTrue_8;

//----- (0000000000435C21) ----------------------------------------------------
int goodB2G1_138()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = 0x7FFFFFFF;
  result = staticFalse_8;
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 671164: using guessed type int staticTrue_8;
// 671334: using guessed type int staticFalse_8;

//----- (0000000000435C86) ----------------------------------------------------
int goodB2G2_138()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = 0x7FFFFFFF;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 671164: using guessed type int staticTrue_8;

//----- (0000000000435CDF) ----------------------------------------------------
int goodG2B1_120()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 671164: using guessed type int staticTrue_8;
// 671334: using guessed type int staticFalse_8;

//----- (0000000000435D2F) ----------------------------------------------------
int goodG2B2_120()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 671164: using guessed type int staticTrue_8;

//----- (0000000000435D73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_05_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (0000000000435DA1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_square_66b_badSink((__int64)&v5);
}
// 435DA1: using guessed type char buf[16];

//----- (0000000000435ED7) ----------------------------------------------------
int goodG2B_225()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_square_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000435F01) ----------------------------------------------------
int goodB2G_207()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_square_66b_goodB2GSink((__int64)&v5);
}
// 435F01: using guessed type char buf[16];

//----- (0000000000436037) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_66_good()
{
  goodG2B_225();
  return goodB2G_207();
}

//----- (0000000000436051) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_53b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436089) ----------------------------------------------------
int goodG2B_226()
{
  return CWE190_Integer_Overflow__int_fscanf_square_53b_goodG2BSink(2);
}

//----- (00000000004360AB) ----------------------------------------------------
int goodB2G_208()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_53b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004360E3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_53_good()
{
  goodG2B_226();
  return goodB2G_208();
}

//----- (00000000004360FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_15_bad()
{
  return printIntLine(1u);
}

//----- (000000000043612B) ----------------------------------------------------
int goodB2G1_139()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000436180) ----------------------------------------------------
int goodB2G2_139()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004361D5) ----------------------------------------------------
int goodG2B1_121()
{
  return printIntLine(4u);
}

//----- (0000000000436203) ----------------------------------------------------
int goodG2B2_121()
{
  return printIntLine(4u);
}

//----- (0000000000436231) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_15_good()
{
  goodB2G1_139();
  goodB2G2_139();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (000000000043625F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_15_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (0000000000436291) ----------------------------------------------------
int goodB2G1_140()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004362D8) ----------------------------------------------------
int goodB2G2_140()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043631F) ----------------------------------------------------
int goodG2B1_122()
{
  return printIntLine(4u);
}

//----- (0000000000436351) ----------------------------------------------------
int goodG2B2_122()
{
  return printIntLine(4u);
}

//----- (0000000000436383) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_15_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (00000000004363B1) ----------------------------------------------------
int badSink_34()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_add_45_badData + 1);
}
// 671338: using guessed type int CWE190_Integer_Overflow__int_max_add_45_badData;

//----- (00000000004363D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_45_bad()
{
  CWE190_Integer_Overflow__int_max_add_45_badData = 0x7FFFFFFF;
  return badSink_34();
}
// 671338: using guessed type int CWE190_Integer_Overflow__int_max_add_45_badData;

//----- (0000000000436402) ----------------------------------------------------
int goodG2BSink_34()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_add_45_goodG2BData + 1);
}
// 67133C: using guessed type int CWE190_Integer_Overflow__int_max_add_45_goodG2BData;

//----- (0000000000436428) ----------------------------------------------------
int goodG2B_227()
{
  CWE190_Integer_Overflow__int_max_add_45_goodG2BData = 2;
  return goodG2BSink_34();
}
// 67133C: using guessed type int CWE190_Integer_Overflow__int_max_add_45_goodG2BData;

//----- (0000000000436453) ----------------------------------------------------
int goodB2GSink_25()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_add_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_max_add_45_goodB2GData + 1);
  return result;
}
// 671340: using guessed type int CWE190_Integer_Overflow__int_max_add_45_goodB2GData;

//----- (000000000043648E) ----------------------------------------------------
int goodB2G_209()
{
  CWE190_Integer_Overflow__int_max_add_45_goodB2GData = 0x7FFFFFFF;
  return goodB2GSink_25();
}
// 671340: using guessed type int CWE190_Integer_Overflow__int_max_add_45_goodB2GData;

//----- (00000000004364B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_45_good()
{
  goodG2B_227();
  return goodB2G_209();
}

//----- (00000000004364D3) ----------------------------------------------------
__int64 badSource_9()
{
  return 0x7FFFFFFFLL;
}

//----- (00000000004364E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_42_bad()
{
  int v0; // eax

  v0 = badSource_9();
  return printIntLine(v0 * v0);
}

//----- (0000000000436518) ----------------------------------------------------
__int64 goodG2BSource_9()
{
  return 2LL;
}

//----- (000000000043652B) ----------------------------------------------------
int goodG2B_228()
{
  int v0; // eax

  v0 = goodG2BSource_9();
  return printIntLine(v0 * v0);
}

//----- (000000000043655D) ----------------------------------------------------
__int64 goodB2GSource_9()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000436570) ----------------------------------------------------
int goodB2G_210()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_9();
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004365C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_42_good()
{
  goodB2G_210();
  return goodG2B_228();
}

//----- (00000000004365E3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_04_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 1;
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 4365E3: using guessed type char buf[16];

//----- (0000000000436735) ----------------------------------------------------
int goodB2G1_141()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 0;
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 436735: using guessed type char buf[16];

//----- (00000000004368A8) ----------------------------------------------------
int goodB2G2_141()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 1;
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 4368A8: using guessed type char buf[16];

//----- (0000000000436A0F) ----------------------------------------------------
int goodG2B1_123()
{
  return printIntLine(4u);
}

//----- (0000000000436A5D) ----------------------------------------------------
int goodG2B2_123()
{
  return printIntLine(4u);
}

//----- (0000000000436A9F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_04_good()
{
  goodB2G1_141();
  goodB2G2_141();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (0000000000436ACD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_31_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  result = v11;
  v6 = v11;
  if ( v11 > 0 )
  {
    v5 = 2 * v6;
    result = printIntLine(2 * v6);
  }
  return result;
}
// 436ACD: using guessed type char buf[16];

//----- (0000000000436C15) ----------------------------------------------------
int goodG2B_229()
{
  return printIntLine(4u);
}

//----- (0000000000436C51) ----------------------------------------------------
int goodB2G_211()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  result = v11;
  v6 = v11;
  if ( v11 > 0 )
  {
    if ( v6 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v6;
      result = printIntLine(2 * v6);
    }
  }
  return result;
}
// 436C51: using guessed type char buf[16];

//----- (0000000000436DAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_31_good()
{
  goodG2B_229();
  return goodB2G_211();
}

//----- (0000000000436DC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1;
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436E15) ----------------------------------------------------
int goodG2B_230()
{
  return printIntLine(3u);
}

//----- (0000000000436E4C) ----------------------------------------------------
int goodB2G_212()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1;
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 + 1;
  return printIntLine(v3 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436EAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_31_good()
{
  goodG2B_230();
  return goodB2G_212();
}

//----- (0000000000436EC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 436EC8: using guessed type char buf[16];

//----- (0000000000437002) ----------------------------------------------------
int goodB2G1_142()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 437002: using guessed type char buf[16];

//----- (0000000000437163) ----------------------------------------------------
int goodB2G2_142()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 437163: using guessed type char buf[16];

//----- (00000000004372C4) ----------------------------------------------------
int goodG2B1_124()
{
  return printIntLine(4u);
}

//----- (00000000004372F2) ----------------------------------------------------
int goodG2B2_124()
{
  return printIntLine(4u);
}

//----- (0000000000437320) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_15_good()
{
  goodB2G1_142();
  goodB2G2_142();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (000000000043734E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 + 1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (00000000004373C8) ----------------------------------------------------
int goodB2G_213()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000437457) ----------------------------------------------------
int goodG2B_231()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (00000000004374BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_12_good()
{
  goodB2G_213();
  return goodG2B_231();
}

//----- (00000000004374D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_67b_badSink(v9);
}
// 4374D6: using guessed type char buf[16];

//----- (000000000043760A) ----------------------------------------------------
int goodG2B_232()
{
  return CWE190_Integer_Overflow__int_listen_socket_multiply_67b_goodG2BSink(2);
}

//----- (0000000000437632) ----------------------------------------------------
int goodB2G_214()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_67b_goodB2GSink(v9);
}
// 437632: using guessed type char buf[16];

//----- (0000000000437766) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_67_good()
{
  goodG2B_232();
  return goodB2G_214();
}

//----- (0000000000437780) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54c_badSink(a1);
}

//----- (0000000000437797) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54c_goodG2BSink(a1);
}

//----- (00000000004377AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_square_54c_goodB2GSink(a1);
}

//----- (00000000004377C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_67b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437803) ----------------------------------------------------
int goodG2B_233()
{
  return CWE190_Integer_Overflow__int_fscanf_add_67b_goodG2BSink(2);
}

//----- (000000000043782B) ----------------------------------------------------
int goodB2G_215()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_add_67b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437869) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_67_good()
{
  goodG2B_233();
  return goodB2G_215();
}

//----- (0000000000437883) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_52c_badSink(a1);
}

//----- (000000000043789A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_52c_goodG2BSink(a1);
}

//----- (00000000004378B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_square_52c_goodB2GSink(a1);
}

//----- (00000000004378C8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_multiply_66b_badSink((__int64)&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437908) ----------------------------------------------------
int goodG2B_234()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fscanf_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000437932) ----------------------------------------------------
int goodB2G_216()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_multiply_66b_goodB2GSink((__int64)&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437972) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_66_good()
{
  goodG2B_234();
  return goodB2G_216();
}

//----- (000000000043798C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004379D0) ----------------------------------------------------
int goodG2B_235()
{
  return printIntLine(4u);
}

//----- (00000000004379FC) ----------------------------------------------------
int goodB2G_217()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437A6A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_01_good()
{
  goodG2B_235();
  return goodB2G_217();
}

//----- (0000000000437A84) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671270: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_badGlobal;

//----- (0000000000437AB3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671274: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G1Global;

//----- (0000000000437B03) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671278: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodB2G2Global;

//----- (0000000000437B47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67127C: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_22_goodG2BGlobal;

//----- (0000000000437B76) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000437BB5) ----------------------------------------------------
int goodB2G1_143()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000437C15) ----------------------------------------------------
int goodB2G2_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000437C69) ----------------------------------------------------
int goodG2B1_125()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000437CB4) ----------------------------------------------------
int goodG2B2_125()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000437CF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_09_good()
{
  goodB2G1_143();
  goodB2G2_143();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (0000000000437D21) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_add_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 671348: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_badGlobal;

//----- (0000000000437D4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 67134C: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Global;

//----- (0000000000437D96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 671350: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Global;

//----- (0000000000437DD5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 671354: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BGlobal;

//----- (0000000000437DFF) ----------------------------------------------------
int __fastcall badSink_35(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000437E20) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_41_bad()
{
  return badSink_35(0x7FFFFFFF);
}

//----- (0000000000437E42) ----------------------------------------------------
int __fastcall goodG2BSink_35(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000437E63) ----------------------------------------------------
int goodG2B_236()
{
  return goodG2BSink_35(2);
}

//----- (0000000000437E85) ----------------------------------------------------
int __fastcall goodB2GSink_26(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000437ECD) ----------------------------------------------------
int goodB2G_218()
{
  return goodB2GSink_26(0x7FFFFFFF);
}

//----- (0000000000437EEF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_41_good()
{
  goodB2G_218();
  return goodG2B_236();
}

//----- (0000000000437F09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000437F3B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000437F6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000437FB4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_03_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 437FB4: using guessed type char buf[16];

//----- (00000000004380F0) ----------------------------------------------------
int goodB2G1_144()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 4380F0: using guessed type char buf[16];

//----- (0000000000438241) ----------------------------------------------------
int goodB2G2_144()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 438241: using guessed type char buf[16];

//----- (0000000000438392) ----------------------------------------------------
int goodG2B1_126()
{
  return printIntLine(4u);
}

//----- (00000000004383C2) ----------------------------------------------------
int goodG2B2_126()
{
  return printIntLine(4u);
}

//----- (00000000004383F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_03_good()
{
  goodB2G1_144();
  goodB2G2_144();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (0000000000438420) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_34_bad()
{
  return printIntLine(0xFFFFFFFE);
}

//----- (000000000043845C) ----------------------------------------------------
int goodG2B_237()
{
  return printIntLine(4u);
}

//----- (0000000000438498) ----------------------------------------------------
int goodB2G_219()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004384E9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_34_good()
{
  goodG2B_237();
  return goodB2G_219();
}

//----- (0000000000438503) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_34_bad()
{
  return printIntLine(1u);
}

//----- (000000000043853B) ----------------------------------------------------
int goodG2B_238()
{
  return printIntLine(4u);
}

//----- (0000000000438573) ----------------------------------------------------
int goodB2G_220()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004385D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_34_good()
{
  goodG2B_238();
  return goodB2G_220();
}

//----- (00000000004385EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043862F) ----------------------------------------------------
int goodB2G_221()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438688) ----------------------------------------------------
int goodG2B_239()
{
  return printIntLine(3u);
}

//----- (00000000004386B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_18_good()
{
  goodB2G_221();
  return goodG2B_239();
}

//----- (00000000004386CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (00000000004386FB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000438727) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (000000000043877A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_9 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    v4 = v5 * v5;
    result = printIntLine(v5 * v5);
  }
  return result;
}
// 671168: using guessed type int staticTrue_9;

//----- (0000000000438800) ----------------------------------------------------
int goodB2G1_145()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_9 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 * v5;
  return printIntLine(v5 * v5);
}
// 671168: using guessed type int staticTrue_9;
// 671344: using guessed type int staticFalse_9;

//----- (00000000004388B9) ----------------------------------------------------
int goodB2G2_145()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_9 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    if ( v5 == 0x80000000 || v5 < -46339 || v5 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 * v5;
      result = printIntLine(v5 * v5);
    }
  }
  return result;
}
// 671168: using guessed type int staticTrue_9;

//----- (0000000000438966) ----------------------------------------------------
int goodG2B1_127()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671168: using guessed type int staticTrue_9;
// 671344: using guessed type int staticFalse_9;

//----- (00000000004389B2) ----------------------------------------------------
int goodG2B2_127()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = 2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671168: using guessed type int staticTrue_9;

//----- (00000000004389F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_05_good()
{
  goodB2G1_145();
  goodB2G2_145();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (0000000000438A20) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53d_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000438A41) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000438A62) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000438AAA) ----------------------------------------------------
int __fastcall badSink_36(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000438ACB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_36(v4);
}

//----- (0000000000438B33) ----------------------------------------------------
int __fastcall goodG2BSink_36(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000438B54) ----------------------------------------------------
int goodG2B_240()
{
  return goodG2BSink_36(2);
}

//----- (0000000000438B76) ----------------------------------------------------
int __fastcall goodB2GSink_27(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000438BBE) ----------------------------------------------------
int goodB2G_222()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_27(v4);
}

//----- (0000000000438C26) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_41_good()
{
  goodB2G_222();
  return goodG2B_240();
}

//----- (0000000000438C40) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_52b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438C78) ----------------------------------------------------
int goodG2B_241()
{
  return CWE190_Integer_Overflow__int_fscanf_square_52b_goodG2BSink(2);
}

//----- (0000000000438C9A) ----------------------------------------------------
int goodB2G_223()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_52b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438CD2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_52_good()
{
  goodG2B_241();
  return goodB2G_223();
}

//----- (0000000000438CEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_51b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000438D0D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000438D2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000438D76) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_add_22_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671348: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_badGlobal;

//----- (0000000000438DB8) ----------------------------------------------------
int goodB2G1_146()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67134C: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G1Global;

//----- (0000000000438DFA) ----------------------------------------------------
int goodB2G2_146()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Sink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671350: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_goodB2G2Global;

//----- (0000000000438E3C) ----------------------------------------------------
int goodG2B_242()
{
  CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BSink(2);
}
// 671354: using guessed type int CWE190_Integer_Overflow__int_fscanf_add_22_goodG2BGlobal;

//----- (0000000000438E68) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_22_good()
{
  goodB2G1_146();
  goodB2G2_146();
  return goodG2B_242();
}

//----- (0000000000438E8C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438ED2) ----------------------------------------------------
int goodB2G_224()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438F42) ----------------------------------------------------
int goodG2B_243()
{
  return printIntLine(4u);
}

//----- (0000000000438F70) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_16_good()
{
  goodB2G_224();
  return goodG2B_243();
}

//----- (0000000000438F8A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000438FD0) ----------------------------------------------------
int goodB2G1_147()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439037) ----------------------------------------------------
int goodB2G2_147()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439092) ----------------------------------------------------
int goodG2B1_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (00000000004390E4) ----------------------------------------------------
int goodG2B2_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000043912A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_14_good()
{
  goodB2G1_147();
  goodB2G2_147();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (0000000000439158) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_64b_badSink(&v1);
}

//----- (000000000043917C) ----------------------------------------------------
int goodG2B_244()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_add_64b_goodG2BSink(&v1);
}

//----- (00000000004391A0) ----------------------------------------------------
int goodB2G_225()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_add_64b_goodB2GSink(&v1);
}

//----- (00000000004391C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_add_64_good()
{
  goodG2B_244();
  return goodB2G_225();
}

//----- (00000000004391DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54d_badSink(a1);
}

//----- (00000000004391F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54d_goodG2BSink(a1);
}

//----- (000000000043920C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_add_54d_goodB2GSink(a1);
}

//----- (0000000000439223) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  return printIntLine(0xFFFFFFFE);
}

//----- (000000000043927E) ----------------------------------------------------
int goodG2B_245()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printIntLine(4u);
}

//----- (00000000004392D9) ----------------------------------------------------
int goodB2G_226()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000439349) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_32_good()
{
  goodG2B_245();
  return goodB2G_226();
}

//----- (0000000000439363) ----------------------------------------------------
int __fastcall badSink_37(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000439383) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_37(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004393BB) ----------------------------------------------------
int __fastcall goodG2BSink_37(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004393DB) ----------------------------------------------------
int goodG2B_246()
{
  return goodG2BSink_37(2);
}

//----- (00000000004393FD) ----------------------------------------------------
int __fastcall goodB2GSink_28(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000439432) ----------------------------------------------------
int goodB2G_227()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_28(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043946A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_41_good()
{
  goodB2G_227();
  return goodG2B_246();
}

//----- (0000000000439484) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004394AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004394D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000439517) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_31_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  result = v1;
  v3 = v1;
  if ( v1 > 0 )
  {
    v2 = 2 * v3;
    result = printIntLine(2 * v3);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439569) ----------------------------------------------------
int goodG2B_247()
{
  return printIntLine(4u);
}

//----- (00000000004395A5) ----------------------------------------------------
int goodB2G_228()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  result = v1;
  v3 = v1;
  if ( v1 > 0 )
  {
    if ( v3 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v3;
      result = printIntLine(2 * v3);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043960C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_31_good()
{
  goodG2B_247();
  return goodB2G_228();
}

//----- (0000000000439626) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000439652) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (000000000043967E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (00000000004396D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54e_badSink(a1);
}

//----- (00000000004396E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54e_goodG2BSink(a1);
}

//----- (00000000004396FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_add_54e_goodB2GSink(a1);
}

//----- (0000000000439716) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_31_bad()
{
  return printIntLine(1u);
}

//----- (000000000043974E) ----------------------------------------------------
int goodG2B_248()
{
  return printIntLine(4u);
}

//----- (0000000000439786) ----------------------------------------------------
int goodB2G_229()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004397E5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_31_good()
{
  goodG2B_248();
  return goodB2G_229();
}

//----- (00000000004397FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54e_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000439820) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000439841) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000439889) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_66b_badSink((__int64)&v1);
}

//----- (00000000004398B3) ----------------------------------------------------
int goodG2B_249()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_max_square_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004398DD) ----------------------------------------------------
int goodB2G_230()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_square_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000439907) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_66_good()
{
  goodG2B_249();
  return goodB2G_230();
}

//----- (0000000000439921) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439964) ----------------------------------------------------
int goodB2G1_148()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004399BD) ----------------------------------------------------
int goodB2G2_148()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439A16) ----------------------------------------------------
int goodG2B1_129()
{
  return printIntLine(3u);
}

//----- (0000000000439A43) ----------------------------------------------------
int goodG2B2_129()
{
  return printIntLine(3u);
}

//----- (0000000000439A70) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_15_good()
{
  goodB2G1_148();
  goodB2G2_148();
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (0000000000439A9E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 && v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439B2A) ----------------------------------------------------
int goodB2G1_149()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439BD7) ----------------------------------------------------
int goodB2G2_149()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 && v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439C78) ----------------------------------------------------
int goodG2B1_130()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439CCA) ----------------------------------------------------
int goodG2B2_130()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (0000000000439D10) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_14_good()
{
  goodB2G1_149();
  goodB2G2_149();
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (0000000000439D3E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_51b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439D76) ----------------------------------------------------
int goodG2B_250()
{
  return CWE190_Integer_Overflow__int_fscanf_square_51b_goodG2BSink(2);
}

//----- (0000000000439D98) ----------------------------------------------------
int goodB2G_231()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_51b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439DD0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_51_good()
{
  goodG2B_250();
  return goodB2G_231();
}

//----- (0000000000439DEA) ----------------------------------------------------
int __fastcall badSink_38(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000439E0F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_38(v4);
}

//----- (0000000000439E77) ----------------------------------------------------
int __fastcall goodG2BSink_38(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000439E9C) ----------------------------------------------------
int goodG2B_251()
{
  return goodG2BSink_38(2);
}

//----- (0000000000439EBE) ----------------------------------------------------
int __fastcall goodB2GSink_29(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000439EF8) ----------------------------------------------------
int goodB2G_232()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_29(v4);
}

//----- (0000000000439F60) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_41_good()
{
  goodB2G_232();
  return goodG2B_251();
}

//----- (0000000000439F7A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000439FD1) ----------------------------------------------------
int goodB2G1_150()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A04A) ----------------------------------------------------
int goodB2G2_150()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A0B7) ----------------------------------------------------
int goodG2B1_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A104) ----------------------------------------------------
int goodG2B2_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 454474: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A145) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_13_good()
{
  goodB2G1_150();
  goodB2G2_150();
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (000000000043A173) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_32_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int *v7; // [rsp+28h] [rbp-18h]
  int *v8; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v9 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  *v8 = v9;
  result = *v7;
  v6 = *v7;
  if ( v6 > 0 )
  {
    v5 = 2 * v6;
    result = printIntLine(2 * v6);
  }
  return result;
}

//----- (000000000043A214) ----------------------------------------------------
int goodG2B_252()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printIntLine(4u);
}

//----- (000000000043A26F) ----------------------------------------------------
int goodB2G_233()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int *v7; // [rsp+28h] [rbp-18h]
  int *v8; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v9 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  *v8 = v9;
  result = *v7;
  v6 = *v7;
  if ( v6 > 0 )
  {
    if ( v6 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v6;
      result = printIntLine(2 * v6);
    }
  }
  return result;
}

//----- (000000000043A325) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_32_good()
{
  goodG2B_252();
  return goodB2G_233();
}

//----- (000000000043A33F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000043A36A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000043A395) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_multiply_67b_goodB2GSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000043A3D5) ----------------------------------------------------
int badSink_39()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_square_45_badData * CWE190_Integer_Overflow__int_fscanf_square_45_badData);
}
// 671358: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_45_badData;

//----- (000000000043A3FC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_45_badData = v1;
  return badSink_39();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671358: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_45_badData;

//----- (000000000043A43D) ----------------------------------------------------
int goodG2BSink_39()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_fscanf_square_45_goodG2BData
         * CWE190_Integer_Overflow__int_fscanf_square_45_goodG2BData);
}
// 67135C: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_45_goodG2BData;

//----- (000000000043A464) ----------------------------------------------------
int goodG2B_253()
{
  CWE190_Integer_Overflow__int_fscanf_square_45_goodG2BData = 2;
  return goodG2BSink_39();
}
// 67135C: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_45_goodG2BData;

//----- (000000000043A48F) ----------------------------------------------------
int goodB2GSink_30()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData
             * CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData);
  }
  return result;
}
// 671360: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData;

//----- (000000000043A4DD) ----------------------------------------------------
int goodB2G_234()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData = v1;
  return goodB2GSink_30();
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671360: using guessed type int CWE190_Integer_Overflow__int_fscanf_square_45_goodB2GData;

//----- (000000000043A51E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_45_good()
{
  goodG2B_253();
  return goodB2G_234();
}

//----- (000000000043A538) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_square_66b_badSink((__int64)&v4);
}

//----- (000000000043A5A8) ----------------------------------------------------
int goodG2B_254()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fgets_square_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043A5D2) ----------------------------------------------------
int goodB2G_235()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_square_66b_goodB2GSink((__int64)&v4);
}

//----- (000000000043A642) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_66_good()
{
  goodG2B_254();
  return goodB2G_235();
}

//----- (000000000043A65C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_453CE4, &v1);
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A6B4) ----------------------------------------------------
int goodB2G1_151()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_453CE4, &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A742) ----------------------------------------------------
int goodB2G2_151()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_453CE4, &v1);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printIntLine(v1 * v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A7C4) ----------------------------------------------------
int goodG2B1_132()
{
  return printIntLine(4u);
}

//----- (000000000043A810) ----------------------------------------------------
int goodG2B2_132()
{
  return printIntLine(4u);
}

//----- (000000000043A850) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_06_good()
{
  goodB2G1_151();
  goodB2G2_151();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (000000000043A87E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000043A8AD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000043A8DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000043A920) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_67_bad()
{
  return CWE190_Integer_Overflow__int_max_multiply_67b_badSink(0x7FFFFFFF);
}

//----- (000000000043A948) ----------------------------------------------------
int goodG2B_255()
{
  return CWE190_Integer_Overflow__int_max_multiply_67b_goodG2BSink(2);
}

//----- (000000000043A970) ----------------------------------------------------
int goodB2G_236()
{
  return CWE190_Integer_Overflow__int_max_multiply_67b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000043A998) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_67_good()
{
  goodG2B_255();
  return goodB2G_236();
}

//----- (000000000043A9B2) ----------------------------------------------------
int __fastcall badSink_40(int a1)
{
  int result; // eax

  result = badStatic_8;
  if ( badStatic_8 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671364: using guessed type int badStatic_8;

//----- (000000000043A9E1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_8 = 1;
  return badSink_40(v8);
}
// 671364: using guessed type int badStatic_8;
// 43A9E1: using guessed type char buf[16];

//----- (000000000043AB19) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(int a1)
{
  int result; // eax

  result = goodB2G1Static_8;
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671368: using guessed type int goodB2G1Static_8;

//----- (000000000043AB69) ----------------------------------------------------
int goodB2G1_152()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(v8);
}
// 671368: using guessed type int goodB2G1Static_8;
// 43AB69: using guessed type char buf[16];

//----- (000000000043ACA1) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(int a1)
{
  int result; // eax

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67136C: using guessed type int goodB2G2Static_8;

//----- (000000000043ACE5) ----------------------------------------------------
int goodB2G2_152()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(v8);
}
// 67136C: using guessed type int goodB2G2Static_8;
// 43ACE5: using guessed type char buf[16];

//----- (000000000043AE1D) ----------------------------------------------------
int __fastcall goodG2BSink_40(int a1)
{
  int result; // eax

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671370: using guessed type int goodG2BStatic_8;

//----- (000000000043AE4C) ----------------------------------------------------
int goodG2B_256()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_40(2);
}
// 671370: using guessed type int goodG2BStatic_8;

//----- (000000000043AE78) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_21_good()
{
  goodB2G1_152();
  goodB2G2_152();
  return goodG2B_256();
}

//----- (000000000043AE9C) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (000000000043AEA7) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (000000000043AEB2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043AEFE) ----------------------------------------------------
int goodB2G1_153()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsFalse_8();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000043AF6B) ----------------------------------------------------
int goodB2G2_153()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (000000000043AFCC) ----------------------------------------------------
int goodG2B1_133()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043B024) ----------------------------------------------------
int goodG2B2_133()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043B070) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_08_good()
{
  goodB2G1_153();
  goodB2G2_153();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (000000000043B09E) ----------------------------------------------------
int __fastcall badSink_41(int a1)
{
  int result; // eax

  result = badStatic_9;
  if ( badStatic_9 )
    result = printIntLine(a1 + 1);
  return result;
}
// 671374: using guessed type int badStatic_9;

//----- (000000000043B0C8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_9 = 1;
  return badSink_41(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671374: using guessed type int badStatic_9;

//----- (000000000043B10A) ----------------------------------------------------
int __fastcall goodB2G1Sink_9(int a1)
{
  if ( goodB2G1Static_9 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 671378: using guessed type int goodB2G1Static_9;

//----- (000000000043B155) ----------------------------------------------------
int goodB2G1_154()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_9 = 0;
  return goodB2G1Sink_9(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 671378: using guessed type int goodB2G1Static_9;

//----- (000000000043B197) ----------------------------------------------------
int __fastcall goodB2G2Sink_9(int a1)
{
  int result; // eax

  result = goodB2G2Static_9;
  if ( goodB2G2Static_9 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 67137C: using guessed type int goodB2G2Static_9;

//----- (000000000043B1D6) ----------------------------------------------------
int goodB2G2_154()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_9 = 1;
  return goodB2G2Sink_9(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67137C: using guessed type int goodB2G2Static_9;

//----- (000000000043B218) ----------------------------------------------------
int __fastcall goodG2BSink_41(int a1)
{
  int result; // eax

  result = goodG2BStatic_9;
  if ( goodG2BStatic_9 )
    result = printIntLine(a1 + 1);
  return result;
}
// 671380: using guessed type int goodG2BStatic_9;

//----- (000000000043B242) ----------------------------------------------------
int goodG2B_257()
{
  goodG2BStatic_9 = 1;
  return goodG2BSink_41(2);
}
// 671380: using guessed type int goodG2BStatic_9;

//----- (000000000043B26E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_21_good()
{
  goodB2G1_154();
  goodB2G2_154();
  return goodG2B_257();
}

//----- (000000000043B292) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B2D3) ----------------------------------------------------
int goodB2G1_155()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B32A) ----------------------------------------------------
int goodB2G2_155()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B381) ----------------------------------------------------
int goodG2B1_134()
{
  return printIntLine(3u);
}

//----- (000000000043B3AC) ----------------------------------------------------
int goodG2B2_134()
{
  return printIntLine(3u);
}

//----- (000000000043B3D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_03_good()
{
  goodB2G1_155();
  goodB2G2_155();
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (000000000043B405) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_52_bad()
{
  return CWE190_Integer_Overflow__int_max_square_52b_badSink(0x7FFFFFFF);
}

//----- (000000000043B427) ----------------------------------------------------
int goodG2B_258()
{
  return CWE190_Integer_Overflow__int_max_square_52b_goodG2BSink(2);
}

//----- (000000000043B449) ----------------------------------------------------
int goodB2G_237()
{
  return CWE190_Integer_Overflow__int_max_square_52b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000043B46B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_square_52_good()
{
  goodG2B_258();
  return goodB2G_237();
}

//----- (000000000043B485) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_31_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  result = v7;
  v5 = v7;
  if ( v7 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000043B507) ----------------------------------------------------
int goodG2B_259()
{
  return printIntLine(4u);
}

//----- (000000000043B543) ----------------------------------------------------
int goodB2G_238()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  result = v7;
  v5 = v7;
  if ( v7 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000043B5DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_31_good()
{
  goodG2B_259();
  return goodB2G_238();
}

//----- (000000000043B5F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_max_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671384: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_badGlobal;

//----- (000000000043B623) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671388: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Global;

//----- (000000000043B673) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67138C: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Global;

//----- (000000000043B6B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_max_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 671390: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_goodG2BGlobal;

//----- (000000000043B6E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 43B6E6: using guessed type char buf[16];

//----- (000000000043B824) ----------------------------------------------------
int goodB2G_239()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43B824: using guessed type char buf[16];

//----- (000000000043B977) ----------------------------------------------------
int goodG2B_260()
{
  return printIntLine(4u);
}

//----- (000000000043B9A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_18_good()
{
  goodB2G_239();
  return goodG2B_260();
}

//----- (000000000043B9C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 43B9C3: using guessed type char buf[16];

//----- (000000000043BB15) ----------------------------------------------------
int goodB2G1_156()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 671170: using guessed type int globalFive;
// 43BB15: using guessed type char buf[16];

//----- (000000000043BC9A) ----------------------------------------------------
int goodB2G2_156()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v9 * v9;
      result = printIntLine(v9 * v9);
    }
  }
  return result;
}
// 671170: using guessed type int globalFive;
// 43BC9A: using guessed type char buf[16];

//----- (000000000043BE13) ----------------------------------------------------
int goodG2B1_135()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000043BE61) ----------------------------------------------------
int goodG2B2_135()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 671170: using guessed type int globalFive;

//----- (000000000043BEA3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_14_good()
{
  goodB2G1_156();
  goodB2G2_156();
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (000000000043BED1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v6 = recv(v10, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  *v9 = v11;
  return printIntLine(*v8 * *v8);
}
// 43BED1: using guessed type char buf[16];

//----- (000000000043C034) ----------------------------------------------------
int goodG2B_261()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printIntLine(4u);
}

//----- (000000000043C08B) ----------------------------------------------------
int goodB2G_240()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v13 = 0;
  fd = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v8 = recv(v12, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  *v11 = v13;
  v7 = *v10;
  if ( v7 == 0x80000000 || v7 < -46339 || v7 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 * v7;
  return printIntLine(v7 * v7);
}
// 43C08B: using guessed type char buf[16];

//----- (000000000043C215) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_32_good()
{
  goodG2B_261();
  return goodB2G_240();
}

//----- (000000000043C22F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_65_bad()
{
  return CWE190_Integer_Overflow__int_max_multiply_65b_badSink(0x7FFFFFFF);
}

//----- (000000000043C25A) ----------------------------------------------------
int goodG2B_262()
{
  return CWE190_Integer_Overflow__int_max_multiply_65b_goodG2BSink(2);
}

//----- (000000000043C285) ----------------------------------------------------
int goodB2G_241()
{
  return CWE190_Integer_Overflow__int_max_multiply_65b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000043C2B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_65_good()
{
  goodG2B_262();
  return goodB2G_241();
}

//----- (000000000043C2CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_63b_badSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C304) ----------------------------------------------------
int goodG2B_263()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000043C328) ----------------------------------------------------
int goodB2G_242()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_63b_goodB2GSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C362) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_63_good()
{
  goodG2B_263();
  return goodB2G_242();
}

//----- (000000000043C37C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000043C3AF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000043C3E2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (000000000043C43C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C491) ----------------------------------------------------
int goodB2G1_157()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043C508) ----------------------------------------------------
int goodB2G2_157()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C573) ----------------------------------------------------
int goodG2B1_136()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;
// 454470: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043C5BE) ----------------------------------------------------
int goodG2B2_136()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45446C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C5FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_09_good()
{
  goodB2G1_157();
  goodB2G2_157();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (000000000043C62B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_53b_badSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C663) ----------------------------------------------------
int goodG2B_264()
{
  return CWE190_Integer_Overflow__int_fscanf_multiply_53b_goodG2BSink(2);
}

//----- (000000000043C685) ----------------------------------------------------
int goodB2G_243()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_multiply_53b_goodB2GSink(v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C6BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_multiply_53_good()
{
  goodG2B_264();
  return goodB2G_243();
}

//----- (000000000043C6D7) ----------------------------------------------------
void CWE190_Integer_Overflow__int_listen_socket_add_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = v8 + 1;
    printIntLine(v8 + 1);
  }
}
// 43C6D7: using guessed type char buf[16];

//----- (000000000043C83B) ----------------------------------------------------
void goodB2G_244()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v8 + 1;
      printIntLine(v8 + 1);
    }
  }
}
// 43C83B: using guessed type char buf[16];

//----- (000000000043C9B4) ----------------------------------------------------
int goodG2B_265()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043CA05) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_add_17_good()
{
  goodB2G_244();
  return goodG2B_265();
}

//----- (000000000043CA1F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v9 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v9 = accept(fd, 0LL, 0LL);
        if ( v9 != -1 )
        {
          v7 = recv(v9, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v10 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v9 != -1 )
      close(v9);
  }
  else
  {
    v10 = 2;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v10 > 0 )
    {
      v6 = 2 * v10;
      result = printIntLine(2 * v10);
    }
  }
  else if ( v10 > 0 )
  {
    if ( v10 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v10;
      result = printIntLine(2 * v10);
    }
  }
  return result;
}
// 43CA1F: using guessed type char buf[16];

//----- (000000000043CBB5) ----------------------------------------------------
int goodB2G_245()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+4Ch] [rbp-24h]
  int v8; // [rsp+50h] [rbp-20h]
  int v9; // [rsp+54h] [rbp-1Ch]
  int v10; // [rsp+58h] [rbp-18h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v13; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v14 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v14 = accept(fd, 0LL, 0LL);
        if ( v14 != -1 )
        {
          v11 = recv(v14, buf, 0xDuLL, 0);
          if ( v11 != -1 )
          {
            if ( v11 )
            {
              buf[v11] = 0;
              v15 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v14 != -1 )
      close(v14);
  }
  else
  {
    v13 = -1;
    v10 = socket(2, 1, 6);
    if ( v10 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v10, &addr, 0x10u) != -1 && listen(v10, 5) != -1 )
      {
        v13 = accept(v10, 0LL, 0LL);
        if ( v13 != -1 )
        {
          v9 = recv(v13, nptr, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              nptr[v9] = 0;
              v15 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v10 != -1 )
      close(v10);
    if ( v13 != -1 )
      close(v13);
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v15 > 0 )
    {
      if ( v15 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v8 = 2 * v15;
        result = printIntLine(2 * v15);
      }
    }
  }
  else if ( v15 > 0 )
  {
    if ( v15 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v7 = 2 * v15;
      result = printIntLine(2 * v15);
    }
  }
  return result;
}
// 43CBB5: using guessed type char buf[16];
// 43CBB5: using guessed type char nptr[16];

//----- (000000000043CE72) ----------------------------------------------------
int goodG2B_266()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000043CEE1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_12_good()
{
  goodB2G_245();
  return goodG2B_266();
}

//----- (000000000043CEFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_67b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000043CF22) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000043CF49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000043CF97) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_12_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v3 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  else if ( v1 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D028) ----------------------------------------------------
int goodB2G_246()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v1 + 1;
      result = printIntLine(v1 + 1);
    }
  }
  else if ( v1 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 + 1;
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D0E5) ----------------------------------------------------
int goodG2B_267()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000043D14A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_add_12_good()
{
  goodB2G_246();
  return goodG2B_267();
}

//----- (000000000043D164) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_06_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5;
  if ( v5 > 0 )
  {
    v4 = 2 * v5;
    result = printIntLine(2 * v5);
  }
  return result;
}

//----- (000000000043D1EE) ----------------------------------------------------
int goodB2G1_158()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5;
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000043D299) ----------------------------------------------------
int goodB2G2_158()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5;
  if ( v5 > 0 )
  {
    if ( v5 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = 2 * v5;
      result = printIntLine(2 * v5);
    }
  }
  return result;
}

//----- (000000000043D338) ----------------------------------------------------
int goodG2B1_137()
{
  return printIntLine(4u);
}

//----- (000000000043D388) ----------------------------------------------------
int goodG2B2_137()
{
  return printIntLine(4u);
}

//----- (000000000043D3CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_multiply_06_good()
{
  goodB2G1_158();
  goodB2G2_158();
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (000000000043D3FA) ----------------------------------------------------
int __fastcall badSink_42(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043D41A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_add_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_42;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 43D41A: using guessed type char buf[16];

//----- (000000000043D551) ----------------------------------------------------
int __fastcall goodG2BSink_42(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043D571) ----------------------------------------------------
int goodG2B_268()
{
  return goodG2BSink_42(2);
}

//----- (000000000043D59C) ----------------------------------------------------
int __fastcall goodB2GSink_31(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043D5D1) ----------------------------------------------------
__int64 goodB2G_247()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_31;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 43D5D1: using guessed type char buf[16];

//----- (000000000043D708) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_add_44_good()
{
  goodG2B_268();
  return goodB2G_247();
}

//----- (000000000043D722) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000043D755) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000043D788) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (000000000043D7E2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_22_bad()
{
  CWE190_Integer_Overflow__int_max_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_max_multiply_22_badSink(0x7FFFFFFF);
}
// 671384: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_badGlobal;

//----- (000000000043D80E) ----------------------------------------------------
int goodB2G1_159()
{
  CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Sink(0x7FFFFFFF);
}
// 671388: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_goodB2G1Global;

//----- (000000000043D83A) ----------------------------------------------------
int goodB2G2_159()
{
  CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Sink(0x7FFFFFFF);
}
// 67138C: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_goodB2G2Global;

//----- (000000000043D866) ----------------------------------------------------
int goodG2B_269()
{
  CWE190_Integer_Overflow__int_max_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_max_multiply_22_goodG2BSink(2);
}
// 671390: using guessed type int CWE190_Integer_Overflow__int_max_multiply_22_goodG2BGlobal;

//----- (000000000043D892) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_multiply_22_good()
{
  goodB2G1_159();
  goodB2G2_159();
  return goodG2B_269();
}

//----- (000000000043D8B6) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (000000000043D8C1) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (000000000043D8CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v9 > 0 )
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43D8CC: using guessed type char buf[16];

//----- (000000000043DA28) ----------------------------------------------------
int goodB2G1_160()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsFalse_9();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43DA28: using guessed type char buf[16];

//----- (000000000043DBA5) ----------------------------------------------------
int goodB2G2_160()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_9();
  if ( result && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43DBA5: using guessed type char buf[16];

//----- (000000000043DD16) ----------------------------------------------------
int goodG2B1_138()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043DD6E) ----------------------------------------------------
int goodG2B2_138()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043DDBA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_08_good()
{
  goodB2G1_160();
  goodB2G2_160();
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (000000000043DDE8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54c_badSink(a1);
}

//----- (000000000043DDFF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54c_goodG2BSink(a1);
}

//----- (000000000043DE16) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_add_54c_goodB2GSink(a1);
}

//----- (000000000043DE2D) ----------------------------------------------------
void CWE190_Integer_Overflow__int_fgets_square_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v3 = v4 * v4;
    printIntLine(v4 * v4);
  }
}

//----- (000000000043DEC5) ----------------------------------------------------
void goodB2G_248()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 == 0x80000000 || v4 < -46339 || v4 > 46339 )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v4 * v4;
      printIntLine(v4 * v4);
    }
  }
}

//----- (000000000043DF84) ----------------------------------------------------
int goodG2B_270()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000043DFD6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_square_17_good()
{
  goodB2G_248();
  return goodG2B_270();
}

//----- (000000000043DFF0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_68b_badSink();
}
// 671428: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_68_badData;
// 43DFF0: using guessed type char buf[16];

//----- (000000000043E127) ----------------------------------------------------
int goodG2B_271()
{
  CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_68b_goodG2BSink();
}
// 671424: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodG2BData;

//----- (000000000043E152) ----------------------------------------------------
int goodB2G_249()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_multiply_68b_goodB2GSink();
}
// 671420: using guessed type int CWE190_Integer_Overflow__int_listen_socket_multiply_68_goodB2GData;
// 43E152: using guessed type char buf[16];

//----- (000000000043E289) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_68_good()
{
  goodG2B_271();
  return goodB2G_249();
}

//----- (000000000043E2A3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 43E2A3: using guessed type char buf[16];

//----- (000000000043E3F1) ----------------------------------------------------
int goodB2G1_161()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 43E3F1: using guessed type char buf[16];

//----- (000000000043E572) ----------------------------------------------------
int goodB2G2_161()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v9 * v9;
  return printIntLine(v9 * v9);
}
// 43E572: using guessed type char buf[16];

//----- (000000000043E6E7) ----------------------------------------------------
int goodG2B1_139()
{
  return printIntLine(4u);
}

//----- (000000000043E731) ----------------------------------------------------
int goodG2B2_139()
{
  return printIntLine(4u);
}

//----- (000000000043E76F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_04_good()
{
  goodB2G1_161();
  goodB2G2_161();
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (000000000043E79D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11;
  v5 = v11 * v11;
  return printIntLine(v11 * v11);
}
// 43E79D: using guessed type char buf[16];

//----- (000000000043E8E1) ----------------------------------------------------
int goodG2B_272()
{
  return printIntLine(4u);
}

//----- (000000000043E919) ----------------------------------------------------
int goodB2G_250()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11;
  if ( v11 == 0x80000000 || v6 < -46339 || v6 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 * v6;
  return printIntLine(v6 * v6);
}
// 43E919: using guessed type char buf[16];

//----- (000000000043EA84) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_square_31_good()
{
  goodG2B_272();
  return goodB2G_250();
}

//----- (000000000043EA9E) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_add_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 43EA9E: using guessed type char buf[16];

//----- (000000000043EBC1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000043EBD4) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_add_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 43EBD4: using guessed type char buf[16];

//----- (000000000043ECF7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54e_badSink(a1);
}

//----- (000000000043ED0E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54e_goodG2BSink(a1);
}

//----- (000000000043ED25) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_multiply_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_multiply_54e_goodB2GSink(a1);
}

//----- (000000000043ED3C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_02_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    v5 = 2 * v9;
    result = printIntLine(2 * v9);
  }
  return result;
}
// 43ED3C: using guessed type char buf[16];

//----- (000000000043EE78) ----------------------------------------------------
int goodB2G1_162()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43EE78: using guessed type char buf[16];

//----- (000000000043EFC9) ----------------------------------------------------
int goodB2G2_162()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v6 = result;
          if ( result != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43EFC9: using guessed type char buf[16];

//----- (000000000043F11A) ----------------------------------------------------
int goodG2B1_140()
{
  return printIntLine(4u);
}

//----- (000000000043F14A) ----------------------------------------------------
int goodG2B2_140()
{
  return printIntLine(4u);
}

//----- (000000000043F17A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_02_good()
{
  goodB2G1_162();
  goodB2G2_162();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (000000000043F1A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_64b_badSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F1E2) ----------------------------------------------------
int goodG2B_273()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_square_64b_goodG2BSink(&v1);
}

//----- (000000000043F206) ----------------------------------------------------
int goodB2G_251()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_square_64b_goodB2GSink(&v1);
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F240) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_square_64_good()
{
  goodG2B_273();
  return goodB2G_251();
}

//----- (000000000043F25A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v9 > 0 )
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43F25A: using guessed type char buf[16];

//----- (000000000043F3B6) ----------------------------------------------------
int goodB2G1_163()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43F3B6: using guessed type char buf[16];

//----- (000000000043F533) ----------------------------------------------------
int goodB2G2_163()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v6 = recv(v8, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( result && v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 43F533: using guessed type char buf[16];

//----- (000000000043F6A4) ----------------------------------------------------
int goodG2B1_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043F6FC) ----------------------------------------------------
int goodG2B2_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000043F748) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_multiply_11_good()
{
  goodB2G1_163();
  goodB2G2_163();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (000000000043F776) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000043F797) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000043F7C2) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000043F7E3) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000043F808) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000043F82E) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000043F852) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000043F876) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000043F89A) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000043F8BE) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000043F8EE) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000043F90F) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000043F933) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000043F95E) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000043F98A) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000043F9E1) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400BF0: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FABA) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400CF0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FB6E) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000043FB79) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000043FB84) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000043FB9A) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000043FBA0) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000043FBA6) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000043FBAC) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000043FBB2) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000043FBB8) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000043FBBE) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000043FBC4) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000043FBCA) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000043FBD0) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000043FBD6) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000043FBDC) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000043FBE2) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000043FBE8) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000043FBEE) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000043FBF4) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000043FBFA) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000043FC00) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000043FC06) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000043FC39) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000043FCDD) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000043FD11) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000043FD30) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000043FDA5) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000043FDBF) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000043FDD9) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000043FE00) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 670DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 670DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000043FE74) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 2839 function(s) have been successfully decompiled
