/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400950();
// int printf(const char *format, ...);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1();
int goodG2B2();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad();
unsigned int goodB2G1_0();
int goodB2G2_0();
int goodG2B1_0();
int goodG2B2_0();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_1();
int goodG2B2_1();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_64_bad();
int goodG2B();
int goodB2G();
int CWE190_Integer_Overflow__unsigned_int_rand_add_64_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_bad();
int goodG2B_0();
int goodB2G_0();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_52_bad();
int goodG2B_1();
int goodB2G_1();
int CWE190_Integer_Overflow__unsigned_int_max_square_52_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_66_bad();
int goodG2B_2();
int goodB2G_2();
int CWE190_Integer_Overflow__unsigned_int_rand_square_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_bad();
int goodG2B_3();
int goodB2G_3();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_22_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B_4();
int CWE190_Integer_Overflow__unsigned_int_max_add_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_16_bad();
int goodB2G_4();
int goodG2B_5();
int CWE190_Integer_Overflow__unsigned_int_max_square_16_good();
int __fastcall badSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_bad();
int __fastcall goodB2G1Sink(unsigned int a1);
int goodB2G1_3();
int __fastcall goodB2G2Sink(unsigned int a1);
int goodB2G2_3();
int __fastcall goodG2BSink(int a1);
int goodG2B_6();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_2();
int goodG2B2_2();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_3();
int goodG2B2_3();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_bad();
int goodG2B_7();
unsigned int goodB2G_5();
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_bad();
int goodB2G_6();
int goodG2B_8();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_4();
int goodG2B2_4();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad();
int goodG2B_9();
int goodB2G_7();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_51_bad();
int goodG2B_10();
int goodB2G_8();
int CWE190_Integer_Overflow__unsigned_int_max_square_51_good();
int __fastcall badSink_0(__int16 a1);
__int64 CWE190_Integer_Overflow__short_rand_square_44_bad();
int __fastcall goodG2BSink_0(__int16 a1);
int goodG2B_11();
int __fastcall goodB2GSink(__int16 a1);
__int64 goodB2G_9();
__int64 CWE190_Integer_Overflow__short_rand_square_44_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_13_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B1_5();
int goodG2B2_5();
int CWE190_Integer_Overflow__unsigned_int_max_add_13_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_14_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_6();
int goodG2B2_6();
int CWE190_Integer_Overflow__unsigned_int_max_add_14_good();
int CWE190_Integer_Overflow__short_rand_square_16_bad();
int goodB2G_10();
int goodG2B_12();
int CWE190_Integer_Overflow__short_rand_square_16_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_bad();
int goodB2G_11();
int goodG2B_13();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_bad();
int goodB2G_12();
int goodG2B_14();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Sink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Sink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BSink(int a1);
int badSink_1();
int CWE190_Integer_Overflow__unsigned_int_max_square_45_bad();
int goodG2BSink_1();
int goodG2B_15();
int goodB2GSink_0();
int goodB2G_13();
int CWE190_Integer_Overflow__unsigned_int_max_square_45_good();
__int64 CWE190_Integer_Overflow__short_rand_square_61b_badSource();
__int64 CWE190_Integer_Overflow__short_rand_square_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__short_rand_square_61b_goodB2GSource();
int CWE190_Integer_Overflow__unsigned_int_max_square_06_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_7();
int goodG2B2_7();
int CWE190_Integer_Overflow__unsigned_int_max_square_06_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_8();
int goodG2B2_8();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad();
int goodG2B_16();
int goodB2G_14();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_good();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_goodB2GSource(unsigned int a1);
int __fastcall badSink_2(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_21_bad();
int __fastcall goodB2G1Sink_0(int a1);
int goodB2G1_11();
int __fastcall goodB2G2Sink_0(int a1);
int goodB2G2_11();
int __fastcall goodG2BSink_2(int a1);
int goodG2B_17();
int CWE190_Integer_Overflow__unsigned_int_max_add_21_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_03_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_9();
int goodG2B2_9();
int CWE190_Integer_Overflow__unsigned_int_max_add_03_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_bad();
unsigned int goodB2G1_13();
unsigned int goodB2G2_13();
int goodG2B1_10();
int goodG2B2_10();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B1_11();
int goodG2B2_11();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B_18();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_bad();
int goodG2B_19();
int goodB2G_15();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_18_bad();
int goodB2G_16();
int goodG2B_20();
int CWE190_Integer_Overflow__unsigned_int_max_add_18_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_63b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__short_rand_square_68b_badSink();
int CWE190_Integer_Overflow__short_rand_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_rand_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_bad();
int goodG2B_21();
int goodB2G_17();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_good();
int CWE190_Integer_Overflow__short_rand_square_07_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_12();
int goodG2B2_12();
int CWE190_Integer_Overflow__short_rand_square_07_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad();
int goodG2B_22();
int goodB2G_18();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_13();
int goodG2B2_13();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B_23();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_bad();
int goodG2B_24();
int goodB2G_19();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_64_bad();
int goodG2B_25();
int goodB2G_20();
int CWE190_Integer_Overflow__unsigned_int_max_square_64_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_11_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_14();
int goodG2B2_14();
int CWE190_Integer_Overflow__unsigned_int_max_add_11_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_02_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_15();
int goodG2B2_15();
int CWE190_Integer_Overflow__unsigned_int_max_add_02_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_bad();
unsigned int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_16();
int goodG2B2_16();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_goodB2GSink(int a1);
int __fastcall badSink_3(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_bad();
int __fastcall goodB2G1Sink_1(unsigned int a1);
int goodB2G1_22();
int __fastcall goodB2G2Sink_1(unsigned int a1);
int goodB2G2_22();
int __fastcall goodG2BSink_3(int a1);
int goodG2B_26();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad();
unsigned int goodB2G1_23();
unsigned int goodB2G2_23();
int goodG2B1_17();
int goodG2B2_17();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_02_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_18();
int goodG2B2_18();
int CWE190_Integer_Overflow__unsigned_int_max_square_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_65_bad();
int goodG2B_27();
int goodB2G_21();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_65_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_10_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_19();
int goodG2B2_19();
int CWE190_Integer_Overflow__unsigned_int_max_square_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53c_goodB2GSink(int a1);
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE190_Integer_Overflow__unsigned_int_rand_add_08_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_20();
int goodG2B2_20();
int CWE190_Integer_Overflow__unsigned_int_rand_add_08_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_05_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B1_21();
int goodG2B2_21();
int CWE190_Integer_Overflow__unsigned_int_max_add_05_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_01_bad();
int goodG2B_28();
int goodB2G_22();
int CWE190_Integer_Overflow__unsigned_int_max_square_01_good();
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_bad();
void goodB2G_23();
int goodG2B_29();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53d_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_65_bad();
int goodG2B_30();
__int64 goodB2G_24();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_65_good();
void CWE190_Integer_Overflow__unsigned_int_rand_square_17_bad();
void goodB2G_25();
int goodG2B_31();
int CWE190_Integer_Overflow__unsigned_int_rand_square_17_good();
int __fastcall badSink_4(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_44_bad();
int __fastcall goodG2BSink_4(int a1);
int goodG2B_32();
int __fastcall goodB2GSink_1(int a1);
__int64 goodB2G_26();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_44_good();
int CWE190_Integer_Overflow__short_rand_square_52_bad();
int goodG2B_33();
int goodB2G_27();
int CWE190_Integer_Overflow__short_rand_square_52_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_34_bad();
int goodG2B_34();
int goodB2G_28();
int CWE190_Integer_Overflow__unsigned_int_max_add_34_good();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_bad();
int goodG2B_35();
__int64 goodB2G_29();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_63_bad();
int goodG2B_36();
int goodB2G_30();
int CWE190_Integer_Overflow__unsigned_int_max_square_63_good();
int __fastcall badSink_5(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_21_bad();
int __fastcall goodB2G1Sink_2(int a1);
int goodB2G1_28();
int __fastcall goodB2G2Sink_2(int a1);
int goodB2G2_28();
int __fastcall goodG2BSink_5(int a1);
int goodG2B_37();
int CWE190_Integer_Overflow__unsigned_int_rand_square_21_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_bad();
int goodG2B_38();
int goodB2G_31();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_rand_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_rand_add_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_bad();
unsigned int goodB2G1_29();
unsigned int goodB2G2_29();
int goodG2B1_22();
int goodG2B2_22();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_09_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_23();
int goodG2B2_23();
int CWE190_Integer_Overflow__unsigned_int_max_square_09_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad();
int goodB2G_32();
int goodG2B_39();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_bad();
int goodG2B_40();
int goodB2G_33();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_54_bad();
int goodG2B_41();
int goodB2G_34();
int CWE190_Integer_Overflow__unsigned_int_max_add_54_good();
int CWE190_Integer_Overflow__short_rand_square_51_bad();
int goodG2B_42();
int goodB2G_35();
int CWE190_Integer_Overflow__short_rand_square_51_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_66_bad();
int goodG2B_43();
int goodB2G_36();
int CWE190_Integer_Overflow__unsigned_int_max_add_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_53_bad();
int goodG2B_44();
int goodB2G_37();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_53_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_bad();
int goodG2B_45();
int goodB2G_38();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_24();
int goodG2B2_24();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_bad();
int goodG2B_46();
int goodB2G_39();
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_61_bad();
int goodG2B_47();
int goodB2G_40();
int CWE190_Integer_Overflow__unsigned_int_rand_square_61_good();
int badSink_6();
int CWE190_Integer_Overflow__short_rand_square_45_bad();
int goodG2BSink_6();
int goodG2B_48();
int goodB2GSink_2();
int goodB2G_41();
int CWE190_Integer_Overflow__short_rand_square_45_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B1_25();
int goodG2B2_25();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_good();
int __fastcall badSink_7(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_bad();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_49();
int __fastcall goodB2GSink_3(unsigned int a1);
int goodB2G_42();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_good();
int CWE190_Integer_Overflow__short_rand_square_06_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_26();
int goodG2B2_26();
int CWE190_Integer_Overflow__short_rand_square_06_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_27();
int goodG2B2_27();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_good();
int badSink_8();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_bad();
int goodG2BSink_8();
int goodG2B_50();
int goodB2GSink_4();
int goodB2G_43();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B1_28();
int goodG2B2_28();
int CWE190_Integer_Overflow__unsigned_int_rand_square_07_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_53_bad();
int goodG2B_51();
int goodB2G_44();
int CWE190_Integer_Overflow__unsigned_int_rand_add_53_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_bad();
int goodB2G1_36();
int goodB2G2_36();
int goodG2B1_29();
int goodG2B2_29();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_good();
__int64 __fastcall badSource(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_bad();
__int64 goodG2BSource();
int goodG2B_52();
__int64 __fastcall goodB2GSource(unsigned int a1);
int goodB2G_45();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_bad();
int goodG2B_53();
unsigned int goodB2G_46();
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_54_bad();
int goodG2B_54();
int goodB2G_47();
int CWE190_Integer_Overflow__unsigned_int_max_square_54_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_64b_goodB2GSink(__int16 *a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_18_bad();
int goodB2G_48();
int goodG2B_55();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_18_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_30();
int goodG2B2_30();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_good();
int __fastcall badSink_9(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_bad();
int __fastcall goodG2BSink_9(int a1);
int goodG2B_56();
int __fastcall goodB2GSink_5(int a1);
int goodB2G_49();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_good();
void CWE190_Integer_Overflow__short_rand_square_17_bad();
void goodB2G_50();
int goodG2B_57();
int CWE190_Integer_Overflow__short_rand_square_17_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_67b_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_61b_goodB2GSource();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_52_bad();
int goodG2B_58();
int goodB2G_51();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_52_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_bad();
int goodG2B_59();
int goodB2G_52();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_bad();
int goodG2B_60();
int goodB2G_53();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_goodB2GSink(__int64 a1);
int __fastcall badSink_10(__int16 a1);
int CWE190_Integer_Overflow__short_rand_square_21_bad();
int __fastcall goodB2G1Sink_3(__int16 a1);
int goodB2G1_38();
int __fastcall goodB2G2Sink_3(__int16 a1);
int goodB2G2_38();
int __fastcall goodG2BSink_10(__int16 a1);
int goodG2B_61();
int CWE190_Integer_Overflow__short_rand_square_21_good();
int CWE190_Integer_Overflow__short_rand_square_64_bad();
int goodG2B_62();
int goodB2G_54();
int CWE190_Integer_Overflow__short_rand_square_64_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_goodB2GSink(unsigned int a1);
int __fastcall badSink_11(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_41_bad();
int __fastcall goodG2BSink_11(int a1);
int goodG2B_63();
int __fastcall goodB2GSink_6(int a1);
int goodB2G_55();
int CWE190_Integer_Overflow__unsigned_int_rand_add_41_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_65_bad();
int goodG2B_64();
int goodB2G_56();
int CWE190_Integer_Overflow__unsigned_int_max_square_65_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_65_bad();
int goodG2B_65();
int goodB2G_57();
int CWE190_Integer_Overflow__unsigned_int_max_add_65_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_52_bad();
int goodG2B_66();
int goodB2G_58();
int CWE190_Integer_Overflow__unsigned_int_rand_add_52_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_bad();
int goodG2B_67();
int goodB2G_59();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_bad();
int goodG2B_68();
int goodB2G_60();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_51_bad();
int goodG2B_69();
int goodB2G_61();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad();
int goodB2G_62();
int goodG2B_70();
int CWE190_Integer_Overflow__unsigned_int_rand_add_16_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_67b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_bad();
int goodG2B_71();
int goodB2G_63();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54d_goodB2GSink(int a1);
int badSink_12();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_bad();
int goodG2BSink_12();
int goodG2B_72();
int goodB2GSink_7();
int goodB2G_64();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_bad();
int goodG2B_73();
int goodB2G_65();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_51_bad();
int goodG2B_74();
int goodB2G_66();
int CWE190_Integer_Overflow__unsigned_int_rand_add_51_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B1_31();
int goodG2B2_31();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_bad();
int goodG2B_75();
int goodB2G_67();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_32();
int goodG2B2_32();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_33();
int goodG2B2_33();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_bad();
int goodG2B_76();
int goodB2G_68();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_good();
int badSink_13();
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_bad();
int goodG2BSink_13();
int goodG2B_77();
int goodB2GSink_8();
int goodB2G_69();
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_68_bad();
int goodG2B_78();
int goodB2G_70();
int CWE190_Integer_Overflow__unsigned_int_max_square_68_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_06_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_34();
int goodG2B2_34();
int CWE190_Integer_Overflow__unsigned_int_rand_add_06_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_32_bad();
int goodG2B_79();
int goodB2G_71();
int CWE190_Integer_Overflow__unsigned_int_max_add_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Sink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Sink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BSink(int a1);
int __fastcall badSink_14(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_bad();
int __fastcall goodG2BSink_14(int a1);
int goodG2B_80();
int __fastcall goodB2GSink_9(int a1);
__int64 goodB2G_72();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_bad();
int goodB2G1_43();
int goodB2G2_43();
int goodG2B1_35();
int goodG2B2_35();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_67b_goodB2GSink(int a1);
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE190_Integer_Overflow__short_rand_square_08_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_36();
int goodG2B2_36();
int CWE190_Integer_Overflow__short_rand_square_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_bad();
int goodG2B_81();
unsigned int goodB2G_73();
unsigned int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_53_bad();
int goodG2B_82();
int goodB2G_74();
int CWE190_Integer_Overflow__unsigned_int_max_square_53_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_05_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B1_37();
int goodG2B2_37();
int CWE190_Integer_Overflow__unsigned_int_rand_square_05_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_04_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_38();
int goodG2B2_38();
int CWE190_Integer_Overflow__unsigned_int_max_add_04_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_31_bad();
int goodG2B_83();
int goodB2G_75();
int CWE190_Integer_Overflow__unsigned_int_max_add_31_good();
int __fastcall badSink_15(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_41_bad();
int __fastcall goodG2BSink_15(int a1);
int goodG2B_84();
int __fastcall goodB2GSink_10(int a1);
int goodB2G_76();
int CWE190_Integer_Overflow__unsigned_int_rand_square_41_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B_85();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_63b_goodB2GSink(__int16 *a1);
int CWE190_Integer_Overflow__short_rand_square_67_bad();
int goodG2B_86();
int goodB2G_77();
int CWE190_Integer_Overflow__short_rand_square_67_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_64_bad();
int goodG2B_87();
int goodB2G_78();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_64_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_67_bad();
int goodG2B_88();
int goodB2G_79();
int CWE190_Integer_Overflow__unsigned_int_max_add_67_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_34_bad();
int goodG2B_89();
int goodB2G_80();
int CWE190_Integer_Overflow__unsigned_int_rand_square_34_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54d_goodB2GSink(int a1);
int __fastcall badSink_16(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_41_bad();
int __fastcall goodG2BSink_16(int a1);
int goodG2B_90();
int __fastcall goodB2GSink_11(unsigned int a1);
int goodB2G_81();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_41_good();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_bad();
int goodG2B_91();
__int64 goodB2G_82();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_good();
int CWE190_Integer_Overflow__short_rand_square_61_bad();
int goodG2B_92();
int goodB2G_83();
int CWE190_Integer_Overflow__short_rand_square_61_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_07_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_39();
int goodG2B2_39();
int CWE190_Integer_Overflow__unsigned_int_max_square_07_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_40();
int goodG2B2_40();
int CWE190_Integer_Overflow__unsigned_int_rand_square_10_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_12_bad();
int goodB2G_84();
int goodG2B_93();
int CWE190_Integer_Overflow__unsigned_int_max_add_12_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_53_bad();
int goodG2B_94();
int goodB2G_85();
int CWE190_Integer_Overflow__unsigned_int_max_add_53_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_04_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_41();
int goodG2B2_41();
int CWE190_Integer_Overflow__unsigned_int_max_square_04_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_bad();
int goodG2B_95();
int goodB2G_86();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_09_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_42();
int goodG2B2_42();
int CWE190_Integer_Overflow__unsigned_int_max_add_09_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad();
int goodG2B_96();
int goodB2G_87();
int CWE190_Integer_Overflow__unsigned_int_rand_square_01_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_64_bad();
int goodG2B_97();
int goodB2G_88();
int CWE190_Integer_Overflow__unsigned_int_max_add_64_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_bad();
int goodB2G_89();
int goodG2B_98();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad();
int goodG2B_99();
int goodB2G_90();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_34_bad();
int goodG2B_100();
int goodB2G_91();
int CWE190_Integer_Overflow__unsigned_int_rand_add_34_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_43();
int goodG2B2_43();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_66_bad();
int goodG2B_101();
int goodB2G_92();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_goodB2GSink(unsigned int a1);
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE190_Integer_Overflow__unsigned_int_rand_square_08_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_44();
int goodG2B2_44();
int CWE190_Integer_Overflow__unsigned_int_rand_square_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_bad();
int goodG2B_102();
int goodB2G_93();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_bad();
int goodG2B_103();
int goodB2G_94();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_goodB2GSink();
int badSink_17();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad();
int goodG2BSink_17();
int goodG2B_104();
int goodB2GSink_12();
int goodB2G_95();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_52_bad();
int goodG2B_105();
int goodB2G_96();
int CWE190_Integer_Overflow__unsigned_int_max_add_52_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_66_bad();
int goodG2B_106();
int goodB2G_97();
int CWE190_Integer_Overflow__unsigned_int_rand_add_66_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_bad();
int goodG2B_107();
int goodB2G_98();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_16_bad();
int goodB2G_99();
int goodG2B_108();
int CWE190_Integer_Overflow__unsigned_int_max_add_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_06_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_45();
int goodG2B2_45();
int CWE190_Integer_Overflow__unsigned_int_max_add_06_good();
int CWE190_Integer_Overflow__short_rand_square_14_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_46();
int goodG2B2_46();
int CWE190_Integer_Overflow__short_rand_square_14_good();
int CWE190_Integer_Overflow__short_rand_square_32_bad();
int goodG2B_109();
int goodB2G_100();
int CWE190_Integer_Overflow__short_rand_square_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B1_47();
int goodG2B2_47();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad();
int goodG2B_110();
int goodB2G_101();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_bad();
unsigned int goodB2G_102();
int goodG2B_111();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_51_bad();
int goodG2B_112();
int goodB2G_103();
int CWE190_Integer_Overflow__unsigned_int_max_add_51_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_bad();
int goodG2B_113();
int goodB2G_104();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_54_bad();
int goodG2B_114();
int goodB2G_105();
int CWE190_Integer_Overflow__unsigned_int_rand_square_54_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_bad();
int goodG2B_115();
int goodB2G_106();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_15_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B1_48();
int goodG2B2_48();
int CWE190_Integer_Overflow__unsigned_int_max_square_15_good();
int CWE190_Integer_Overflow__short_rand_square_04_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B1_49();
int goodG2B2_49();
int CWE190_Integer_Overflow__short_rand_square_04_good();
int badSink_18();
int CWE190_Integer_Overflow__unsigned_int_max_add_45_bad();
int goodG2BSink_18();
int goodG2B_116();
int goodB2GSink_13();
int goodB2G_107();
int CWE190_Integer_Overflow__unsigned_int_max_add_45_good();
__int64 badSource_0();
int CWE190_Integer_Overflow__unsigned_int_max_square_42_bad();
__int64 goodG2BSource_0();
int goodG2B_117();
__int64 goodB2GSource_0();
int goodB2G_108();
int CWE190_Integer_Overflow__unsigned_int_max_square_42_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_50();
int goodG2B2_50();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_bad();
int goodG2B_118();
int goodB2G_109();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_bad();
int goodG2B_119();
int goodB2G_110();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_bad();
int goodG2B_120();
int goodB2G_111();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_goodG2BSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_63_bad();
int goodG2B_121();
int goodB2G_112();
int CWE190_Integer_Overflow__unsigned_int_rand_add_63_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_bad();
int goodG2B_122();
int goodB2G_113();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad();
unsigned int goodB2G_114();
int goodG2B_123();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_05_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B1_51();
int goodG2B2_51();
int CWE190_Integer_Overflow__unsigned_int_max_square_05_good();
int __fastcall badSink_19(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_41_bad();
int __fastcall goodG2BSink_19(int a1);
int goodG2B_124();
int __fastcall goodB2GSink_14(int a1);
int goodB2G_115();
int CWE190_Integer_Overflow__unsigned_int_max_square_41_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_64b_goodB2GSink(_DWORD *a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_65_bad();
int goodG2B_125();
__int64 goodB2G_116();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_65_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_rand_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_rand_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad();
int goodG2B_126();
unsigned int goodB2G_117();
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_16_bad();
int goodB2G_118();
int goodG2B_127();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_16_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_bad();
int goodG2B_128();
int goodB2G_119();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_34_bad();
int goodG2B_129();
int goodB2G_120();
int CWE190_Integer_Overflow__unsigned_int_max_square_34_good();
__int64 badSource_1();
int CWE190_Integer_Overflow__unsigned_int_max_add_42_bad();
__int64 goodG2BSource_1();
int goodG2B_130();
__int64 goodB2GSource_1();
int goodB2G_121();
int CWE190_Integer_Overflow__unsigned_int_max_add_42_good();
int CWE190_Integer_Overflow__short_rand_square_22_bad();
int goodB2G1_61();
int goodB2G2_61();
int goodG2B_131();
int CWE190_Integer_Overflow__short_rand_square_22_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53c_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B_132();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_good();
int badSink_20();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_bad();
int goodG2BSink_20();
int goodG2B_133();
int goodB2GSink_15();
int goodB2G_122();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_bad();
int goodB2G_123();
int goodG2B_134();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_01_bad();
int goodG2B_135();
int goodB2G_124();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_01_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_14_bad();
int goodB2G1_63();
int goodB2G2_63();
int goodG2B1_52();
int goodG2B2_52();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_14_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54d_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_bad();
int goodB2G1_64();
int goodB2G2_64();
int goodG2B1_53();
int goodG2B2_53();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_32_bad();
int goodG2B_136();
int goodB2G_125();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_66_bad();
int goodG2B_137();
int goodB2G_126();
int CWE190_Integer_Overflow__unsigned_int_max_square_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_64_bad();
int goodG2B_138();
int goodB2G_127();
int CWE190_Integer_Overflow__unsigned_int_rand_square_64_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_bad();
int goodG2B_139();
int goodB2G_128();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_bad();
int goodG2B_140();
int goodB2G_129();
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_15_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_54();
int goodG2B2_54();
int CWE190_Integer_Overflow__unsigned_int_rand_add_15_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad();
int goodG2B_141();
int goodB2G_130();
int CWE190_Integer_Overflow__unsigned_int_rand_add_32_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_bad();
int goodG2B_142();
int goodB2G_131();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_04_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_55();
int goodG2B2_55();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_04_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_31_bad();
int goodG2B_143();
int goodB2G_132();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_goodB2GSink(int *a1);
int badSink_21();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_bad();
int goodG2BSink_21();
int goodG2B_144();
int goodB2GSink_16();
int goodB2G_133();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_good();
int CWE190_Integer_Overflow__short_rand_square_03_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_56();
int goodG2B2_56();
int CWE190_Integer_Overflow__short_rand_square_03_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_53_bad();
int goodG2B_145();
int goodB2G_134();
int CWE190_Integer_Overflow__unsigned_int_rand_square_53_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_bad();
int goodB2G1_68();
int goodB2G2_68();
int goodG2B1_57();
int goodG2B2_57();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_67_bad();
int goodG2B_146();
int goodB2G_135();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_67_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_09_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B1_58();
int goodG2B2_58();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_09_good();
int CWE190_Integer_Overflow__short_rand_square_18_bad();
int goodB2G_136();
int goodG2B_147();
int CWE190_Integer_Overflow__short_rand_square_18_good();
int __fastcall badSink_22(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_bad();
int __fastcall goodB2G1Sink_4(int a1);
int goodB2G1_70();
int __fastcall goodB2G2Sink_4(int a1);
int goodB2G2_70();
int __fastcall goodG2BSink_22(int a1);
int goodG2B_148();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_59();
int goodG2B2_59();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Sink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Sink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad();
int goodB2G1_72();
int goodB2G2_72();
int goodG2B1_60();
int goodG2B2_60();
int CWE190_Integer_Overflow__unsigned_int_rand_add_04_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_31_bad();
int goodG2B_149();
int goodB2G_137();
int CWE190_Integer_Overflow__unsigned_int_rand_add_31_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_bad();
int goodB2G_138();
int goodG2B_150();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_bad();
int goodG2B_151();
int goodB2G_139();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_bad();
int goodB2G_140();
int goodG2B_152();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_good();
int CWE190_Integer_Overflow__short_rand_square_12_bad();
int goodB2G_141();
int goodG2B_153();
int CWE190_Integer_Overflow__short_rand_square_12_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_06_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B1_61();
int goodG2B2_61();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_06_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_bad();
int goodG2B_154();
int goodB2G_142();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_bad();
int goodB2G_143();
int goodG2B_155();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_11_bad();
int goodB2G1_74();
int goodB2G2_74();
int goodG2B1_62();
int goodG2B2_62();
int CWE190_Integer_Overflow__unsigned_int_rand_square_11_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_bad();
int goodB2G1_75();
int goodB2G2_75();
int goodG2B_156();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_63_bad();
int goodG2B_157();
int goodB2G_144();
int CWE190_Integer_Overflow__unsigned_int_max_add_63_good();
__int64 badSource_2();
int CWE190_Integer_Overflow__unsigned_int_rand_square_42_bad();
__int64 goodG2BSource_2();
int goodG2B_158();
__int64 goodB2GSource_2();
int goodB2G_145();
int CWE190_Integer_Overflow__unsigned_int_rand_square_42_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__short_rand_square_11_bad();
int goodB2G1_76();
int goodB2G2_76();
int goodG2B1_63();
int goodG2B2_63();
int CWE190_Integer_Overflow__short_rand_square_11_good();
int CWE190_Integer_Overflow__short_rand_square_02_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_64();
int goodG2B2_64();
int CWE190_Integer_Overflow__short_rand_square_02_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_05_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B1_65();
int goodG2B2_65();
int CWE190_Integer_Overflow__unsigned_int_rand_add_05_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_52_bad();
int goodG2B_159();
int goodB2G_146();
int CWE190_Integer_Overflow__unsigned_int_rand_square_52_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_bad();
int goodG2B_160();
int goodB2G_147();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_66();
int goodG2B2_66();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_bad();
int goodB2G1_80();
int goodB2G2_80();
int goodG2B_161();
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_good();
int CWE190_Integer_Overflow__short_rand_square_10_bad();
int goodB2G1_81();
int goodB2G2_81();
int goodG2B1_67();
int goodG2B2_67();
int CWE190_Integer_Overflow__short_rand_square_10_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_16_bad();
int goodB2G_148();
int goodG2B_162();
int CWE190_Integer_Overflow__unsigned_int_rand_square_16_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_13_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B1_68();
int goodG2B2_68();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_13_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_bad();
int goodG2B_163();
int goodB2G_149();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad();
int goodB2G_150();
int goodG2B_164();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_bad();
int goodB2G1_83();
int goodB2G2_83();
int goodG2B1_69();
int goodG2B2_69();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_good();
int __fastcall badSink_23(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_bad();
int __fastcall goodG2BSink_23(int a1);
int goodG2B_165();
int __fastcall goodB2GSink_17(unsigned int a1);
__int64 goodB2G_151();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_good();
int CWE190_Integer_Overflow__short_rand_square_01_bad();
int goodG2B_166();
int goodB2G_152();
int CWE190_Integer_Overflow__short_rand_square_01_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad();
int goodG2B_167();
int goodB2G_153();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_51_bad();
int goodG2B_168();
int goodB2G_154();
int CWE190_Integer_Overflow__unsigned_int_rand_square_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_13_bad();
int goodB2G1_84();
int goodB2G2_84();
int goodG2B1_70();
int goodG2B2_70();
int CWE190_Integer_Overflow__unsigned_int_rand_add_13_good();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_goodB2GSource(unsigned int a1);
int __fastcall badSink_24(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_21_bad();
int __fastcall goodB2G1Sink_5(unsigned int a1);
int goodB2G1_85();
int __fastcall goodB2G2Sink_5(unsigned int a1);
int goodB2G2_85();
int __fastcall goodG2BSink_24(int a1);
int goodG2B_169();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_21_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_03_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_71();
int goodG2B2_71();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_03_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_square_09_bad();
int goodB2G1_87();
int goodB2G2_87();
int goodG2B1_72();
int goodG2B2_72();
int CWE190_Integer_Overflow__short_rand_square_09_good();
int badSink_25();
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_bad();
int goodG2BSink_25();
int goodG2B_170();
int goodB2GSink_18();
int goodB2G_155();
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_14_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_73();
int goodG2B2_73();
int CWE190_Integer_Overflow__unsigned_int_max_square_14_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_bad();
int goodG2B_171();
int goodB2G_156();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_06_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_74();
int goodG2B2_74();
int CWE190_Integer_Overflow__unsigned_int_rand_square_06_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_32_bad();
int goodG2B_172();
int goodB2G_157();
int CWE190_Integer_Overflow__unsigned_int_max_square_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_bad();
int goodG2B_173();
int goodB2G_158();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B1_75();
int goodG2B2_75();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54e_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_76();
int goodG2B2_76();
int CWE190_Integer_Overflow__unsigned_int_rand_add_03_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_17_bad();
int goodB2G_159();
int goodG2B_174();
int CWE190_Integer_Overflow__unsigned_int_max_add_17_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_12_bad();
int goodB2G_160();
int goodG2B_175();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_67b_goodB2GSink(int a1);
int __fastcall badSink_26(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_44_bad();
int __fastcall goodG2BSink_26(int a1);
int goodG2B_176();
int __fastcall goodB2GSink_19(int a1);
int goodB2G_161();
int CWE190_Integer_Overflow__unsigned_int_max_add_44_good();
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_bad();
unsigned int goodB2G1_92();
unsigned int goodB2G2_92();
int goodG2B1_77();
int goodG2B2_77();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_18_bad();
int goodB2G_162();
int goodG2B_177();
int CWE190_Integer_Overflow__unsigned_int_rand_add_18_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_54b_goodB2GSink(__int16 a1);
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE190_Integer_Overflow__unsigned_int_max_square_08_bad();
int goodB2G1_93();
int goodB2G2_93();
int goodG2B1_78();
int goodG2B2_78();
int CWE190_Integer_Overflow__unsigned_int_max_square_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad();
unsigned int goodB2G1_94();
int goodB2G2_94();
int goodG2B1_79();
int goodG2B2_79();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_31_bad();
int goodG2B_178();
int goodB2G_163();
int CWE190_Integer_Overflow__unsigned_int_max_square_31_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_64b_goodB2GSink(int *a1);
__int64 CWE190_Integer_Overflow__unsigned_int_max_add_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_add_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_add_61b_goodB2GSource();
int CWE190_Integer_Overflow__unsigned_int_rand_add_12_bad();
int goodB2G_164();
int goodG2B_179();
int CWE190_Integer_Overflow__unsigned_int_rand_add_12_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_11_bad();
int goodB2G1_95();
int goodB2G2_95();
int goodG2B1_80();
int goodG2B2_80();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_11_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_02_bad();
int goodB2G1_96();
int goodB2G2_96();
int goodG2B1_81();
int goodG2B2_81();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_67_bad();
int goodG2B_180();
int goodB2G_165();
int CWE190_Integer_Overflow__unsigned_int_max_square_67_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__short_rand_square_54_bad();
int goodG2B_181();
int goodB2G_166();
int CWE190_Integer_Overflow__short_rand_square_54_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_10_bad();
int goodB2G1_97();
int goodB2G2_97();
int goodG2B1_82();
int goodG2B2_82();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_10_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_11_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_83();
int goodG2B2_83();
int CWE190_Integer_Overflow__unsigned_int_max_square_11_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_61_bad();
int goodG2B_182();
int goodB2G_167();
int CWE190_Integer_Overflow__unsigned_int_max_add_61_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_02_bad();
int goodB2G1_99();
int goodB2G2_99();
int goodG2B1_84();
int goodG2B2_84();
int CWE190_Integer_Overflow__unsigned_int_rand_add_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_65b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_bad();
int goodG2B_183();
int goodB2G_168();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_07_bad();
int goodB2G1_100();
int goodB2G2_100();
int goodG2B1_85();
int goodG2B2_85();
int CWE190_Integer_Overflow__unsigned_int_max_add_07_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_86();
int goodG2B2_86();
int CWE190_Integer_Overflow__unsigned_int_rand_add_10_good();
int __fastcall badSink_27(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_bad();
int __fastcall goodG2BSink_27(int a1);
int goodG2B_184();
int __fastcall goodB2GSink_20(unsigned int a1);
__int64 goodB2G_169();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_22_bad();
int goodB2G1_102();
int goodB2G2_102();
int goodG2B_185();
int CWE190_Integer_Overflow__unsigned_int_max_square_22_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_01_bad();
int goodG2B_186();
int goodB2G_170();
int CWE190_Integer_Overflow__unsigned_int_rand_add_01_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_17_bad();
int goodB2G_171();
int goodG2B_187();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_17_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_52b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53d_goodB2GSink(int a1);
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_08_bad();
int goodB2G1_103();
int goodB2G2_103();
int goodG2B1_87();
int goodG2B2_87();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_bad();
unsigned int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_88();
int goodG2B2_88();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_14_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B1_89();
int goodG2B2_89();
int CWE190_Integer_Overflow__unsigned_int_rand_add_14_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54d_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__short_rand_square_65_bad();
int goodG2B_188();
__int64 goodB2G_172();
__int64 CWE190_Integer_Overflow__short_rand_square_65_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_13_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B1_90();
int goodG2B2_90();
int CWE190_Integer_Overflow__unsigned_int_max_square_13_good();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_bad();
int goodG2B_189();
__int64 goodB2G_173();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_bad();
int goodB2G_174();
int goodG2B_190();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_good();
int __fastcall badSink_28(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_bad();
int __fastcall goodG2BSink_28(int a1);
int goodG2B_191();
int __fastcall goodB2GSink_21(int a1);
__int64 goodB2G_175();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_bad();
int goodG2B_192();
unsigned int goodB2G_176();
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_good();
int CWE190_Integer_Overflow__short_rand_square_31_bad();
int goodG2B_193();
int goodB2G_177();
int CWE190_Integer_Overflow__short_rand_square_31_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_bad();
int goodB2G1_107();
int goodB2G2_107();
int goodG2B1_91();
int goodG2B2_91();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_good();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_92();
int goodG2B2_92();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_good();
int __fastcall badSink_29(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_21_bad();
int __fastcall goodB2G1Sink_6(int a1);
int goodB2G1_109();
int __fastcall goodB2G2Sink_6(int a1);
int goodB2G2_109();
int __fastcall goodG2BSink_29(int a1);
int goodG2B_194();
int CWE190_Integer_Overflow__unsigned_int_max_square_21_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_03_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_93();
int goodG2B2_93();
int CWE190_Integer_Overflow__unsigned_int_max_square_03_good();
__int64 __fastcall badSource_3(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_bad();
__int64 goodG2BSource_3();
int goodG2B_195();
__int64 __fastcall goodB2GSource_3(unsigned int a1);
unsigned int goodB2G_178();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_53b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_94();
int goodG2B2_94();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_18_bad();
int goodB2G_179();
int goodG2B_196();
int CWE190_Integer_Overflow__unsigned_int_max_square_18_good();
int __fastcall badSink_30(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_41_bad();
int __fastcall goodG2BSink_30(int a1);
int goodG2B_197();
int __fastcall goodB2GSink_22(int a1);
int goodB2G_180();
int CWE190_Integer_Overflow__unsigned_int_max_add_41_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_54_bad();
int goodG2B_198();
int goodB2G_181();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_54_good();
int CWE190_Integer_Overflow__short_rand_square_68_bad();
int goodG2B_199();
int goodB2G_182();
int CWE190_Integer_Overflow__short_rand_square_68_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_51b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_63b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_09_bad();
int goodB2G1_112();
int goodB2G2_112();
int goodG2B1_95();
int goodG2B2_95();
int CWE190_Integer_Overflow__unsigned_int_rand_square_09_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_bad();
int goodG2B_200();
int goodB2G_183();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_12_bad();
int goodB2G_184();
int goodG2B_201();
int CWE190_Integer_Overflow__unsigned_int_max_square_12_good();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_bad();
unsigned int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_96();
int goodG2B2_96();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_good();
int __fastcall badSink_31(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_bad();
int __fastcall goodG2BSink_31(int a1);
int goodG2B_202();
int __fastcall goodB2GSink_23(unsigned int a1);
int goodB2G_185();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_good();
int CWE190_Integer_Overflow__short_rand_square_53_bad();
int goodG2B_203();
int goodB2G_186();
int CWE190_Integer_Overflow__short_rand_square_53_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_54_bad();
int goodG2B_204();
int goodB2G_187();
int CWE190_Integer_Overflow__unsigned_int_rand_add_54_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_bad();
int goodB2G1_114();
int goodB2G2_114();
int goodG2B1_97();
int goodG2B2_97();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_15_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_98();
int goodG2B2_98();
int CWE190_Integer_Overflow__unsigned_int_rand_square_15_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_15_bad();
int goodB2G1_116();
int goodB2G2_116();
int goodG2B1_99();
int goodG2B2_99();
int CWE190_Integer_Overflow__unsigned_int_max_add_15_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_63_bad();
int goodG2B_205();
int goodB2G_188();
int CWE190_Integer_Overflow__unsigned_int_rand_square_63_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_bad();
int goodG2B_206();
int goodB2G_189();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_10_bad();
int goodB2G1_117();
int goodB2G2_117();
int goodG2B1_100();
int goodG2B2_100();
int CWE190_Integer_Overflow__unsigned_int_max_add_10_good();
int __fastcall badSink_32(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad();
int __fastcall goodG2BSink_32(int a1);
int goodG2B_207();
int __fastcall goodB2GSink_24(unsigned int a1);
int goodB2G_190();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_44_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_101();
int goodG2B2_101();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_14_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B1_102();
int goodG2B2_102();
int CWE190_Integer_Overflow__unsigned_int_rand_square_14_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_32_bad();
int goodG2B_208();
int goodB2G_191();
int CWE190_Integer_Overflow__unsigned_int_rand_square_32_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_01_bad();
int goodG2B_209();
int goodB2G_192();
int CWE190_Integer_Overflow__unsigned_int_max_add_01_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad();
int goodB2G_193();
int goodG2B_210();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_goodB2GSink(unsigned int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_goodB2GSource();
void CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad();
void goodB2G_194();
int goodG2B_211();
int CWE190_Integer_Overflow__unsigned_int_rand_add_17_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_square_13_bad();
int goodB2G1_120();
int goodB2G2_120();
int goodG2B1_103();
int goodG2B2_103();
int CWE190_Integer_Overflow__short_rand_square_13_good();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_goodB2GSource();
int __fastcall badSink_33(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_bad();
int __fastcall goodB2G1Sink_7(int a1);
int goodB2G1_121();
int __fastcall goodB2G2Sink_7(int a1);
int goodB2G2_121();
int __fastcall goodG2BSink_33(int a1);
int goodG2B_212();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_bad();
int goodB2G1_122();
int goodB2G2_122();
int goodG2B1_104();
int goodG2B2_104();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_04_bad();
int goodB2G1_123();
int goodB2G2_123();
int goodG2B1_105();
int goodG2B2_105();
int CWE190_Integer_Overflow__unsigned_int_rand_square_04_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad();
int goodG2B_213();
int goodB2G_195();
int CWE190_Integer_Overflow__unsigned_int_rand_square_31_good();
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE190_Integer_Overflow__unsigned_int_max_add_08_bad();
int goodB2G1_124();
int goodB2G2_124();
int goodG2B1_106();
int goodG2B2_106();
int CWE190_Integer_Overflow__unsigned_int_max_add_08_good();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_bad();
int goodG2B_214();
__int64 goodB2G_196();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_61_bad();
int goodG2B_215();
unsigned int goodB2G_197();
unsigned int CWE190_Integer_Overflow__unsigned_int_max_multiply_61_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_bad();
int goodG2B_216();
int goodB2G_198();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_bad();
int goodB2G1_125();
int goodB2G2_125();
int goodG2B1_107();
int goodG2B2_107();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_bad();
unsigned int goodB2G1_126();
unsigned int goodB2G2_126();
int goodG2B1_108();
int goodG2B2_108();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_63_bad();
int goodG2B_217();
int goodB2G_199();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_63_good();
int __fastcall badSink_34(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_21_bad();
int __fastcall goodB2G1Sink_8(int a1);
int goodB2G1_127();
int __fastcall goodB2G2Sink_8(int a1);
int goodB2G2_127();
int __fastcall goodG2BSink_34(int a1);
int goodG2B_218();
int CWE190_Integer_Overflow__unsigned_int_rand_add_21_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_67_bad();
int goodG2B_219();
int goodB2G_200();
int CWE190_Integer_Overflow__unsigned_int_rand_square_67_good();
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad();
int goodB2G1_128();
int goodB2G2_128();
int goodG2B1_109();
int goodG2B2_109();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_good();
__int64 badSource_4();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_bad();
__int64 goodG2BSource_4();
int goodG2B_220();
__int64 goodB2GSource_4();
unsigned int goodB2G_201();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_07_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_110();
int goodG2B2_110();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_07_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_bad();
int goodB2G_202();
int goodG2B_221();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_max_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_max_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__short_rand_square_15_bad();
int goodB2G1_130();
int goodB2G2_130();
int goodG2B1_111();
int goodG2B2_111();
int CWE190_Integer_Overflow__short_rand_square_15_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_61_bad();
int goodG2B_222();
int goodB2G_203();
int CWE190_Integer_Overflow__unsigned_int_rand_add_61_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_63b_goodB2GSink(int *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_goodB2GSink(unsigned int a1);
__int64 badSource_5();
int CWE190_Integer_Overflow__short_rand_square_42_bad();
__int64 goodG2BSource_5();
int goodG2B_223();
__int64 goodB2GSource_5();
int goodB2G_204();
int CWE190_Integer_Overflow__short_rand_square_42_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_add_07_bad();
int goodB2G1_131();
int goodB2G2_131();
int goodG2B1_112();
int goodG2B2_112();
int CWE190_Integer_Overflow__unsigned_int_rand_add_07_good();
__int64 __fastcall badSource_6(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_bad();
__int64 goodG2BSource_6();
int goodG2B_224();
__int64 __fastcall goodB2GSource_6(unsigned int a1);
int goodB2G_205();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B1_113();
int goodG2B2_113();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_bad();
int goodB2G1_133();
int goodB2G2_133();
int goodG2B_225();
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_good();
int __fastcall badSink_35(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_44_bad();
int __fastcall goodG2BSink_35(int a1);
int goodG2B_226();
int __fastcall goodB2GSink_25(int a1);
__int64 goodB2G_206();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_44_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_09_bad();
int goodB2G1_134();
int goodB2G2_134();
int goodG2B1_114();
int goodG2B2_114();
int CWE190_Integer_Overflow__unsigned_int_rand_add_09_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad();
int goodB2G1_135();
int goodB2G2_135();
int goodG2B1_115();
int goodG2B2_115();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_bad();
int goodB2G1_136();
int goodB2G2_136();
int goodG2B1_116();
int goodG2B2_116();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_good();
int CWE190_Integer_Overflow__short_rand_square_05_bad();
int goodB2G1_137();
int goodB2G2_137();
int goodG2B1_117();
int goodG2B2_117();
int CWE190_Integer_Overflow__short_rand_square_05_good();
int __fastcall badSink_36(__int16 a1);
int CWE190_Integer_Overflow__short_rand_square_41_bad();
int __fastcall goodG2BSink_36(__int16 a1);
int goodG2B_227();
int __fastcall goodB2GSink_26(__int16 a1);
int goodB2G_207();
int CWE190_Integer_Overflow__short_rand_square_41_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_118();
int goodG2B2_118();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_bad();
int goodB2G1_139();
int goodB2G2_139();
int goodG2B1_119();
int goodG2B2_119();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad();
int goodG2B_228();
int goodB2G_208();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_goodB2GSink();
int __fastcall badSink_37(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_bad();
int __fastcall goodG2BSink_37(int a1);
int goodG2B_229();
int __fastcall goodB2GSink_27(int a1);
int goodB2G_209();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_13_bad();
int goodB2G1_140();
int goodB2G2_140();
int goodG2B1_120();
int goodG2B2_120();
int CWE190_Integer_Overflow__unsigned_int_rand_square_13_good();
int CWE190_Integer_Overflow__short_rand_square_34_bad();
int goodG2B_230();
int goodB2G_210();
int CWE190_Integer_Overflow__short_rand_square_34_good();
int __fastcall CWE190_Integer_Overflow__short_rand_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_square_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_goodB2GSink(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_bad();
int goodG2B_231();
int goodB2G_211();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_bad();
int goodG2B_232();
int goodB2G_212();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_goodB2GSink(unsigned int a1);
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_bad();
int goodB2G1_141();
int goodB2G2_141();
int goodG2B1_121();
int goodG2B2_121();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_bad();
int goodG2B_233();
int goodB2G_213();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad();
int goodB2G1_142();
int goodB2G2_142();
int goodG2B1_122();
int goodG2B2_122();
int CWE190_Integer_Overflow__unsigned_int_rand_square_03_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_bad();
int goodG2B_234();
int goodB2G_214();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_17_bad();
int goodB2G_215();
int goodG2B_235();
int CWE190_Integer_Overflow__unsigned_int_max_square_17_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad();
unsigned int goodB2G1_143();
int goodB2G2_143();
int goodG2B1_123();
int goodG2B2_123();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_67_bad();
int goodG2B_236();
int goodB2G_216();
int CWE190_Integer_Overflow__unsigned_int_rand_add_67_good();
int __fastcall badSink_38(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_square_44_bad();
int __fastcall goodG2BSink_38(int a1);
int goodG2B_237();
int __fastcall goodB2GSink_28(int a1);
int goodB2G_217();
int CWE190_Integer_Overflow__unsigned_int_max_square_44_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_square_66_bad();
int goodG2B_238();
int goodB2G_218();
int CWE190_Integer_Overflow__short_rand_square_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_square_18_bad();
int goodB2G_219();
int goodG2B_239();
int CWE190_Integer_Overflow__unsigned_int_rand_square_18_good();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_bad();
int goodG2B_240();
int goodB2G_220();
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_good();
int CWE190_Integer_Overflow__unsigned_int_rand_add_11_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B1_124();
int goodG2B2_124();
int CWE190_Integer_Overflow__unsigned_int_rand_add_11_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_bad();
int goodG2B_241();
int goodB2G_221();
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_15_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B1_125();
int goodG2B2_125();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_15_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_max_square_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_square_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_square_61b_goodB2GSource();
int CWE190_Integer_Overflow__unsigned_int_rand_square_12_bad();
int goodB2G_222();
int goodG2B_242();
int CWE190_Integer_Overflow__unsigned_int_rand_square_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_max_add_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_max_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_max_add_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53b_goodB2GSink(int a1);
__int64 badSource_7();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_42_bad();
__int64 goodG2BSource_7();
int goodG2B_243();
__int64 goodB2GSource_7();
unsigned int goodB2G_223();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_42_good();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_05_bad();
int goodB2G1_146();
int goodB2G2_146();
int goodG2B1_126();
int goodG2B2_126();
int CWE190_Integer_Overflow__unsigned_int_max_multiply_05_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_bad();
int goodB2G1_147();
int goodB2G2_147();
int goodG2B1_127();
int goodG2B2_127();
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__short_rand_square_63_bad();
int goodG2B_244();
int goodB2G_224();
int CWE190_Integer_Overflow__short_rand_square_63_good();
int CWE190_Integer_Overflow__unsigned_int_max_add_68_bad();
int goodG2B_245();
int goodB2G_225();
int CWE190_Integer_Overflow__unsigned_int_max_add_68_good();
int CWE190_Integer_Overflow__unsigned_int_max_square_61_bad();
int goodG2B_246();
int goodB2G_226();
int CWE190_Integer_Overflow__unsigned_int_max_square_61_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_goodB2GSink(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_bad();
int goodG2B_247();
int goodB2G_227();
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_good();
__int64 badSource_8();
int CWE190_Integer_Overflow__unsigned_int_rand_add_42_bad();
__int64 goodG2BSource_8();
int goodG2B_248();
__int64 goodB2GSource_8();
int goodB2G_228();
int CWE190_Integer_Overflow__unsigned_int_rand_add_42_good();
int CWE190_Integer_Overflow__unsigned_int_rand_square_02_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B1_128();
int goodG2B2_128();
int CWE190_Integer_Overflow__unsigned_int_rand_square_02_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_43A808; // weak
_UNKNOWN unk_43B54C; // weak
_UNKNOWN unk_43BB78; // weak
_UNKNOWN unk_43BC94; // weak
_UNKNOWN unk_43CBD0; // weak
_UNKNOWN unk_43D37C; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_65B010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticFive_0 = 5; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive_1 = 5; // weak
int staticTrue_1 = 1; // weak
int staticTrue_2 = 1; // weak
int staticFive_2 = 5; // weak
int staticTrue_3 = 1; // weak
int staticTrue_4 = 1; // weak
int staticFive_3 = 5; // weak
int staticFive_4 = 5; // weak
int staticFive_5 = 5; // weak
int staticTrue_5 = 1; // weak
int staticFive_6 = 5; // weak
int staticFive_7 = 5; // weak
int staticFive_8 = 5; // weak
int staticTrue_6 = 1; // weak
int staticTrue_7 = 1; // weak
int staticTrue_8 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
__int64 stdin; // weak
char completed_6355; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BGlobal; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BGlobal; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int staticFalse; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
__int16 CWE190_Integer_Overflow__short_rand_square_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_square_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_rand_square_45_goodB2GData; // weak
int staticFalse_0; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodB2GData; // weak
int staticFalse_1; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodB2GData; // weak
int staticFalse_2; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_45_goodB2GData; // weak
int staticFalse_3; // weak
int CWE190_Integer_Overflow__short_rand_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_rand_square_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BGlobal; // weak
int staticFalse_4; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BGlobal; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BGlobal; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int staticFalse_5; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BGlobal; // weak
int staticFalse_6; // weak
int staticFalse_7; // weak
int staticFalse_8; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_square_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_square_68_goodB2GData; // weak
__int16 CWE190_Integer_Overflow__short_rand_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_add_68_goodG2BData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400928) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400AB0: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400950) ----------------------------------------------------
__int64 sub_400950()
{
  return qword_65B010();
}
// 65B010: using guessed type __int64 (*qword_65B010)(void);

//----- (0000000000400AC0) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400AC6: positive sp value 8 has been found

//----- (0000000000400AF0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6664487LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6664487LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}
// 65B120: using guessed type __int64 stdin;

//----- (0000000000400B20) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400B60) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 65B128: using guessed type char completed_6355;

//----- (0000000000400B80) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400B80: could not find valid save-restore pair for rbp

//----- (0000000000400BAD) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_34_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_66_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_16_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_54_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_08_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_31_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_22_good();");
  CWE190_Integer_Overflow__short_rand_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_66_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_14_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_44_good();");
  CWE190_Integer_Overflow__short_rand_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_67_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_09_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_67_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_03_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_65_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_54_good();");
  CWE190_Integer_Overflow__short_rand_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_08_good();");
  CWE190_Integer_Overflow__short_rand_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_68_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_13_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_14_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_45_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_01_good();");
  CWE190_Integer_Overflow__short_rand_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_45_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_03_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_64_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_15_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_01_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_18_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_53_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_52_good();");
  CWE190_Integer_Overflow__short_rand_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_07_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_18_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_10_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_52_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_51_good();");
  CWE190_Integer_Overflow__short_rand_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_51_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_05_good();");
  CWE190_Integer_Overflow__short_rand_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_22_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_01_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_22_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_11_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_68_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_66_good();");
  CWE190_Integer_Overflow__short_rand_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_53_good();");
  CWE190_Integer_Overflow__short_rand_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_07_good();");
  CWE190_Integer_Overflow__short_rand_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_41_good();");
  CWE190_Integer_Overflow__short_rand_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_34_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_02_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_04_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_31_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_04_good();");
  CWE190_Integer_Overflow__short_rand_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_21_good();");
  CWE190_Integer_Overflow__short_rand_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_61_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_09_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_44_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_08_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_67_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_61_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_68_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_10_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_16_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_44_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_32_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_52_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_68_good();");
  CWE190_Integer_Overflow__short_rand_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_34_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_05_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_51_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_64_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_08_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_12_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_10_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_53_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_13_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_21_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_41_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_11_good();");
  CWE190_Integer_Overflow__short_rand_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_42_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_22_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_63_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_11_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_07_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_01_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_22_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_16_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_10_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_44_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_14_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_51_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_09_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_06_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_11_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_13_good();");
  CWE190_Integer_Overflow__short_rand_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_45_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_01_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_06_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_31_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_66_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_63_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_04_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_17_good();");
  CWE190_Integer_Overflow__short_rand_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_68_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_61_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_44_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_61_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_53_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_02_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_61_good();");
  CWE190_Integer_Overflow__short_rand_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_07_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_13_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_41_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_14_good();");
  CWE190_Integer_Overflow__short_rand_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_64_good();");
  CWE190_Integer_Overflow__short_rand_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_42_good();");
  CWE190_Integer_Overflow__short_rand_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_32_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_02_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_17_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_64_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_34_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_63_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_31_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_53_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_17_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_03_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_54_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_06_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_11_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_01_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_61_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_04_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_54_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_21_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_18_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_54_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_17_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_13_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_14_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_51_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_02_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_63_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_06_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_51_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_21_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_63_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_42_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_41_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_02_good();");
  CWE190_Integer_Overflow__short_rand_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_08_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_65_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_15_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_66_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_67_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_32_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_12_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_32_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_16_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_22_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_05_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_63_good();");
  CWE190_Integer_Overflow__short_rand_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_34_good();");
  CWE190_Integer_Overflow__short_rand_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_65_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_16_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_17_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_18_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_42_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_08_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_10_good();");
  CWE190_Integer_Overflow__short_rand_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_04_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_18_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_67_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_31_good();");
  CWE190_Integer_Overflow__short_rand_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_04_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_05_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_32_good();");
  CWE190_Integer_Overflow__short_rand_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_16_good();");
  CWE190_Integer_Overflow__short_rand_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_67_good();");
  CWE190_Integer_Overflow__short_rand_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_66_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_41_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_45_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_53_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_03_good();");
  CWE190_Integer_Overflow__short_rand_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_14_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_65_good();");
  CWE190_Integer_Overflow__short_rand_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_17_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_15_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_10_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_09_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_09_good();");
  CWE190_Integer_Overflow__short_rand_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_05_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_12_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_12_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_07_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_44_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_21_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_42_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_03_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_07_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_64_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_52_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_03_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_06_good();");
  CWE190_Integer_Overflow__short_rand_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_18_good();");
  CWE190_Integer_Overflow__short_rand_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_05_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_65_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_52_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_02_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_09_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_15_good();");
  CWE190_Integer_Overflow__short_rand_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_12_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_32_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_41_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_52_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_45_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_15_good();");
  CWE190_Integer_Overflow__unsigned_int_max_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_11_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_31_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_06_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_65_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_13_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_12_good();");
  CWE190_Integer_Overflow__short_rand_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_45_good();");
  CWE190_Integer_Overflow__short_rand_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_21_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_68_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_15_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_54_good();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_42_good();");
  CWE190_Integer_Overflow__unsigned_int_max_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_64_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_22_bad();");
  CWE190_Integer_Overflow__short_rand_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_44_bad();");
  CWE190_Integer_Overflow__short_rand_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_54_bad();");
  CWE190_Integer_Overflow__short_rand_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_08_bad();");
  CWE190_Integer_Overflow__short_rand_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_01_bad();");
  CWE190_Integer_Overflow__short_rand_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_52_bad();");
  CWE190_Integer_Overflow__short_rand_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_51_bad();");
  CWE190_Integer_Overflow__short_rand_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_05_bad();");
  CWE190_Integer_Overflow__short_rand_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_66_bad();");
  CWE190_Integer_Overflow__short_rand_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_53_bad();");
  CWE190_Integer_Overflow__short_rand_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_07_bad();");
  CWE190_Integer_Overflow__short_rand_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_41_bad();");
  CWE190_Integer_Overflow__short_rand_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_04_bad();");
  CWE190_Integer_Overflow__short_rand_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_21_bad();");
  CWE190_Integer_Overflow__short_rand_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_68_bad();");
  CWE190_Integer_Overflow__short_rand_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_11_bad();");
  CWE190_Integer_Overflow__short_rand_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_13_bad();");
  CWE190_Integer_Overflow__short_rand_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_17_bad();");
  CWE190_Integer_Overflow__short_rand_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_61_bad();");
  CWE190_Integer_Overflow__short_rand_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_14_bad();");
  CWE190_Integer_Overflow__short_rand_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_64_bad();");
  CWE190_Integer_Overflow__short_rand_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_42_bad();");
  CWE190_Integer_Overflow__short_rand_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_02_bad();");
  CWE190_Integer_Overflow__short_rand_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_63_bad();");
  CWE190_Integer_Overflow__short_rand_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_34_bad();");
  CWE190_Integer_Overflow__short_rand_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_10_bad();");
  CWE190_Integer_Overflow__short_rand_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_31_bad();");
  CWE190_Integer_Overflow__short_rand_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_32_bad();");
  CWE190_Integer_Overflow__short_rand_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_16_bad();");
  CWE190_Integer_Overflow__short_rand_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_67_bad();");
  CWE190_Integer_Overflow__short_rand_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_03_bad();");
  CWE190_Integer_Overflow__short_rand_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_65_bad();");
  CWE190_Integer_Overflow__short_rand_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_09_bad();");
  CWE190_Integer_Overflow__short_rand_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_square_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_06_bad();");
  CWE190_Integer_Overflow__short_rand_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_18_bad();");
  CWE190_Integer_Overflow__short_rand_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_15_bad();");
  CWE190_Integer_Overflow__short_rand_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_add_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_12_bad();");
  CWE190_Integer_Overflow__short_rand_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_square_45_bad();");
  CWE190_Integer_Overflow__short_rand_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_multiply_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_square_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_add_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_add_64_bad();
  return 0;
}
// 65B30C: using guessed type int globalArgc;
// 65B310: using guessed type __int64 globalArgv;

//----- (0000000000404748) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000404789) ----------------------------------------------------
int goodB2G1()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004047DE) ----------------------------------------------------
int goodB2G2()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000404833) ----------------------------------------------------
int goodG2B1()
{
  return printUnsignedLine(3u);
}

//----- (000000000040485E) ----------------------------------------------------
int goodG2B2()
{
  return printUnsignedLine(3u);
}

//----- (0000000000404889) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_02_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1();
  return goodG2B2();
}

//----- (00000000004048B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_add_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B12C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_badGlobal;

//----- (00000000004048E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 65B130: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Global;

//----- (0000000000404929) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 65B134: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Global;

//----- (0000000000404965) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B138: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BGlobal;

//----- (000000000040498F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004049EC) ----------------------------------------------------
unsigned int goodB2G1_0()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000404A6B) ----------------------------------------------------
int goodB2G2_0()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000404ADE) ----------------------------------------------------
int goodG2B1_0()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000404B30) ----------------------------------------------------
int goodG2B2_0()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000404B76) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (0000000000404BA4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000404C32) ----------------------------------------------------
int goodB2G1_1()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000404CE1) ----------------------------------------------------
int goodB2G2_1()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000404D84) ----------------------------------------------------
int goodG2B1_1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000404DD6) ----------------------------------------------------
int goodG2B2_1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000404E1C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_14_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (0000000000404E4A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_64b_badSink(&v6);
}

//----- (0000000000404EB6) ----------------------------------------------------
int goodG2B()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_64b_goodG2BSink(&v1);
}

//----- (0000000000404EDA) ----------------------------------------------------
int goodB2G()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_64b_goodB2GSink(&v6);
}

//----- (0000000000404F46) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_64_good()
{
  goodG2B();
  return goodB2G();
}

//----- (0000000000404F60) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B230: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badGlobal;

//----- (0000000000404F8A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 65B234: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Global;

//----- (0000000000404FD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 65B238: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Global;

//----- (000000000040500E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B23C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BGlobal;

//----- (0000000000405038) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+4h] [rbp-2Ch]
  int v8; // [rsp+8h] [rbp-28h]
  int v9; // [rsp+Ch] [rbp-24h]
  int *v10; // [rsp+10h] [rbp-20h]
  int *v11; // [rsp+18h] [rbp-18h]

  v11 = &v6;
  v10 = &v6;
  v6 = 0;
  v9 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v9 = v2;
  *v11 = v2;
  result = *v10;
  v8 = *v10;
  if ( v8 )
  {
    v7 = 2 * v8;
    result = printUnsignedLine(2 * v8);
  }
  return result;
}

//----- (00000000004050DB) ----------------------------------------------------
int goodG2B_0()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printUnsignedLine(4u);
}

//----- (0000000000405136) ----------------------------------------------------
int goodB2G_0()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  unsigned int v7; // [rsp+4h] [rbp-2Ch]
  unsigned int v8; // [rsp+8h] [rbp-28h]
  int v9; // [rsp+Ch] [rbp-24h]
  int *v10; // [rsp+10h] [rbp-20h]
  int *v11; // [rsp+18h] [rbp-18h]

  v11 = &v6;
  v10 = &v6;
  v6 = 0;
  v9 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v9 = v2;
  *v11 = v2;
  result = *v10;
  v8 = *v10;
  if ( v8 )
  {
    if ( v8 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v7 = 2 * v8;
      result = printUnsignedLine(2 * v8);
    }
  }
  return result;
}

//----- (00000000004051EE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_32_good()
{
  goodG2B_0();
  return goodB2G_0();
}

//----- (0000000000405208) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000405233) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040525E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000040529E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_52_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_52b_badSink(-1);
}

//----- (00000000004052C0) ----------------------------------------------------
int goodG2B_1()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_52b_goodG2BSink(2);
}

//----- (00000000004052E2) ----------------------------------------------------
int goodB2G_1()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_52b_goodB2GSink(-1);
}

//----- (0000000000405304) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_52_good()
{
  goodG2B_1();
  return goodB2G_1();
}

//----- (000000000040531E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_66b_badSink((__int64)&v6);
}

//----- (0000000000405390) ----------------------------------------------------
int goodG2B_2()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004053BA) ----------------------------------------------------
int goodB2G_2()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_66b_goodB2GSink((__int64)&v6);
}

//----- (000000000040542C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_66_good()
{
  goodG2B_2();
  return goodB2G_2();
}

//----- (0000000000405446) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_51b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000405467) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000405488) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (00000000004054C9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000405517) ----------------------------------------------------
int goodG2B_3()
{
  return printUnsignedLine(4u);
}

//----- (000000000040554F) ----------------------------------------------------
int goodB2G_3()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  if ( v1 < -65534 || v3 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printUnsignedLine(v3 * v3);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004055BD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_34_good()
{
  goodG2B_3();
  return goodB2G_3();
}

//----- (00000000004055D7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_22_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_22_badSink(-1);
}
// 65B12C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_badGlobal;

//----- (0000000000405603) ----------------------------------------------------
int goodB2G1_2()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Sink(-1);
}
// 65B130: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G1Global;

//----- (000000000040562F) ----------------------------------------------------
int goodB2G2_2()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Sink(-1);
}
// 65B134: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodB2G2Global;

//----- (000000000040565B) ----------------------------------------------------
int goodG2B_4()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BSink(2);
}
// 65B138: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_22_goodG2BGlobal;

//----- (0000000000405687) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_22_good()
{
  goodB2G1_2();
  goodB2G2_2();
  return goodG2B_4();
}

//----- (00000000004056AB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_16_bad()
{
  return printUnsignedLine(1u);
}

//----- (00000000004056D9) ----------------------------------------------------
int goodB2G_4()
{
  return printUnsignedLine(1u);
}

//----- (0000000000405727) ----------------------------------------------------
int goodG2B_5()
{
  return printUnsignedLine(4u);
}

//----- (0000000000405755) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_16_good()
{
  goodB2G_4();
  return goodG2B_5();
}

//----- (000000000040576F) ----------------------------------------------------
int __fastcall badSink(int a1)
{
  int result; // eax

  result = badStatic;
  if ( badStatic )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B13C: using guessed type int badStatic;

//----- (000000000040579E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  badStatic = 1;
  return badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B13C: using guessed type int badStatic;

//----- (00000000004057E0) ----------------------------------------------------
int __fastcall goodB2G1Sink(unsigned int a1)
{
  int result; // eax

  result = goodB2G1Static;
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B140: using guessed type int goodB2G1Static;

//----- (0000000000405830) ----------------------------------------------------
int goodB2G1_3()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G1Static = 0;
  return goodB2G1Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B140: using guessed type int goodB2G1Static;

//----- (0000000000405872) ----------------------------------------------------
int __fastcall goodB2G2Sink(unsigned int a1)
{
  int result; // eax

  result = goodB2G2Static;
  if ( goodB2G2Static && a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B144: using guessed type int goodB2G2Static;

//----- (00000000004058B6) ----------------------------------------------------
int goodB2G2_3()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G2Static = 1;
  return goodB2G2Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B144: using guessed type int goodB2G2Static;

//----- (00000000004058F8) ----------------------------------------------------
int __fastcall goodG2BSink(int a1)
{
  int result; // eax

  result = goodG2BStatic;
  if ( goodG2BStatic )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B148: using guessed type int goodG2BStatic;

//----- (0000000000405927) ----------------------------------------------------
int goodG2B_6()
{
  goodG2BStatic = 1;
  return goodG2BSink(2);
}
// 65B148: using guessed type int goodG2BStatic;

//----- (0000000000405953) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_21_good()
{
  goodB2G1_3();
  goodB2G2_3();
  return goodG2B_6();
}

//----- (0000000000405977) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004059BE) ----------------------------------------------------
int goodB2G1_4()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000405A1B) ----------------------------------------------------
int goodB2G2_4()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000405A78) ----------------------------------------------------
int goodG2B1_2()
{
  return printUnsignedLine(4u);
}

//----- (0000000000405AA8) ----------------------------------------------------
int goodG2B2_2()
{
  return printUnsignedLine(4u);
}

//----- (0000000000405AD8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_03_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000405B06) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  result = 1;
  if ( v6 )
    result = printUnsignedLine(2 * v6);
  return result;
}

//----- (0000000000405B90) ----------------------------------------------------
int goodB2G1_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  result = 0;
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000405C3B) ----------------------------------------------------
int goodB2G2_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  result = 1;
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000405CDA) ----------------------------------------------------
int goodG2B1_3()
{
  return printUnsignedLine(4u);
}

//----- (0000000000405D28) ----------------------------------------------------
int goodG2B2_3()
{
  return printUnsignedLine(4u);
}

//----- (0000000000405D6A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_04_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (0000000000405D98) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000405E1C) ----------------------------------------------------
int goodG2B_7()
{
  return printUnsignedLine(4u);
}

//----- (0000000000405E58) ----------------------------------------------------
unsigned int goodB2G_5()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000405EF1) ----------------------------------------------------
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_31_good()
{
  goodG2B_7();
  return goodB2G_5();
}

//----- (0000000000405F0B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54e_badSink(a1);
}

//----- (0000000000405F22) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54e_goodG2BSink(a1);
}

//----- (0000000000405F39) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54e_goodB2GSink(a1);
}

//----- (0000000000405F50) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000405F99) ----------------------------------------------------
int goodB2G_6()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000405FF8) ----------------------------------------------------
int goodG2B_8()
{
  return printUnsignedLine(4u);
}

//----- (000000000040602A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_18_good()
{
  goodB2G_6();
  return goodG2B_8();
}

//----- (0000000000406044) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040609E) ----------------------------------------------------
int goodB2G1_6()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000406124) ----------------------------------------------------
int goodB2G2_6()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040619E) ----------------------------------------------------
int goodG2B1_4()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004061EC) ----------------------------------------------------
int goodG2B2_4()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000040622E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (000000000040625C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v4 = v1;
  return printUnsignedLine(*v3 * *v3);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004062C9) ----------------------------------------------------
int goodG2B_9()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printUnsignedLine(4u);
}

//----- (0000000000406320) ----------------------------------------------------
int goodB2G_7()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v6 = v1;
  v4 = *v5;
  if ( v4 < -65534 || v4 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v3 = v4 * v4;
  return printUnsignedLine(v4 * v4);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004063AD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_good()
{
  goodG2B_9();
  return goodB2G_7();
}

//----- (00000000004063C7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_51_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_51b_badSink(-1);
}

//----- (00000000004063E9) ----------------------------------------------------
int goodG2B_10()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_51b_goodG2BSink(2);
}

//----- (000000000040640B) ----------------------------------------------------
int goodB2G_8()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_51b_goodB2GSink(-1);
}

//----- (000000000040642D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_51_good()
{
  goodG2B_10();
  return goodB2G_8();
}

//----- (0000000000406447) ----------------------------------------------------
int __fastcall badSink_0(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (0000000000406471) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_44_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_0)((unsigned int)(__int16)v1);
}

//----- (00000000004064DB) ----------------------------------------------------
int __fastcall goodG2BSink_0(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (0000000000406505) ----------------------------------------------------
int goodG2B_11()
{
  return goodG2BSink_0(2);
}

//----- (000000000040652F) ----------------------------------------------------
int __fastcall goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (000000000040657B) ----------------------------------------------------
__int64 goodB2G_9()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink)((unsigned int)(__int16)v1);
}

//----- (00000000004065E5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_44_good()
{
  goodG2B_11();
  return goodB2G_9();
}

//----- (00000000004065FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406640) ----------------------------------------------------
int goodB2G1_7()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040669F) ----------------------------------------------------
int goodB2G2_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004066F2) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040673F) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406780) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_13_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (00000000004067AE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004067EF) ----------------------------------------------------
int goodB2G1_8()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 65B118: using guessed type int globalFive;

//----- (000000000040684E) ----------------------------------------------------
int goodB2G2_8()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004068A1) ----------------------------------------------------
int goodG2B1_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004068EE) ----------------------------------------------------
int goodG2B2_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000040692F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_14_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (000000000040695D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_16_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (00000000004069CF) ----------------------------------------------------
int goodB2G_10()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000406A63) ----------------------------------------------------
int goodG2B_12()
{
  return printIntLine(4u);
}

//----- (0000000000406A95) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_16_good()
{
  goodB2G_10();
  return goodG2B_12();
}

//----- (0000000000406AAF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000406B16) ----------------------------------------------------
int goodB2G_11()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000406B91) ----------------------------------------------------
int goodG2B_13()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000406BE2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_17_good()
{
  goodB2G_11();
  return goodG2B_13();
}

//----- (0000000000406BFC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned int v2; // [rsp+8h] [rbp-8h]
  unsigned int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%u", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    result = v1;
    if ( v1 )
    {
      v3 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  else
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000406C99) ----------------------------------------------------
int goodB2G_12()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned int v2; // [rsp+8h] [rbp-8h]
  unsigned int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v3 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  else
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000406D62) ----------------------------------------------------
int goodG2B_14()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(4u);
}

//----- (0000000000406DD1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_12_good()
{
  goodB2G_12();
  return goodG2B_14();
}

//----- (0000000000406DEB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000406E12) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000406E39) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000406E80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badGlobal )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B168: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badGlobal;

//----- (0000000000406EAF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Sink(unsigned int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B16C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Global;

//----- (0000000000406EFF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Sink(unsigned int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Global && a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B170: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Global;

//----- (0000000000406F43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BGlobal )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B174: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BGlobal;

//----- (0000000000406F72) ----------------------------------------------------
int badSink_1()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_max_square_45_badData
         * CWE190_Integer_Overflow__unsigned_int_max_square_45_badData);
}
// 65B14C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_45_badData;

//----- (0000000000406F99) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_45_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_45_badData = -1;
  return badSink_1();
}
// 65B14C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_45_badData;

//----- (0000000000406FC4) ----------------------------------------------------
int goodG2BSink_1()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_max_square_45_goodG2BData
         * CWE190_Integer_Overflow__unsigned_int_max_square_45_goodG2BData);
}
// 65B150: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_45_goodG2BData;

//----- (0000000000406FEB) ----------------------------------------------------
int goodG2B_15()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_45_goodG2BData = 2;
  return goodG2BSink_1();
}
// 65B150: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_45_goodG2BData;

//----- (0000000000407016) ----------------------------------------------------
int goodB2GSink_0()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData < -65534
    || CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(
               CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData
             * CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData);
  }
  return result;
}
// 65B154: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData;

//----- (000000000040705D) ----------------------------------------------------
int goodB2G_13()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData = -1;
  return goodB2GSink_0();
}
// 65B154: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_45_goodB2GData;

//----- (0000000000407088) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_45_good()
{
  goodG2B_15();
  return goodB2G_13();
}

//----- (00000000004070A2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_61b_badSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (00000000004070FC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000407112) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_61b_goodB2GSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (000000000040716C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_06_bad()
{
  return printUnsignedLine(1u);
}

//----- (00000000004071AC) ----------------------------------------------------
int goodB2G1_9()
{
  return printUnsignedLine(1u);
}

//----- (0000000000407218) ----------------------------------------------------
int goodB2G2_9()
{
  return printUnsignedLine(1u);
}

//----- (0000000000407278) ----------------------------------------------------
int goodG2B1_7()
{
  return printUnsignedLine(4u);
}

//----- (00000000004072C4) ----------------------------------------------------
int goodG2B2_7()
{
  return printUnsignedLine(4u);
}

//----- (0000000000407304) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_06_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (0000000000407332) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000407361) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000407390) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  unsigned int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (00000000004073D4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43A808, &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040742A) ----------------------------------------------------
int goodB2G1_10()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43A808, &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004074AC) ----------------------------------------------------
int goodB2G2_10()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43A808, &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407522) ----------------------------------------------------
int goodG2B1_8()
{
  return printUnsignedLine(4u);
}

//----- (000000000040756C) ----------------------------------------------------
int goodG2B2_8()
{
  return printUnsignedLine(4u);
}

//----- (00000000004075AA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_04_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (00000000004075D8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1;
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407626) ----------------------------------------------------
int goodG2B_16()
{
  return printUnsignedLine(4u);
}

//----- (000000000040765E) ----------------------------------------------------
int goodB2G_14()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1;
  if ( v1 < -65534 || v3 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printUnsignedLine(v3 * v3);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004076CC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_good()
{
  goodG2B_16();
  return goodB2G_14();
}

//----- (00000000004076E6) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407713) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000407726) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407753) ----------------------------------------------------
int __fastcall badSink_2(int a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B158: using guessed type int badStatic_0;

//----- (000000000040777D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_21_bad()
{
  badStatic_0 = 1;
  return badSink_2(-1);
}
// 65B158: using guessed type int badStatic_0;

//----- (00000000004077A9) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(int a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 65B15C: using guessed type int goodB2G1Static_0;

//----- (00000000004077F1) ----------------------------------------------------
int goodB2G1_11()
{
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(-1);
}
// 65B15C: using guessed type int goodB2G1Static_0;

//----- (000000000040781D) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(int a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 65B160: using guessed type int goodB2G2Static_0;

//----- (0000000000407859) ----------------------------------------------------
int goodB2G2_11()
{
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(-1);
}
// 65B160: using guessed type int goodB2G2Static_0;

//----- (0000000000407885) ----------------------------------------------------
int __fastcall goodG2BSink_2(int a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B164: using guessed type int goodG2BStatic_0;

//----- (00000000004078AF) ----------------------------------------------------
int goodG2B_17()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_2(2);
}
// 65B164: using guessed type int goodG2BStatic_0;

//----- (00000000004078DB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_21_good()
{
  goodB2G1_11();
  goodB2G2_11();
  return goodG2B_17();
}

//----- (00000000004078FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_03_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000040792A) ----------------------------------------------------
int goodB2G1_12()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000407967) ----------------------------------------------------
int goodB2G2_12()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004079A4) ----------------------------------------------------
int goodG2B1_9()
{
  return printUnsignedLine(3u);
}

//----- (00000000004079CF) ----------------------------------------------------
int goodG2B2_9()
{
  return printUnsignedLine(3u);
}

//----- (00000000004079FA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_03_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (0000000000407A28) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407A8B) ----------------------------------------------------
unsigned int goodB2G1_13()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407B10) ----------------------------------------------------
unsigned int goodB2G2_13()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407B89) ----------------------------------------------------
int goodG2B1_10()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000407BE1) ----------------------------------------------------
int goodG2B2_10()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000407C2D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_11_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (0000000000407C5B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407CA2) ----------------------------------------------------
int goodB2G1_14()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407CFF) ----------------------------------------------------
int goodB2G2_14()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407D5C) ----------------------------------------------------
int goodG2B1_11()
{
  return printUnsignedLine(4u);
}

//----- (0000000000407D8C) ----------------------------------------------------
int goodG2B2_11()
{
  return printUnsignedLine(4u);
}

//----- (0000000000407DBC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_02_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (0000000000407DEA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badSink(v2);
}
// 65B168: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_badGlobal;

//----- (0000000000407E5E) ----------------------------------------------------
int goodB2G1_15()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Sink(v2);
}
// 65B16C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G1Global;

//----- (0000000000407ED2) ----------------------------------------------------
int goodB2G2_15()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Sink(v2);
}
// 65B170: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodB2G2Global;

//----- (0000000000407F46) ----------------------------------------------------
int goodG2B_18()
{
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BSink(2);
}
// 65B174: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_goodG2BGlobal;

//----- (0000000000407F72) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_22_good()
{
  goodB2G1_15();
  goodB2G2_15();
  return goodG2B_18();
}

//----- (0000000000407F96) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000407FD4) ----------------------------------------------------
int goodG2B_19()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_goodG2BSink(2);
}

//----- (0000000000407FFC) ----------------------------------------------------
int goodB2G_15()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_67b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040803A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_67_good()
{
  goodG2B_19();
  return goodB2G_15();
}

//----- (0000000000408054) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_18_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000408081) ----------------------------------------------------
int goodB2G_16()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004080C0) ----------------------------------------------------
int goodG2B_20()
{
  return printUnsignedLine(3u);
}

//----- (00000000004080ED) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_18_good()
{
  goodB2G_16();
  return goodG2B_20();
}

//----- (0000000000408107) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000408131) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000040815B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (0000000000408197) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badGlobal )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B178: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badGlobal;

//----- (00000000004081C2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 < -65534 || a1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 * a1);
}
// 65B17C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Global;

//----- (0000000000408219) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Global )
  {
    if ( a1 < -65534 || a1 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 * a1);
  }
  return result;
}
// 65B180: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Global;

//----- (0000000000408264) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BGlobal )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B184: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BGlobal;

//----- (000000000040828F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_badSink(a1);
}

//----- (00000000004082A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_goodG2BSink(a1);
}

//----- (00000000004082BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_goodB2GSink(a1);
}

//----- (00000000004082D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (0000000000408307) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000040833A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000040838D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_square_68_badData
                              * CWE190_Integer_Overflow__short_rand_square_68_badData));
}
// 65B354: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_68_badData;

//----- (00000000004083BC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_square_68_goodG2BData
                              * CWE190_Integer_Overflow__short_rand_square_68_goodG2BData));
}
// 65B358: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_68_goodG2BData;

//----- (00000000004083EB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_rand_square_68_goodB2GData < -181
    || CWE190_Integer_Overflow__short_rand_square_68_goodB2GData > 181 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_square_68_goodB2GData
                                  * CWE190_Integer_Overflow__short_rand_square_68_goodB2GData));
  }
  return result;
}
// 65B356: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_68_goodB2GData;

//----- (000000000040843C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_badSource(0);
  return printUnsignedLine(v0 + 1);
}

//----- (000000000040846D) ----------------------------------------------------
int goodG2B_21()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000040849E) ----------------------------------------------------
int goodB2G_17()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_fscanf_add_61b_goodB2GSource(0);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (00000000004084E1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_61_good()
{
  goodG2B_21();
  return goodB2G_17();
}

//----- (00000000004084FB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_07_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}
// 65B0C4: using guessed type int staticFive;

//----- (0000000000408581) ----------------------------------------------------
int goodB2G1_16()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}
// 65B0C4: using guessed type int staticFive;

//----- (0000000000408635) ----------------------------------------------------
int goodB2G2_16()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}
// 65B0C4: using guessed type int staticFive;

//----- (00000000004086DD) ----------------------------------------------------
int goodG2B1_12()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B0C4: using guessed type int staticFive;

//----- (000000000040872F) ----------------------------------------------------
int goodG2B2_12()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B0C4: using guessed type int staticFive;

//----- (0000000000408775) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_07_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (00000000004087A3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004087EA) ----------------------------------------------------
int goodG2B_22()
{
  return printUnsignedLine(4u);
}

//----- (000000000040881A) ----------------------------------------------------
int goodB2G_18()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000408877) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_good()
{
  goodG2B_22();
  return goodB2G_18();
}

//----- (0000000000408891) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004088B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004088DB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000408915) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0C8: using guessed type int staticFive_0;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040896C) ----------------------------------------------------
int goodB2G1_17()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0C8: using guessed type int staticFive_0;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004089E3) ----------------------------------------------------
int goodB2G2_17()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0C8: using guessed type int staticFive_0;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000408A4E) ----------------------------------------------------
int goodG2B1_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0C8: using guessed type int staticFive_0;

//----- (0000000000408A9B) ----------------------------------------------------
int goodG2B2_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0C8: using guessed type int staticFive_0;

//----- (0000000000408ADC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_07_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (0000000000408B0A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B178: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_badGlobal;

//----- (0000000000408B4C) ----------------------------------------------------
int goodB2G1_18()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B17C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G1Global;

//----- (0000000000408B8E) ----------------------------------------------------
int goodB2G2_18()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B180: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodB2G2Global;

//----- (0000000000408BD0) ----------------------------------------------------
int goodG2B_23()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BSink(2);
}
// 65B184: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_goodG2BGlobal;

//----- (0000000000408BFC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_22_good()
{
  goodB2G1_18();
  goodB2G2_18();
  return goodG2B_23();
}

//----- (0000000000408C20) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_badSink((__int64)&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000408C60) ----------------------------------------------------
int goodG2B_24()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000408C8A) ----------------------------------------------------
int goodB2G_19()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_goodB2GSink((__int64)&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000408CCA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_66_good()
{
  goodG2B_24();
  return goodB2G_19();
}

//----- (0000000000408CE4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_64b_badSink(&v1);
}

//----- (0000000000408D08) ----------------------------------------------------
int goodG2B_25()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_square_64b_goodG2BSink(&v1);
}

//----- (0000000000408D2C) ----------------------------------------------------
int goodB2G_20()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_64b_goodB2GSink(&v1);
}

//----- (0000000000408D50) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_64_good()
{
  goodG2B_25();
  return goodB2G_20();
}

//----- (0000000000408D6A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000408DB1) ----------------------------------------------------
int goodB2G1_19()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (0000000000408E16) ----------------------------------------------------
int goodB2G2_19()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (0000000000408E6F) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000408EC2) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000408F09) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_11_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (0000000000408F37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_02_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000408F62) ----------------------------------------------------
int goodB2G1_20()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000408F9F) ----------------------------------------------------
int goodB2G2_20()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000408FDC) ----------------------------------------------------
int goodG2B1_15()
{
  return printUnsignedLine(3u);
}

//----- (0000000000409007) ----------------------------------------------------
int goodG2B2_15()
{
  return printUnsignedLine(3u);
}

//----- (0000000000409032) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_02_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (0000000000409060) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004090BB) ----------------------------------------------------
unsigned int goodB2G1_21()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000409138) ----------------------------------------------------
int goodB2G2_21()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004091A9) ----------------------------------------------------
int goodG2B1_16()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004091F9) ----------------------------------------------------
int goodG2B2_16()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040923D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_09_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040926B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_badSink(a1);
}

//----- (0000000000409282) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_goodG2BSink(a1);
}

//----- (0000000000409299) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_goodB2GSink(a1);
}

//----- (00000000004092B0) ----------------------------------------------------
int __fastcall badSink_3(int a1)
{
  int result; // eax

  result = badStatic_1;
  if ( badStatic_1 )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B188: using guessed type int badStatic_1;

//----- (00000000004092DF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_1 = 1;
  return badSink_3(v2);
}
// 65B188: using guessed type int badStatic_1;

//----- (0000000000409353) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(unsigned int a1)
{
  int result; // eax

  result = goodB2G1Static_1;
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B18C: using guessed type int goodB2G1Static_1;

//----- (00000000004093A3) ----------------------------------------------------
int goodB2G1_22()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v2);
}
// 65B18C: using guessed type int goodB2G1Static_1;

//----- (0000000000409417) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(unsigned int a1)
{
  int result; // eax

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 && a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B190: using guessed type int goodB2G2Static_1;

//----- (000000000040945B) ----------------------------------------------------
int goodB2G2_22()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v2);
}
// 65B190: using guessed type int goodB2G2Static_1;

//----- (00000000004094CF) ----------------------------------------------------
int __fastcall goodG2BSink_3(int a1)
{
  int result; // eax

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B194: using guessed type int goodG2BStatic_1;

//----- (00000000004094FE) ----------------------------------------------------
int goodG2B_26()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_3(2);
}
// 65B194: using guessed type int goodG2BStatic_1;

//----- (000000000040952A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_good()
{
  goodB2G1_22();
  goodB2G2_22();
  return goodG2B_26();
}

//----- (000000000040954E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (00000000004095C6) ----------------------------------------------------
unsigned int goodB2G1_23()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000409653) ----------------------------------------------------
unsigned int goodB2G2_23()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (00000000004096E0) ----------------------------------------------------
int goodG2B1_17()
{
  return printUnsignedLine(4u);
}

//----- (0000000000409710) ----------------------------------------------------
int goodG2B2_17()
{
  return printUnsignedLine(4u);
}

//----- (0000000000409740) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040976E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(2 * v2);
  return result;
}

//----- (000000000040979E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(2 * v2);
  return result;
}

//----- (00000000004097CE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  unsigned int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (0000000000409813) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_02_bad()
{
  return printUnsignedLine(1u);
}

//----- (000000000040983F) ----------------------------------------------------
int goodB2G1_24()
{
  return printUnsignedLine(1u);
}

//----- (000000000040988B) ----------------------------------------------------
int goodB2G2_24()
{
  return printUnsignedLine(1u);
}

//----- (00000000004098D7) ----------------------------------------------------
int goodG2B1_18()
{
  return printUnsignedLine(4u);
}

//----- (0000000000409903) ----------------------------------------------------
int goodG2B2_18()
{
  return printUnsignedLine(4u);
}

//----- (000000000040992F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_02_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040995D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040997D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040999D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004099CF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_65_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_badSink(-1);
}

//----- (00000000004099FA) ----------------------------------------------------
int goodG2B_27()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_goodG2BSink(2);
}

//----- (0000000000409A25) ----------------------------------------------------
int goodB2G_21()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_goodB2GSink(0xFFFFFFFF);
}

//----- (0000000000409A50) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_65_good()
{
  goodG2B_27();
  return goodB2G_21();
}

//----- (0000000000409A6A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (0000000000409AAA) ----------------------------------------------------
int goodB2G1_25()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  if ( globalFalse )
    result = printLine("Benign, fixed string");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (0000000000409B16) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (0000000000409B76) ----------------------------------------------------
int goodG2B1_19()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (0000000000409BC2) ----------------------------------------------------
int goodG2B2_19()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (0000000000409C02) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_10_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (0000000000409C30) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53d_badSink(a1);
}

//----- (0000000000409C47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53d_goodG2BSink(a1);
}

//----- (0000000000409C5E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53d_goodB2GSink(a1);
}

//----- (0000000000409C75) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000409C80) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000409C8B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue();
  if ( result )
    result = printUnsignedLine(v6 + 1);
  return result;
}

//----- (0000000000409D1A) ----------------------------------------------------
int goodB2G1_26()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (0000000000409DC7) ----------------------------------------------------
int goodB2G2_26()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue();
  if ( result )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}

//----- (0000000000409E68) ----------------------------------------------------
int goodG2B1_20()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000409EBB) ----------------------------------------------------
int goodG2B2_20()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000409F02) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_08_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (0000000000409F30) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_badSink(a1);
}

//----- (0000000000409F47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_goodG2BSink(a1);
}

//----- (0000000000409F5E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_goodB2GSink(a1);
}

//----- (0000000000409F75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54d_badSink(a1);
}

//----- (0000000000409F8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54d_goodG2BSink(a1);
}

//----- (0000000000409FA3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54d_goodB2GSink(a1);
}

//----- (0000000000409FBA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = -1;
  result = staticTrue;
  if ( staticTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0CC: using guessed type int staticTrue;

//----- (0000000000409FF9) ----------------------------------------------------
int goodB2G1_27()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = -1;
  if ( staticFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 65B0CC: using guessed type int staticTrue;
// 65B198: using guessed type int staticFalse;

//----- (000000000040A056) ----------------------------------------------------
int goodB2G2_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = -1;
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 65B0CC: using guessed type int staticTrue;

//----- (000000000040A0A7) ----------------------------------------------------
int goodG2B1_21()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0CC: using guessed type int staticTrue;
// 65B198: using guessed type int staticFalse;

//----- (000000000040A0F2) ----------------------------------------------------
int goodG2B2_21()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0CC: using guessed type int staticTrue;

//----- (000000000040A131) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_05_good()
{
  goodB2G1_27();
  goodB2G2_27();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040A15F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_01_bad()
{
  return printUnsignedLine(1u);
}

//----- (000000000040A18B) ----------------------------------------------------
int goodG2B_28()
{
  return printUnsignedLine(4u);
}

//----- (000000000040A1B7) ----------------------------------------------------
int goodB2G_22()
{
  return printUnsignedLine(1u);
}

//----- (000000000040A203) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_01_good()
{
  goodG2B_28();
  return goodB2G_22();
}

//----- (000000000040A21D) ----------------------------------------------------
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 )
      printUnsignedLine(2 * v5);
  }
}

//----- (000000000040A2BB) ----------------------------------------------------
void goodB2G_23()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  unsigned int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 )
    {
      if ( v5 > 0x7FFFFFFE )
        printLine("data value is too large to perform arithmetic safely.");
      else
        printUnsignedLine(2 * v5);
    }
  }
}

//----- (000000000040A36E) ----------------------------------------------------
int goodG2B_29()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000040A3C4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_17_good()
{
  goodB2G_23();
  return goodG2B_29();
}

//----- (000000000040A3DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53d_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040A3FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040A420) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000040A461) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_add_65b_badSink)(v2);
}

//----- (000000000040A4D4) ----------------------------------------------------
int goodG2B_30()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_65b_goodG2BSink(2);
}

//----- (000000000040A4FF) ----------------------------------------------------
__int64 goodB2G_24()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_add_65b_goodB2GSink)(v2);
}

//----- (000000000040A572) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_65_good()
{
  goodG2B_30();
  return goodB2G_24();
}

//----- (000000000040A58C) ----------------------------------------------------
void CWE190_Integer_Overflow__unsigned_int_rand_square_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printUnsignedLine(v5 * v5);
}

//----- (000000000040A626) ----------------------------------------------------
void goodB2G_25()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 < -65534 || v5 > 65534 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printUnsignedLine(v5 * v5);
  }
}

//----- (000000000040A6E0) ----------------------------------------------------
int goodG2B_31()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000040A732) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_17_good()
{
  goodB2G_25();
  return goodG2B_31();
}

//----- (000000000040A74C) ----------------------------------------------------
int __fastcall badSink_4(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040A76D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_4)(v2);
}

//----- (000000000040A7E0) ----------------------------------------------------
int __fastcall goodG2BSink_4(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040A801) ----------------------------------------------------
int goodG2B_32()
{
  return goodG2BSink_4(2);
}

//----- (000000000040A82C) ----------------------------------------------------
int __fastcall goodB2GSink_1(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000040A86D) ----------------------------------------------------
__int64 goodB2G_26()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_1)(v2);
}

//----- (000000000040A8E0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_44_good()
{
  goodG2B_32();
  return goodB2G_26();
}

//----- (000000000040A8FA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_52_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_52b_badSink(v1);
}

//----- (000000000040A95B) ----------------------------------------------------
int goodG2B_33()
{
  return CWE190_Integer_Overflow__short_rand_square_52b_goodG2BSink(2);
}

//----- (000000000040A97C) ----------------------------------------------------
int goodB2G_27()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_52b_goodB2GSink(v1);
}

//----- (000000000040A9DD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_52_good()
{
  goodG2B_33();
  return goodB2G_27();
}

//----- (000000000040A9F7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_34_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000040AA2E) ----------------------------------------------------
int goodG2B_34()
{
  return printUnsignedLine(3u);
}

//----- (000000000040AA65) ----------------------------------------------------
int goodB2G_28()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040AAAE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_34_good()
{
  goodG2B_34();
  return goodB2G_28();
}

//----- (000000000040AAC8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040AB09) ----------------------------------------------------
int goodG2B_35()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_goodG2BSink(2);
}

//----- (000000000040AB34) ----------------------------------------------------
__int64 goodB2G_29()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040AB75) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_65_good()
{
  goodG2B_35();
  return goodB2G_29();
}

//----- (000000000040AB8F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040ABBA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040ABE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000040AC22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_63b_badSink(&v1);
}

//----- (000000000040AC46) ----------------------------------------------------
int goodG2B_36()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_square_63b_goodG2BSink(&v1);
}

//----- (000000000040AC6A) ----------------------------------------------------
int goodB2G_30()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_63b_goodB2GSink(&v1);
}

//----- (000000000040AC8E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_63_good()
{
  goodG2B_36();
  return goodB2G_30();
}

//----- (000000000040ACA8) ----------------------------------------------------
int __fastcall badSink_5(int a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B19C: using guessed type int badStatic_2;

//----- (000000000040ACD3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_2 = 1;
  return badSink_5(v2);
}
// 65B19C: using guessed type int badStatic_2;

//----- (000000000040AD47) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(int a1)
{
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 < -65534 || a1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 * a1);
}
// 65B1A0: using guessed type int goodB2G1Static_2;

//----- (000000000040AD9E) ----------------------------------------------------
int goodB2G1_28()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(v2);
}
// 65B1A0: using guessed type int goodB2G1Static_2;

//----- (000000000040AE12) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(int a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    if ( a1 < -65534 || a1 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 * a1);
  }
  return result;
}
// 65B1A4: using guessed type int goodB2G2Static_2;

//----- (000000000040AE5D) ----------------------------------------------------
int goodB2G2_28()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(v2);
}
// 65B1A4: using guessed type int goodB2G2Static_2;

//----- (000000000040AED1) ----------------------------------------------------
int __fastcall goodG2BSink_5(int a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B1A8: using guessed type int goodG2BStatic_2;

//----- (000000000040AEFC) ----------------------------------------------------
int goodG2B_37()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_5(2);
}
// 65B1A8: using guessed type int goodG2BStatic_2;

//----- (000000000040AF28) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_21_good()
{
  goodB2G1_28();
  goodB2G2_28();
  return goodG2B_37();
}

//----- (000000000040AF4C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_badSink(a1);
}

//----- (000000000040AF63) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_goodG2BSink(a1);
}

//----- (000000000040AF7A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_goodB2GSink(a1);
}

//----- (000000000040AF91) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040AFC9) ----------------------------------------------------
int goodG2B_38()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_goodG2BSink(2);
}

//----- (000000000040AFEB) ----------------------------------------------------
int goodB2G_31()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_52b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040B023) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_52_good()
{
  goodG2B_38();
  return goodB2G_31();
}

//----- (000000000040B03D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_add_68_badData + 1);
}
// 65B328: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_68_badData;

//----- (000000000040B063) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodG2BData + 1);
}
// 65B324: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodG2BData;

//----- (000000000040B089) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodB2GData + 1);
  return result;
}
// 65B32C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodB2GData;

//----- (000000000040B0C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040B0E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040B101) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040B133) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (000000000040B1AD) ----------------------------------------------------
unsigned int goodB2G1_29()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (000000000040B23C) ----------------------------------------------------
unsigned int goodB2G2_29()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (000000000040B2CB) ----------------------------------------------------
int goodG2B1_22()
{
  return printUnsignedLine(4u);
}

//----- (000000000040B2FD) ----------------------------------------------------
int goodG2B2_22()
{
  return printUnsignedLine(4u);
}

//----- (000000000040B32F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_15_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040B35D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040B39D) ----------------------------------------------------
int goodB2G1_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040B409) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040B469) ----------------------------------------------------
int goodG2B1_23()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040B4B5) ----------------------------------------------------
int goodG2B2_23()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040B4F5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_09_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000040B523) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040B566) ----------------------------------------------------
int goodB2G_32()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040B5BD) ----------------------------------------------------
int goodG2B_39()
{
  return printUnsignedLine(3u);
}

//----- (000000000040B5EA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_good()
{
  goodB2G_32();
  return goodG2B_39();
}

//----- (000000000040B604) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_badSink();
}
// 65B320: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData;

//----- (000000000040B62F) ----------------------------------------------------
int goodG2B_40()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_goodG2BSink();
}
// 65B31C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData;

//----- (000000000040B65A) ----------------------------------------------------
int goodB2G_33()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_goodB2GSink();
}
// 65B318: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData;

//----- (000000000040B685) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_good()
{
  goodG2B_40();
  return goodB2G_33();
}

//----- (000000000040B69F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_54_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54b_badSink(-1);
}

//----- (000000000040B6C1) ----------------------------------------------------
int goodG2B_41()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54b_goodG2BSink(2);
}

//----- (000000000040B6E3) ----------------------------------------------------
int goodB2G_34()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54b_goodB2GSink(-1);
}

//----- (000000000040B705) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_54_good()
{
  goodG2B_41();
  return goodB2G_34();
}

//----- (000000000040B71F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_51_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_51b_badSink(v1);
}

//----- (000000000040B780) ----------------------------------------------------
int goodG2B_42()
{
  return CWE190_Integer_Overflow__short_rand_square_51b_goodG2BSink(2);
}

//----- (000000000040B7A1) ----------------------------------------------------
int goodB2G_35()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_51b_goodB2GSink(v1);
}

//----- (000000000040B802) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_51_good()
{
  goodG2B_42();
  return goodB2G_35();
}

//----- (000000000040B81C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53c_badSink(a1);
}

//----- (000000000040B833) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53c_goodG2BSink(a1);
}

//----- (000000000040B84A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53c_goodB2GSink(a1);
}

//----- (000000000040B861) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040B881) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040B8A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040B8D3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_66b_badSink((__int64)&v1);
}

//----- (000000000040B8FD) ----------------------------------------------------
int goodG2B_43()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_add_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040B927) ----------------------------------------------------
int goodB2G_36()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040B951) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_66_good()
{
  goodG2B_43();
  return goodB2G_36();
}

//----- (000000000040B96B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040B98B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040B9AB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040B9DD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_53_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_badSink(-1);
}

//----- (000000000040B9FF) ----------------------------------------------------
int goodG2B_44()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_goodG2BSink(2);
}

//----- (000000000040BA21) ----------------------------------------------------
int goodB2G_37()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53b_goodB2GSink(0xFFFFFFFF);
}

//----- (000000000040BA43) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_53_good()
{
  goodG2B_44();
  return goodB2G_37();
}

//----- (000000000040BA5D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040BA95) ----------------------------------------------------
int goodG2B_45()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_goodG2BSink(2);
}

//----- (000000000040BAB7) ----------------------------------------------------
int goodB2G_38()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_51b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040BAEF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_51_good()
{
  goodG2B_45();
  return goodB2G_38();
}

//----- (000000000040BB09) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040BB60) ----------------------------------------------------
int goodB2G1_31()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040BBD7) ----------------------------------------------------
int goodB2G2_31()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040BC42) ----------------------------------------------------
int goodG2B1_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BC8F) ----------------------------------------------------
int goodG2B2_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BCD0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_13_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (000000000040BCFE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54c_badSink(a1);
}

//----- (000000000040BD15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54c_goodG2BSink(a1);
}

//----- (000000000040BD2C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54c_goodB2GSink(a1);
}

//----- (000000000040BD43) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_68_badData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_68b_badSink();
}
// 65B328: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_68_badData;

//----- (000000000040BDB6) ----------------------------------------------------
int goodG2B_46()
{
  CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_68b_goodG2BSink();
}
// 65B324: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodG2BData;

//----- (000000000040BDE1) ----------------------------------------------------
int goodB2G_39()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_68b_goodB2GSink();
}
// 65B32C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_68_goodB2GData;

//----- (000000000040BE54) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_68_good()
{
  goodG2B_46();
  return goodB2G_39();
}

//----- (000000000040BE6E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_square_61b_badSource();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000040BEA0) ----------------------------------------------------
int goodG2B_47()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_square_61b_goodG2BSource();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000040BED2) ----------------------------------------------------
int goodB2G_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_rand_square_61b_goodB2GSource();
  if ( v1 < -65534 || v1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000040BF24) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_61_good()
{
  goodG2B_47();
  return goodB2G_40();
}

//----- (000000000040BF3E) ----------------------------------------------------
int badSink_6()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_square_45_badData
                              * CWE190_Integer_Overflow__short_rand_square_45_badData));
}
// 65B1AC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_45_badData;

//----- (000000000040BF6D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_45_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_45_badData = v1;
  return badSink_6();
}
// 65B1AC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_45_badData;

//----- (000000000040BFD8) ----------------------------------------------------
int goodG2BSink_6()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_square_45_goodG2BData
                              * CWE190_Integer_Overflow__short_rand_square_45_goodG2BData));
}
// 65B1AE: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_45_goodG2BData;

//----- (000000000040C007) ----------------------------------------------------
int goodG2B_48()
{
  CWE190_Integer_Overflow__short_rand_square_45_goodG2BData = 2;
  return goodG2BSink_6();
}
// 65B1AE: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_45_goodG2BData;

//----- (000000000040C032) ----------------------------------------------------
int goodB2GSink_2()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_rand_square_45_goodB2GData < -181
    || CWE190_Integer_Overflow__short_rand_square_45_goodB2GData > 181 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_square_45_goodB2GData
                                  * CWE190_Integer_Overflow__short_rand_square_45_goodB2GData));
  }
  return result;
}
// 65B1B0: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_45_goodB2GData;

//----- (000000000040C083) ----------------------------------------------------
int goodB2G_41()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_45_goodB2GData = v1;
  return goodB2GSink_2();
}
// 65B1B0: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_45_goodB2GData;

//----- (000000000040C0EE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_45_good()
{
  goodG2B_48();
  return goodB2G_41();
}

//----- (000000000040C108) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_0 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B0D0: using guessed type int staticTrue_0;

//----- (000000000040C194) ----------------------------------------------------
int goodB2G1_32()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_0 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFalse_0;
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B0D0: using guessed type int staticTrue_0;
// 65B1B4: using guessed type int staticFalse_0;

//----- (000000000040C241) ----------------------------------------------------
int goodB2G2_32()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_0 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_0;
  if ( staticTrue_0 && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B0D0: using guessed type int staticTrue_0;

//----- (000000000040C2E2) ----------------------------------------------------
int goodG2B1_25()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0D0: using guessed type int staticTrue_0;
// 65B1B4: using guessed type int staticFalse_0;

//----- (000000000040C332) ----------------------------------------------------
int goodG2B2_25()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0D0: using guessed type int staticTrue_0;

//----- (000000000040C376) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_05_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (000000000040C3A4) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040C3C9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_7(v2);
}

//----- (000000000040C433) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040C458) ----------------------------------------------------
int goodG2B_49()
{
  return goodG2BSink_7(2);
}

//----- (000000000040C47A) ----------------------------------------------------
int __fastcall goodB2GSink_3(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000040C4B4) ----------------------------------------------------
int goodB2G_42()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_3(v2);
}

//----- (000000000040C51E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_41_good()
{
  goodB2G_42();
  return goodG2B_49();
}

//----- (000000000040C538) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_06_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (000000000040C5BC) ----------------------------------------------------
int goodB2G1_33()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000040C66E) ----------------------------------------------------
int goodB2G2_33()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000040C714) ----------------------------------------------------
int goodG2B1_26()
{
  return printIntLine(4u);
}

//----- (000000000040C764) ----------------------------------------------------
int goodG2B2_26()
{
  return printIntLine(4u);
}

//----- (000000000040C7A8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_06_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (000000000040C7D6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040C81C) ----------------------------------------------------
int goodB2G1_34()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040C882) ----------------------------------------------------
int goodB2G2_34()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040C8E8) ----------------------------------------------------
int goodG2B1_27()
{
  return printUnsignedLine(4u);
}

//----- (000000000040C916) ----------------------------------------------------
int goodG2B2_27()
{
  return printUnsignedLine(4u);
}

//----- (000000000040C944) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_15_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (000000000040C972) ----------------------------------------------------
int badSink_8()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_badData + 1);
}
// 65B1B8: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_badData;

//----- (000000000040C998) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_badData = v1;
  return badSink_8();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B1B8: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_badData;

//----- (000000000040C9D9) ----------------------------------------------------
int goodG2BSink_8()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodG2BData + 1);
}
// 65B1BC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodG2BData;

//----- (000000000040C9FF) ----------------------------------------------------
int goodG2B_50()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodG2BData = 2;
  return goodG2BSink_8();
}
// 65B1BC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodG2BData;

//----- (000000000040CA2A) ----------------------------------------------------
int goodB2GSink_4()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodB2GData + 1);
  return result;
}
// 65B1C0: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodB2GData;

//----- (000000000040CA62) ----------------------------------------------------
int goodB2G_43()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodB2GData = v1;
  return goodB2GSink_4();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B1C0: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_goodB2GData;

//----- (000000000040CAA3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_45_good()
{
  goodG2B_50();
  return goodB2G_43();
}

//----- (000000000040CABD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printUnsignedLine(v6 * v6);
  return result;
}
// 65B0D4: using guessed type int staticFive_1;

//----- (000000000040CB47) ----------------------------------------------------
int goodB2G1_35()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}
// 65B0D4: using guessed type int staticFive_1;

//----- (000000000040CBFD) ----------------------------------------------------
int goodB2G2_35()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}
// 65B0D4: using guessed type int staticFive_1;

//----- (000000000040CCA7) ----------------------------------------------------
int goodG2B1_28()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0D4: using guessed type int staticFive_1;

//----- (000000000040CCF5) ----------------------------------------------------
int goodG2B2_28()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0D4: using guessed type int staticFive_1;

//----- (000000000040CD37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_07_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (000000000040CD65) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53b_badSink(v2);
}

//----- (000000000040CDCF) ----------------------------------------------------
int goodG2B_51()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53b_goodG2BSink(2);
}

//----- (000000000040CDF1) ----------------------------------------------------
int goodB2G_44()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_53b_goodB2GSink(v2);
}

//----- (000000000040CE5B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_53_good()
{
  goodG2B_51();
  return goodB2G_44();
}

//----- (000000000040CE75) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43B54C, &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040CECA) ----------------------------------------------------
int goodB2G1_36()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43B54C, &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040CF3F) ----------------------------------------------------
int goodB2G2_36()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43B54C, &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040CFA8) ----------------------------------------------------
int goodG2B1_29()
{
  return printUnsignedLine(3u);
}

//----- (000000000040CFF3) ----------------------------------------------------
int goodG2B2_29()
{
  return printUnsignedLine(3u);
}

//----- (000000000040D032) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_06_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (000000000040D060) ----------------------------------------------------
__int64 __fastcall badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040D08D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_bad()
{
  int v0; // eax

  v0 = badSource(0);
  return printUnsignedLine(v0 * v0);
}

//----- (000000000040D0BF) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 2LL;
}

//----- (000000000040D0D2) ----------------------------------------------------
int goodG2B_52()
{
  int v0; // eax

  v0 = goodG2BSource();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000040D104) ----------------------------------------------------
__int64 __fastcall goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040D131) ----------------------------------------------------
int goodB2G_45()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource(0);
  if ( v1 < -65534 || v1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000040D183) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_42_good()
{
  goodB2G_45();
  return goodG2B_52();
}

//----- (000000000040D19D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (000000000040D221) ----------------------------------------------------
int goodG2B_53()
{
  return printUnsignedLine(4u);
}

//----- (000000000040D25D) ----------------------------------------------------
unsigned int goodB2G_46()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (000000000040D2F6) ----------------------------------------------------
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_34_good()
{
  goodG2B_53();
  return goodB2G_46();
}

//----- (000000000040D310) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(2 * v2);
  return result;
}

//----- (000000000040D340) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(2 * v2);
  return result;
}

//----- (000000000040D370) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  unsigned int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (000000000040D3B5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_badSink(a1);
}

//----- (000000000040D3CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_goodG2BSink(a1);
}

//----- (000000000040D3E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_goodB2GSink(a1);
}

//----- (000000000040D3FA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_54_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54b_badSink(-1);
}

//----- (000000000040D41C) ----------------------------------------------------
int goodG2B_54()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54b_goodG2BSink(2);
}

//----- (000000000040D43E) ----------------------------------------------------
int goodB2G_47()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54b_goodB2GSink(-1);
}

//----- (000000000040D460) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_54_good()
{
  goodG2B_54();
  return goodB2G_47();
}

//----- (000000000040D47A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 * *a1));
}

//----- (000000000040D4B5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 * *a1));
}

//----- (000000000040D4F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_64b_goodB2GSink(__int16 *a1)
{
  int result; // eax
  __int16 v2; // [rsp+16h] [rbp-Ah]

  v2 = *a1;
  if ( *a1 < -181 || v2 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 * v2));
  return result;
}

//----- (000000000040D54D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_18_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (000000000040D57F) ----------------------------------------------------
int goodB2G_48()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040D5C6) ----------------------------------------------------
int goodG2B_55()
{
  return printUnsignedLine(4u);
}

//----- (000000000040D5F8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_18_good()
{
  goodB2G_48();
  return goodG2B_55();
}

//----- (000000000040D612) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_65b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040D633) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040D654) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000040D695) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0D8: using guessed type int staticTrue_1;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040D6ED) ----------------------------------------------------
int goodB2G1_37()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0D8: using guessed type int staticTrue_1;
// 65B120: using guessed type __int64 stdin;
// 65B1C4: using guessed type int staticFalse_1;

//----- (000000000040D771) ----------------------------------------------------
int goodB2G2_37()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0D8: using guessed type int staticTrue_1;
// 65B120: using guessed type __int64 stdin;

//----- (000000000040D7E9) ----------------------------------------------------
int goodG2B1_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0D8: using guessed type int staticTrue_1;
// 65B1C4: using guessed type int staticFalse_1;

//----- (000000000040D835) ----------------------------------------------------
int goodG2B2_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_1 )
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0D8: using guessed type int staticTrue_1;

//----- (000000000040D875) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_05_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (000000000040D8A3) ----------------------------------------------------
int __fastcall badSink_9(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040D8C4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return badSink_9(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040D8FC) ----------------------------------------------------
int __fastcall goodG2BSink_9(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040D91D) ----------------------------------------------------
int goodG2B_56()
{
  return goodG2BSink_9(2);
}

//----- (000000000040D93F) ----------------------------------------------------
int __fastcall goodB2GSink_5(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000040D980) ----------------------------------------------------
int goodB2G_49()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return goodB2GSink_5(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040D9B8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_41_good()
{
  goodB2G_49();
  return goodG2B_56();
}

//----- (000000000040D9D2) ----------------------------------------------------
void CWE190_Integer_Overflow__short_rand_square_17_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine((__int16)(v3 * v3));
}

//----- (000000000040DA68) ----------------------------------------------------
void goodB2G_50()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v3 < -181 || v3 > 181 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine((__int16)(v3 * v3));
  }
}

//----- (000000000040DB20) ----------------------------------------------------
int goodG2B_57()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000040DB76) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_17_good()
{
  goodB2G_50();
  return goodG2B_57();
}

//----- (000000000040DB90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_52c_badSink(a1);
}

//----- (000000000040DBA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_52c_goodG2BSink(a1);
}

//----- (000000000040DBBE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_52c_goodB2GSink(a1);
}

//----- (000000000040DBD5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040DBFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040DC21) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040DC59) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040DCB8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040DCCB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040DD2A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_52_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_badSink(-1);
}

//----- (000000000040DD4C) ----------------------------------------------------
int goodG2B_58()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_goodG2BSink(2);
}

//----- (000000000040DD6E) ----------------------------------------------------
int goodB2G_51()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_52b_goodB2GSink(0xFFFFFFFF);
}

//----- (000000000040DD90) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_52_good()
{
  goodG2B_58();
  return goodB2G_51();
}

//----- (000000000040DDAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040DDCF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040DDF4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54e_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000040DE2E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_badSink((__int64)&v6);
}

//----- (000000000040DEA0) ----------------------------------------------------
int goodG2B_59()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040DECA) ----------------------------------------------------
int goodB2G_52()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_66b_goodB2GSink((__int64)&v6);
}

//----- (000000000040DF3C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_66_good()
{
  goodG2B_59();
  return goodB2G_52();
}

//----- (000000000040DF56) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040DF7B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040DFA0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000040DFDA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53d_badSink(a1);
}

//----- (000000000040DFF1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53d_goodG2BSink(a1);
}

//----- (000000000040E008) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53d_goodB2GSink(a1);
}

//----- (000000000040E01F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_badSink(v2);
}

//----- (000000000040E08F) ----------------------------------------------------
int goodG2B_60()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_goodG2BSink(2);
}

//----- (000000000040E0B7) ----------------------------------------------------
int goodB2G_53()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_67b_goodB2GSink(v2);
}

//----- (000000000040E127) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_67_good()
{
  goodG2B_60();
  return goodB2G_53();
}

//----- (000000000040E141) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040E162) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040E183) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000040E1C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (000000000040E1F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (000000000040E21C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000040E268) ----------------------------------------------------
int __fastcall badSink_10(__int16 a1)
{
  int result; // eax

  result = badStatic_3;
  if ( badStatic_3 )
    result = printIntLine((__int16)(a1 * a1));
  return result;
}
// 65B1C8: using guessed type int badStatic_3;

//----- (000000000040E29C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_21_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  badStatic_3 = 1;
  return badSink_10(v1);
}
// 65B1C8: using guessed type int badStatic_3;

//----- (000000000040E307) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(__int16 a1)
{
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 < -181 || a1 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 * a1));
}
// 65B1CC: using guessed type int goodB2G1Static_3;

//----- (000000000040E369) ----------------------------------------------------
int goodB2G1_38()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(v1);
}
// 65B1CC: using guessed type int goodB2G1Static_3;

//----- (000000000040E3D4) ----------------------------------------------------
int __fastcall goodB2G2Sink_3(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_3;
  if ( goodB2G2Static_3 )
  {
    if ( a1 < -181 || a1 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 * a1));
  }
  return result;
}
// 65B1D0: using guessed type int goodB2G2Static_3;

//----- (000000000040E42A) ----------------------------------------------------
int goodB2G2_38()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(v1);
}
// 65B1D0: using guessed type int goodB2G2Static_3;

//----- (000000000040E495) ----------------------------------------------------
int __fastcall goodG2BSink_10(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_3;
  if ( goodG2BStatic_3 )
    result = printIntLine((__int16)(a1 * a1));
  return result;
}
// 65B1D4: using guessed type int goodG2BStatic_3;

//----- (000000000040E4C9) ----------------------------------------------------
int goodG2B_61()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_10(2);
}
// 65B1D4: using guessed type int goodG2BStatic_3;

//----- (000000000040E4F4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_21_good()
{
  goodB2G1_38();
  goodB2G2_38();
  return goodG2B_61();
}

//----- (000000000040E518) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_64_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_square_64b_badSink(&v4);
}

//----- (000000000040E57A) ----------------------------------------------------
int goodG2B_62()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_rand_square_64b_goodG2BSink(&v1);
}

//----- (000000000040E59C) ----------------------------------------------------
int goodB2G_54()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_square_64b_goodB2GSink(&v4);
}

//----- (000000000040E5FE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_64_good()
{
  goodG2B_62();
  return goodB2G_54();
}

//----- (000000000040E618) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_badSink(a1);
}

//----- (000000000040E62F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_goodG2BSink(a1);
}

//----- (000000000040E646) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_goodB2GSink(a1);
}

//----- (000000000040E65D) ----------------------------------------------------
int __fastcall badSink_11(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040E67D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_11(v2);
}

//----- (000000000040E6E7) ----------------------------------------------------
int __fastcall goodG2BSink_11(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040E707) ----------------------------------------------------
int goodG2B_63()
{
  return goodG2BSink_11(2);
}

//----- (000000000040E729) ----------------------------------------------------
int __fastcall goodB2GSink_6(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040E75B) ----------------------------------------------------
int goodB2G_55()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_6(v2);
}

//----- (000000000040E7C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_41_good()
{
  goodB2G_55();
  return goodG2B_63();
}

//----- (000000000040E7DF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_65_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_65b_badSink(-1);
}

//----- (000000000040E80A) ----------------------------------------------------
int goodG2B_64()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_65b_goodG2BSink(2);
}

//----- (000000000040E835) ----------------------------------------------------
int goodB2G_56()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_65b_goodB2GSink(-1);
}

//----- (000000000040E860) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_65_good()
{
  goodG2B_64();
  return goodB2G_56();
}

//----- (000000000040E87A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000040E8AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000040E8DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000040E922) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_65_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_65b_badSink(-1);
}

//----- (000000000040E94D) ----------------------------------------------------
int goodG2B_65()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_65b_goodG2BSink(2);
}

//----- (000000000040E978) ----------------------------------------------------
int goodB2G_57()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_65b_goodB2GSink(-1);
}

//----- (000000000040E9A3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_65_good()
{
  goodG2B_65();
  return goodB2G_57();
}

//----- (000000000040E9BD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_52b_badSink(v2);
}

//----- (000000000040EA27) ----------------------------------------------------
int goodG2B_66()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_52b_goodG2BSink(2);
}

//----- (000000000040EA49) ----------------------------------------------------
int goodB2G_58()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_52b_goodB2GSink(v2);
}

//----- (000000000040EAB3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_52_good()
{
  goodG2B_66();
  return goodB2G_58();
}

//----- (000000000040EACD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_badSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040EB07) ----------------------------------------------------
int goodG2B_67()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_goodG2BSink(&v1);
}

//----- (000000000040EB2B) ----------------------------------------------------
int goodB2G_59()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_64b_goodB2GSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040EB65) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_64_good()
{
  goodG2B_67();
  return goodB2G_59();
}

//----- (000000000040EB7F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040EB9F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040EBBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040EBF1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v6 = v1;
  result = *v5;
  v4 = *v5;
  if ( v4 )
  {
    v3 = 2 * v4;
    result = printUnsignedLine(2 * v4);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040EC62) ----------------------------------------------------
int goodG2B_68()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printUnsignedLine(4u);
}

//----- (000000000040ECBD) ----------------------------------------------------
int goodB2G_60()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  unsigned int v3; // [rsp+8h] [rbp-18h]
  unsigned int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v6 = v1;
  result = *v5;
  v4 = *v5;
  if ( v4 )
  {
    if ( v4 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = 2 * v4;
      result = printUnsignedLine(2 * v4);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040ED43) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_32_good()
{
  goodG2B_68();
  return goodB2G_60();
}

//----- (000000000040ED5D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_51_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_badSink(-1);
}

//----- (000000000040ED7F) ----------------------------------------------------
int goodG2B_69()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_goodG2BSink(2);
}

//----- (000000000040EDA1) ----------------------------------------------------
int goodB2G_61()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_51b_goodB2GSink(0xFFFFFFFF);
}

//----- (000000000040EDC3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_51_good()
{
  goodG2B_69();
  return goodB2G_61();
}

//----- (000000000040EDDD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000040EE52) ----------------------------------------------------
int goodB2G_62()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000040EED9) ----------------------------------------------------
int goodG2B_70()
{
  return printUnsignedLine(3u);
}

//----- (000000000040EF06) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_16_good()
{
  goodB2G_62();
  return goodG2B_70();
}

//----- (000000000040EF20) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (000000000040EF50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (000000000040EF80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (000000000040EFD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040EFFD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000040F028) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000040F068) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_badData + 1);
}
// 65B35C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_badData;

//----- (000000000040F08E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodG2BData + 1);
}
// 65B360: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodG2BData;

//----- (000000000040F0B4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodB2GData + 1);
  return result;
}
// 65B364: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodB2GData;

//----- (000000000040F0EC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData);
  return result;
}
// 65B320: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_badData;

//----- (000000000040F117) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData);
  return result;
}
// 65B31C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodG2BData;

//----- (000000000040F142) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData )
  {
    if ( (unsigned int)CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData);
  }
  return result;
}
// 65B318: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_68_goodB2GData;

//----- (000000000040F182) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_badSink((__int64)&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F1C2) ----------------------------------------------------
int goodG2B_71()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040F1EC) ----------------------------------------------------
int goodB2G_63()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_66b_goodB2GSink((__int64)&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F22C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_66_good()
{
  goodG2B_71();
  return goodB2G_63();
}

//----- (000000000040F246) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54e_badSink(a1);
}

//----- (000000000040F25D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54e_goodG2BSink(a1);
}

//----- (000000000040F274) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54e_goodB2GSink(a1);
}

//----- (000000000040F28B) ----------------------------------------------------
int badSink_12()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData);
  return result;
}
// 65B1D8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData;

//----- (000000000040F2B6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData = -1;
  return badSink_12();
}
// 65B1D8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_badData;

//----- (000000000040F2E1) ----------------------------------------------------
int goodG2BSink_12()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData);
  return result;
}
// 65B1DC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData;

//----- (000000000040F30C) ----------------------------------------------------
int goodG2B_72()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData = 2;
  return goodG2BSink_12();
}
// 65B1DC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodG2BData;

//----- (000000000040F337) ----------------------------------------------------
int goodB2GSink_7()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData )
  {
    if ( (unsigned int)CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData);
  }
  return result;
}
// 65B1E0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData;

//----- (000000000040F377) ----------------------------------------------------
int goodB2G_64()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData = -1;
  return goodB2GSink_7();
}
// 65B1E0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_goodB2GData;

//----- (000000000040F3A2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_45_good()
{
  goodG2B_72();
  return goodB2G_64();
}

//----- (000000000040F3BC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_badSink(&v6);
}

//----- (000000000040F428) ----------------------------------------------------
int goodG2B_73()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000040F44C) ----------------------------------------------------
int goodB2G_65()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_goodB2GSink(&v6);
}

//----- (000000000040F4B8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_63_good()
{
  goodG2B_73();
  return goodB2G_65();
}

//----- (000000000040F4D2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_51b_badSink(v2);
}

//----- (000000000040F53C) ----------------------------------------------------
int goodG2B_74()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_51b_goodG2BSink(2);
}

//----- (000000000040F55E) ----------------------------------------------------
int goodB2G_66()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_51b_goodB2GSink(v2);
}

//----- (000000000040F5C8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_51_good()
{
  goodG2B_74();
  return goodB2G_66();
}

//----- (000000000040F5E2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43BB78, &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F63B) ----------------------------------------------------
int goodB2G1_39()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43BB78, &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F6B6) ----------------------------------------------------
int goodB2G2_39()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43BB78, &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F725) ----------------------------------------------------
int goodG2B1_31()
{
  return printUnsignedLine(4u);
}

//----- (000000000040F773) ----------------------------------------------------
int goodG2B2_31()
{
  return printUnsignedLine(4u);
}

//----- (000000000040F7B5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_04_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (000000000040F7E3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  result = v1;
  v3 = v1;
  if ( v1 )
  {
    v2 = 2 * v3;
    result = printUnsignedLine(2 * v3);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F835) ----------------------------------------------------
int goodG2B_75()
{
  return printUnsignedLine(4u);
}

//----- (000000000040F871) ----------------------------------------------------
int goodB2G_67()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  unsigned int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  result = v1;
  v3 = v1;
  if ( v1 )
  {
    if ( v3 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v3;
      result = printUnsignedLine(2 * v3);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040F8D8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_31_good()
{
  goodG2B_75();
  return goodB2G_67();
}

//----- (000000000040F8F2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000040F97E) ----------------------------------------------------
int goodB2G1_40()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000040FA2B) ----------------------------------------------------
int goodB2G2_40()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000040FACC) ----------------------------------------------------
int goodG2B1_32()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000040FB1C) ----------------------------------------------------
int goodG2B2_32()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000040FB60) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_10_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (000000000040FB8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53c_badSink(a1);
}

//----- (000000000040FBA5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53c_goodG2BSink(a1);
}

//----- (000000000040FBBC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53c_goodB2GSink(a1);
}

//----- (000000000040FBD3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52c_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040FBF4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000040FC15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000040FC56) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43BC94, &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040FCB1) ----------------------------------------------------
int goodB2G1_41()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43BC94, &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040FD2E) ----------------------------------------------------
int goodB2G2_41()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43BC94, &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040FD9F) ----------------------------------------------------
int goodG2B1_33()
{
  return printUnsignedLine(4u);
}

//----- (000000000040FDEF) ----------------------------------------------------
int goodG2B2_33()
{
  return printUnsignedLine(4u);
}

//----- (000000000040FE33) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_06_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (000000000040FE61) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040FE9F) ----------------------------------------------------
int goodG2B_76()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_goodG2BSink(2);
}

//----- (000000000040FEC7) ----------------------------------------------------
int goodB2G_68()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000040FF05) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_67_good()
{
  goodG2B_76();
  return goodB2G_68();
}

//----- (000000000040FF1F) ----------------------------------------------------
int badSink_13()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_add_45_badData + 1);
}
// 65B1E4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_45_badData;

//----- (000000000040FF45) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_45_badData = v2;
  return badSink_13();
}
// 65B1E4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_45_badData;

//----- (000000000040FFB8) ----------------------------------------------------
int goodG2BSink_13()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodG2BData + 1);
}
// 65B1E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodG2BData;

//----- (000000000040FFDE) ----------------------------------------------------
int goodG2B_77()
{
  CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodG2BData = 2;
  return goodG2BSink_13();
}
// 65B1E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodG2BData;

//----- (0000000000410009) ----------------------------------------------------
int goodB2GSink_8()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodB2GData + 1);
  return result;
}
// 65B1EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodB2GData;

//----- (0000000000410041) ----------------------------------------------------
int goodB2G_69()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodB2GData = v2;
  return goodB2GSink_8();
}
// 65B1EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_45_goodB2GData;

//----- (00000000004100B4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_45_good()
{
  goodG2B_77();
  return goodB2G_69();
}

//----- (00000000004100CE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_68_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_68_badData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_68b_badSink();
}
// 65B334: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_68_badData;

//----- (00000000004100F9) ----------------------------------------------------
int goodG2B_78()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_square_68b_goodG2BSink();
}
// 65B330: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_68_goodG2BData;

//----- (0000000000410124) ----------------------------------------------------
int goodB2G_70()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_68b_goodB2GSink();
}
// 65B338: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData;

//----- (000000000041014F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_68_good()
{
  goodG2B_78();
  return goodB2G_70();
}

//----- (0000000000410169) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (00000000004101F0) ----------------------------------------------------
int goodB2G1_42()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000410295) ----------------------------------------------------
int goodB2G2_42()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041032E) ----------------------------------------------------
int goodG2B1_34()
{
  return printUnsignedLine(3u);
}

//----- (0000000000410379) ----------------------------------------------------
int goodG2B2_34()
{
  return printUnsignedLine(3u);
}

//----- (00000000004103B8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_06_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (00000000004103E6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -1;
  v1 = -1;
  v3 = -1;
  v2 = 0;
  return printUnsignedLine(0);
}

//----- (000000000041043C) ----------------------------------------------------
int goodG2B_79()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (0000000000410492) ----------------------------------------------------
int goodB2G_71()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = -1;
  v1 = -1;
  v2 = -1;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004104FA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_32_good()
{
  goodG2B_79();
  return goodB2G_71();
}

//----- (0000000000410514) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badGlobal )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B1F4: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badGlobal;

//----- (0000000000410543) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Sink(unsigned int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B1F8: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Global;

//----- (0000000000410593) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Sink(unsigned int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Global && a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B1FC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Global;

//----- (00000000004105D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BGlobal )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B200: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BGlobal;

//----- (0000000000410606) ----------------------------------------------------
int __fastcall badSink_14(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000410626) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_14;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000410667) ----------------------------------------------------
int __fastcall goodG2BSink_14(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000410687) ----------------------------------------------------
int goodG2B_80()
{
  return goodG2BSink_14(2);
}

//----- (00000000004106B2) ----------------------------------------------------
int __fastcall goodB2GSink_9(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004106E4) ----------------------------------------------------
__int64 goodB2G_72()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_9;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000410725) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_44_good()
{
  goodG2B_80();
  return goodB2G_72();
}

//----- (000000000041073F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000410794) ----------------------------------------------------
int goodB2G1_43()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000410809) ----------------------------------------------------
int goodB2G2_43()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000410872) ----------------------------------------------------
int goodG2B1_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004108BD) ----------------------------------------------------
int goodG2B2_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004108FC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_09_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (000000000041092A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000410961) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000410998) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  unsigned int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (00000000004109E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000410A0A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000410A30) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000410A68) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000410A73) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000410A7E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_08_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}

//----- (0000000000410B0A) ----------------------------------------------------
int goodB2G1_44()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}

//----- (0000000000410BC4) ----------------------------------------------------
int goodB2G2_44()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}

//----- (0000000000410C72) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000410CCA) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000410D16) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_08_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (0000000000410D44) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_badSource(0);
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000410D7A) ----------------------------------------------------
int goodG2B_81()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_goodG2BSource();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000410DB0) ----------------------------------------------------
unsigned int goodB2G_73()
{
  unsigned int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_goodB2GSource(0);
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000410DFB) ----------------------------------------------------
unsigned int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61_good()
{
  goodG2B_81();
  return goodB2G_73();
}

//----- (0000000000410E15) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_53_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53b_badSink(-1);
}

//----- (0000000000410E37) ----------------------------------------------------
int goodG2B_82()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53b_goodG2BSink(2);
}

//----- (0000000000410E59) ----------------------------------------------------
int goodB2G_74()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_53b_goodB2GSink(-1);
}

//----- (0000000000410E7B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_53_good()
{
  goodG2B_82();
  return goodB2G_74();
}

//----- (0000000000410E95) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_badSink(a1);
}

//----- (0000000000410EAC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_goodG2BSink(a1);
}

//----- (0000000000410EC3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_goodB2GSink(a1);
}

//----- (0000000000410EDA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printUnsignedLine(v6 * v6);
  return result;
}
// 65B0DC: using guessed type int staticTrue_2;

//----- (0000000000410F62) ----------------------------------------------------
int goodB2G1_45()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}
// 65B0DC: using guessed type int staticTrue_2;
// 65B1F0: using guessed type int staticFalse_2;

//----- (0000000000411016) ----------------------------------------------------
int goodB2G2_45()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}
// 65B0DC: using guessed type int staticTrue_2;

//----- (00000000004110BE) ----------------------------------------------------
int goodG2B1_37()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0DC: using guessed type int staticTrue_2;
// 65B1F0: using guessed type int staticFalse_2;

//----- (000000000041110A) ----------------------------------------------------
int goodG2B2_37()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_2 )
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0DC: using guessed type int staticTrue_2;

//----- (000000000041114A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_05_good()
{
  goodB2G1_45();
  goodB2G2_45();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (0000000000411178) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_04_bad()
{
  return printUnsignedLine(0);
}

//----- (00000000004111B5) ----------------------------------------------------
int goodB2G1_46()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000411210) ----------------------------------------------------
int goodB2G2_46()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041125F) ----------------------------------------------------
int goodG2B1_38()
{
  return printUnsignedLine(3u);
}

//----- (00000000004112A8) ----------------------------------------------------
int goodG2B2_38()
{
  return printUnsignedLine(3u);
}

//----- (00000000004112E5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_04_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (0000000000411313) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_31_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000041134A) ----------------------------------------------------
int goodG2B_83()
{
  return printUnsignedLine(3u);
}

//----- (0000000000411381) ----------------------------------------------------
int goodB2G_75()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004113CA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_31_good()
{
  goodG2B_83();
  return goodB2G_75();
}

//----- (00000000004113E4) ----------------------------------------------------
int __fastcall badSink_15(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000411405) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_15(v2);
}

//----- (000000000041146F) ----------------------------------------------------
int __fastcall goodG2BSink_15(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000411490) ----------------------------------------------------
int goodG2B_84()
{
  return goodG2BSink_15(2);
}

//----- (00000000004114B2) ----------------------------------------------------
int __fastcall goodB2GSink_10(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (00000000004114F3) ----------------------------------------------------
int goodB2G_76()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_10(v2);
}

//----- (000000000041155D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_41_good()
{
  goodB2G_76();
  return goodG2B_84();
}

//----- (0000000000411577) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B1F4: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_badGlobal;

//----- (00000000004115B9) ----------------------------------------------------
int goodB2G1_47()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B1F8: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G1Global;

//----- (00000000004115FB) ----------------------------------------------------
int goodB2G2_47()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B1FC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodB2G2Global;

//----- (000000000041163D) ----------------------------------------------------
int goodG2B_85()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BSink(2);
}
// 65B200: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_goodG2BGlobal;

//----- (0000000000411669) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_22_good()
{
  goodB2G1_47();
  goodB2G2_47();
  return goodG2B_85();
}

//----- (000000000041168D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 * *a1));
}

//----- (00000000004116C0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 * *a1));
}

//----- (00000000004116F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_63b_goodB2GSink(__int16 *a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *a1;
  if ( *a1 < -181 || v2 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 * v2));
  return result;
}

//----- (0000000000411748) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_67_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_67b_badSink(v1);
}

//----- (00000000004117B1) ----------------------------------------------------
int goodG2B_86()
{
  return CWE190_Integer_Overflow__short_rand_square_67b_goodG2BSink(2);
}

//----- (00000000004117DA) ----------------------------------------------------
int goodB2G_77()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_67b_goodB2GSink(v1);
}

//----- (0000000000411843) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_67_good()
{
  goodG2B_86();
  return goodB2G_77();
}

//----- (000000000041185D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_badSink(&v1);
}

//----- (0000000000411881) ----------------------------------------------------
int goodG2B_87()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_goodG2BSink(&v1);
}

//----- (00000000004118A5) ----------------------------------------------------
int goodB2G_78()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_64b_goodB2GSink(&v1);
}

//----- (00000000004118C9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_64_good()
{
  goodG2B_87();
  return goodB2G_78();
}

//----- (00000000004118E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041190D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000411937) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (0000000000411973) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_67_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_67b_badSink(-1);
}

//----- (000000000041199B) ----------------------------------------------------
int goodG2B_88()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_67b_goodG2BSink(2);
}

//----- (00000000004119C3) ----------------------------------------------------
int goodB2G_79()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_67b_goodB2GSink(-1);
}

//----- (00000000004119EB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_67_good()
{
  goodG2B_88();
  return goodB2G_79();
}

//----- (0000000000411A05) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (0000000000411A85) ----------------------------------------------------
int goodG2B_89()
{
  return printUnsignedLine(4u);
}

//----- (0000000000411ABD) ----------------------------------------------------
int goodB2G_80()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000411B5D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_34_good()
{
  goodG2B_89();
  return goodB2G_80();
}

//----- (0000000000411B77) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_badSink(a1);
}

//----- (0000000000411B8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_goodG2BSink(a1);
}

//----- (0000000000411BA5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54d_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_goodB2GSink(a1);
}

//----- (0000000000411BBC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000411BE8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000411C14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000411C60) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54e_badSink(a1);
}

//----- (0000000000411C77) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54e_goodG2BSink(a1);
}

//----- (0000000000411C8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54e_goodB2GSink(a1);
}

//----- (0000000000411CA5) ----------------------------------------------------
int __fastcall badSink_16(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000411CCA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_41_bad()
{
  return badSink_16(-1);
}

//----- (0000000000411CEC) ----------------------------------------------------
int __fastcall goodG2BSink_16(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000411D11) ----------------------------------------------------
int goodG2B_90()
{
  return goodG2BSink_16(2);
}

//----- (0000000000411D33) ----------------------------------------------------
int __fastcall goodB2GSink_11(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000411D6D) ----------------------------------------------------
int goodB2G_81()
{
  return goodB2GSink_11(0xFFFFFFFF);
}

//----- (0000000000411D8F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_41_good()
{
  goodB2G_81();
  return goodG2B_90();
}

//----- (0000000000411DA9) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_badSink)(v2);
}

//----- (0000000000411E1C) ----------------------------------------------------
int goodG2B_91()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_goodG2BSink(2);
}

//----- (0000000000411E47) ----------------------------------------------------
__int64 goodB2G_82()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_goodB2GSink)(v2);
}

//----- (0000000000411EBA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_65_good()
{
  goodG2B_91();
  return goodB2G_82();
}

//----- (0000000000411ED4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_rand_square_61b_badSource();
  return printIntLine((__int16)(v0 * v0));
}

//----- (0000000000411F0D) ----------------------------------------------------
int goodG2B_92()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_rand_square_61b_goodG2BSource();
  return printIntLine((__int16)(v0 * v0));
}

//----- (0000000000411F46) ----------------------------------------------------
int goodB2G_83()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_rand_square_61b_goodB2GSource();
  if ( v1 < -181 || v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000411FA1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_61_good()
{
  goodG2B_92();
  return goodB2G_83();
}

//----- (0000000000411FBB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = -1;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E0: using guessed type int staticFive_2;

//----- (0000000000411FFD) ----------------------------------------------------
int goodB2G1_48()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = -1;
  if ( staticFive_2 == 5 )
    result = printUnsignedLine(v1 * v1);
  else
    result = printLine("Benign, fixed string");
  return result;
}
// 65B0E0: using guessed type int staticFive_2;

//----- (000000000041206B) ----------------------------------------------------
int goodB2G2_48()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = -1;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E0: using guessed type int staticFive_2;

//----- (00000000004120CD) ----------------------------------------------------
int goodG2B1_39()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E0: using guessed type int staticFive_2;

//----- (000000000041211B) ----------------------------------------------------
int goodG2B2_39()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E0: using guessed type int staticFive_2;

//----- (000000000041215D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_07_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (000000000041218B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v6 * v6);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (0000000000412213) ----------------------------------------------------
int goodB2G1_49()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (00000000004122C7) ----------------------------------------------------
int goodB2G2_49()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041236F) ----------------------------------------------------
int goodG2B1_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (00000000004123BB) ----------------------------------------------------
int goodG2B2_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (00000000004123FB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_10_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (0000000000412429) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -1;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 + 1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (00000000004124A0) ----------------------------------------------------
int goodB2G_84()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000412529) ----------------------------------------------------
int goodG2B_93()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (000000000041258E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_12_good()
{
  goodB2G_84();
  return goodG2B_93();
}

//----- (00000000004125A8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_53_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53b_badSink(-1);
}

//----- (00000000004125CA) ----------------------------------------------------
int goodG2B_94()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53b_goodG2BSink(2);
}

//----- (00000000004125EC) ----------------------------------------------------
int goodB2G_85()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53b_goodB2GSink(-1);
}

//----- (000000000041260E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_53_good()
{
  goodG2B_94();
  return goodB2G_85();
}

//----- (0000000000412628) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_04_bad()
{
  return printUnsignedLine(1u);
}

//----- (0000000000412666) ----------------------------------------------------
int goodB2G1_50()
{
  return printUnsignedLine(1u);
}

//----- (00000000004126D0) ----------------------------------------------------
int goodB2G2_50()
{
  return printUnsignedLine(1u);
}

//----- (000000000041272E) ----------------------------------------------------
int goodG2B1_41()
{
  return printUnsignedLine(4u);
}

//----- (0000000000412778) ----------------------------------------------------
int goodG2B2_41()
{
  return printUnsignedLine(4u);
}

//----- (00000000004127B6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_04_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (00000000004127E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54d_badSink(a1);
}

//----- (00000000004127FB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54d_goodG2BSink(a1);
}

//----- (0000000000412812) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54d_goodB2GSink(a1);
}

//----- (0000000000412829) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(2 * v2);
  return result;
}

//----- (0000000000412859) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(2 * v2);
  return result;
}

//----- (0000000000412889) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  unsigned int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (00000000004128CE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink((__int64)&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041290E) ----------------------------------------------------
int goodG2B_95()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000412938) ----------------------------------------------------
int goodB2G_86()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_goodB2GSink((__int64)&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000412978) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66_good()
{
  goodG2B_95();
  return goodB2G_86();
}

//----- (0000000000412992) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004129D1) ----------------------------------------------------
int goodB2G1_51()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412A2E) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412A7F) ----------------------------------------------------
int goodG2B1_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412ACA) ----------------------------------------------------
int goodG2B2_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412B09) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_09_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (0000000000412B37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (0000000000412BAB) ----------------------------------------------------
int goodG2B_96()
{
  return printUnsignedLine(4u);
}

//----- (0000000000412BD7) ----------------------------------------------------
int goodB2G_87()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000412C6B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_01_good()
{
  goodG2B_96();
  return goodB2G_87();
}

//----- (0000000000412C85) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData);
  return result;
}
// 65B33C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData;

//----- (0000000000412CB0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData);
  return result;
}
// 65B344: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData;

//----- (0000000000412CDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData )
  {
    if ( (unsigned int)CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData);
  }
  return result;
}
// 65B340: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData;

//----- (0000000000412D1B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000412D40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000412D65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000412D9F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53d_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000412DC0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000412DE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000412E22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_64b_badSink(&v1);
}

//----- (0000000000412E46) ----------------------------------------------------
int goodG2B_97()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_add_64b_goodG2BSink(&v1);
}

//----- (0000000000412E6A) ----------------------------------------------------
int goodB2G_88()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_64b_goodB2GSink(&v1);
}

//----- (0000000000412E8E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_64_good()
{
  goodG2B_97();
  return goodB2G_88();
}

//----- (0000000000412EA8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000412EF1) ----------------------------------------------------
int goodB2G_89()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000412F50) ----------------------------------------------------
int goodG2B_98()
{
  return printUnsignedLine(4u);
}

//----- (0000000000412F82) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_16_good()
{
  goodB2G_89();
  return goodG2B_98();
}

//----- (0000000000412F9C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (0000000000412FD8) ----------------------------------------------------
int goodG2B_99()
{
  return printUnsignedLine(4u);
}

//----- (0000000000413014) ----------------------------------------------------
int goodB2G_90()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413065) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good()
{
  goodG2B_99();
  return goodB2G_90();
}

//----- (000000000041307F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_52c_badSink(a1);
}

//----- (0000000000413096) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_52c_goodG2BSink(a1);
}

//----- (00000000004130AD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_52c_goodB2GSink(a1);
}

//----- (00000000004130C4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000413143) ----------------------------------------------------
int goodG2B_100()
{
  return printUnsignedLine(3u);
}

//----- (000000000041317A) ----------------------------------------------------
int goodB2G_91()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041320B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_34_good()
{
  goodG2B_100();
  return goodB2G_91();
}

//----- (0000000000413225) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000413250) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000041327B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004132B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_52c_badSink(a1);
}

//----- (00000000004132CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_52c_goodG2BSink(a1);
}

//----- (00000000004132E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_52c_goodB2GSink(a1);
}

//----- (00000000004132FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_badSink(a1);
}

//----- (0000000000413314) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_goodG2BSink(a1);
}

//----- (000000000041332B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_goodB2GSink(a1);
}

//----- (0000000000413342) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004133A2) ----------------------------------------------------
int goodB2G1_52()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041342E) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004134AE) ----------------------------------------------------
int goodG2B1_43()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (0000000000413502) ----------------------------------------------------
int goodG2B2_43()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041354A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (0000000000413578) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000041359D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004135C2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (00000000004135FC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_badSink((__int64)&v1);
}

//----- (0000000000413626) ----------------------------------------------------
int goodG2B_101()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000413650) ----------------------------------------------------
int goodB2G_92()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000041367A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_66_good()
{
  goodG2B_101();
  return goodB2G_92();
}

//----- (0000000000413694) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004136B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004136DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000413718) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (0000000000413723) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (000000000041372E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_1();
  if ( result )
    result = printUnsignedLine(v6 * v6);
  return result;
}

//----- (00000000004137BE) ----------------------------------------------------
int goodB2G1_53()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_1() )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}

//----- (000000000041387A) ----------------------------------------------------
int goodB2G2_53()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}

//----- (000000000041392A) ----------------------------------------------------
int goodG2B1_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041397E) ----------------------------------------------------
int goodG2B2_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (00000000004139C6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_08_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (00000000004139F4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000413A2C) ----------------------------------------------------
int goodG2B_102()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_goodG2BSink(2);
}

//----- (0000000000413A4E) ----------------------------------------------------
int goodB2G_93()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000413A86) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_51_good()
{
  goodG2B_102();
  return goodB2G_93();
}

//----- (0000000000413AA0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_badSink();
}
// 65B33C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_badData;

//----- (0000000000413B13) ----------------------------------------------------
int goodG2B_103()
{
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_goodG2BSink();
}
// 65B344: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodG2BData;

//----- (0000000000413B3E) ----------------------------------------------------
int goodB2G_94()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_68b_goodB2GSink();
}
// 65B340: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_goodB2GData;

//----- (0000000000413BB1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_68_good()
{
  goodG2B_103();
  return goodB2G_94();
}

//----- (0000000000413BCB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000413BF0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000413C15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_52c_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000413C4F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_badSink()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_badData
         * CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_badData);
}
// 65B36C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_badData;

//----- (0000000000413C76) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_goodG2BSink()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodG2BData
         * CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodG2BData);
}
// 65B368: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodG2BData;

//----- (0000000000413C9D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData < -65534
    || CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(
               CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData
             * CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData);
  }
  return result;
}
// 65B370: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData;

//----- (0000000000413CE4) ----------------------------------------------------
int badSink_17()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData);
  return result;
}
// 65B204: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData;

//----- (0000000000413D0F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData = v1;
  return badSink_17();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B204: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData;

//----- (0000000000413D50) ----------------------------------------------------
int goodG2BSink_17()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData);
  return result;
}
// 65B208: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData;

//----- (0000000000413D7B) ----------------------------------------------------
int goodG2B_104()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData = 2;
  return goodG2BSink_17();
}
// 65B208: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData;

//----- (0000000000413DA6) ----------------------------------------------------
int goodB2GSink_12()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData )
  {
    if ( (unsigned int)CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData);
  }
  return result;
}
// 65B20C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData;

//----- (0000000000413DE6) ----------------------------------------------------
int goodB2G_95()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData = v1;
  return goodB2GSink_12();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B20C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData;

//----- (0000000000413E27) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good()
{
  goodG2B_104();
  return goodB2G_95();
}

//----- (0000000000413E41) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_52_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_52b_badSink(-1);
}

//----- (0000000000413E63) ----------------------------------------------------
int goodG2B_105()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_52b_goodG2BSink(2);
}

//----- (0000000000413E85) ----------------------------------------------------
int goodB2G_96()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_52b_goodB2GSink(-1);
}

//----- (0000000000413EA7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_52_good()
{
  goodG2B_105();
  return goodB2G_96();
}

//----- (0000000000413EC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000413EE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000413F01) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000413F33) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_66b_badSink((__int64)&v6);
}

//----- (0000000000413FA5) ----------------------------------------------------
int goodG2B_106()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000413FCF) ----------------------------------------------------
int goodB2G_97()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_66b_goodB2GSink((__int64)&v6);
}

//----- (0000000000414041) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_66_good()
{
  goodG2B_106();
  return goodB2G_97();
}

//----- (000000000041405B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_badSink(v2);
}

//----- (00000000004140C5) ----------------------------------------------------
int goodG2B_107()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_goodG2BSink(2);
}

//----- (00000000004140E7) ----------------------------------------------------
int goodB2G_98()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53b_goodB2GSink(v2);
}

//----- (0000000000414151) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_53_good()
{
  goodG2B_107();
  return goodB2G_98();
}

//----- (000000000041416B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041418B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004141AB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004141DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54c_badSink(a1);
}

//----- (00000000004141F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54c_goodG2BSink(a1);
}

//----- (000000000041420B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54c_goodB2GSink(a1);
}

//----- (0000000000414222) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_16_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000041424F) ----------------------------------------------------
int goodB2G_99()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041428E) ----------------------------------------------------
int goodG2B_108()
{
  return printUnsignedLine(3u);
}

//----- (00000000004142BB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_16_good()
{
  goodB2G_99();
  return goodG2B_108();
}

//----- (00000000004142D5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_06_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000414314) ----------------------------------------------------
int goodB2G1_54()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000414371) ----------------------------------------------------
int goodB2G2_54()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004143C2) ----------------------------------------------------
int goodG2B1_45()
{
  return printUnsignedLine(3u);
}

//----- (000000000041440D) ----------------------------------------------------
int goodG2B2_45()
{
  return printUnsignedLine(3u);
}

//----- (000000000041444C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_06_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (000000000041447A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_14_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000414500) ----------------------------------------------------
int goodB2G1_55()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}
// 65B118: using guessed type int globalFive;

//----- (00000000004145B4) ----------------------------------------------------
int goodB2G2_55()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041465C) ----------------------------------------------------
int goodG2B1_46()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004146AE) ----------------------------------------------------
int goodG2B2_46()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004146F4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_14_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (0000000000414722) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_32_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Eh] [rbp-22h]
  __int16 *v6; // [rsp+10h] [rbp-20h]
  __int16 *v7; // [rsp+18h] [rbp-18h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v5 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v5 = v1;
  *v7 = v1;
  return printIntLine((__int16)(*v6 * *v6));
}

//----- (00000000004147C3) ----------------------------------------------------
int goodG2B_109()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printIntLine(4u);
}

//----- (0000000000414824) ----------------------------------------------------
int goodB2G_100()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Ah] [rbp-26h]
  __int16 v6; // [rsp+Ch] [rbp-24h]
  __int16 v7; // [rsp+Eh] [rbp-22h]
  __int16 *v8; // [rsp+10h] [rbp-20h]
  __int16 *v9; // [rsp+18h] [rbp-18h]

  v9 = &v4;
  v8 = &v4;
  v4 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v7 = v1;
  *v9 = v1;
  v6 = *v8;
  if ( v6 < -181 || v6 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 * v6;
  return printIntLine((__int16)(v6 * v6));
}

//----- (00000000004148E7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_32_good()
{
  goodG2B_109();
  return goodB2G_100();
}

//----- (0000000000414901) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000414922) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000414943) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000414984) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004149DB) ----------------------------------------------------
int goodB2G1_56()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000414A52) ----------------------------------------------------
int goodB2G2_56()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000414ABD) ----------------------------------------------------
int goodG2B1_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000414B0A) ----------------------------------------------------
int goodG2B2_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000414B4B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_14_good()
{
  goodB2G1_56();
  goodB2G2_56();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (0000000000414B79) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v4 = v1;
  return printUnsignedLine(*v3 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000414BE5) ----------------------------------------------------
int goodG2B_110()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (0000000000414C3B) ----------------------------------------------------
int goodB2G_101()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v6 = v1;
  v4 = *v5;
  if ( v4 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v3 = v4 + 1;
  return printUnsignedLine(v4 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000414CB9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_good()
{
  goodG2B_110();
  return goodB2G_101();
}

//----- (0000000000414CD3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000414D4D) ----------------------------------------------------
unsigned int goodB2G_102()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000414DDC) ----------------------------------------------------
int goodG2B_111()
{
  return printUnsignedLine(4u);
}

//----- (0000000000414E0E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_18_good()
{
  goodB2G_102();
  return goodG2B_111();
}

//----- (0000000000414E28) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_51_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_51b_badSink(-1);
}

//----- (0000000000414E4A) ----------------------------------------------------
int goodG2B_112()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_51b_goodG2BSink(2);
}

//----- (0000000000414E6C) ----------------------------------------------------
int goodB2G_103()
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_51b_goodB2GSink(-1);
}

//----- (0000000000414E8E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_51_good()
{
  goodG2B_112();
  return goodB2G_103();
}

//----- (0000000000414EA8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000414EE0) ----------------------------------------------------
int goodG2B_113()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_goodG2BSink(2);
}

//----- (0000000000414F02) ----------------------------------------------------
int goodB2G_104()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000414F3A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52_good()
{
  goodG2B_113();
  return goodB2G_104();
}

//----- (0000000000414F54) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000414F8B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000414FC2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  unsigned int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (000000000041500E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54b_badSink(v2);
}

//----- (0000000000415078) ----------------------------------------------------
int goodG2B_114()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54b_goodG2BSink(2);
}

//----- (000000000041509A) ----------------------------------------------------
int goodB2G_105()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_54b_goodB2GSink(v2);
}

//----- (0000000000415104) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_54_good()
{
  goodG2B_114();
  return goodB2G_105();
}

//----- (000000000041511E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000415144) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041516A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004151A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (00000000004151CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (00000000004151F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (0000000000415242) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041527A) ----------------------------------------------------
int goodG2B_115()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_goodG2BSink(2);
}

//----- (000000000041529C) ----------------------------------------------------
int goodB2G_106()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004152D4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_53_good()
{
  goodG2B_115();
  return goodB2G_106();
}

//----- (00000000004152EE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_15_bad()
{
  return printUnsignedLine(1u);
}

//----- (000000000041531C) ----------------------------------------------------
int goodB2G1_57()
{
  return printUnsignedLine(1u);
}

//----- (000000000041536A) ----------------------------------------------------
int goodB2G2_57()
{
  return printUnsignedLine(1u);
}

//----- (00000000004153B8) ----------------------------------------------------
int goodG2B1_48()
{
  return printUnsignedLine(4u);
}

//----- (00000000004153E6) ----------------------------------------------------
int goodG2B2_48()
{
  return printUnsignedLine(4u);
}

//----- (0000000000415414) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_15_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (0000000000415442) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_04_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (00000000004154C4) ----------------------------------------------------
int goodB2G1_58()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000415574) ----------------------------------------------------
int goodB2G2_58()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000415618) ----------------------------------------------------
int goodG2B1_49()
{
  return printIntLine(4u);
}

//----- (0000000000415666) ----------------------------------------------------
int goodG2B2_49()
{
  return printIntLine(4u);
}

//----- (00000000004156A8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_04_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (00000000004156D6) ----------------------------------------------------
int badSink_18()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_add_45_badData + 1);
}
// 65B210: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_45_badData;

//----- (00000000004156FC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_45_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_45_badData = -1;
  return badSink_18();
}
// 65B210: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_45_badData;

//----- (0000000000415727) ----------------------------------------------------
int goodG2BSink_18()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_add_45_goodG2BData + 1);
}
// 65B214: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_45_goodG2BData;

//----- (000000000041574D) ----------------------------------------------------
int goodG2B_116()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_45_goodG2BData = 2;
  return goodG2BSink_18();
}
// 65B214: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_45_goodG2BData;

//----- (0000000000415778) ----------------------------------------------------
int goodB2GSink_13()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_add_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_add_45_goodB2GData + 1);
  return result;
}
// 65B218: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_45_goodB2GData;

//----- (00000000004157B0) ----------------------------------------------------
int goodB2G_107()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_45_goodB2GData = -1;
  return goodB2GSink_13();
}
// 65B218: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_45_goodB2GData;

//----- (00000000004157DB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_45_good()
{
  goodG2B_116();
  return goodB2G_107();
}

//----- (00000000004157F5) ----------------------------------------------------
__int64 badSource_0()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000415808) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_42_bad()
{
  int v0; // eax

  v0 = badSource_0();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000041583A) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 2LL;
}

//----- (000000000041584D) ----------------------------------------------------
int goodG2B_117()
{
  int v0; // eax

  v0 = goodG2BSource_0();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000041587F) ----------------------------------------------------
__int64 goodB2GSource_0()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000415892) ----------------------------------------------------
int goodB2G_108()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_0();
  if ( v1 < -65534 || v1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (00000000004158E4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_42_good()
{
  goodB2G_108();
  return goodG2B_117();
}

//----- (00000000004158FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_65b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041591F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000415940) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000415981) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43CBD0, &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004159D4) ----------------------------------------------------
int goodB2G1_59()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43CBD0, &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000415A47) ----------------------------------------------------
int goodB2G2_59()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43CBD0, &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000415AAE) ----------------------------------------------------
int goodG2B1_50()
{
  return printUnsignedLine(3u);
}

//----- (0000000000415AF7) ----------------------------------------------------
int goodG2B2_50()
{
  return printUnsignedLine(3u);
}

//----- (0000000000415B34) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_04_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (0000000000415B62) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1;
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000415BAF) ----------------------------------------------------
int goodG2B_118()
{
  return printUnsignedLine(3u);
}

//----- (0000000000415BE6) ----------------------------------------------------
int goodB2G_109()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1;
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 + 1;
  return printUnsignedLine(v3 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000415C45) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_31_good()
{
  goodG2B_118();
  return goodB2G_109();
}

//----- (0000000000415C5F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_badSink(a1);
}

//----- (0000000000415C76) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_goodG2BSink(a1);
}

//----- (0000000000415C8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_goodB2GSink(a1);
}

//----- (0000000000415CA4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_badSink(v2);
}

//----- (0000000000415D0E) ----------------------------------------------------
int goodG2B_119()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_goodG2BSink(2);
}

//----- (0000000000415D30) ----------------------------------------------------
int goodB2G_110()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_goodB2GSink(v2);
}

//----- (0000000000415D9A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_52_good()
{
  goodG2B_119();
  return goodB2G_110();
}

//----- (0000000000415DB4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000415DEE) ----------------------------------------------------
int goodG2B_120()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_goodG2BSink(&v1);
}

//----- (0000000000415E12) ----------------------------------------------------
int goodB2G_111()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_goodB2GSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000415E4C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64_good()
{
  goodG2B_120();
  return goodB2G_111();
}

//----- (0000000000415E66) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000415E8B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000415EB0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000415EEA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_rand_square_22_badGlobal )
    result = printIntLine((__int16)(a1 * a1));
  return result;
}
// 65B220: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_badGlobal;

//----- (0000000000415F1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 < -181 || a1 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 * a1));
}
// 65B224: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Global;

//----- (0000000000415F80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global )
  {
    if ( a1 < -181 || a1 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 * a1));
  }
  return result;
}
// 65B228: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global;

//----- (0000000000415FD6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_rand_square_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 * a1));
  return result;
}
// 65B22C: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_goodG2BGlobal;

//----- (000000000041600A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_63b_badSink(&v6);
}

//----- (0000000000416076) ----------------------------------------------------
int goodG2B_121()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_63b_goodG2BSink(&v1);
}

//----- (000000000041609A) ----------------------------------------------------
int goodB2G_112()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_63b_goodB2GSink(&v6);
}

//----- (0000000000416106) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_63_good()
{
  goodG2B_121();
  return goodB2G_112();
}

//----- (0000000000416120) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041615E) ----------------------------------------------------
int goodG2B_122()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_goodG2BSink(2);
}

//----- (0000000000416186) ----------------------------------------------------
int goodB2G_113()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_67b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004161C4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_67_good()
{
  goodG2B_122();
  return goodB2G_113();
}

//----- (00000000004161DE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000416258) ----------------------------------------------------
unsigned int goodB2G_114()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (00000000004162E7) ----------------------------------------------------
int goodG2B_123()
{
  return printUnsignedLine(4u);
}

//----- (0000000000416319) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_good()
{
  goodB2G_114();
  return goodG2B_123();
}

//----- (0000000000416333) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = -1;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E4: using guessed type int staticTrue_3;

//----- (0000000000416373) ----------------------------------------------------
int goodB2G1_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = -1;
  if ( staticFalse_3 )
    result = printLine("Benign, fixed string");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E4: using guessed type int staticTrue_3;
// 65B21C: using guessed type int staticFalse_3;

//----- (00000000004163DF) ----------------------------------------------------
int goodB2G2_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = -1;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E4: using guessed type int staticTrue_3;

//----- (000000000041643F) ----------------------------------------------------
int goodG2B1_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E4: using guessed type int staticTrue_3;
// 65B21C: using guessed type int staticFalse_3;

//----- (000000000041648B) ----------------------------------------------------
int goodG2B2_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0E4: using guessed type int staticTrue_3;

//----- (00000000004164CB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_05_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (00000000004164F9) ----------------------------------------------------
int __fastcall badSink_19(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041651A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_41_bad()
{
  return badSink_19(-1);
}

//----- (000000000041653C) ----------------------------------------------------
int __fastcall goodG2BSink_19(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041655D) ----------------------------------------------------
int goodG2B_124()
{
  return goodG2BSink_19(2);
}

//----- (000000000041657F) ----------------------------------------------------
int __fastcall goodB2GSink_14(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (00000000004165C0) ----------------------------------------------------
int goodB2G_115()
{
  return goodB2GSink_14(-1);
}

//----- (00000000004165E2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_41_good()
{
  goodB2G_115();
  return goodG2B_124();
}

//----- (00000000004165FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041662E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000416660) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (00000000004166A4) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_square_65b_badSink)(v2);
}

//----- (0000000000416717) ----------------------------------------------------
int goodG2B_125()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_65b_goodG2BSink(2);
}

//----- (0000000000416742) ----------------------------------------------------
__int64 goodB2G_116()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_square_65b_goodB2GSink)(v2);
}

//----- (00000000004167B5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_65_good()
{
  goodG2B_125();
  return goodB2G_116();
}

//----- (00000000004167CF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_68b_badSink()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_rand_square_68_badData
         * CWE190_Integer_Overflow__unsigned_int_rand_square_68_badData);
}
// 65B350: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_68_badData;

//----- (00000000004167F6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_68b_goodG2BSink()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodG2BData
         * CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodG2BData);
}
// 65B34C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodG2BData;

//----- (000000000041681D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData < -65534
    || CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(
               CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData
             * CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData);
  }
  return result;
}
// 65B348: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData;

//----- (0000000000416864) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (00000000004168DC) ----------------------------------------------------
int goodG2B_126()
{
  return printUnsignedLine(4u);
}

//----- (000000000041690C) ----------------------------------------------------
unsigned int goodB2G_117()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000416999) ----------------------------------------------------
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_good()
{
  goodG2B_126();
  return goodB2G_117();
}

//----- (00000000004169B3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_16_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (00000000004169E5) ----------------------------------------------------
int goodB2G_118()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416A2C) ----------------------------------------------------
int goodG2B_127()
{
  return printUnsignedLine(4u);
}

//----- (0000000000416A5E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_16_good()
{
  goodB2G_118();
  return goodG2B_127();
}

//----- (0000000000416A78) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_badSink(v2);
}

//----- (0000000000416AE2) ----------------------------------------------------
int goodG2B_128()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_goodG2BSink(2);
}

//----- (0000000000416B04) ----------------------------------------------------
int goodB2G_119()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_51b_goodB2GSink(v2);
}

//----- (0000000000416B6E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_51_good()
{
  goodG2B_128();
  return goodB2G_119();
}

//----- (0000000000416B88) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_34_bad()
{
  return printUnsignedLine(1u);
}

//----- (0000000000416BC0) ----------------------------------------------------
int goodG2B_129()
{
  return printUnsignedLine(4u);
}

//----- (0000000000416BF8) ----------------------------------------------------
int goodB2G_120()
{
  return printUnsignedLine(1u);
}

//----- (0000000000416C50) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_34_good()
{
  goodG2B_129();
  return goodB2G_120();
}

//----- (0000000000416C6A) ----------------------------------------------------
__int64 badSource_1()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000416C7D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_42_bad()
{
  int v0; // eax

  v0 = badSource_1();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000416CAE) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 2LL;
}

//----- (0000000000416CC1) ----------------------------------------------------
int goodG2B_130()
{
  int v0; // eax

  v0 = goodG2BSource_1();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000416CF2) ----------------------------------------------------
__int64 goodB2GSource_1()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000416D05) ----------------------------------------------------
int goodB2G_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_1();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000416D48) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_42_good()
{
  goodB2G_121();
  return goodG2B_130();
}

//----- (0000000000416D62) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_22_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_rand_square_22_badSink(v1);
}
// 65B220: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_badGlobal;

//----- (0000000000416DCD) ----------------------------------------------------
int goodB2G1_61()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Sink(v1);
}
// 65B224: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Global;

//----- (0000000000416E38) ----------------------------------------------------
int goodB2G2_61()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Sink(v1);
}
// 65B228: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global;

//----- (0000000000416EA3) ----------------------------------------------------
int goodG2B_131()
{
  CWE190_Integer_Overflow__short_rand_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_rand_square_22_goodG2BSink(2);
}
// 65B22C: using guessed type int CWE190_Integer_Overflow__short_rand_square_22_goodG2BGlobal;

//----- (0000000000416ECE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_22_good()
{
  goodB2G1_61();
  goodB2G2_61();
  return goodG2B_131();
}

//----- (0000000000416EF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000416F1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000416F4A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000416F96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_53d_badSink(a1);
}

//----- (0000000000416FB1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_53d_goodG2BSink(a1);
}

//----- (0000000000416FCC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_53d_goodB2GSink(a1);
}

//----- (0000000000416FE7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000417008) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000417029) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000041706A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B230: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_badGlobal;

//----- (00000000004170AC) ----------------------------------------------------
int goodB2G1_62()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B234: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G1Global;

//----- (00000000004170EE) ----------------------------------------------------
int goodB2G2_62()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Sink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B238: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodB2G2Global;

//----- (0000000000417130) ----------------------------------------------------
int goodG2B_132()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BSink(2);
}
// 65B23C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_goodG2BGlobal;

//----- (000000000041715C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_22_good()
{
  goodB2G1_62();
  goodB2G2_62();
  return goodG2B_132();
}

//----- (0000000000417180) ----------------------------------------------------
int badSink_20()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData);
  return result;
}
// 65B240: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData;

//----- (00000000004171AB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData = v2;
  return badSink_20();
}
// 65B240: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_badData;

//----- (000000000041721E) ----------------------------------------------------
int goodG2BSink_20()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData);
  return result;
}
// 65B244: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData;

//----- (0000000000417249) ----------------------------------------------------
int goodG2B_133()
{
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData = 2;
  return goodG2BSink_20();
}
// 65B244: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodG2BData;

//----- (0000000000417274) ----------------------------------------------------
int goodB2GSink_15()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData )
  {
    if ( (unsigned int)CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData);
  }
  return result;
}
// 65B248: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData;

//----- (00000000004172B4) ----------------------------------------------------
int goodB2G_122()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData = v2;
  return goodB2GSink_15();
}
// 65B248: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_goodB2GData;

//----- (0000000000417327) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_45_good()
{
  goodG2B_133();
  return goodB2G_122();
}

//----- (0000000000417341) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000417387) ----------------------------------------------------
int goodB2G_123()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004173ED) ----------------------------------------------------
int goodG2B_134()
{
  return printUnsignedLine(4u);
}

//----- (000000000041741B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_16_good()
{
  goodB2G_123();
  return goodG2B_134();
}

//----- (0000000000417435) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_01_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (0000000000417465) ----------------------------------------------------
int goodG2B_135()
{
  return printUnsignedLine(4u);
}

//----- (0000000000417495) ----------------------------------------------------
int goodB2G_124()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004174DA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_01_good()
{
  goodG2B_135();
  return goodB2G_124();
}

//----- (00000000004174F4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041753A) ----------------------------------------------------
int goodB2G1_63()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004175A1) ----------------------------------------------------
int goodB2G2_63()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004175FC) ----------------------------------------------------
int goodG2B1_52()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041764E) ----------------------------------------------------
int goodG2B2_52()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000417694) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_14_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (00000000004176C2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54e_badSink(a1);
}

//----- (00000000004176DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54e_goodG2BSink(a1);
}

//----- (00000000004176F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54e_goodB2GSink(a1);
}

//----- (0000000000417713) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  result = 5;
  if ( v6 )
    result = printUnsignedLine(2 * v6);
  return result;
}

//----- (000000000041779F) ----------------------------------------------------
int goodB2G1_64()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  result = 5;
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (000000000041784C) ----------------------------------------------------
int goodB2G2_64()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  result = 5;
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (00000000004178ED) ----------------------------------------------------
int goodG2B1_53()
{
  return printUnsignedLine(4u);
}

//----- (000000000041793D) ----------------------------------------------------
int goodG2B2_53()
{
  return printUnsignedLine(4u);
}

//----- (0000000000417981) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_06_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (00000000004179AF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = -1;
  v1 = -1;
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (0000000000417A0A) ----------------------------------------------------
int goodG2B_136()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printUnsignedLine(4u);
}

//----- (0000000000417A65) ----------------------------------------------------
int goodB2G_125()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = -1;
  v1 = -1;
  v2 = -1;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000417AD5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_32_good()
{
  goodG2B_136();
  return goodB2G_125();
}

//----- (0000000000417AEF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000417B14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000417B39) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_65b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000417B73) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_badSink(a1);
}

//----- (0000000000417B8A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_goodG2BSink(a1);
}

//----- (0000000000417BA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_goodB2GSink(a1);
}

//----- (0000000000417BB8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53c_badSink(a1);
}

//----- (0000000000417BCF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53c_goodG2BSink(a1);
}

//----- (0000000000417BE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53c_goodB2GSink(a1);
}

//----- (0000000000417BFD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000417C28) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000417C53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  result = a1;
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000417C93) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_66b_badSink((__int64)&v1);
}

//----- (0000000000417CBD) ----------------------------------------------------
int goodG2B_137()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_square_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000417CE7) ----------------------------------------------------
int goodB2G_126()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000417D11) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_66_good()
{
  goodG2B_137();
  return goodB2G_126();
}

//----- (0000000000417D2B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52c_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000417D4C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000417D6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000417DAE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_64b_badSink(&v6);
}

//----- (0000000000417E1A) ----------------------------------------------------
int goodG2B_138()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_64b_goodG2BSink(&v1);
}

//----- (0000000000417E3E) ----------------------------------------------------
int goodB2G_127()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_64b_goodB2GSink(&v6);
}

//----- (0000000000417EAA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_64_good()
{
  goodG2B_138();
  return goodB2G_127();
}

//----- (0000000000417EC4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000417EFC) ----------------------------------------------------
int goodG2B_139()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_goodG2BSink(2);
}

//----- (0000000000417F1E) ----------------------------------------------------
int goodB2G_128()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_51b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000417F56) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_51_good()
{
  goodG2B_139();
  return goodB2G_128();
}

//----- (0000000000417F70) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_68_badData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_68b_badSink();
}
// 65B350: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_68_badData;

//----- (0000000000417FE3) ----------------------------------------------------
int goodG2B_140()
{
  CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_68b_goodG2BSink();
}
// 65B34C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodG2BData;

//----- (000000000041800E) ----------------------------------------------------
int goodB2G_129()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_68b_goodB2GSink();
}
// 65B348: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_68_goodB2GData;

//----- (0000000000418081) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_68_good()
{
  goodG2B_140();
  return goodB2G_129();
}

//----- (000000000041809B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000418110) ----------------------------------------------------
int goodB2G1_65()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000418197) ----------------------------------------------------
int goodB2G2_65()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041821E) ----------------------------------------------------
int goodG2B1_54()
{
  return printUnsignedLine(3u);
}

//----- (000000000041824B) ----------------------------------------------------
int goodG2B2_54()
{
  return printUnsignedLine(3u);
}

//----- (0000000000418278) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_15_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (00000000004182A6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printUnsignedLine(*v8 + 1);
}

//----- (0000000000418344) ----------------------------------------------------
int goodG2B_141()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (000000000041839A) ----------------------------------------------------
int goodB2G_130()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+4h] [rbp-2Ch]
  int v8; // [rsp+8h] [rbp-28h]
  int v9; // [rsp+Ch] [rbp-24h]
  int *v10; // [rsp+10h] [rbp-20h]
  int *v11; // [rsp+18h] [rbp-18h]

  v11 = &v6;
  v10 = &v6;
  v6 = 0;
  v9 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v9 = v2;
  *v11 = v2;
  v8 = *v10;
  if ( v8 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v7 = v8 + 1;
  return printUnsignedLine(v8 + 1);
}

//----- (000000000041844A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_32_good()
{
  goodG2B_141();
  return goodB2G_130();
}

//----- (0000000000418464) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_badSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041849E) ----------------------------------------------------
int goodG2B_142()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_goodG2BSink(&v1);
}

//----- (00000000004184C2) ----------------------------------------------------
int goodB2G_131()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_63b_goodB2GSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004184FC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_63_good()
{
  goodG2B_142();
  return goodB2G_131();
}

//----- (0000000000418516) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_04_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (0000000000418558) ----------------------------------------------------
int goodB2G1_66()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004185BB) ----------------------------------------------------
int goodB2G2_66()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000418612) ----------------------------------------------------
int goodG2B1_55()
{
  return printUnsignedLine(4u);
}

//----- (0000000000418660) ----------------------------------------------------
int goodG2B2_55()
{
  return printUnsignedLine(4u);
}

//----- (00000000004186A2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_04_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (00000000004186D0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_31_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (000000000041870C) ----------------------------------------------------
int goodG2B_143()
{
  return printUnsignedLine(4u);
}

//----- (0000000000418748) ----------------------------------------------------
int goodB2G_132()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000418799) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_31_good()
{
  goodG2B_143();
  return goodB2G_132();
}

//----- (00000000004187B3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (00000000004187EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000418821) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  unsigned int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (000000000041886D) ----------------------------------------------------
int badSink_21()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_badData
         * CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_badData);
}
// 65B24C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_badData;

//----- (0000000000418894) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_badData = v1;
  return badSink_21();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B24C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_badData;

//----- (00000000004188D5) ----------------------------------------------------
int goodG2BSink_21()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodG2BData
         * CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodG2BData);
}
// 65B250: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodG2BData;

//----- (00000000004188FC) ----------------------------------------------------
int goodG2B_144()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodG2BData = 2;
  return goodG2BSink_21();
}
// 65B250: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodG2BData;

//----- (0000000000418927) ----------------------------------------------------
int goodB2GSink_16()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData < -65534
    || CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(
               CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData
             * CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData);
  }
  return result;
}
// 65B254: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData;

//----- (000000000041896E) ----------------------------------------------------
int goodB2G_133()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData = v1;
  return goodB2GSink_16();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B254: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_goodB2GData;

//----- (00000000004189AF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_45_good()
{
  goodG2B_144();
  return goodB2G_133();
}

//----- (00000000004189C9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_03_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (0000000000418A39) ----------------------------------------------------
int goodB2G1_67()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000418ACB) ----------------------------------------------------
int goodB2G2_67()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000418B5D) ----------------------------------------------------
int goodG2B1_56()
{
  return printIntLine(4u);
}

//----- (0000000000418B8D) ----------------------------------------------------
int goodG2B2_56()
{
  return printIntLine(4u);
}

//----- (0000000000418BBD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_03_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (0000000000418BEB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53b_badSink(v2);
}

//----- (0000000000418C55) ----------------------------------------------------
int goodG2B_145()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53b_goodG2BSink(2);
}

//----- (0000000000418C77) ----------------------------------------------------
int goodB2G_134()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53b_goodB2GSink(v2);
}

//----- (0000000000418CE1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_53_good()
{
  goodG2B_145();
  return goodB2G_134();
}

//----- (0000000000418CFB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43D37C, &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000418D53) ----------------------------------------------------
int goodB2G1_68()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43D37C, &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000418DD7) ----------------------------------------------------
int goodB2G2_68()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_43D37C, &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000418E4F) ----------------------------------------------------
int goodG2B1_57()
{
  return printUnsignedLine(4u);
}

//----- (0000000000418E9B) ----------------------------------------------------
int goodG2B2_57()
{
  return printUnsignedLine(4u);
}

//----- (0000000000418EDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_06_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (0000000000418F09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000418F38) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (0000000000418F67) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  unsigned int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (0000000000418FAB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_67_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_badSink(-1);
}

//----- (0000000000418FD3) ----------------------------------------------------
int goodG2B_146()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_goodG2BSink(2);
}

//----- (0000000000418FFB) ----------------------------------------------------
int goodB2G_135()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_67b_goodB2GSink(0xFFFFFFFF);
}

//----- (0000000000419023) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_67_good()
{
  goodG2B_146();
  return goodB2G_135();
}

//----- (000000000041903D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000419081) ----------------------------------------------------
int goodB2G1_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004190E6) ----------------------------------------------------
int goodB2G2_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041913F) ----------------------------------------------------
int goodG2B1_58()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041918F) ----------------------------------------------------
int goodG2B2_58()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004191D3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_09_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (0000000000419201) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_18_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (0000000000419273) ----------------------------------------------------
int goodB2G_136()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000419307) ----------------------------------------------------
int goodG2B_147()
{
  return printIntLine(4u);
}

//----- (0000000000419339) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_18_good()
{
  goodB2G_136();
  return goodG2B_147();
}

//----- (0000000000419353) ----------------------------------------------------
int __fastcall badSink_22(int a1)
{
  int result; // eax

  result = badStatic_4;
  if ( badStatic_4 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B258: using guessed type int badStatic_4;

//----- (000000000041937D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  badStatic_4 = 1;
  return badSink_22(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B258: using guessed type int badStatic_4;

//----- (00000000004193BF) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(int a1)
{
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 65B25C: using guessed type int goodB2G1Static_4;

//----- (0000000000419407) ----------------------------------------------------
int goodB2G1_70()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B25C: using guessed type int goodB2G1Static_4;

//----- (0000000000419449) ----------------------------------------------------
int __fastcall goodB2G2Sink_4(int a1)
{
  int result; // eax

  result = goodB2G2Static_4;
  if ( goodB2G2Static_4 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 65B260: using guessed type int goodB2G2Static_4;

//----- (0000000000419485) ----------------------------------------------------
int goodB2G2_70()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B260: using guessed type int goodB2G2Static_4;

//----- (00000000004194C7) ----------------------------------------------------
int __fastcall goodG2BSink_22(int a1)
{
  int result; // eax

  result = goodG2BStatic_4;
  if ( goodG2BStatic_4 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B264: using guessed type int goodG2BStatic_4;

//----- (00000000004194F1) ----------------------------------------------------
int goodG2B_148()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_22(2);
}
// 65B264: using guessed type int goodG2BStatic_4;

//----- (000000000041951D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_good()
{
  goodB2G1_70();
  goodB2G2_70();
  return goodG2B_148();
}

//----- (0000000000419541) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000419582) ----------------------------------------------------
int goodB2G1_71()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004195D7) ----------------------------------------------------
int goodB2G2_71()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041962C) ----------------------------------------------------
int goodG2B1_59()
{
  return printUnsignedLine(3u);
}

//----- (0000000000419657) ----------------------------------------------------
int goodG2B2_59()
{
  return printUnsignedLine(3u);
}

//----- (0000000000419682) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_03_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (00000000004196B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badGlobal )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B268: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badGlobal;

//----- (00000000004196DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Sink(unsigned int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B26C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Global;

//----- (000000000041972F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Sink(unsigned int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Global && a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B270: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Global;

//----- (0000000000419773) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BGlobal )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B274: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BGlobal;

//----- (00000000004197A2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000419827) ----------------------------------------------------
int goodB2G1_72()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004198CA) ----------------------------------------------------
int goodB2G2_72()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000419961) ----------------------------------------------------
int goodG2B1_60()
{
  return printUnsignedLine(3u);
}

//----- (00000000004199AA) ----------------------------------------------------
int goodG2B2_60()
{
  return printUnsignedLine(3u);
}

//----- (00000000004199E7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_04_good()
{
  goodB2G1_72();
  goodB2G2_72();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (0000000000419A15) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000419A94) ----------------------------------------------------
int goodG2B_149()
{
  return printUnsignedLine(3u);
}

//----- (0000000000419ACB) ----------------------------------------------------
int goodB2G_137()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000419B5C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_31_good()
{
  goodG2B_149();
  return goodB2G_137();
}

//----- (0000000000419B76) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000419BB9) ----------------------------------------------------
int goodB2G_138()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000419C10) ----------------------------------------------------
int goodG2B_150()
{
  return printUnsignedLine(3u);
}

//----- (0000000000419C3D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_18_good()
{
  goodB2G_138();
  return goodG2B_150();
}

//----- (0000000000419C57) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_badSink(&v6);
}

//----- (0000000000419CC3) ----------------------------------------------------
int goodG2B_151()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_goodG2BSink(&v1);
}

//----- (0000000000419CE7) ----------------------------------------------------
int goodB2G_139()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_64b_goodB2GSink(&v6);
}

//----- (0000000000419D53) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_64_good()
{
  goodG2B_151();
  return goodB2G_139();
}

//----- (0000000000419D6D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  else if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000419E39) ----------------------------------------------------
int goodB2G_140()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  unsigned int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v11 )
    {
      if ( v11 > 0x7FFFFFFE )
        result = printLine("data value is too large to perform arithmetic safely.");
      else
        result = printUnsignedLine(2 * v11);
    }
  }
  else if ( v11 )
  {
    if ( v11 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v11);
  }
  return result;
}

//----- (0000000000419F5C) ----------------------------------------------------
int goodG2B_152()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(4u);
}

//----- (0000000000419FCB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_12_good()
{
  goodB2G_140();
  return goodG2B_152();
}

//----- (0000000000419FE5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_12_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  else
  {
    v4 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v4 * v4));
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}

//----- (000000000041A0B7) ----------------------------------------------------
int goodB2G_141()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int v3; // ebx
  int v4; // eax
  int v5; // ebx
  int result; // eax
  __int16 v7; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v7 = v1;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      v3 = rand() << 15;
      LOWORD(v4) = v3 ^ rand();
    }
    else
    {
      rand();
      v5 = rand() << 15;
      v4 = ~(v5 ^ rand());
    }
    v7 = v4;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 < -181 || v7 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v7 * v7));
  }
  else if ( v7 < -181 || v7 > 181 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v7 * v7));
  }
  return result;
}

//----- (000000000041A1E6) ----------------------------------------------------
int goodG2B_153()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (000000000041A256) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_12_good()
{
  goodB2G_141();
  return goodG2B_153();
}

//----- (000000000041A270) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_06_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (000000000041A2B4) ----------------------------------------------------
int goodB2G1_73()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041A319) ----------------------------------------------------
int goodB2G2_73()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041A372) ----------------------------------------------------
int goodG2B1_61()
{
  return printUnsignedLine(4u);
}

//----- (000000000041A3C2) ----------------------------------------------------
int goodG2B2_61()
{
  return printUnsignedLine(4u);
}

//----- (000000000041A406) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_06_good()
{
  goodB2G1_73();
  goodB2G2_73();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (000000000041A434) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_badSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041A46E) ----------------------------------------------------
int goodG2B_154()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000041A492) ----------------------------------------------------
int goodB2G_142()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63b_goodB2GSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041A4CC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_63_good()
{
  goodG2B_154();
  return goodB2G_142();
}

//----- (000000000041A4E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000041A519) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000041A54C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000041A59F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%u", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v3 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  else if ( v1 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041A62E) ----------------------------------------------------
int goodB2G_143()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  else if ( v1 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041A6E7) ----------------------------------------------------
int goodG2B_155()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (000000000041A74C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_12_good()
{
  goodB2G_143();
  return goodG2B_155();
}

//----- (000000000041A766) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v6 * v6);
  return result;
}

//----- (000000000041A7F6) ----------------------------------------------------
int goodB2G1_74()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}

//----- (000000000041A8B2) ----------------------------------------------------
int goodB2G2_74()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}

//----- (000000000041A962) ----------------------------------------------------
int goodG2B1_62()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041A9B6) ----------------------------------------------------
int goodG2B2_62()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041A9FE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_11_good()
{
  goodB2G1_74();
  goodB2G2_74();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (000000000041AA2C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_add_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B27C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_badGlobal;

//----- (000000000041AA56) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 65B280: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Global;

//----- (000000000041AA9E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 65B284: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Global;

//----- (000000000041AADA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B288: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BGlobal;

//----- (000000000041AB04) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badSink(-1);
}
// 65B268: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_badGlobal;

//----- (000000000041AB30) ----------------------------------------------------
int goodB2G1_75()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Sink(0xFFFFFFFF);
}
// 65B26C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G1Global;

//----- (000000000041AB5C) ----------------------------------------------------
int goodB2G2_75()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Sink(0xFFFFFFFF);
}
// 65B270: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodB2G2Global;

//----- (000000000041AB88) ----------------------------------------------------
int goodG2B_156()
{
  CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BSink(2);
}
// 65B274: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_goodG2BGlobal;

//----- (000000000041ABB4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_22_good()
{
  goodB2G1_75();
  goodB2G2_75();
  return goodG2B_156();
}

//----- (000000000041ABD8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_63b_badSink(&v1);
}

//----- (000000000041ABFC) ----------------------------------------------------
int goodG2B_157()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_add_63b_goodG2BSink(&v1);
}

//----- (000000000041AC20) ----------------------------------------------------
int goodB2G_144()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_63b_goodB2GSink(&v1);
}

//----- (000000000041AC44) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_63_good()
{
  goodG2B_157();
  return goodB2G_144();
}

//----- (000000000041AC5E) ----------------------------------------------------
__int64 badSource_2()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000041ACBD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_42_bad()
{
  int v0; // eax

  v0 = badSource_2();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000041ACEF) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 2LL;
}

//----- (000000000041AD02) ----------------------------------------------------
int goodG2B_158()
{
  int v0; // eax

  v0 = goodG2BSource_2();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000041AD34) ----------------------------------------------------
__int64 goodB2GSource_2()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000041AD93) ----------------------------------------------------
int goodB2G_145()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_2();
  if ( v1 < -65534 || v1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041ADE5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_42_good()
{
  goodB2G_145();
  return goodG2B_158();
}

//----- (000000000041ADFF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041AE29) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041AE53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000041AE8F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_11_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}

//----- (000000000041AF1B) ----------------------------------------------------
int goodB2G1_76()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}

//----- (000000000041AFD5) ----------------------------------------------------
int goodB2G2_76()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}

//----- (000000000041B083) ----------------------------------------------------
int goodG2B1_63()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000041B0DB) ----------------------------------------------------
int goodG2B2_63()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000041B127) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_11_good()
{
  goodB2G1_76();
  goodB2G2_76();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041B155) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_02_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (000000000041B1C5) ----------------------------------------------------
int goodB2G1_77()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000041B257) ----------------------------------------------------
int goodB2G2_77()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000041B2E9) ----------------------------------------------------
int goodG2B1_64()
{
  return printIntLine(4u);
}

//----- (000000000041B319) ----------------------------------------------------
int goodG2B2_64()
{
  return printIntLine(4u);
}

//----- (000000000041B349) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_02_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041B377) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_4 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 65B0E8: using guessed type int staticTrue_4;

//----- (000000000041B3FE) ----------------------------------------------------
int goodB2G1_78()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_4 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 65B0E8: using guessed type int staticTrue_4;
// 65B278: using guessed type int staticFalse_4;

//----- (000000000041B4A3) ----------------------------------------------------
int goodB2G2_78()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_4 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 65B0E8: using guessed type int staticTrue_4;

//----- (000000000041B53C) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0E8: using guessed type int staticTrue_4;
// 65B278: using guessed type int staticFalse_4;

//----- (000000000041B587) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0E8: using guessed type int staticTrue_4;

//----- (000000000041B5C6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_05_good()
{
  goodB2G1_78();
  goodB2G2_78();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041B5F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink(a1);
}

//----- (000000000041B60B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_goodG2BSink(a1);
}

//----- (000000000041B622) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_goodB2GSink(a1);
}

//----- (000000000041B639) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_52b_badSink(v2);
}

//----- (000000000041B6A3) ----------------------------------------------------
int goodG2B_159()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_52b_goodG2BSink(2);
}

//----- (000000000041B6C5) ----------------------------------------------------
int goodB2G_146()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_52b_goodB2GSink(v2);
}

//----- (000000000041B72F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_52_good()
{
  goodG2B_159();
  return goodB2G_146();
}

//----- (000000000041B749) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_badSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041B783) ----------------------------------------------------
int goodG2B_160()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_goodG2BSink(&v1);
}

//----- (000000000041B7A7) ----------------------------------------------------
int goodB2G_147()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_64b_goodB2GSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041B7E1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_64_good()
{
  goodG2B_160();
  return goodB2G_147();
}

//----- (000000000041B7FB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041B858) ----------------------------------------------------
int goodB2G1_79()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041B8D5) ----------------------------------------------------
int goodB2G2_79()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041B946) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041B999) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041B9E0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_11_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041BA0E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_51b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041BA2F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041BA50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000041BA91) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_22_badSink(v2);
}
// 65B27C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_badGlobal;

//----- (000000000041BB05) ----------------------------------------------------
int goodB2G1_80()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Sink(v2);
}
// 65B280: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G1Global;

//----- (000000000041BB79) ----------------------------------------------------
int goodB2G2_80()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Sink(v2);
}
// 65B284: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodB2G2Global;

//----- (000000000041BBED) ----------------------------------------------------
int goodG2B_161()
{
  CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BSink(2);
}
// 65B288: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_add_22_goodG2BGlobal;

//----- (000000000041BC19) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_22_good()
{
  goodB2G1_80();
  goodB2G2_80();
  return goodG2B_161();
}

//----- (000000000041BC3D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_10_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041BCC1) ----------------------------------------------------
int goodB2G1_81()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000041BD73) ----------------------------------------------------
int goodB2G2_81()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041BE19) ----------------------------------------------------
int goodG2B1_67()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000041BE69) ----------------------------------------------------
int goodG2B2_67()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041BEAD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_10_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000041BEDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (000000000041BF51) ----------------------------------------------------
int goodB2G_148()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000041BFE7) ----------------------------------------------------
int goodG2B_162()
{
  return printUnsignedLine(4u);
}

//----- (000000000041C015) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_16_good()
{
  goodB2G_148();
  return goodG2B_162();
}

//----- (000000000041C02F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041C075) ----------------------------------------------------
int goodB2G1_82()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041C0DC) ----------------------------------------------------
int goodB2G2_82()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041C137) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041C189) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041C1CF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_13_good()
{
  goodB2G1_82();
  goodB2G2_82();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000041C1FD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C235) ----------------------------------------------------
int goodG2B_163()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_goodG2BSink(2);
}

//----- (000000000041C257) ----------------------------------------------------
int goodB2G_149()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C28F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_53_good()
{
  goodG2B_163();
  return goodB2G_149();
}

//----- (000000000041C2A9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C316) ----------------------------------------------------
int goodB2G_150()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C399) ----------------------------------------------------
int goodG2B_164()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000041C3EF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_good()
{
  goodB2G_150();
  return goodG2B_164();
}

//----- (000000000041C409) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54d_badSink(a1);
}

//----- (000000000041C424) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54d_goodG2BSink(a1);
}

//----- (000000000041C43F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54d_goodB2GSink(a1);
}

//----- (000000000041C45A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C4AF) ----------------------------------------------------
int goodB2G1_83()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;
// 65B308: using guessed type int globalFalse;

//----- (000000000041C524) ----------------------------------------------------
int goodB2G2_83()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C58D) ----------------------------------------------------
int goodG2B1_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000041C5D8) ----------------------------------------------------
int goodG2B2_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041C617) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_10_good()
{
  goodB2G1_83();
  goodB2G2_83();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (000000000041C645) ----------------------------------------------------
int __fastcall badSink_23(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000041C66A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_23;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C6AB) ----------------------------------------------------
int __fastcall goodG2BSink_23(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000041C6D0) ----------------------------------------------------
int goodG2B_165()
{
  return goodG2BSink_23(2);
}

//----- (000000000041C6FB) ----------------------------------------------------
int __fastcall goodB2GSink_17(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000041C735) ----------------------------------------------------
__int64 goodB2G_151()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(unsigned int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_17;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041C776) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_44_good()
{
  goodG2B_165();
  return goodB2G_151();
}

//----- (000000000041C790) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_01_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (000000000041C800) ----------------------------------------------------
int goodG2B_166()
{
  return printIntLine(4u);
}

//----- (000000000041C830) ----------------------------------------------------
int goodB2G_152()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (000000000041C8C2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_01_good()
{
  goodG2B_166();
  return goodB2G_152();
}

//----- (000000000041C8DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (000000000041C906) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (000000000041C930) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (000000000041C97C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_badSink(a1);
}

//----- (000000000041C993) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_goodG2BSink(a1);
}

//----- (000000000041C9AA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54d_goodB2GSink(a1);
}

//----- (000000000041C9C1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041CA02) ----------------------------------------------------
int goodG2B_167()
{
  return printUnsignedLine(3u);
}

//----- (000000000041CA2D) ----------------------------------------------------
int goodB2G_153()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041CA82) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_good()
{
  goodG2B_167();
  return goodB2G_153();
}

//----- (000000000041CA9C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_51b_badSink(v2);
}

//----- (000000000041CB06) ----------------------------------------------------
int goodG2B_168()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_51b_goodG2BSink(2);
}

//----- (000000000041CB28) ----------------------------------------------------
int goodB2G_154()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_51b_goodB2GSink(v2);
}

//----- (000000000041CB92) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_51_good()
{
  goodG2B_168();
  return goodB2G_154();
}

//----- (000000000041CBAC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041CC35) ----------------------------------------------------
int goodB2G1_84()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041CCDC) ----------------------------------------------------
int goodB2G2_84()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041CD77) ----------------------------------------------------
int goodG2B1_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041CDC4) ----------------------------------------------------
int goodG2B2_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041CE05) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_13_good()
{
  goodB2G1_84();
  goodB2G2_84();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (000000000041CE33) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041CE60) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041CE73) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041CEA0) ----------------------------------------------------
int __fastcall badSink_24(int a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B28C: using guessed type int badStatic_5;

//----- (000000000041CECF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_21_bad()
{
  badStatic_5 = 1;
  return badSink_24(-1);
}
// 65B28C: using guessed type int badStatic_5;

//----- (000000000041CEFB) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(unsigned int a1)
{
  int result; // eax

  result = goodB2G1Static_5;
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B290: using guessed type int goodB2G1Static_5;

//----- (000000000041CF4B) ----------------------------------------------------
int goodB2G1_85()
{
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(0xFFFFFFFF);
}
// 65B290: using guessed type int goodB2G1Static_5;

//----- (000000000041CF77) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(unsigned int a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 && a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B294: using guessed type int goodB2G2Static_5;

//----- (000000000041CFBB) ----------------------------------------------------
int goodB2G2_85()
{
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(0xFFFFFFFF);
}
// 65B294: using guessed type int goodB2G2Static_5;

//----- (000000000041CFE7) ----------------------------------------------------
int __fastcall goodG2BSink_24(int a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
  {
    if ( a1 )
      result = printUnsignedLine(2 * a1);
  }
  return result;
}
// 65B298: using guessed type int goodG2BStatic_5;

//----- (000000000041D016) ----------------------------------------------------
int goodG2B_169()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_24(2);
}
// 65B298: using guessed type int goodG2BStatic_5;

//----- (000000000041D042) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_21_good()
{
  goodB2G1_85();
  goodB2G2_85();
  return goodG2B_169();
}

//----- (000000000041D066) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_03_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (000000000041D096) ----------------------------------------------------
int goodB2G1_86()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041D0DB) ----------------------------------------------------
int goodB2G2_86()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041D120) ----------------------------------------------------
int goodG2B1_71()
{
  return printUnsignedLine(4u);
}

//----- (000000000041D150) ----------------------------------------------------
int goodG2B2_71()
{
  return printUnsignedLine(4u);
}

//----- (000000000041D180) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_03_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (000000000041D1AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_badSink(a1);
}

//----- (000000000041D1C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_goodG2BSink(a1);
}

//----- (000000000041D1DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_52b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_52c_goodB2GSink(a1);
}

//----- (000000000041D1F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_badSink(a1);
}

//----- (000000000041D20A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_goodG2BSink(a1);
}

//----- (000000000041D221) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_goodB2GSink(a1);
}

//----- (000000000041D238) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_09_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041D2BC) ----------------------------------------------------
int goodB2G1_87()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041D36E) ----------------------------------------------------
int goodB2G2_87()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041D414) ----------------------------------------------------
int goodG2B1_72()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041D464) ----------------------------------------------------
int goodG2B2_72()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041D4A8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_09_good()
{
  goodB2G1_87();
  goodB2G2_87();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (000000000041D4D6) ----------------------------------------------------
int badSink_25()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_rand_square_45_badData
         * CWE190_Integer_Overflow__unsigned_int_rand_square_45_badData);
}
// 65B29C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_45_badData;

//----- (000000000041D4FD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_45_badData = v2;
  return badSink_25();
}
// 65B29C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_45_badData;

//----- (000000000041D570) ----------------------------------------------------
int goodG2BSink_25()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodG2BData
         * CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodG2BData);
}
// 65B2A0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodG2BData;

//----- (000000000041D597) ----------------------------------------------------
int goodG2B_170()
{
  CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodG2BData = 2;
  return goodG2BSink_25();
}
// 65B2A0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodG2BData;

//----- (000000000041D5C2) ----------------------------------------------------
int goodB2GSink_18()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData < -65534
    || CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(
               CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData
             * CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData);
  }
  return result;
}
// 65B2A4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData;

//----- (000000000041D609) ----------------------------------------------------
int goodB2G_155()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData = v2;
  return goodB2GSink_18();
}
// 65B2A4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_45_goodB2GData;

//----- (000000000041D67C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_45_good()
{
  goodG2B_170();
  return goodB2G_155();
}

//----- (000000000041D696) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041D6D8) ----------------------------------------------------
int goodB2G1_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  else
    result = printLine("Benign, fixed string");
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041D746) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041D7A8) ----------------------------------------------------
int goodG2B1_73()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041D7F6) ----------------------------------------------------
int goodG2B2_73()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000041D838) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_14_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (000000000041D866) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_badSource(0);
  return printUnsignedLine(v0 * v0);
}

//----- (000000000041D898) ----------------------------------------------------
int goodG2B_171()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_goodG2BSource();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000041D8CA) ----------------------------------------------------
int goodB2G_156()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_goodB2GSource(0);
  if ( v1 < -65534 || v1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041D91C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_61_good()
{
  goodG2B_171();
  return goodB2G_156();
}

//----- (000000000041D936) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (000000000041D9BE) ----------------------------------------------------
int goodB2G1_89()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000041DA72) ----------------------------------------------------
int goodB2G2_89()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000041DB1A) ----------------------------------------------------
int goodG2B1_74()
{
  return printUnsignedLine(4u);
}

//----- (000000000041DB66) ----------------------------------------------------
int goodG2B2_74()
{
  return printUnsignedLine(4u);
}

//----- (000000000041DBA6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_06_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (000000000041DBD4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -1;
  v1 = -1;
  v3 = -1;
  v2 = 1;
  return printUnsignedLine(1u);
}

//----- (000000000041DC2B) ----------------------------------------------------
int goodG2B_172()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printUnsignedLine(4u);
}

//----- (000000000041DC82) ----------------------------------------------------
int goodB2G_157()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = -1;
  v1 = -1;
  return printUnsignedLine(1u);
}

//----- (000000000041DCF9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_32_good()
{
  goodG2B_172();
  return goodB2G_157();
}

//----- (000000000041DD13) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (000000000041DD42) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 )
    result = printUnsignedLine(2 * *a1);
  return result;
}

//----- (000000000041DD71) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  unsigned int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 )
  {
    if ( v2 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v2);
  }
  return result;
}

//----- (000000000041DDB5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041DDED) ----------------------------------------------------
int goodG2B_173()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_goodG2BSink(2);
}

//----- (000000000041DE0F) ----------------------------------------------------
int goodB2G_158()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_52b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041DE47) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_52_good()
{
  goodG2B_173();
  return goodB2G_158();
}

//----- (000000000041DE61) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000041DE6C) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000041DE77) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_2();
  if ( result )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041DED4) ----------------------------------------------------
int goodB2G1_90()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041DF51) ----------------------------------------------------
int goodB2G2_90()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_2();
  if ( result )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041DFC2) ----------------------------------------------------
int goodG2B1_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041E015) ----------------------------------------------------
int goodG2B2_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041E05C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_good()
{
  goodB2G1_90();
  goodB2G2_90();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (000000000041E08A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (000000000041E0B4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (000000000041E0DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (000000000041E12A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000041E19D) ----------------------------------------------------
int goodB2G1_91()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041E222) ----------------------------------------------------
int goodB2G2_91()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041E2A7) ----------------------------------------------------
int goodG2B1_76()
{
  return printUnsignedLine(3u);
}

//----- (000000000041E2D2) ----------------------------------------------------
int goodG2B2_76()
{
  return printUnsignedLine(3u);
}

//----- (000000000041E2FD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_03_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (000000000041E32B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041E37C) ----------------------------------------------------
int goodB2G_159()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (000000000041E3DF) ----------------------------------------------------
int goodG2B_174()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041E430) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_17_good()
{
  goodB2G_159();
  return goodG2B_174();
}

//----- (000000000041E44A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_12_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -1;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(2 * v1);
  if ( v1 > 0x7FFFFFFE )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(2 * v1);
}

//----- (000000000041E4CE) ----------------------------------------------------
int goodB2G_160()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041E567) ----------------------------------------------------
int goodG2B_175()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(4u);
}

//----- (000000000041E5D6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_12_good()
{
  goodB2G_160();
  return goodG2B_175();
}

//----- (000000000041E5F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_67b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041E617) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000041E63E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000041E685) ----------------------------------------------------
int __fastcall badSink_26(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041E6A5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_44_bad()
{
  return badSink_26(-1);
}

//----- (000000000041E6D0) ----------------------------------------------------
int __fastcall goodG2BSink_26(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041E6F0) ----------------------------------------------------
int goodG2B_176()
{
  return goodG2BSink_26(2);
}

//----- (000000000041E71B) ----------------------------------------------------
int __fastcall goodB2GSink_19(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000041E74D) ----------------------------------------------------
int goodB2G_161()
{
  return goodB2GSink_19(-1);
}

//----- (000000000041E778) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_44_good()
{
  goodG2B_176();
  return goodB2G_161();
}

//----- (000000000041E792) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (000000000041E79D) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (000000000041E7A8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_3();
  if ( result )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041E80B) ----------------------------------------------------
unsigned int goodB2G1_92()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041E890) ----------------------------------------------------
unsigned int goodB2G2_92()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_3();
  if ( result )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000041E909) ----------------------------------------------------
int goodG2B1_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000041E961) ----------------------------------------------------
int goodG2B2_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000041E9AD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_08_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (000000000041E9DB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000041EA50) ----------------------------------------------------
int goodB2G_162()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041EAD7) ----------------------------------------------------
int goodG2B_177()
{
  return printUnsignedLine(3u);
}

//----- (000000000041EB04) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_18_good()
{
  goodB2G_162();
  return goodG2B_177();
}

//----- (000000000041EB1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54c_badSink(a1);
}

//----- (000000000041EB39) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54c_goodG2BSink(a1);
}

//----- (000000000041EB54) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_54c_goodB2GSink(a1);
}

//----- (000000000041EB6F) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (000000000041EB7A) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (000000000041EB85) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = -1;
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041EBCD) ----------------------------------------------------
int goodB2G1_93()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = -1;
  if ( (unsigned int)staticReturnsFalse_4() )
    result = printLine("Benign, fixed string");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041EC41) ----------------------------------------------------
int goodB2G2_93()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = -1;
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041ECA9) ----------------------------------------------------
int goodG2B1_78()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041ECFD) ----------------------------------------------------
int goodG2B2_78()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041ED45) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_08_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (000000000041ED73) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0EC: using guessed type int staticFive_3;
// 65B120: using guessed type __int64 stdin;

//----- (000000000041EDD0) ----------------------------------------------------
unsigned int goodB2G1_94()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0EC: using guessed type int staticFive_3;
// 65B120: using guessed type __int64 stdin;

//----- (000000000041EE4F) ----------------------------------------------------
int goodB2G2_94()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0EC: using guessed type int staticFive_3;
// 65B120: using guessed type __int64 stdin;

//----- (000000000041EEC2) ----------------------------------------------------
int goodG2B1_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0EC: using guessed type int staticFive_3;

//----- (000000000041EF14) ----------------------------------------------------
int goodG2B2_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0EC: using guessed type int staticFive_3;

//----- (000000000041EF5A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_good()
{
  goodB2G1_94();
  goodB2G2_94();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (000000000041EF88) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_31_bad()
{
  return printUnsignedLine(1u);
}

//----- (000000000041EFC0) ----------------------------------------------------
int goodG2B_178()
{
  return printUnsignedLine(4u);
}

//----- (000000000041EFF8) ----------------------------------------------------
int goodB2G_163()
{
  return printUnsignedLine(1u);
}

//----- (000000000041F050) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_31_good()
{
  goodG2B_178();
  return goodB2G_163();
}

//----- (000000000041F06A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000041F09D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000041F0D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000041F123) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_add_61b_badSource()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000041F136) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041F149) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_add_61b_goodB2GSource()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000041F15C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v6 + 1);
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (000000000041F21B) ----------------------------------------------------
int goodB2G_164()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v11 + 1);
  }
  else if ( v11 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(v11 + 1);
  }
  return result;
}

//----- (000000000041F32E) ----------------------------------------------------
int goodG2B_179()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (000000000041F393) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_12_good()
{
  goodB2G_164();
  return goodG2B_179();
}

//----- (000000000041F3AD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000041F3F9) ----------------------------------------------------
int goodB2G1_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041F466) ----------------------------------------------------
int goodB2G2_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (000000000041F4C7) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000041F51F) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000041F56B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_11_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (000000000041F599) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_02_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (000000000041F5C9) ----------------------------------------------------
int goodB2G1_96()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F60E) ----------------------------------------------------
int goodB2G2_96()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F653) ----------------------------------------------------
int goodG2B1_81()
{
  return printUnsignedLine(4u);
}

//----- (000000000041F683) ----------------------------------------------------
int goodG2B2_81()
{
  return printUnsignedLine(4u);
}

//----- (000000000041F6B3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_02_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (000000000041F6E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000041F70C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (000000000041F737) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000041F782) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_67_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_67b_badSink(-1);
}

//----- (000000000041F7AA) ----------------------------------------------------
int goodG2B_180()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_67b_goodG2BSink(2);
}

//----- (000000000041F7D2) ----------------------------------------------------
int goodB2G_165()
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_67b_goodB2GSink(-1);
}

//----- (000000000041F7FA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_67_good()
{
  goodG2B_180();
  return goodB2G_165();
}

//----- (000000000041F814) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_square_22_badGlobal )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2A8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_badGlobal;

//----- (000000000041F83F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 < -65534 || a1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 * a1);
}
// 65B2AC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Global;

//----- (000000000041F896) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Global )
  {
    if ( a1 < -65534 || a1 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 * a1);
  }
  return result;
}
// 65B2B0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Global;

//----- (000000000041F8E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BGlobal )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2B4: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BGlobal;

//----- (000000000041F90C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_54_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_54b_badSink(v1);
}

//----- (000000000041F96D) ----------------------------------------------------
int goodG2B_181()
{
  return CWE190_Integer_Overflow__short_rand_square_54b_goodG2BSink(2);
}

//----- (000000000041F98E) ----------------------------------------------------
int goodB2G_166()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_54b_goodB2GSink(v1);
}

//----- (000000000041F9EF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_54_good()
{
  goodG2B_181();
  return goodB2G_166();
}

//----- (000000000041FA09) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041FA4D) ----------------------------------------------------
int goodB2G1_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000041FAB2) ----------------------------------------------------
int goodB2G2_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041FB0B) ----------------------------------------------------
int goodG2B1_82()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000041FB5B) ----------------------------------------------------
int goodG2B2_82()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000041FB9F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_10_good()
{
  goodB2G1_97();
  goodB2G2_97();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (000000000041FBCD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041FC15) ----------------------------------------------------
int goodB2G1_98()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    result = printLine("Benign, fixed string");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041FC89) ----------------------------------------------------
int goodB2G2_98()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041FCF1) ----------------------------------------------------
int goodG2B1_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041FD45) ----------------------------------------------------
int goodG2B2_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000041FD8D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_11_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (000000000041FDBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_badSink(a1);
}

//----- (000000000041FDD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_goodG2BSink(a1);
}

//----- (000000000041FDE9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_goodB2GSink(a1);
}

//----- (000000000041FE00) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_add_61b_badSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000041FE31) ----------------------------------------------------
int goodG2B_182()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_add_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000041FE62) ----------------------------------------------------
int goodB2G_167()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_max_add_61b_goodB2GSource();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000041FEA5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_61_good()
{
  goodG2B_182();
  return goodB2G_167();
}

//----- (000000000041FEBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_badSink(a1);
}

//----- (000000000041FED6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_goodG2BSink(a1);
}

//----- (000000000041FEED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54d_goodB2GSink(a1);
}

//----- (000000000041FF04) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000041FF77) ----------------------------------------------------
int goodB2G1_99()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041FFFC) ----------------------------------------------------
int goodB2G2_99()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000420081) ----------------------------------------------------
int goodG2B1_84()
{
  return printUnsignedLine(3u);
}

//----- (00000000004200AC) ----------------------------------------------------
int goodG2B2_84()
{
  return printUnsignedLine(3u);
}

//----- (00000000004200D7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_02_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (0000000000420105) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042012A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042014F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000420189) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (00000000004201B3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (00000000004201DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (0000000000420229) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_badSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000420263) ----------------------------------------------------
int goodG2B_183()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_goodG2BSink(&v1);
}

//----- (0000000000420287) ----------------------------------------------------
int goodB2G_168()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_63b_goodB2GSink(&v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004202C1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_63_good()
{
  goodG2B_183();
  return goodB2G_168();
}

//----- (00000000004202DB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = -1;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0F0: using guessed type int staticFive_4;

//----- (000000000042031C) ----------------------------------------------------
int goodB2G1_100()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = -1;
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 65B0F0: using guessed type int staticFive_4;

//----- (000000000042037B) ----------------------------------------------------
int goodB2G2_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = -1;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 65B0F0: using guessed type int staticFive_4;

//----- (00000000004203CE) ----------------------------------------------------
int goodG2B1_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0F0: using guessed type int staticFive_4;

//----- (000000000042041B) ----------------------------------------------------
int goodG2B2_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B0F0: using guessed type int staticFive_4;

//----- (000000000042045C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_07_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (000000000042048A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (0000000000420511) ----------------------------------------------------
int goodB2G1_101()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (00000000004205B6) ----------------------------------------------------
int goodB2G2_101()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000042064F) ----------------------------------------------------
int goodG2B1_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000042069A) ----------------------------------------------------
int goodG2B2_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (00000000004206D9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_10_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000420707) ----------------------------------------------------
int __fastcall badSink_27(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042072C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_27)(v2);
}

//----- (000000000042079F) ----------------------------------------------------
int __fastcall goodG2BSink_27(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004207C4) ----------------------------------------------------
int goodG2B_184()
{
  return goodG2BSink_27(2);
}

//----- (00000000004207EF) ----------------------------------------------------
int __fastcall goodB2GSink_20(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000420829) ----------------------------------------------------
__int64 goodB2G_169()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_20)(v2);
}

//----- (000000000042089C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_44_good()
{
  goodG2B_184();
  return goodB2G_169();
}

//----- (00000000004208B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004208D6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004208F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000420928) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_22_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_22_badSink(-1);
}
// 65B2A8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_badGlobal;

//----- (0000000000420954) ----------------------------------------------------
int goodB2G1_102()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Sink(-1);
}
// 65B2AC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G1Global;

//----- (0000000000420980) ----------------------------------------------------
int goodB2G2_102()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Sink(-1);
}
// 65B2B0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodB2G2Global;

//----- (00000000004209AC) ----------------------------------------------------
int goodG2B_185()
{
  CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BSink(2);
}
// 65B2B4: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_22_goodG2BGlobal;

//----- (00000000004209D8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_22_good()
{
  goodB2G1_102();
  goodB2G2_102();
  return goodG2B_185();
}

//----- (00000000004209FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54d_badSink(a1);
}

//----- (0000000000420A13) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54d_goodG2BSink(a1);
}

//----- (0000000000420A2A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54d_goodB2GSink(a1);
}

//----- (0000000000420A41) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000420AB4) ----------------------------------------------------
int goodG2B_186()
{
  return printUnsignedLine(3u);
}

//----- (0000000000420ADF) ----------------------------------------------------
int goodB2G_170()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000420B64) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_01_good()
{
  goodG2B_186();
  return goodB2G_170();
}

//----- (0000000000420B7E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000420BD4) ----------------------------------------------------
int goodB2G_171()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (0000000000420C3F) ----------------------------------------------------
int goodG2B_187()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000420C95) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_17_good()
{
  goodB2G_171();
  return goodG2B_187();
}

//----- (0000000000420CAF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_52c_badSink(a1);
}

//----- (0000000000420CCA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_52c_goodG2BSink(a1);
}

//----- (0000000000420CE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_52c_goodB2GSink(a1);
}

//----- (0000000000420D00) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000420D20) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000420D40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000420D72) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (0000000000420D7D) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (0000000000420D88) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -1;
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000420DD4) ----------------------------------------------------
int goodB2G1_103()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -1;
  result = staticReturnsFalse_5();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000420E41) ----------------------------------------------------
int goodB2G2_103()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -1;
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (0000000000420EA2) ----------------------------------------------------
int goodG2B1_87()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000420EFA) ----------------------------------------------------
int goodG2B2_87()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000420F46) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_08_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (0000000000420F74) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000420FCF) ----------------------------------------------------
unsigned int goodB2G1_104()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;
// 65B308: using guessed type int globalFalse;

//----- (000000000042104C) ----------------------------------------------------
int goodB2G2_104()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004210BD) ----------------------------------------------------
int goodG2B1_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (000000000042110D) ----------------------------------------------------
int goodG2B2_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (0000000000421151) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_10_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (000000000042117F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000421208) ----------------------------------------------------
int goodB2G1_105()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 65B118: using guessed type int globalFive;

//----- (00000000004212AF) ----------------------------------------------------
int goodB2G2_105()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000042134A) ----------------------------------------------------
int goodG2B1_89()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000421397) ----------------------------------------------------
int goodG2B2_89()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004213D8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_14_good()
{
  goodB2G1_105();
  goodB2G2_105();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (0000000000421406) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54e_badSink(a1);
}

//----- (000000000042141D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54e_goodG2BSink(a1);
}

//----- (0000000000421434) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_square_54e_goodB2GSink(a1);
}

//----- (000000000042144B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_65_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__short_rand_square_65b_badSink)((unsigned int)(__int16)v1);
}

//----- (00000000004214B5) ----------------------------------------------------
int goodG2B_188()
{
  return CWE190_Integer_Overflow__short_rand_square_65b_goodG2BSink(2);
}

//----- (00000000004214DF) ----------------------------------------------------
__int64 goodB2G_172()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__short_rand_square_65b_goodB2GSink)((unsigned int)(__int16)v1);
}

//----- (0000000000421549) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_square_65_good()
{
  goodG2B_188();
  return goodB2G_172();
}

//----- (0000000000421563) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004215A5) ----------------------------------------------------
int goodB2G1_106()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  else
    result = printLine("Benign, fixed string");
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000421613) ----------------------------------------------------
int goodB2G2_106()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000421675) ----------------------------------------------------
int goodG2B1_90()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004216C3) ----------------------------------------------------
int goodG2B2_90()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000421705) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_13_good()
{
  goodB2G1_106();
  goodB2G2_106();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (0000000000421733) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421774) ----------------------------------------------------
int goodG2B_189()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_goodG2BSink(2);
}

//----- (000000000042179F) ----------------------------------------------------
__int64 goodB2G_173()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_add_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004217E0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_add_65_good()
{
  goodG2B_189();
  return goodB2G_173();
}

//----- (00000000004217FA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_bad()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421864) ----------------------------------------------------
int goodB2G_174()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004218EE) ----------------------------------------------------
int goodG2B_190()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (0000000000421940) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_17_good()
{
  goodB2G_174();
  return goodG2B_190();
}

//----- (000000000042195A) ----------------------------------------------------
int __fastcall badSink_28(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000042197B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_28;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004219BC) ----------------------------------------------------
int __fastcall goodG2BSink_28(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (00000000004219DD) ----------------------------------------------------
int goodG2B_191()
{
  return goodG2BSink_28(2);
}

//----- (0000000000421A08) ----------------------------------------------------
int __fastcall goodB2GSink_21(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000421A49) ----------------------------------------------------
__int64 goodB2G_175()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_21;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421A8A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_44_good()
{
  goodG2B_191();
  return goodB2G_175();
}

//----- (0000000000421AA4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_badSink(a1);
}

//----- (0000000000421ABB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_goodG2BSink(a1);
}

//----- (0000000000421AD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000421AE9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_badSource();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000421B1F) ----------------------------------------------------
int goodG2B_192()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_goodG2BSource();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000421B55) ----------------------------------------------------
unsigned int goodB2G_176()
{
  unsigned int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_goodB2GSource();
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000421BA0) ----------------------------------------------------
unsigned int CWE190_Integer_Overflow__unsigned_int_rand_multiply_61_good()
{
  goodG2B_192();
  return goodB2G_176();
}

//----- (0000000000421BBA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_31_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (0000000000421C3A) ----------------------------------------------------
int goodG2B_193()
{
  return printIntLine(4u);
}

//----- (0000000000421C7A) ----------------------------------------------------
int goodB2G_177()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000421D1C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_31_good()
{
  goodG2B_193();
  return goodB2G_177();
}

//----- (0000000000421D36) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    v2 = 2 * v1;
    result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421D7F) ----------------------------------------------------
int goodB2G1_107()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421DDE) ----------------------------------------------------
int goodB2G2_107()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421E3D) ----------------------------------------------------
int goodG2B1_91()
{
  return printUnsignedLine(4u);
}

//----- (0000000000421E6F) ----------------------------------------------------
int goodG2B2_91()
{
  return printUnsignedLine(4u);
}

//----- (0000000000421EA1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_15_good()
{
  goodB2G1_107();
  goodB2G2_107();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (0000000000421ECF) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421EFC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000421F0F) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000421F3C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B0F4: using guessed type int staticFive_5;

//----- (0000000000421FCA) ----------------------------------------------------
int goodB2G1_108()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_5;
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B0F4: using guessed type int staticFive_5;

//----- (0000000000422079) ----------------------------------------------------
int goodB2G2_108()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 65B0F4: using guessed type int staticFive_5;

//----- (000000000042211C) ----------------------------------------------------
int goodG2B1_92()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0F4: using guessed type int staticFive_5;

//----- (000000000042216E) ----------------------------------------------------
int goodG2B2_92()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_5 == 5 )
    v1 = 2;
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0F4: using guessed type int staticFive_5;

//----- (00000000004221B4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_07_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (00000000004221E2) ----------------------------------------------------
int __fastcall badSink_29(int a1)
{
  int result; // eax

  result = badStatic_6;
  if ( badStatic_6 )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2B8: using guessed type int badStatic_6;

//----- (000000000042220D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_21_bad()
{
  badStatic_6 = 1;
  return badSink_29(-1);
}
// 65B2B8: using guessed type int badStatic_6;

//----- (0000000000422239) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(int a1)
{
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 < -65534 || a1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 * a1);
}
// 65B2BC: using guessed type int goodB2G1Static_6;

//----- (0000000000422290) ----------------------------------------------------
int goodB2G1_109()
{
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(-1);
}
// 65B2BC: using guessed type int goodB2G1Static_6;

//----- (00000000004222BC) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(int a1)
{
  int result; // eax

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 )
  {
    if ( a1 < -65534 || a1 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 * a1);
  }
  return result;
}
// 65B2C0: using guessed type int goodB2G2Static_6;

//----- (0000000000422307) ----------------------------------------------------
int goodB2G2_109()
{
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(-1);
}
// 65B2C0: using guessed type int goodB2G2Static_6;

//----- (0000000000422333) ----------------------------------------------------
int __fastcall goodG2BSink_29(int a1)
{
  int result; // eax

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2C4: using guessed type int goodG2BStatic_6;

//----- (000000000042235E) ----------------------------------------------------
int goodG2B_194()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_29(2);
}
// 65B2C4: using guessed type int goodG2BStatic_6;

//----- (000000000042238A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_21_good()
{
  goodB2G1_109();
  goodB2G2_109();
  return goodG2B_194();
}

//----- (00000000004223AE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_03_bad()
{
  return printUnsignedLine(1u);
}

//----- (00000000004223DA) ----------------------------------------------------
int goodB2G1_110()
{
  return printUnsignedLine(1u);
}

//----- (0000000000422426) ----------------------------------------------------
int goodB2G2_110()
{
  return printUnsignedLine(1u);
}

//----- (0000000000422472) ----------------------------------------------------
int goodG2B1_93()
{
  return printUnsignedLine(4u);
}

//----- (000000000042249E) ----------------------------------------------------
int goodG2B2_93()
{
  return printUnsignedLine(4u);
}

//----- (00000000004224CA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_03_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (00000000004224F8) ----------------------------------------------------
__int64 __fastcall badSource_3(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000422525) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_bad()
{
  int result; // eax

  result = badSource_3(0);
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (000000000042255B) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 2LL;
}

//----- (000000000042256E) ----------------------------------------------------
int goodG2B_195()
{
  int result; // eax

  result = goodG2BSource_3();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (00000000004225A4) ----------------------------------------------------
__int64 __fastcall goodB2GSource_3(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004225D1) ----------------------------------------------------
unsigned int goodB2G_178()
{
  unsigned int result; // eax

  result = goodB2GSource_3(0);
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (000000000042261C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_42_good()
{
  goodB2G_178();
  return goodG2B_195();
}

//----- (0000000000422636) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_53c_badSink(a1);
}

//----- (0000000000422651) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_53c_goodG2BSink(a1);
}

//----- (000000000042266C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_square_53c_goodB2GSink(a1);
}

//----- (0000000000422687) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422715) ----------------------------------------------------
int goodB2G1_111()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004227C4) ----------------------------------------------------
int goodB2G2_111()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422867) ----------------------------------------------------
int goodG2B1_94()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004228B9) ----------------------------------------------------
int goodG2B2_94()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004228FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_13_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (000000000042292D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54c_badSink(a1);
}

//----- (0000000000422944) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54c_goodG2BSink(a1);
}

//----- (000000000042295B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54c_goodB2GSink(a1);
}

//----- (0000000000422972) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_18_bad()
{
  return printUnsignedLine(1u);
}

//----- (00000000004229A0) ----------------------------------------------------
int goodB2G_179()
{
  return printUnsignedLine(1u);
}

//----- (00000000004229EE) ----------------------------------------------------
int goodG2B_196()
{
  return printUnsignedLine(4u);
}

//----- (0000000000422A1C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_18_good()
{
  goodB2G_179();
  return goodG2B_196();
}

//----- (0000000000422A36) ----------------------------------------------------
int __fastcall badSink_30(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000422A56) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_41_bad()
{
  return badSink_30(-1);
}

//----- (0000000000422A78) ----------------------------------------------------
int __fastcall goodG2BSink_30(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000422A98) ----------------------------------------------------
int goodG2B_197()
{
  return goodG2BSink_30(2);
}

//----- (0000000000422ABA) ----------------------------------------------------
int __fastcall goodB2GSink_22(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000422AEC) ----------------------------------------------------
int goodB2G_180()
{
  return goodB2GSink_22(-1);
}

//----- (0000000000422B0E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_41_good()
{
  goodB2G_180();
  return goodG2B_197();
}

//----- (0000000000422B28) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_54_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_badSink(-1);
}

//----- (0000000000422B4A) ----------------------------------------------------
int goodG2B_198()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_goodG2BSink(2);
}

//----- (0000000000422B6C) ----------------------------------------------------
int goodB2G_181()
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_54b_goodB2GSink(0xFFFFFFFF);
}

//----- (0000000000422B8E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_54_good()
{
  goodG2B_198();
  return goodB2G_181();
}

//----- (0000000000422BA8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_68_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_68_badData = v1;
  return CWE190_Integer_Overflow__short_rand_square_68b_badSink();
}
// 65B354: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_68_badData;

//----- (0000000000422C13) ----------------------------------------------------
int goodG2B_199()
{
  CWE190_Integer_Overflow__short_rand_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_rand_square_68b_goodG2BSink();
}
// 65B358: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_68_goodG2BData;

//----- (0000000000422C3E) ----------------------------------------------------
int goodB2G_182()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_square_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__short_rand_square_68b_goodB2GSink();
}
// 65B356: using guessed type __int16 CWE190_Integer_Overflow__short_rand_square_68_goodB2GData;

//----- (0000000000422CA9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_68_good()
{
  goodG2B_199();
  return goodB2G_182();
}

//----- (0000000000422CC3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (0000000000422CED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (0000000000422D17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (0000000000422D63) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (0000000000422D8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (0000000000422DB9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000422E04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000422E24) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000422E44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000422E76) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000422E97) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000422EB8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000422EF9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v6 * v6);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000422F81) ----------------------------------------------------
int goodB2G1_112()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000423035) ----------------------------------------------------
int goodB2G2_112()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004230DD) ----------------------------------------------------
int goodG2B1_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000423129) ----------------------------------------------------
int goodG2B2_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000423169) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_09_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (0000000000423197) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_badData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_badSink();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B35C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_badData;

//----- (00000000004231D8) ----------------------------------------------------
int goodG2B_200()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_goodG2BSink();
}
// 65B360: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodG2BData;

//----- (0000000000423203) ----------------------------------------------------
int goodB2G_183()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_68b_goodB2GSink();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B364: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_goodB2GData;

//----- (0000000000423244) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_68_good()
{
  goodG2B_200();
  return goodB2G_183();
}

//----- (000000000042325E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -1;
  else
    v1 = 2;
  globalReturnsTrueOrFalse();
  return printUnsignedLine(v1 * v1);
}

//----- (00000000004232E5) ----------------------------------------------------
int goodB2G_184()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(1u);
}

//----- (000000000042338D) ----------------------------------------------------
int goodG2B_201()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(4u);
}

//----- (00000000004233F4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_12_good()
{
  goodB2G_184();
  return goodG2B_201();
}

//----- (000000000042340E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000042346D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000423480) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_square_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004234DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_badSink(a1);
}

//----- (00000000004234F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_goodG2BSink(a1);
}

//----- (000000000042350D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_goodB2GSink(a1);
}

//----- (0000000000423524) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0F8: using guessed type int staticTrue_5;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042357F) ----------------------------------------------------
unsigned int goodB2G1_113()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0F8: using guessed type int staticTrue_5;
// 65B120: using guessed type __int64 stdin;
// 65B2C8: using guessed type int staticFalse_5;

//----- (00000000004235FC) ----------------------------------------------------
int goodB2G2_113()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0F8: using guessed type int staticTrue_5;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042366D) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0F8: using guessed type int staticTrue_5;
// 65B2C8: using guessed type int staticFalse_5;

//----- (00000000004236BD) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B0F8: using guessed type int staticTrue_5;

//----- (0000000000423701) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_05_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (000000000042372F) ----------------------------------------------------
int __fastcall badSink_31(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000423754) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return badSink_31(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042378C) ----------------------------------------------------
int __fastcall goodG2BSink_31(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004237B1) ----------------------------------------------------
int goodG2B_202()
{
  return goodG2BSink_31(2);
}

//----- (00000000004237D3) ----------------------------------------------------
int __fastcall goodB2GSink_23(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000042380D) ----------------------------------------------------
int goodB2G_185()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return goodB2GSink_23(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000423845) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_41_good()
{
  goodB2G_185();
  return goodG2B_202();
}

//----- (000000000042385F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_53_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_53b_badSink(v1);
}

//----- (00000000004238C0) ----------------------------------------------------
int goodG2B_203()
{
  return CWE190_Integer_Overflow__short_rand_square_53b_goodG2BSink(2);
}

//----- (00000000004238E1) ----------------------------------------------------
int goodB2G_186()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_square_53b_goodB2GSink(v1);
}

//----- (0000000000423942) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_53_good()
{
  goodG2B_203();
  return goodB2G_186();
}

//----- (000000000042395C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54b_badSink(v2);
}

//----- (00000000004239C6) ----------------------------------------------------
int goodG2B_204()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54b_goodG2BSink(2);
}

//----- (00000000004239E8) ----------------------------------------------------
int goodB2G_187()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_54b_goodB2GSink(v2);
}

//----- (0000000000423A52) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_54_good()
{
  goodG2B_204();
  return goodB2G_187();
}

//----- (0000000000423A6C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0FC: using guessed type int staticFive_6;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000423AC6) ----------------------------------------------------
int goodB2G1_114()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0FC: using guessed type int staticFive_6;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000423B4C) ----------------------------------------------------
int goodB2G2_114()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B0FC: using guessed type int staticFive_6;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000423BC6) ----------------------------------------------------
int goodG2B1_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0FC: using guessed type int staticFive_6;

//----- (0000000000423C14) ----------------------------------------------------
int goodG2B2_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    v1 = 2;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B0FC: using guessed type int staticFive_6;

//----- (0000000000423C56) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_07_good()
{
  goodB2G1_114();
  goodB2G2_114();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (0000000000423C84) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (0000000000423CFA) ----------------------------------------------------
int goodB2G1_115()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000423D90) ----------------------------------------------------
int goodB2G2_115()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000423E26) ----------------------------------------------------
int goodG2B1_98()
{
  return printUnsignedLine(4u);
}

//----- (0000000000423E54) ----------------------------------------------------
int goodG2B2_98()
{
  return printUnsignedLine(4u);
}

//----- (0000000000423E82) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_15_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (0000000000423EB0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_15_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000423EDD) ----------------------------------------------------
int goodB2G1_116()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423F1C) ----------------------------------------------------
int goodB2G2_116()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000423F5B) ----------------------------------------------------
int goodG2B1_99()
{
  return printUnsignedLine(3u);
}

//----- (0000000000423F88) ----------------------------------------------------
int goodG2B2_99()
{
  return printUnsignedLine(3u);
}

//----- (0000000000423FB5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_15_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (0000000000423FE3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_badSink(a1);
}

//----- (0000000000423FFA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_goodG2BSink(a1);
}

//----- (0000000000424011) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_multiply_53c_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_53d_goodB2GSink(a1);
}

//----- (0000000000424028) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_63b_badSink(&v6);
}

//----- (0000000000424094) ----------------------------------------------------
int goodG2B_205()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_63b_goodG2BSink(&v1);
}

//----- (00000000004240B8) ----------------------------------------------------
int goodB2G_188()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_63b_goodB2GSink(&v6);
}

//----- (0000000000424124) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_63_good()
{
  goodG2B_205();
  return goodB2G_188();
}

//----- (000000000042413E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  v3 = v1;
  if ( v1 )
  {
    v2 = 2 * v3;
    result = printUnsignedLine(2 * v3);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000424190) ----------------------------------------------------
int goodG2B_206()
{
  return printUnsignedLine(4u);
}

//----- (00000000004241CC) ----------------------------------------------------
int goodB2G_189()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned int v2; // [rsp+8h] [rbp-8h]
  unsigned int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  result = v1;
  v3 = v1;
  if ( v1 )
  {
    if ( v3 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v3;
      result = printUnsignedLine(2 * v3);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000424233) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_34_good()
{
  goodG2B_206();
  return goodB2G_189();
}

//----- (000000000042424D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000042428C) ----------------------------------------------------
int goodB2G1_117()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (00000000004242E9) ----------------------------------------------------
int goodB2G2_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (000000000042433A) ----------------------------------------------------
int goodG2B1_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (0000000000424385) ----------------------------------------------------
int goodG2B2_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (00000000004243C4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_10_good()
{
  goodB2G1_117();
  goodB2G2_117();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (00000000004243F2) ----------------------------------------------------
int __fastcall badSink_32(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000424417) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad()
{
  return badSink_32(-1);
}

//----- (0000000000424442) ----------------------------------------------------
int __fastcall goodG2BSink_32(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000424467) ----------------------------------------------------
int goodG2B_207()
{
  return goodG2BSink_32(2);
}

//----- (0000000000424492) ----------------------------------------------------
int __fastcall goodB2GSink_24(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (00000000004244CC) ----------------------------------------------------
int goodB2G_190()
{
  return goodB2GSink_24(0xFFFFFFFF);
}

//----- (00000000004244F7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_44_good()
{
  goodG2B_207();
  return goodB2G_190();
}

//----- (0000000000424511) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000424532) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000424553) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000424594) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004245EE) ----------------------------------------------------
int goodB2G1_118()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000424674) ----------------------------------------------------
int goodB2G2_118()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 44027C: using guessed type int GLOBAL_CONST_FIVE;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004246EE) ----------------------------------------------------
int goodG2B1_101()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042473C) ----------------------------------------------------
int goodG2B2_101()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042477E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_13_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (00000000004247AC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v6 * v6);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000424836) ----------------------------------------------------
int goodB2G1_119()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}
// 65B118: using guessed type int globalFive;

//----- (00000000004248EC) ----------------------------------------------------
int goodB2G2_119()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000424996) ----------------------------------------------------
int goodG2B1_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (00000000004249E4) ----------------------------------------------------
int goodG2B2_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (0000000000424A26) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_14_good()
{
  goodB2G1_119();
  goodB2G2_119();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (0000000000424A54) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54d_badSink(a1);
}

//----- (0000000000424A6B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54d_goodG2BSink(a1);
}

//----- (0000000000424A82) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54d_goodB2GSink(a1);
}

//----- (0000000000424A99) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printUnsignedLine(*v8 * *v8);
}

//----- (0000000000424B38) ----------------------------------------------------
int goodG2B_208()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printUnsignedLine(4u);
}

//----- (0000000000424B8F) ----------------------------------------------------
int goodB2G_191()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+4h] [rbp-2Ch]
  int v8; // [rsp+8h] [rbp-28h]
  int v9; // [rsp+Ch] [rbp-24h]
  int *v10; // [rsp+10h] [rbp-20h]
  int *v11; // [rsp+18h] [rbp-18h]

  v11 = &v6;
  v10 = &v6;
  v6 = 0;
  v9 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v9 = v2;
  *v11 = v2;
  v8 = *v10;
  if ( v8 < -65534 || v8 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v7 = v8 * v8;
  return printUnsignedLine(v8 * v8);
}

//----- (0000000000424C4E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_32_good()
{
  goodG2B_208();
  return goodB2G_191();
}

//----- (0000000000424C68) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_01_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000424C93) ----------------------------------------------------
int goodG2B_209()
{
  return printUnsignedLine(3u);
}

//----- (0000000000424CBE) ----------------------------------------------------
int goodB2G_192()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000424CFB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_01_good()
{
  goodG2B_209();
  return goodB2G_192();
}

//----- (0000000000424D15) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000424D5B) ----------------------------------------------------
int goodB2G_193()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000424DC1) ----------------------------------------------------
int goodG2B_210()
{
  return printUnsignedLine(4u);
}

//----- (0000000000424DEF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_good()
{
  goodB2G_193();
  return goodG2B_210();
}

//----- (0000000000424E09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000424E29) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000424E49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000424E7B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_badSink(a1);
}

//----- (0000000000424E92) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_goodG2BSink(a1);
}

//----- (0000000000424EA9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000424EC0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_badSource()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000424ED3) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000424EE6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_goodB2GSource()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000424EF9) ----------------------------------------------------
void CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printUnsignedLine(v5 + 1);
}

//----- (0000000000424F92) ----------------------------------------------------
void goodB2G_194()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 == -1 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printUnsignedLine(v5 + 1);
  }
}

//----- (000000000042503D) ----------------------------------------------------
int goodG2B_211()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042508E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_17_good()
{
  goodB2G_194();
  return goodG2B_211();
}

//----- (00000000004250A8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_67b_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (00000000004250CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (00000000004250F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000042513D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000042516F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (00000000004251A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (00000000004251E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54e_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000425206) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (0000000000425227) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (0000000000425268) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53d_badSink(a1);
}

//----- (000000000042527F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53d_goodG2BSink(a1);
}

//----- (0000000000425296) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_53d_goodB2GSink(a1);
}

//----- (00000000004252AD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_13_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000425333) ----------------------------------------------------
int goodB2G1_120()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004253E7) ----------------------------------------------------
int goodB2G2_120()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042548F) ----------------------------------------------------
int goodG2B1_103()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004254E1) ----------------------------------------------------
int goodG2B2_103()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000425527) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_13_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (0000000000425555) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004255B4) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004255C7) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_multiply_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000425626) ----------------------------------------------------
int __fastcall badSink_33(int a1)
{
  int result; // eax

  result = badStatic_7;
  if ( badStatic_7 )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2CC: using guessed type int badStatic_7;

//----- (0000000000425651) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  badStatic_7 = 1;
  return badSink_33(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B2CC: using guessed type int badStatic_7;

//----- (0000000000425693) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(int a1)
{
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( a1 < -65534 || a1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 * a1);
}
// 65B2D0: using guessed type int goodB2G1Static_7;

//----- (00000000004256EA) ----------------------------------------------------
int goodB2G1_121()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B2D0: using guessed type int goodB2G1Static_7;

//----- (000000000042572C) ----------------------------------------------------
int __fastcall goodB2G2Sink_7(int a1)
{
  int result; // eax

  result = goodB2G2Static_7;
  if ( goodB2G2Static_7 )
  {
    if ( a1 < -65534 || a1 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 * a1);
  }
  return result;
}
// 65B2D4: using guessed type int goodB2G2Static_7;

//----- (0000000000425777) ----------------------------------------------------
int goodB2G2_121()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B2D4: using guessed type int goodB2G2Static_7;

//----- (00000000004257B9) ----------------------------------------------------
int __fastcall goodG2BSink_33(int a1)
{
  int result; // eax

  result = goodG2BStatic_7;
  if ( goodG2BStatic_7 )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2D8: using guessed type int goodG2BStatic_7;

//----- (00000000004257E4) ----------------------------------------------------
int goodG2B_212()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_33(2);
}
// 65B2D8: using guessed type int goodG2BStatic_7;

//----- (0000000000425810) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_21_good()
{
  goodB2G1_121();
  goodB2G2_121();
  return goodG2B_212();
}

//----- (0000000000425834) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000425878) ----------------------------------------------------
int goodB2G1_122()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004258DC) ----------------------------------------------------
int goodB2G2_122()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000425940) ----------------------------------------------------
int goodG2B1_104()
{
  return printUnsignedLine(4u);
}

//----- (000000000042596C) ----------------------------------------------------
int goodG2B2_104()
{
  return printUnsignedLine(4u);
}

//----- (0000000000425998) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_03_good()
{
  goodB2G1_122();
  goodB2G2_122();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (00000000004259C6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (0000000000425A4C) ----------------------------------------------------
int goodB2G1_123()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000425AFE) ----------------------------------------------------
int goodB2G2_123()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000425BA4) ----------------------------------------------------
int goodG2B1_105()
{
  return printUnsignedLine(4u);
}

//----- (0000000000425BEE) ----------------------------------------------------
int goodG2B2_105()
{
  return printUnsignedLine(4u);
}

//----- (0000000000425C2C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_04_good()
{
  goodB2G1_123();
  goodB2G2_123();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (0000000000425C5A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (0000000000425CDA) ----------------------------------------------------
int goodG2B_213()
{
  return printUnsignedLine(4u);
}

//----- (0000000000425D12) ----------------------------------------------------
int goodB2G_195()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (0000000000425DB2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_31_good()
{
  goodG2B_213();
  return goodB2G_195();
}

//----- (0000000000425DCC) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (0000000000425DD7) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (0000000000425DE2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = -1;
  result = staticReturnsTrue_6();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000425E29) ----------------------------------------------------
int goodB2G1_124()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = -1;
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (0000000000425E8E) ----------------------------------------------------
int goodB2G2_124()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = -1;
  result = staticReturnsTrue_6();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (0000000000425EE7) ----------------------------------------------------
int goodG2B1_106()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000425F3A) ----------------------------------------------------
int goodG2B2_106()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000425F81) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_08_good()
{
  goodB2G1_124();
  goodB2G2_124();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (0000000000425FAF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000425FF0) ----------------------------------------------------
int goodG2B_214()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_goodG2BSink(2);
}

//----- (000000000042601B) ----------------------------------------------------
__int64 goodB2G_196()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(unsigned int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042605C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65_good()
{
  goodG2B_214();
  return goodB2G_196();
}

//----- (0000000000426076) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_badSource();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (00000000004260AC) ----------------------------------------------------
int goodG2B_215()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_goodG2BSource();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (00000000004260E2) ----------------------------------------------------
unsigned int goodB2G_197()
{
  unsigned int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_multiply_61b_goodB2GSource();
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (000000000042612D) ----------------------------------------------------
unsigned int CWE190_Integer_Overflow__unsigned_int_max_multiply_61_good()
{
  goodG2B_215();
  return goodB2G_197();
}

//----- (0000000000426147) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042617F) ----------------------------------------------------
int goodG2B_216()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_goodG2BSink(2);
}

//----- (00000000004261A1) ----------------------------------------------------
int goodB2G_198()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004261D9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54_good()
{
  goodG2B_216();
  return goodB2G_198();
}

//----- (00000000004261F3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000426287) ----------------------------------------------------
int goodB2G1_125()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (000000000042633C) ----------------------------------------------------
int goodB2G2_125()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (00000000004263E5) ----------------------------------------------------
int goodG2B1_107()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (000000000042643D) ----------------------------------------------------
int goodG2B2_107()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000426489) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_11_good()
{
  goodB2G1_125();
  goodB2G2_125();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (00000000004264B7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (000000000042652F) ----------------------------------------------------
unsigned int goodB2G1_126()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (00000000004265BC) ----------------------------------------------------
unsigned int goodB2G2_126()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int result; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    result = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    result = ~(v4 ^ rand());
  }
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000426649) ----------------------------------------------------
int goodG2B1_108()
{
  return printUnsignedLine(4u);
}

//----- (0000000000426679) ----------------------------------------------------
int goodG2B2_108()
{
  return printUnsignedLine(4u);
}

//----- (00000000004266A9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_02_good()
{
  goodB2G1_126();
  goodB2G2_126();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (00000000004266D7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink(&v1);
}

//----- (00000000004266FB) ----------------------------------------------------
int goodG2B_217()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000042671F) ----------------------------------------------------
int goodB2G_199()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_goodB2GSink(&v1);
}

//----- (0000000000426743) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_63_good()
{
  goodG2B_217();
  return goodB2G_199();
}

//----- (000000000042675D) ----------------------------------------------------
int __fastcall badSink_34(int a1)
{
  int result; // eax

  result = badStatic_8;
  if ( badStatic_8 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B2DC: using guessed type int badStatic_8;

//----- (0000000000426787) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_8 = 1;
  return badSink_34(v2);
}
// 65B2DC: using guessed type int badStatic_8;

//----- (00000000004267FB) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(int a1)
{
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 65B2E0: using guessed type int goodB2G1Static_8;

//----- (0000000000426843) ----------------------------------------------------
int goodB2G1_127()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(v2);
}
// 65B2E0: using guessed type int goodB2G1Static_8;

//----- (00000000004268B7) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(int a1)
{
  int result; // eax

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 65B2E4: using guessed type int goodB2G2Static_8;

//----- (00000000004268F3) ----------------------------------------------------
int goodB2G2_127()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(v2);
}
// 65B2E4: using guessed type int goodB2G2Static_8;

//----- (0000000000426967) ----------------------------------------------------
int __fastcall goodG2BSink_34(int a1)
{
  int result; // eax

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 65B2E8: using guessed type int goodG2BStatic_8;

//----- (0000000000426991) ----------------------------------------------------
int goodG2B_218()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_34(2);
}
// 65B2E8: using guessed type int goodG2BStatic_8;

//----- (00000000004269BD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_21_good()
{
  goodB2G1_127();
  goodB2G2_127();
  return goodG2B_218();
}

//----- (00000000004269E1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_67b_badSink(v2);
}

//----- (0000000000426A51) ----------------------------------------------------
int goodG2B_219()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_67b_goodG2BSink(2);
}

//----- (0000000000426A79) ----------------------------------------------------
int goodB2G_200()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_square_67b_goodB2GSink(v2);
}

//----- (0000000000426AE9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_67_good()
{
  goodG2B_219();
  return goodB2G_200();
}

//----- (0000000000426B03) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (0000000000426B0E) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (0000000000426B19) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000426BAD) ----------------------------------------------------
int goodB2G1_128()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsFalse_7();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000426C62) ----------------------------------------------------
int goodB2G2_128()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_7();
  if ( result && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}

//----- (0000000000426D0B) ----------------------------------------------------
int goodG2B1_109()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000426D63) ----------------------------------------------------
int goodG2B2_109()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}

//----- (0000000000426DAF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (0000000000426DDD) ----------------------------------------------------
__int64 badSource_4()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000426E3C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_bad()
{
  int result; // eax

  result = badSource_4();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000426E72) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 2LL;
}

//----- (0000000000426E85) ----------------------------------------------------
int goodG2B_220()
{
  int result; // eax

  result = goodG2BSource_4();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (0000000000426EBB) ----------------------------------------------------
__int64 goodB2GSource_4()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000426F1A) ----------------------------------------------------
unsigned int goodB2G_201()
{
  unsigned int result; // eax

  result = goodB2GSource_4();
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (0000000000426F65) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_42_good()
{
  goodB2G_201();
  return goodG2B_220();
}

//----- (0000000000426F7F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = -1;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B100: using guessed type int staticFive_7;

//----- (0000000000426FC5) ----------------------------------------------------
int goodB2G1_129()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = -1;
  result = staticFive_7;
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 65B100: using guessed type int staticFive_7;

//----- (000000000042702C) ----------------------------------------------------
int goodB2G2_129()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = -1;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 65B100: using guessed type int staticFive_7;

//----- (0000000000427087) ----------------------------------------------------
int goodG2B1_110()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B100: using guessed type int staticFive_7;

//----- (00000000004270D9) ----------------------------------------------------
int goodG2B2_110()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = 2;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B100: using guessed type int staticFive_7;

//----- (000000000042711F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_07_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (000000000042714D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%u", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v3 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  else if ( v1 < -65534 || v1 > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004271EE) ----------------------------------------------------
int goodB2G_202()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  else if ( v1 < -65534 || v1 > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004272C6) ----------------------------------------------------
int goodG2B_221()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(4u);
}

//----- (000000000042732D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_12_good()
{
  goodB2G_202();
  return goodG2B_221();
}

//----- (0000000000427347) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_square_22_badGlobal )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_badGlobal;

//----- (0000000000427372) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 < -65534 || a1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 * a1);
}
// 65B2F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Global;

//----- (00000000004273C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Global )
  {
    if ( a1 < -65534 || a1 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 * a1);
  }
  return result;
}
// 65B2F4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Global;

//----- (0000000000427414) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BGlobal )
    result = printUnsignedLine(a1 * a1);
  return result;
}
// 65B2F8: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BGlobal;

//----- (000000000042743F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000427464) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000427489) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_65b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (00000000004274C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54c_badSink(a1);
}

//----- (00000000004274DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54c_goodG2BSink(a1);
}

//----- (00000000004274F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_54c_goodB2GSink(a1);
}

//----- (0000000000427508) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_68b_badSink()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_max_square_68_badData
         * CWE190_Integer_Overflow__unsigned_int_max_square_68_badData);
}
// 65B334: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_68_badData;

//----- (000000000042752F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_68b_goodG2BSink()
{
  return printUnsignedLine(
           CWE190_Integer_Overflow__unsigned_int_max_square_68_goodG2BData
         * CWE190_Integer_Overflow__unsigned_int_max_square_68_goodG2BData);
}
// 65B330: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_68_goodG2BData;

//----- (0000000000427556) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData < -65534
    || CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(
               CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData
             * CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData);
  }
  return result;
}
// 65B338: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_square_68_goodB2GData;

//----- (000000000042759D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_15_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (000000000042760F) ----------------------------------------------------
int goodB2G1_130()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (00000000004276A3) ----------------------------------------------------
int goodB2G2_130()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000427737) ----------------------------------------------------
int goodG2B1_111()
{
  return printIntLine(4u);
}

//----- (0000000000427769) ----------------------------------------------------
int goodG2B2_111()
{
  return printIntLine(4u);
}

//----- (000000000042779B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_15_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (00000000004277C9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_add_61b_badSource();
  return printUnsignedLine(v0 + 1);
}

//----- (00000000004277FA) ----------------------------------------------------
int goodG2B_222()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_add_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042782B) ----------------------------------------------------
int goodB2G_203()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_rand_add_61b_goodB2GSource();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042786E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_61_good()
{
  goodG2B_222();
  return goodB2G_203();
}

//----- (0000000000427888) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_badSink(a1);
}

//----- (000000000042789F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_goodG2BSink(a1);
}

//----- (00000000004278B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54d_goodB2GSink(a1);
}

//----- (00000000004278CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (00000000004278F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 * *a1);
}

//----- (0000000000427923) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000042796E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000427993) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (00000000004279B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (00000000004279F2) ----------------------------------------------------
__int64 badSource_5()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000427A4C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_5();
  return printIntLine((__int16)(v0 * v0));
}

//----- (0000000000427A85) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 2LL;
}

//----- (0000000000427A9B) ----------------------------------------------------
int goodG2B_223()
{
  __int16 v0; // ax

  v0 = goodG2BSource_5();
  return printIntLine((__int16)(v0 * v0));
}

//----- (0000000000427AD4) ----------------------------------------------------
__int64 goodB2GSource_5()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000427B2E) ----------------------------------------------------
int goodB2G_204()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_5();
  if ( v1 < -181 || v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000427B89) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_42_good()
{
  goodB2G_204();
  return goodG2B_223();
}

//----- (0000000000427BA3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_badSink(a1);
}

//----- (0000000000427BBA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_goodG2BSink(a1);
}

//----- (0000000000427BD1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53d_goodB2GSink(a1);
}

//----- (0000000000427BE8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_8 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 65B104: using guessed type int staticFive_8;

//----- (0000000000427C71) ----------------------------------------------------
int goodB2G1_131()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_8 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 65B104: using guessed type int staticFive_8;

//----- (0000000000427D18) ----------------------------------------------------
int goodB2G2_131()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_8 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 65B104: using guessed type int staticFive_8;

//----- (0000000000427DB3) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B104: using guessed type int staticFive_8;

//----- (0000000000427E00) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = 2;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B104: using guessed type int staticFive_8;

//----- (0000000000427E41) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_07_good()
{
  goodB2G1_131();
  goodB2G2_131();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (0000000000427E6F) ----------------------------------------------------
__int64 __fastcall badSource_6(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000427E9C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_bad()
{
  int v0; // eax

  v0 = badSource_6(0);
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000427ECD) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return 2LL;
}

//----- (0000000000427EE0) ----------------------------------------------------
int goodG2B_224()
{
  int v0; // eax

  v0 = goodG2BSource_6();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000427F11) ----------------------------------------------------
__int64 __fastcall goodB2GSource_6(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000427F3E) ----------------------------------------------------
int goodB2G_205()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_6(0);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000427F81) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_42_good()
{
  goodB2G_205();
  return goodG2B_224();
}

//----- (0000000000427F9B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000427FDF) ----------------------------------------------------
int goodB2G1_132()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000428043) ----------------------------------------------------
int goodB2G2_132()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004280A7) ----------------------------------------------------
int goodG2B1_113()
{
  return printUnsignedLine(4u);
}

//----- (00000000004280D3) ----------------------------------------------------
int goodG2B2_113()
{
  return printUnsignedLine(4u);
}

//----- (00000000004280FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_02_good()
{
  goodB2G1_132();
  goodB2G2_132();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (000000000042812D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_22_badSink(v2);
}
// 65B2EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_badGlobal;

//----- (00000000004281A1) ----------------------------------------------------
int goodB2G1_133()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Sink(v2);
}
// 65B2F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G1Global;

//----- (0000000000428215) ----------------------------------------------------
int goodB2G2_133()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Sink(v2);
}
// 65B2F4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodB2G2Global;

//----- (0000000000428289) ----------------------------------------------------
int goodG2B_225()
{
  CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BSink(2);
}
// 65B2F8: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_square_22_goodG2BGlobal;

//----- (00000000004282B5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_22_good()
{
  goodB2G1_133();
  goodB2G2_133();
  return goodG2B_225();
}

//----- (00000000004282D9) ----------------------------------------------------
int __fastcall badSink_35(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004282F9) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_35)(v2);
}

//----- (000000000042836C) ----------------------------------------------------
int __fastcall goodG2BSink_35(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042838C) ----------------------------------------------------
int goodG2B_226()
{
  return goodG2BSink_35(2);
}

//----- (00000000004283B7) ----------------------------------------------------
int __fastcall goodB2GSink_25(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004283E9) ----------------------------------------------------
__int64 goodB2G_206()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_25)(v2);
}

//----- (000000000042845C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_add_44_good()
{
  goodG2B_226();
  return goodB2G_206();
}

//----- (0000000000428476) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004284FD) ----------------------------------------------------
int goodB2G1_134()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004285A2) ----------------------------------------------------
int goodB2G2_134()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042863B) ----------------------------------------------------
int goodG2B1_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000428686) ----------------------------------------------------
int goodG2B2_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004286C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_09_good()
{
  goodB2G1_134();
  goodB2G2_134();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (00000000004286F3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042874B) ----------------------------------------------------
int goodB2G1_135()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;
// 65B308: using guessed type int globalFalse;

//----- (00000000004287CF) ----------------------------------------------------
int goodB2G2_135()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B114: using guessed type int globalTrue;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000428847) ----------------------------------------------------
int goodG2B1_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;
// 65B308: using guessed type int globalFalse;

//----- (0000000000428893) ----------------------------------------------------
int goodG2B2_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 65B114: using guessed type int globalTrue;

//----- (00000000004288D3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (0000000000428901) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 )
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042898D) ----------------------------------------------------
int goodB2G1_136()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000428A3A) ----------------------------------------------------
int goodB2G2_136()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  unsigned int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE && v6 )
  {
    if ( v6 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * v6);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000428ADB) ----------------------------------------------------
int goodG2B1_116()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000428B2B) ----------------------------------------------------
int goodG2B2_116()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000428B6F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_09_good()
{
  goodB2G1_136();
  goodB2G2_136();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (0000000000428B9D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_05_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_6 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printIntLine((__int16)(v4 * v4));
  return result;
}
// 65B108: using guessed type int staticTrue_6;

//----- (0000000000428C21) ----------------------------------------------------
int goodB2G1_137()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_6 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  if ( v4 < -181 || v4 > 181 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 * v4));
}
// 65B108: using guessed type int staticTrue_6;
// 65B2FC: using guessed type int staticFalse_6;

//----- (0000000000428CD3) ----------------------------------------------------
int goodB2G2_137()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_6 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v4 < -181 || v4 > 181 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 * v4));
  }
  return result;
}
// 65B108: using guessed type int staticTrue_6;

//----- (0000000000428D79) ----------------------------------------------------
int goodG2B1_117()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B108: using guessed type int staticTrue_6;
// 65B2FC: using guessed type int staticFalse_6;

//----- (0000000000428DC9) ----------------------------------------------------
int goodG2B2_117()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_6 )
    v1 = 2;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printIntLine((__int16)(v1 * v1));
  return result;
}
// 65B108: using guessed type int staticTrue_6;

//----- (0000000000428E0D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_05_good()
{
  goodB2G1_137();
  goodB2G2_137();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (0000000000428E3B) ----------------------------------------------------
int __fastcall badSink_36(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (0000000000428E65) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_41_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return badSink_36(v1);
}

//----- (0000000000428EC6) ----------------------------------------------------
int __fastcall goodG2BSink_36(__int16 a1)
{
  return printIntLine((__int16)(a1 * a1));
}

//----- (0000000000428EF0) ----------------------------------------------------
int goodG2B_227()
{
  return goodG2BSink_36(2);
}

//----- (0000000000428F11) ----------------------------------------------------
int __fastcall goodB2GSink_26(__int16 a1)
{
  int result; // eax

  if ( a1 < -181 || a1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 * a1));
  return result;
}

//----- (0000000000428F5D) ----------------------------------------------------
int goodB2G_207()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return goodB2GSink_26(v1);
}

//----- (0000000000428FBE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_41_good()
{
  goodB2G_207();
  return goodG2B_227();
}

//----- (0000000000428FD8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429030) ----------------------------------------------------
int goodB2G1_138()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;
// 65B120: using guessed type __int64 stdin;

//----- (00000000004290B4) ----------------------------------------------------
int goodB2G2_138()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042912C) ----------------------------------------------------
int goodG2B1_118()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;
// 440278: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000429178) ----------------------------------------------------
int goodG2B2_118()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 440274: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004291B8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_09_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (00000000004291E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_52c_badSink(a1);
}

//----- (00000000004291FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_52c_goodG2BSink(a1);
}

//----- (0000000000429214) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_square_52c_goodB2GSink(a1);
}

//----- (000000000042922B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_badSink(a1);
}

//----- (0000000000429242) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_goodG2BSink(a1);
}

//----- (0000000000429259) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54d_goodB2GSink(a1);
}

//----- (0000000000429270) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000429290) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004292B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004292E2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    v2 = v1 + 1;
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B10C: using guessed type int staticTrue_7;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429337) ----------------------------------------------------
int goodB2G1_139()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B10C: using guessed type int staticTrue_7;
// 65B120: using guessed type __int64 stdin;
// 65B300: using guessed type int staticFalse_7;

//----- (00000000004293AC) ----------------------------------------------------
int goodB2G2_139()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 + 1;
      result = printUnsignedLine(v1 + 1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B10C: using guessed type int staticTrue_7;
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429415) ----------------------------------------------------
int goodG2B1_119()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B10C: using guessed type int staticTrue_7;
// 65B300: using guessed type int staticFalse_7;

//----- (0000000000429460) ----------------------------------------------------
int goodG2B2_119()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    v1 = 2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 65B10C: using guessed type int staticTrue_7;

//----- (000000000042949F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_05_good()
{
  goodB2G1_139();
  goodB2G2_139();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (00000000004294CD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429511) ----------------------------------------------------
int goodG2B_228()
{
  return printUnsignedLine(4u);
}

//----- (000000000042953D) ----------------------------------------------------
int goodB2G_208()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004295A1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_good()
{
  goodG2B_228();
  return goodB2G_208();
}

//----- (00000000004295BB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData);
  return result;
}
// 65B378: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData;

//----- (00000000004295E6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData )
    result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData);
  return result;
}
// 65B37C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData;

//----- (0000000000429611) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData )
  {
    if ( (unsigned int)CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData);
  }
  return result;
}
// 65B374: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData;

//----- (0000000000429651) ----------------------------------------------------
int __fastcall badSink_37(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000429671) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return badSink_37(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (00000000004296A9) ----------------------------------------------------
int __fastcall goodG2BSink_37(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004296C9) ----------------------------------------------------
int goodG2B_229()
{
  return goodG2BSink_37(2);
}

//----- (00000000004296EB) ----------------------------------------------------
int __fastcall goodB2GSink_27(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042971D) ----------------------------------------------------
int goodB2G_209()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return goodB2GSink_27(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429755) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_good()
{
  goodB2G_209();
  return goodG2B_229();
}

//----- (000000000042976F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v6 * v6);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004297F9) ----------------------------------------------------
int goodB2G1_140()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004298AF) ----------------------------------------------------
int goodB2G2_140()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 < -65534 || v6 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 * v6);
  }
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000429959) ----------------------------------------------------
int goodG2B1_120()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004299A7) ----------------------------------------------------
int goodG2B2_120()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 * v1);
  return result;
}
// 44027C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004299E9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_13_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (0000000000429A17) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_34_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 * v1));
}

//----- (0000000000429A97) ----------------------------------------------------
int goodG2B_230()
{
  return printIntLine(4u);
}

//----- (0000000000429AD7) ----------------------------------------------------
int goodB2G_210()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (__int16)v1 < -181 || (__int16)v1 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 * v1));
  return result;
}

//----- (0000000000429B79) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_34_good()
{
  goodG2B_230();
  return goodB2G_210();
}

//----- (0000000000429B93) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) * *(_WORD *)(a1 + 4)));
}

//----- (0000000000429BC7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) * *(_WORD *)(a1 + 4)));
}

//----- (0000000000429BFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 < -181 || v2 > 181 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 * v2));
  return result;
}

//----- (0000000000429C51) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_badSink(a1);
}

//----- (0000000000429C68) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_goodG2BSink(a1);
}

//----- (0000000000429C7F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000429C96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53d_badSink(a1);
}

//----- (0000000000429CAD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53d_goodG2BSink(a1);
}

//----- (0000000000429CC4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53d_goodB2GSink(a1);
}

//----- (0000000000429CDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429D28) ----------------------------------------------------
int goodG2B_231()
{
  return printUnsignedLine(3u);
}

//----- (0000000000429D5F) ----------------------------------------------------
int goodB2G_211()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 + 1;
  return printUnsignedLine(v3 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429DBE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_34_good()
{
  goodG2B_231();
  return goodB2G_211();
}

//----- (0000000000429DD8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000429E03) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000429E2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000429E6B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_badSink(a1);
}

//----- (0000000000429E82) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_goodG2BSink(a1);
}

//----- (0000000000429E99) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53c_goodB2GSink(a1);
}

//----- (0000000000429EB0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429EE8) ----------------------------------------------------
int goodG2B_232()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_goodG2BSink(2);
}

//----- (0000000000429F0A) ----------------------------------------------------
int goodB2G_212()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_54b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (0000000000429F42) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_54_good()
{
  goodG2B_232();
  return goodB2G_212();
}

//----- (0000000000429F5C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000429F81) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (0000000000429FA6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (0000000000429FE0) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (0000000000429FEB) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (0000000000429FF6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_8();
  if ( result )
  {
    v2 = v1 * v1;
    result = printUnsignedLine(v1 * v1);
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042A056) ----------------------------------------------------
int goodB2G1_141()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  if ( v1 < -65534 || v1 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printUnsignedLine(v1 * v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042A0E2) ----------------------------------------------------
int goodB2G2_141()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v1 < -65534 || v1 > 65534 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printUnsignedLine(v1 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042A162) ----------------------------------------------------
int goodG2B1_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000042A1B6) ----------------------------------------------------
int goodG2B2_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000042A1FE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_08_good()
{
  goodB2G1_141();
  goodB2G2_141();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (000000000042A22C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_badData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_badSink();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B36C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_badData;

//----- (000000000042A26D) ----------------------------------------------------
int goodG2B_233()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_goodG2BSink();
}
// 65B368: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodG2BData;

//----- (000000000042A298) ----------------------------------------------------
int goodB2G_213()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_68b_goodB2GSink();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B370: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_goodB2GData;

//----- (000000000042A2D9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_68_good()
{
  goodG2B_233();
  return goodB2G_213();
}

//----- (000000000042A2F3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (000000000042A367) ----------------------------------------------------
int goodB2G1_142()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000042A3FB) ----------------------------------------------------
int goodB2G2_142()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000042A48F) ----------------------------------------------------
int goodG2B1_122()
{
  return printUnsignedLine(4u);
}

//----- (000000000042A4BB) ----------------------------------------------------
int goodG2B2_122()
{
  return printUnsignedLine(4u);
}

//----- (000000000042A4E7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_03_good()
{
  goodB2G1_142();
  goodB2G2_142();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (000000000042A515) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_badSink();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B378: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_badData;

//----- (000000000042A556) ----------------------------------------------------
int goodG2B_234()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_goodG2BSink();
}
// 65B37C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodG2BData;

//----- (000000000042A581) ----------------------------------------------------
int goodB2G_214()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68b_goodB2GSink();
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;
// 65B374: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_goodB2GData;

//----- (000000000042A5C2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_68_good()
{
  goodG2B_234();
  return goodB2G_214();
}

//----- (000000000042A5DC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000042A62E) ----------------------------------------------------
int goodB2G_215()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000042A6A0) ----------------------------------------------------
int goodG2B_235()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000042A6F2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_17_good()
{
  goodB2G_215();
  return goodG2B_235();
}

//----- (000000000042A70C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042A731) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042A756) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_54e_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000042A790) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    result = v1;
    if ( v1 )
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042A7ED) ----------------------------------------------------
unsigned int goodB2G1_143()
{
  unsigned int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  result = v1;
  if ( v1 )
  {
    if ( v1 > 0x7FFFFFFE )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = 2 * v1;
      result = printUnsignedLine(2 * v1);
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042A86C) ----------------------------------------------------
int goodB2G2_143()
{
  int result; // eax
  unsigned int v1; // [rsp+8h] [rbp-8h]
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    result = v1;
    if ( v1 )
    {
      if ( v1 > 0x7FFFFFFE )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v2 = 2 * v1;
        result = printUnsignedLine(2 * v1);
      }
    }
  }
  return result;
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B118: using guessed type int globalFive;
// 65B120: using guessed type __int64 stdin;

//----- (000000000042A8DF) ----------------------------------------------------
int goodG2B1_123()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000042A931) ----------------------------------------------------
int goodG2B2_123()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B118: using guessed type int globalFive;

//----- (000000000042A977) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_good()
{
  goodB2G1_143();
  goodB2G2_143();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (000000000042A9A5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_67b_badSink(v2);
}

//----- (000000000042AA15) ----------------------------------------------------
int goodG2B_236()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_add_67b_goodG2BSink(2);
}

//----- (000000000042AA3D) ----------------------------------------------------
int goodB2G_216()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_add_67b_goodB2GSink(v2);
}

//----- (000000000042AAAD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_67_good()
{
  goodG2B_236();
  return goodB2G_216();
}

//----- (000000000042AAC7) ----------------------------------------------------
int __fastcall badSink_38(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000042AAE8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_44_bad()
{
  return badSink_38(-1);
}

//----- (000000000042AB13) ----------------------------------------------------
int __fastcall goodG2BSink_38(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000042AB34) ----------------------------------------------------
int goodG2B_237()
{
  return goodG2BSink_38(2);
}

//----- (000000000042AB5F) ----------------------------------------------------
int __fastcall goodB2GSink_28(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000042ABA0) ----------------------------------------------------
int goodB2G_217()
{
  return goodB2GSink_28(-1);
}

//----- (000000000042ABCB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_44_good()
{
  goodG2B_237();
  return goodB2G_217();
}

//----- (000000000042ABE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_badSink(a1);
}

//----- (000000000042ABFC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_goodG2BSink(a1);
}

//----- (000000000042AC13) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_53c_goodB2GSink(a1);
}

//----- (000000000042AC2A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54e_badSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000042AC4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 * a1);
}

//----- (000000000042AC6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 < -65534 || a1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 * a1);
  return result;
}

//----- (000000000042ACAD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_66_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE190_Integer_Overflow__short_rand_square_66b_badSink((__int64)&v4);
}

//----- (000000000042AD17) ----------------------------------------------------
int goodG2B_238()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_rand_square_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042AD41) ----------------------------------------------------
int goodB2G_218()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE190_Integer_Overflow__short_rand_square_66b_goodB2GSink((__int64)&v4);
}

//----- (000000000042ADAB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_66_good()
{
  goodG2B_238();
  return goodB2G_218();
}

//----- (000000000042ADC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042ADE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042AE05) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042AE37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (000000000042AEAD) ----------------------------------------------------
int goodB2G_219()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000042AF43) ----------------------------------------------------
int goodG2B_239()
{
  return printUnsignedLine(4u);
}

//----- (000000000042AF71) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_18_good()
{
  goodB2G_219();
  return goodG2B_239();
}

//----- (000000000042AF8B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_badSink(v2);
}

//----- (000000000042AFF5) ----------------------------------------------------
int goodG2B_240()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_goodG2BSink(2);
}

//----- (000000000042B017) ----------------------------------------------------
int goodB2G_220()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_54b_goodB2GSink(v2);
}

//----- (000000000042B081) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_multiply_54_good()
{
  goodG2B_240();
  return goodB2G_220();
}

//----- (000000000042B09B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v6 + 1);
  return result;
}

//----- (000000000042B12A) ----------------------------------------------------
int goodB2G1_144()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (000000000042B1D7) ----------------------------------------------------
int goodB2G2_144()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}

//----- (000000000042B278) ----------------------------------------------------
int goodG2B1_124()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042B2CB) ----------------------------------------------------
int goodG2B2_124()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042B312) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_11_good()
{
  goodB2G1_144();
  goodB2G2_144();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (000000000042B340) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042B360) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042B380) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042B3B2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042B3EA) ----------------------------------------------------
int goodG2B_241()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_goodG2BSink(2);
}

//----- (000000000042B40C) ----------------------------------------------------
int goodB2G_221()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042B444) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_53_good()
{
  goodG2B_241();
  return goodB2G_221();
}

//----- (000000000042B45E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_15_bad()
{
  return printUnsignedLine(0xFFFFFFFE);
}

//----- (000000000042B490) ----------------------------------------------------
int goodB2G1_145()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042B4D7) ----------------------------------------------------
int goodB2G2_145()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042B51E) ----------------------------------------------------
int goodG2B1_125()
{
  return printUnsignedLine(4u);
}

//----- (000000000042B550) ----------------------------------------------------
int goodG2B2_125()
{
  return printUnsignedLine(4u);
}

//----- (000000000042B582) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_15_good()
{
  goodB2G1_145();
  goodB2G2_145();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (000000000042B5B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_badSink(a1);
}

//----- (000000000042B5C7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_goodG2BSink(a1);
}

//----- (000000000042B5DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_add_53d_goodB2GSink(a1);
}

//----- (000000000042B5F5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_square_61b_badSource()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000042B608) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042B61B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_square_61b_goodB2GSource()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000042B62E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v6 * v6);
  if ( v6 < -65534 || v6 > 65534 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 * v6);
}

//----- (000000000042B6FD) ----------------------------------------------------
int goodB2G_222()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 < -65534 || v11 > 65534 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v11 * v11);
  }
  else if ( v11 < -65534 || v11 > 65534 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(v11 * v11);
  }
  return result;
}

//----- (000000000042B82F) ----------------------------------------------------
int goodG2B_242()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(4u);
}

//----- (000000000042B896) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_12_good()
{
  goodB2G_222();
  return goodG2B_242();
}

//----- (000000000042B8B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042B8D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(2 * a1);
  return result;
}

//----- (000000000042B8FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_65b_goodB2GSink(unsigned int a1)
{
  int result; // eax

  if ( a1 )
  {
    if ( a1 > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * a1);
  }
  return result;
}

//----- (000000000042B934) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_add_68_badData + 1);
}
// 65B380: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_68_badData;

//----- (000000000042B95A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_add_68_goodG2BData + 1);
}
// 65B388: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_68_goodG2BData;

//----- (000000000042B980) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_add_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_add_68_goodB2GData + 1);
  return result;
}
// 65B384: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_68_goodB2GData;

//----- (000000000042B9B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53c_badSink(a1);
}

//----- (000000000042B9CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53c_goodG2BSink(a1);
}

//----- (000000000042B9E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_add_53c_goodB2GSink(a1);
}

//----- (000000000042B9FD) ----------------------------------------------------
__int64 badSource_7()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000042BA10) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_42_bad()
{
  int result; // eax

  result = badSource_7();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (000000000042BA46) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return 2LL;
}

//----- (000000000042BA59) ----------------------------------------------------
int goodG2B_243()
{
  int result; // eax

  result = goodG2BSource_7();
  if ( result )
    result = printUnsignedLine(2 * result);
  return result;
}

//----- (000000000042BA8F) ----------------------------------------------------
__int64 goodB2GSource_7()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000042BAA2) ----------------------------------------------------
unsigned int goodB2G_223()
{
  unsigned int result; // eax

  result = goodB2GSource_7();
  if ( result )
  {
    if ( result > 0x7FFFFFFE )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(2 * result);
  }
  return result;
}

//----- (000000000042BAED) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_42_good()
{
  goodB2G_223();
  return goodG2B_243();
}

//----- (000000000042BB07) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = -1;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B110: using guessed type int staticTrue_8;

//----- (000000000042BB4B) ----------------------------------------------------
int goodB2G1_146()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = -1;
  result = staticFalse_8;
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  if ( v1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 65B110: using guessed type int staticTrue_8;
// 65B304: using guessed type int staticFalse_8;

//----- (000000000042BBB0) ----------------------------------------------------
int goodB2G2_146()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = -1;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 65B110: using guessed type int staticTrue_8;

//----- (000000000042BC09) ----------------------------------------------------
int goodG2B1_126()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B110: using guessed type int staticTrue_8;
// 65B304: using guessed type int staticFalse_8;

//----- (000000000042BC59) ----------------------------------------------------
int goodG2B2_126()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_8 )
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 )
      result = printUnsignedLine(2 * v1);
  }
  return result;
}
// 65B110: using guessed type int staticTrue_8;

//----- (000000000042BC9D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_multiply_05_good()
{
  goodB2G1_146();
  goodB2G2_146();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (000000000042BCCB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042BD0E) ----------------------------------------------------
int goodB2G1_147()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042BD65) ----------------------------------------------------
int goodB2G2_147()
{
  int v1; // [rsp+8h] [rbp-8h]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042BDBC) ----------------------------------------------------
int goodG2B1_127()
{
  return printUnsignedLine(3u);
}

//----- (000000000042BDE9) ----------------------------------------------------
int goodG2B2_127()
{
  return printUnsignedLine(3u);
}

//----- (000000000042BE16) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_add_15_good()
{
  goodB2G1_147();
  goodB2G2_147();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (000000000042BE44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042BE64) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042BE84) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042BEB6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_badSink(a1);
}

//----- (000000000042BECD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_goodG2BSink(a1);
}

//----- (000000000042BEE4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_multiply_53c_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_multiply_53d_goodB2GSink(a1);
}

//----- (000000000042BEFB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_63_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_square_63b_badSink(&v4);
}

//----- (000000000042BF5D) ----------------------------------------------------
int goodG2B_244()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_rand_square_63b_goodG2BSink(&v1);
}

//----- (000000000042BF7F) ----------------------------------------------------
int goodB2G_224()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_square_63b_goodB2GSink(&v4);
}

//----- (000000000042BFE1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_square_63_good()
{
  goodG2B_244();
  return goodB2G_224();
}

//----- (000000000042BFFB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_68_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_68_badData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_68b_badSink();
}
// 65B380: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_68_badData;

//----- (000000000042C026) ----------------------------------------------------
int goodG2B_245()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_add_68b_goodG2BSink();
}
// 65B388: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_68_goodG2BData;

//----- (000000000042C051) ----------------------------------------------------
int goodB2G_225()
{
  CWE190_Integer_Overflow__unsigned_int_max_add_68_goodB2GData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_add_68b_goodB2GSink();
}
// 65B384: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_add_68_goodB2GData;

//----- (000000000042C07C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_add_68_good()
{
  goodG2B_245();
  return goodB2G_225();
}

//----- (000000000042C096) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_square_61b_badSource();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000042C0C8) ----------------------------------------------------
int goodG2B_246()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_square_61b_goodG2BSource();
  return printUnsignedLine(v0 * v0);
}

//----- (000000000042C0FA) ----------------------------------------------------
int goodB2G_226()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_max_square_61b_goodB2GSource();
  if ( v1 < -65534 || v1 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 * v1);
  return result;
}

//----- (000000000042C14C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_square_61_good()
{
  goodG2B_246();
  return goodB2G_226();
}

//----- (000000000042C166) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_badSink(a1);
}

//----- (000000000042C17D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_goodG2BSink(a1);
}

//----- (000000000042C194) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52b_goodB2GSink(unsigned int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_52c_goodB2GSink(a1);
}

//----- (000000000042C1AB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_badSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042C1E3) ----------------------------------------------------
int goodG2B_247()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_goodG2BSink(2);
}

//----- (000000000042C205) ----------------------------------------------------
int goodB2G_227()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_square_54b_goodB2GSink(v1);
}
// 400970: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 65B120: using guessed type __int64 stdin;

//----- (000000000042C23D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_square_54_good()
{
  goodG2B_247();
  return goodB2G_227();
}

//----- (000000000042C257) ----------------------------------------------------
__int64 badSource_8()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000042C2B6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_42_bad()
{
  int v0; // eax

  v0 = badSource_8();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042C2E7) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 2LL;
}

//----- (000000000042C2FA) ----------------------------------------------------
int goodG2B_248()
{
  int v0; // eax

  v0 = goodG2BSource_8();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042C32B) ----------------------------------------------------
__int64 goodB2GSource_8()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000042C38A) ----------------------------------------------------
int goodB2G_228()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_8();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042C3CD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_add_42_good()
{
  goodB2G_228();
  return goodG2B_248();
}

//----- (000000000042C3E7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 * v2);
}

//----- (000000000042C45B) ----------------------------------------------------
int goodB2G1_148()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000042C4EF) ----------------------------------------------------
int goodB2G2_148()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 < -65534 || v2 > 65534 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 * v2);
  return result;
}

//----- (000000000042C583) ----------------------------------------------------
int goodG2B1_128()
{
  return printUnsignedLine(4u);
}

//----- (000000000042C5AF) ----------------------------------------------------
int goodG2B2_128()
{
  return printUnsignedLine(4u);
}

//----- (000000000042C5DB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_square_02_good()
{
  goodB2G1_148();
  goodB2G2_148();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (000000000042C609) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000042C62A) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000042C655) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000042C676) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000042C69B) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000042C6C1) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000042C6E5) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000042C709) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000042C72D) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000042C751) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000042C781) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000042C7A2) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000042C7C6) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000042C7F1) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000042C81D) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000042C874) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400990: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C94D) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400A40: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042CA01) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000042CA0C) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000042CA17) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000042CA2D) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000042CA33) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000042CA39) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000042CA3F) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000042CA45) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000042CA4B) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000042CA51) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000042CA57) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000042CA5D) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000042CA63) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000042CA69) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000042CA6F) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000042CA75) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000042CA7B) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000042CA81) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000042CA87) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000042CA8D) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000042CA93) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000042CA99) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000042CACC) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000042CB70) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000042CBA4) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000042CBC3) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000042CC38) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000042CC52) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000042CC6C) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000042CCA0) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 65ADD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 65ADD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000042CD14) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 2586 function(s) have been successfully decompiled
