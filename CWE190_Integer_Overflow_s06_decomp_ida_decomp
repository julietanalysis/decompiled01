/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400BF0();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// int listen(int fd, int n);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int connect(int fd, const struct sockaddr *addr, socklen_t len);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int bind(int fd, const struct sockaddr *addr, socklen_t len);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// in_addr_t inet_addr(const char *cp);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE190_Integer_Overflow__int64_t_max_postinc_01_bad();
int goodG2B();
int goodB2G();
int CWE190_Integer_Overflow__int64_t_max_postinc_01_good();
int CWE190_Integer_Overflow__short_max_postinc_52_bad();
int goodG2B_0();
int goodB2G_0();
int CWE190_Integer_Overflow__short_max_postinc_52_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_04_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1();
int goodG2B2();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_04_good();
void CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad();
void goodB2G_1();
int goodG2B_1();
int CWE190_Integer_Overflow__int64_t_rand_postinc_17_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54d_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__short_max_postinc_16_bad();
int goodB2G_2();
int goodG2B_2();
int CWE190_Integer_Overflow__short_max_postinc_16_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_53_bad();
int goodG2B_3();
int goodB2G_3();
int CWE190_Integer_Overflow__int_fscanf_postinc_53_good();
int CWE190_Integer_Overflow__int_max_postinc_15_bad();
int goodB2G1_0();
int goodB2G2_0();
int goodG2B1_0();
int goodG2B2_0();
int CWE190_Integer_Overflow__int_max_postinc_15_good();
int CWE190_Integer_Overflow__char_max_postinc_02_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_1();
int goodG2B2_1();
int CWE190_Integer_Overflow__char_max_postinc_02_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_postinc_04_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_2();
int goodG2B2_2();
int CWE190_Integer_Overflow__char_max_postinc_04_good();
int CWE190_Integer_Overflow__char_max_postinc_31_bad();
int goodG2B_4();
int goodB2G_4();
int CWE190_Integer_Overflow__char_max_postinc_31_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_bad();
int goodB2G_5();
int goodG2B_5();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_64b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_64b_goodB2GSink(_BYTE *a1);
__int64 badSource();
int CWE190_Integer_Overflow__int_max_postinc_42_bad();
__int64 goodG2BSource();
int goodG2B_6();
__int64 goodB2GSource();
int goodB2G_6();
int CWE190_Integer_Overflow__int_max_postinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_09_bad();
int goodB2G1_3();
int goodB2G2_3();
int goodG2B1_3();
int goodG2B2_3();
int CWE190_Integer_Overflow__int64_t_max_postinc_09_good();
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__short_max_postinc_51_bad();
int goodG2B_7();
int goodB2G_7();
int CWE190_Integer_Overflow__short_max_postinc_51_good();
int CWE190_Integer_Overflow__int_fgets_postinc_15_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_4();
int goodG2B2_4();
int CWE190_Integer_Overflow__int_fgets_postinc_15_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_67b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_bad();
int goodB2G_8();
int goodG2B_8();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_goodG2BSink(char a1);
__int64 __fastcall badSource_0(unsigned int a1);
int CWE190_Integer_Overflow__int_fgets_postinc_42_bad();
__int64 goodG2BSource_0();
int goodG2B_9();
__int64 __fastcall goodB2GSource_0(unsigned int a1);
int goodB2G_9();
int CWE190_Integer_Overflow__int_fgets_postinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_bad();
int goodG2B_10();
int goodB2G_10();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_5();
int goodG2B2_5();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_6();
int goodG2B2_6();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_good();
int badSink();
int CWE190_Integer_Overflow__short_max_postinc_45_bad();
int goodG2BSink();
int goodG2B_11();
int goodB2GSink();
int goodB2G_11();
int CWE190_Integer_Overflow__short_max_postinc_45_good();
int CWE190_Integer_Overflow__int_max_postinc_05_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B1_7();
int goodG2B2_7();
int CWE190_Integer_Overflow__int_max_postinc_05_good();
int CWE190_Integer_Overflow__char_rand_postinc_64_bad();
int goodG2B_12();
int goodB2G_12();
int CWE190_Integer_Overflow__char_rand_postinc_64_good();
int __fastcall badSink_0(int a1);
int CWE190_Integer_Overflow__int_max_postinc_41_bad();
int __fastcall goodG2BSink_0(int a1);
int goodG2B_13();
int __fastcall goodB2GSink_0(int a1);
int goodB2G_13();
int CWE190_Integer_Overflow__int_max_postinc_41_good();
int CWE190_Integer_Overflow__short_max_postinc_06_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_8();
int goodG2B2_8();
int CWE190_Integer_Overflow__short_max_postinc_06_good();
__int64 CWE190_Integer_Overflow__int_rand_postinc_65_bad();
int goodG2B_14();
__int64 goodB2G_14();
__int64 CWE190_Integer_Overflow__int_rand_postinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_61_bad();
int goodG2B_15();
int goodB2G_15();
int CWE190_Integer_Overflow__int64_t_rand_postinc_61_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_9();
int goodG2B2_9();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_34_bad();
int goodG2B_16();
int goodB2G_16();
int CWE190_Integer_Overflow__char_fscanf_postinc_34_good();
int CWE190_Integer_Overflow__int_max_postinc_34_bad();
int goodG2B_17();
int goodB2G_17();
int CWE190_Integer_Overflow__int_max_postinc_34_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_10();
int goodG2B2_10();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_67_bad();
int goodG2B_18();
int goodB2G_18();
int CWE190_Integer_Overflow__short_fscanf_postinc_67_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_07_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_11();
int goodG2B2_11();
int CWE190_Integer_Overflow__int64_t_rand_postinc_07_good();
int CWE190_Integer_Overflow__char_max_postinc_22_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B_19();
int CWE190_Integer_Overflow__char_max_postinc_22_good();
int __fastcall badSink_1(int a1);
int CWE190_Integer_Overflow__int_fgets_postinc_41_bad();
int __fastcall goodG2BSink_1(int a1);
int goodG2B_20();
int __fastcall goodB2GSink_1(int a1);
int goodB2G_19();
int CWE190_Integer_Overflow__int_fgets_postinc_41_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_52_bad();
int goodG2B_21();
int goodB2G_20();
int CWE190_Integer_Overflow__int_fscanf_postinc_52_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_bad();
int goodG2B_22();
int goodB2G_21();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_good();
__int64 __fastcall badSource_1(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_bad();
__int64 goodG2BSource_1();
int goodG2B_23();
__int64 __fastcall goodB2GSource_1(__int64 a1);
int goodB2G_22();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_16_bad();
int goodB2G_23();
int goodG2B_24();
int CWE190_Integer_Overflow__int_fscanf_postinc_16_good();
int CWE190_Integer_Overflow__int_fgets_postinc_34_bad();
int goodG2B_25();
int goodB2G_24();
int CWE190_Integer_Overflow__int_fgets_postinc_34_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_max_postinc_13_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_12();
int goodG2B2_12();
int CWE190_Integer_Overflow__char_max_postinc_13_good();
int CWE190_Integer_Overflow__int_max_postinc_66_bad();
int goodG2B_26();
int goodB2G_25();
int CWE190_Integer_Overflow__int_max_postinc_66_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B1_13();
int goodG2B2_13();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_14();
int goodG2B2_14();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_51_bad();
int goodG2B_27();
int goodB2G_26();
int CWE190_Integer_Overflow__int_fscanf_postinc_51_good();
int __fastcall badSink_2(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_bad();
int __fastcall goodG2BSink_2(__int64 a1);
int goodG2B_28();
int __fastcall goodB2GSink_2(__int64 a1);
int goodB2G_27();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__char_max_postinc_11_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_15();
int goodG2B2_15();
int CWE190_Integer_Overflow__char_max_postinc_11_good();
__int64 badSource_2();
int CWE190_Integer_Overflow__short_max_postinc_42_bad();
__int64 goodG2BSource_2();
int goodG2B_29();
__int64 goodB2GSource_2();
int goodB2G_28();
int CWE190_Integer_Overflow__short_max_postinc_42_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_bad();
int goodG2B_30();
int goodB2G_29();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_63_bad();
int goodG2B_31();
int goodB2G_30();
int CWE190_Integer_Overflow__int_connect_socket_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_07_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_16();
int goodG2B2_16();
int CWE190_Integer_Overflow__short_fscanf_postinc_07_good();
int CWE190_Integer_Overflow__int_rand_postinc_14_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B1_17();
int goodG2B2_17();
int CWE190_Integer_Overflow__int_rand_postinc_14_good();
int CWE190_Integer_Overflow__char_rand_postinc_09_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_18();
int goodG2B2_18();
int CWE190_Integer_Overflow__char_rand_postinc_09_good();
int CWE190_Integer_Overflow__int_rand_postinc_32_bad();
int goodG2B_32();
int goodB2G_31();
int CWE190_Integer_Overflow__int_rand_postinc_32_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_01_bad();
int goodG2B_33();
int goodB2G_32();
int CWE190_Integer_Overflow__int_connect_socket_postinc_01_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_63_bad();
int goodG2B_34();
int goodB2G_33();
int CWE190_Integer_Overflow__int_listen_socket_postinc_63_good();
int CWE190_Integer_Overflow__char_max_postinc_53_bad();
int goodG2B_35();
int goodB2G_34();
int CWE190_Integer_Overflow__char_max_postinc_53_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_68b_badSink();
int CWE190_Integer_Overflow__char_fscanf_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__char_fscanf_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_52_bad();
int goodG2B_36();
int goodB2G_35();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_52_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_bad();
int goodG2B_37();
int goodB2G_36();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_16_bad();
int goodB2G_37();
int goodG2B_38();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_16_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_13_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_19();
int goodG2B2_19();
int CWE190_Integer_Overflow__int_listen_socket_postinc_13_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53d_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_rand_postinc_04_bad();
int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_20();
int goodG2B2_20();
int CWE190_Integer_Overflow__int_rand_postinc_04_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_09_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_21();
int goodG2B2_21();
int CWE190_Integer_Overflow__int_connect_socket_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_18_bad();
int goodB2G_38();
int goodG2B_39();
int CWE190_Integer_Overflow__int_fscanf_postinc_18_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52c_goodB2GSink(char a1);
__int64 __fastcall badSource_3(unsigned __int8 a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_42_bad();
__int64 goodG2BSource_3();
int goodG2B_40();
__int64 __fastcall goodB2GSource_3(unsigned __int8 a1);
int goodB2G_39();
int CWE190_Integer_Overflow__char_fscanf_postinc_42_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_68_bad();
int goodG2B_41();
int goodB2G_40();
int CWE190_Integer_Overflow__char_fscanf_postinc_68_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_51_bad();
int goodG2B_42();
int goodB2G_41();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_51_good();
int __fastcall badSink_3(__int16 a1);
__int64 CWE190_Integer_Overflow__short_rand_postinc_44_bad();
int __fastcall goodG2BSink_3(__int16 a1);
int goodG2B_43();
int __fastcall goodB2GSink_3(__int16 a1);
__int64 goodB2G_42();
__int64 CWE190_Integer_Overflow__short_rand_postinc_44_good();
void CWE190_Integer_Overflow__int_listen_socket_postinc_17_bad();
void goodB2G_43();
int goodG2B_44();
int CWE190_Integer_Overflow__int_listen_socket_postinc_17_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_postinc_16_bad();
int goodB2G_44();
int goodG2B_45();
int CWE190_Integer_Overflow__short_rand_postinc_16_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE190_Integer_Overflow__short_max_postinc_08_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B1_22();
int goodG2B2_22();
int CWE190_Integer_Overflow__short_max_postinc_08_good();
int badSink_4();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_bad();
int goodG2BSink_4();
int goodG2B_46();
int goodB2GSink_4();
int goodB2G_45();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_53_bad();
int goodG2B_47();
int goodB2G_46();
int CWE190_Integer_Overflow__char_fscanf_postinc_53_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_23();
int goodG2B2_23();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_06_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_66_bad();
int goodG2B_48();
int goodB2G_47();
int CWE190_Integer_Overflow__int_fscanf_postinc_66_good();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_61b_goodB2GSource(unsigned int a1);
__int64 badSource_4();
int CWE190_Integer_Overflow__char_max_postinc_42_bad();
__int64 goodG2BSource_4();
int goodG2B_49();
__int64 goodB2GSource_4();
int goodB2G_48();
int CWE190_Integer_Overflow__char_max_postinc_42_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_14_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_24();
int goodG2B2_24();
int CWE190_Integer_Overflow__int64_t_max_postinc_14_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_32_bad();
int goodG2B_50();
int goodB2G_49();
int CWE190_Integer_Overflow__int64_t_max_postinc_32_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_bad();
int goodG2B_51();
int goodB2G_50();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_61_bad();
int goodG2B_52();
int goodB2G_51();
int CWE190_Integer_Overflow__int_listen_socket_postinc_61_good();
int CWE190_Integer_Overflow__char_max_postinc_05_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_25();
int goodG2B2_25();
int CWE190_Integer_Overflow__char_max_postinc_05_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54c_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__char_rand_postinc_65_bad();
int goodG2B_53();
__int64 goodB2G_52();
__int64 CWE190_Integer_Overflow__char_rand_postinc_65_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_04_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B1_26();
int goodG2B2_26();
int CWE190_Integer_Overflow__int64_t_max_postinc_04_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_31_bad();
int goodG2B_54();
int goodB2G_53();
int CWE190_Integer_Overflow__int64_t_max_postinc_31_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_64b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_07_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_27();
int goodG2B2_27();
int CWE190_Integer_Overflow__int_listen_socket_postinc_07_good();
int CWE190_Integer_Overflow__char_max_postinc_34_bad();
int goodG2B_55();
int goodB2G_54();
int CWE190_Integer_Overflow__char_max_postinc_34_good();
int CWE190_Integer_Overflow__short_max_postinc_54_bad();
int goodG2B_56();
int goodB2G_55();
int CWE190_Integer_Overflow__short_max_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_52_bad();
int goodG2B_57();
int goodB2G_56();
int CWE190_Integer_Overflow__char_fscanf_postinc_52_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BSink(__int64 a1);
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE190_Integer_Overflow__int_fscanf_postinc_08_bad();
int goodB2G1_29();
int goodB2G2_29();
int goodG2B1_28();
int goodG2B2_28();
int CWE190_Integer_Overflow__int_fscanf_postinc_08_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_bad();
int goodG2B_58();
int goodB2G_57();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_good();
int __fastcall badSink_5(int a1);
int CWE190_Integer_Overflow__int_rand_postinc_21_bad();
int __fastcall goodB2G1Sink(int a1);
int goodB2G1_30();
int __fastcall goodB2G2Sink(int a1);
int goodB2G2_30();
int __fastcall goodG2BSink_5(int a1);
int goodG2B_59();
int CWE190_Integer_Overflow__int_rand_postinc_21_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_65_bad();
int goodG2B_60();
__int64 goodB2G_58();
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_65_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_64_bad();
int goodG2B_61();
int goodB2G_59();
int CWE190_Integer_Overflow__int64_t_rand_postinc_64_good();
int __fastcall badSink_6(int a1);
int CWE190_Integer_Overflow__int_max_postinc_44_bad();
int __fastcall goodG2BSink_6(int a1);
int goodG2B_62();
int __fastcall goodB2GSink_5(int a1);
int goodB2G_60();
int CWE190_Integer_Overflow__int_max_postinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_29();
int goodG2B2_29();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_51_bad();
int goodG2B_63();
int goodB2G_61();
int CWE190_Integer_Overflow__char_fscanf_postinc_51_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad();
int goodG2B_64();
int goodB2G_62();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_good();
int CWE190_Integer_Overflow__short_max_postinc_68b_badSink();
int CWE190_Integer_Overflow__short_max_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_max_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_max_postinc_22_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B_65();
int CWE190_Integer_Overflow__int64_t_max_postinc_22_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_09_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_30();
int goodG2B2_30();
int CWE190_Integer_Overflow__int_listen_socket_postinc_09_good();
int CWE190_Integer_Overflow__int_rand_postinc_12_bad();
int goodB2G_63();
int goodG2B_66();
int CWE190_Integer_Overflow__int_rand_postinc_12_good();
int __fastcall badSink_7(int a1);
__int64 CWE190_Integer_Overflow__int_fgets_postinc_44_bad();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_67();
int __fastcall goodB2GSink_6(int a1);
__int64 goodB2G_64();
__int64 CWE190_Integer_Overflow__int_fgets_postinc_44_good();
int badSink_8();
int CWE190_Integer_Overflow__char_fscanf_postinc_45_bad();
int goodG2BSink_8();
int goodG2B_68();
int goodB2GSink_7();
int goodB2G_65();
int CWE190_Integer_Overflow__char_fscanf_postinc_45_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_06_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_31();
int goodG2B2_31();
int CWE190_Integer_Overflow__char_fscanf_postinc_06_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B1_32();
int goodG2B2_32();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_bad();
int goodG2B_69();
int goodB2G_66();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_good();
int CWE190_Integer_Overflow__short_rand_postinc_01_bad();
int goodG2B_70();
int goodB2G_67();
int CWE190_Integer_Overflow__short_rand_postinc_01_good();
int __fastcall badSink_9(char a1);
int CWE190_Integer_Overflow__char_max_postinc_21_bad();
int __fastcall goodB2G1Sink_0(char a1);
int goodB2G1_36();
int __fastcall goodB2G2Sink_0(char a1);
int goodB2G2_36();
int __fastcall goodG2BSink_9(char a1);
int goodG2B_71();
int CWE190_Integer_Overflow__char_max_postinc_21_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54e_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_13_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_33();
int goodG2B2_33();
int CWE190_Integer_Overflow__int64_t_max_postinc_13_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_bad();
int goodB2G_68();
int goodG2B_72();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_54_bad();
int goodG2B_73();
int goodB2G_69();
int CWE190_Integer_Overflow__int_fscanf_postinc_54_good();
int CWE190_Integer_Overflow__int_rand_postinc_11_bad();
int goodB2G1_38();
int goodB2G2_38();
int goodG2B1_34();
int goodG2B2_34();
int CWE190_Integer_Overflow__int_rand_postinc_11_good();
int CWE190_Integer_Overflow__int_rand_postinc_02_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B1_35();
int goodG2B2_35();
int CWE190_Integer_Overflow__int_rand_postinc_02_good();
int CWE190_Integer_Overflow__char_max_postinc_63_bad();
int goodG2B_74();
int goodB2G_70();
int CWE190_Integer_Overflow__char_max_postinc_63_good();
int __fastcall badSink_10(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_bad();
int __fastcall goodG2BSink_10(__int64 a1);
int goodG2B_75();
int __fastcall goodB2GSink_8(__int64 a1);
__int64 goodB2G_71();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_61_bad();
int goodG2B_76();
int goodB2G_72();
int CWE190_Integer_Overflow__short_fscanf_postinc_61_good();
int CWE190_Integer_Overflow__int_rand_postinc_10_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_36();
int goodG2B2_36();
int CWE190_Integer_Overflow__int_rand_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_37();
int goodG2B2_37();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_14_good();
int CWE190_Integer_Overflow__short_rand_postinc_15_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_38();
int goodG2B2_38();
int CWE190_Integer_Overflow__short_rand_postinc_15_good();
int __fastcall badSink_11(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_21_bad();
int __fastcall goodB2G1Sink_1(__int64 a1);
int goodB2G1_43();
int __fastcall goodB2G2Sink_1(__int64 a1);
int goodB2G2_43();
int __fastcall goodG2BSink_11(__int64 a1);
int goodG2B_77();
int CWE190_Integer_Overflow__int64_t_max_postinc_21_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_03_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_39();
int goodG2B2_39();
int CWE190_Integer_Overflow__int64_t_max_postinc_03_good();
int CWE190_Integer_Overflow__int_rand_postinc_01_bad();
int goodG2B_78();
int goodB2G_73();
int CWE190_Integer_Overflow__int_rand_postinc_01_good();
int CWE190_Integer_Overflow__short_max_postinc_68_bad();
int goodG2B_79();
int goodB2G_74();
int CWE190_Integer_Overflow__short_max_postinc_68_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_63b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B_80();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_good();
int CWE190_Integer_Overflow__short_max_postinc_53_bad();
int goodG2B_81();
int goodB2G_75();
int CWE190_Integer_Overflow__short_max_postinc_53_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_12_bad();
int goodB2G_76();
int goodG2B_82();
int CWE190_Integer_Overflow__int64_t_max_postinc_12_good();
int CWE190_Integer_Overflow__int_rand_postinc_09_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_40();
int goodG2B2_40();
int CWE190_Integer_Overflow__int_rand_postinc_09_good();
int CWE190_Integer_Overflow__short_rand_postinc_05_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B1_41();
int goodG2B2_41();
int CWE190_Integer_Overflow__short_rand_postinc_05_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53c_goodB2GSink(int a1);
int __fastcall badSink_12(__int16 a1);
int CWE190_Integer_Overflow__short_rand_postinc_41_bad();
int __fastcall goodG2BSink_12(__int16 a1);
int goodG2B_83();
int __fastcall goodB2GSink_9(__int16 a1);
int goodB2G_77();
int CWE190_Integer_Overflow__short_rand_postinc_41_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_68b_badSink();
int CWE190_Integer_Overflow__int_fscanf_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fscanf_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_42();
int goodG2B2_42();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_good();
int CWE190_Integer_Overflow__short_rand_postinc_34_bad();
int goodG2B_84();
int goodB2G_78();
int CWE190_Integer_Overflow__short_rand_postinc_34_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_11_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_43();
int goodG2B2_43();
int CWE190_Integer_Overflow__int64_t_max_postinc_11_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_02_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_44();
int goodG2B2_44();
int CWE190_Integer_Overflow__int64_t_max_postinc_02_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53d_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_10_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_45();
int goodG2B2_45();
int CWE190_Integer_Overflow__int64_t_max_postinc_10_good();
int CWE190_Integer_Overflow__char_max_postinc_14_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_46();
int goodG2B2_46();
int CWE190_Integer_Overflow__char_max_postinc_14_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_47();
int goodG2B2_47();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_good();
int CWE190_Integer_Overflow__char_max_postinc_32_bad();
int goodG2B_85();
int goodB2G_79();
int CWE190_Integer_Overflow__char_max_postinc_32_good();
int __fastcall badSink_13(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_bad();
int __fastcall goodB2G1Sink_2(int a1);
int goodB2G1_54();
int __fastcall goodB2G2Sink_2(int a1);
int goodB2G2_54();
int __fastcall goodG2BSink_13(int a1);
int goodG2B_86();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_48();
int goodG2B2_48();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_68_bad();
int goodG2B_87();
int goodB2G_80();
int CWE190_Integer_Overflow__int_fscanf_postinc_68_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54e_goodB2GSink(int a1);
int __fastcall badSink_14(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_44_bad();
int __fastcall goodG2BSink_14(int a1);
int goodG2B_88();
int __fastcall goodB2GSink_10(int a1);
int goodB2G_81();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_bad();
int goodG2B_89();
int goodB2G_82();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_good();
int CWE190_Integer_Overflow__short_max_postinc_17_bad();
int goodB2G_83();
int goodG2B_90();
int CWE190_Integer_Overflow__short_max_postinc_17_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_max_postinc_67_bad();
int goodG2B_91();
int goodB2G_84();
int CWE190_Integer_Overflow__int_max_postinc_67_good();
int __fastcall badSink_15(int a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_21_bad();
int __fastcall goodB2G1Sink_3(int a1);
int goodB2G1_56();
int __fastcall goodB2G2Sink_3(int a1);
int goodB2G2_56();
int __fastcall goodG2BSink_15(int a1);
int goodG2B_92();
int CWE190_Integer_Overflow__int_listen_socket_postinc_21_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_03_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B1_49();
int goodG2B2_49();
int CWE190_Integer_Overflow__int_listen_socket_postinc_03_good();
int CWE190_Integer_Overflow__short_rand_postinc_18_bad();
int goodB2G_85();
int goodG2B_93();
int CWE190_Integer_Overflow__short_rand_postinc_18_good();
int CWE190_Integer_Overflow__int_rand_postinc_03_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B1_50();
int goodG2B2_50();
int CWE190_Integer_Overflow__int_rand_postinc_03_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_51_bad();
int goodG2B_94();
int goodB2G_86();
int CWE190_Integer_Overflow__int64_t_max_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52b_goodB2GSink(int a1);
int badSink_16();
int CWE190_Integer_Overflow__int64_t_max_postinc_45_bad();
int goodG2BSink_16();
int goodG2B_95();
int goodB2GSink_11();
int goodB2G_87();
int CWE190_Integer_Overflow__int64_t_max_postinc_45_good();
int CWE190_Integer_Overflow__int_fgets_postinc_67_bad();
int goodG2B_96();
int goodB2G_88();
int CWE190_Integer_Overflow__int_fgets_postinc_67_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_63_bad();
int goodG2B_97();
int goodB2G_89();
int CWE190_Integer_Overflow__int_fscanf_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_12_bad();
int goodB2G_90();
int goodG2B_98();
int CWE190_Integer_Overflow__int_listen_socket_postinc_12_good();
int CWE190_Integer_Overflow__short_rand_postinc_09_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_51();
int goodG2B2_51();
int CWE190_Integer_Overflow__short_rand_postinc_09_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_06_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B1_52();
int goodG2B2_52();
int CWE190_Integer_Overflow__int64_t_max_postinc_06_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_64b_goodB2GSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__short_max_postinc_61_bad();
int goodG2B_99();
int goodB2G_91();
int CWE190_Integer_Overflow__short_max_postinc_61_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_bad();
int goodG2B_100();
int goodB2G_92();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_11_bad();
int goodB2G1_61();
int goodB2G2_61();
int goodG2B1_53();
int goodG2B2_53();
int CWE190_Integer_Overflow__int_listen_socket_postinc_11_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_02_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B1_54();
int goodG2B2_54();
int CWE190_Integer_Overflow__int_listen_socket_postinc_02_good();
int CWE190_Integer_Overflow__short_max_postinc_07_bad();
int goodB2G1_63();
int goodB2G2_63();
int goodG2B1_55();
int goodG2B2_55();
int CWE190_Integer_Overflow__short_max_postinc_07_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_bad();
int goodB2G_93();
int goodG2B_101();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_17_bad();
int goodB2G_94();
int goodG2B_102();
int CWE190_Integer_Overflow__int_fscanf_postinc_17_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_10_bad();
int goodB2G1_64();
int goodB2G2_64();
int goodG2B1_56();
int goodG2B2_56();
int CWE190_Integer_Overflow__int_listen_socket_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54c_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54e_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54e_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54e_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_01_bad();
int goodG2B_103();
int goodB2G_95();
int CWE190_Integer_Overflow__int_listen_socket_postinc_01_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_bad();
int goodG2B_104();
int goodB2G_96();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_good();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53c_goodB2GSink(__int16 a1);
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_65_bad();
int goodG2B_105();
__int64 goodB2G_97();
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_65_good();
int CWE190_Integer_Overflow__int_rand_postinc_64_bad();
int goodG2B_106();
int goodB2G_98();
int CWE190_Integer_Overflow__int_rand_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_max_postinc_18_bad();
int goodB2G_99();
int goodG2B_107();
int CWE190_Integer_Overflow__int_max_postinc_18_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE190_Integer_Overflow__short_rand_postinc_08_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_57();
int goodG2B2_57();
int CWE190_Integer_Overflow__short_rand_postinc_08_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_58();
int goodG2B2_58();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_good();
int CWE190_Integer_Overflow__char_max_postinc_68_bad();
int goodG2B_108();
int goodB2G_100();
int CWE190_Integer_Overflow__char_max_postinc_68_good();
__int64 badSource_5();
int CWE190_Integer_Overflow__char_rand_postinc_42_bad();
__int64 goodG2BSource_5();
int goodG2B_109();
__int64 goodB2GSource_5();
int goodB2G_101();
int CWE190_Integer_Overflow__char_rand_postinc_42_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_14_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_59();
int goodG2B2_59();
int CWE190_Integer_Overflow__int64_t_rand_postinc_14_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_61_bad();
int goodG2B_110();
int goodB2G_102();
int CWE190_Integer_Overflow__int_fscanf_postinc_61_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad();
int goodG2B_111();
int goodB2G_103();
int CWE190_Integer_Overflow__int64_t_rand_postinc_32_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_bad();
int goodG2B_112();
int goodB2G_104();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_good();
int CWE190_Integer_Overflow__int_fgets_postinc_18_bad();
int goodB2G_105();
int goodG2B_113();
int CWE190_Integer_Overflow__int_fgets_postinc_18_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_07_bad();
int goodB2G1_68();
int goodB2G2_68();
int goodG2B1_60();
int goodG2B2_60();
int CWE190_Integer_Overflow__int_fscanf_postinc_07_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_15_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B1_61();
int goodG2B2_61();
int CWE190_Integer_Overflow__int_connect_socket_postinc_15_good();
int CWE190_Integer_Overflow__char_rand_postinc_05_bad();
int goodB2G1_70();
int goodB2G2_70();
int goodG2B1_62();
int goodG2B2_62();
int CWE190_Integer_Overflow__char_rand_postinc_05_good();
int __fastcall badSink_17(char a1);
int CWE190_Integer_Overflow__char_rand_postinc_41_bad();
int __fastcall goodG2BSink_17(char a1);
int goodG2B_114();
int __fastcall goodB2GSink_12(char a1);
int goodB2G_106();
int CWE190_Integer_Overflow__char_rand_postinc_41_good();
int CWE190_Integer_Overflow__int_fgets_postinc_02_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_63();
int goodG2B2_63();
int CWE190_Integer_Overflow__int_fgets_postinc_02_good();
__int64 __fastcall badSource_6(unsigned int a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_42_bad();
__int64 goodG2BSource_6();
int goodG2B_115();
__int64 __fastcall goodB2GSource_6(unsigned int a1);
int goodB2G_107();
int CWE190_Integer_Overflow__int_connect_socket_postinc_42_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_04_bad();
int goodB2G1_72();
int goodB2G2_72();
int goodG2B1_64();
int goodG2B2_64();
int CWE190_Integer_Overflow__int64_t_rand_postinc_04_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_31_bad();
int goodG2B_116();
int goodB2G_108();
int CWE190_Integer_Overflow__int64_t_rand_postinc_31_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_51_bad();
int goodG2B_117();
int goodB2G_109();
int CWE190_Integer_Overflow__int_connect_socket_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_67_bad();
int goodG2B_118();
int goodB2G_110();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_67_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_bad();
int goodB2G_111();
int goodG2B_119();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_54_bad();
int goodG2B_120();
int goodB2G_112();
int CWE190_Integer_Overflow__int_listen_socket_postinc_54_good();
int CWE190_Integer_Overflow__char_rand_postinc_34_bad();
int goodG2B_121();
int goodB2G_113();
int CWE190_Integer_Overflow__char_rand_postinc_34_good();
int CWE190_Integer_Overflow__short_rand_postinc_54_bad();
int goodG2B_122();
int goodB2G_114();
int CWE190_Integer_Overflow__short_rand_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_fgets_postinc_11_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B1_65();
int goodG2B2_65();
int CWE190_Integer_Overflow__int_fgets_postinc_11_good();
int __fastcall badSink_18(char a1);
int CWE190_Integer_Overflow__char_rand_postinc_21_bad();
int __fastcall goodB2G1Sink_4(char a1);
int goodB2G1_74();
int __fastcall goodB2G2Sink_4(char a1);
int goodB2G2_74();
int __fastcall goodG2BSink_18(char a1);
int goodG2B_123();
int CWE190_Integer_Overflow__char_rand_postinc_21_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_05_bad();
int goodB2G1_75();
int goodB2G2_75();
int goodG2B1_66();
int goodG2B2_66();
int CWE190_Integer_Overflow__int_connect_socket_postinc_05_good();
int __fastcall badSink_19(int a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_41_bad();
int __fastcall goodG2BSink_19(int a1);
int goodG2B_124();
int __fastcall goodB2GSink_13(int a1);
int goodB2G_115();
int CWE190_Integer_Overflow__int_connect_socket_postinc_41_good();
int CWE190_Integer_Overflow__int_max_postinc_68b_badSink();
int CWE190_Integer_Overflow__int_max_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_max_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_bad();
int goodG2B_125();
int goodB2G_116();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_good();
int badSink_20();
int CWE190_Integer_Overflow__short_fscanf_postinc_45_bad();
int goodG2BSink_20();
int goodG2B_126();
int goodB2GSink_14();
int goodB2G_117();
int CWE190_Integer_Overflow__short_fscanf_postinc_45_good();
int __fastcall badSink_21(int a1);
__int64 CWE190_Integer_Overflow__int_rand_postinc_44_bad();
int __fastcall goodG2BSink_21(int a1);
int goodG2B_127();
int __fastcall goodB2GSink_15(int a1);
__int64 goodB2G_118();
__int64 CWE190_Integer_Overflow__int_rand_postinc_44_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_postinc_52_bad();
int goodG2B_128();
int goodB2G_119();
int CWE190_Integer_Overflow__char_max_postinc_52_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_34_bad();
int goodG2B_129();
int goodB2G_120();
int CWE190_Integer_Overflow__int_connect_socket_postinc_34_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_11_bad();
int goodB2G1_76();
int goodB2G2_76();
int goodG2B1_67();
int goodG2B2_67();
int CWE190_Integer_Overflow__int_connect_socket_postinc_11_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_51b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_51b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_51b_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_max_postinc_16_bad();
int goodB2G_121();
int goodG2B_130();
int CWE190_Integer_Overflow__char_max_postinc_16_good();
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE190_Integer_Overflow__int_max_postinc_08_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_68();
int goodG2B2_68();
int CWE190_Integer_Overflow__int_max_postinc_08_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B_131();
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_postinc_10_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_69();
int goodG2B2_69();
int CWE190_Integer_Overflow__int_fgets_postinc_10_good();
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_65_bad();
int goodG2B_132();
__int64 goodB2G_122();
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_65_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__char_max_postinc_51_bad();
int goodG2B_133();
int goodB2G_123();
int CWE190_Integer_Overflow__char_max_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_66_bad();
int goodG2B_134();
int goodB2G_124();
int CWE190_Integer_Overflow__int_connect_socket_postinc_66_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_67b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__short_rand_postinc_68b_badSink();
int CWE190_Integer_Overflow__short_rand_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_rand_postinc_68b_goodB2GSink();
int __fastcall badSink_22(char a1);
int CWE190_Integer_Overflow__char_max_postinc_41_bad();
int __fastcall goodG2BSink_22(char a1);
int goodG2B_135();
int __fastcall goodB2GSink_16(char a1);
int goodB2G_125();
int CWE190_Integer_Overflow__char_max_postinc_41_good();
int badSink_23();
int CWE190_Integer_Overflow__char_max_postinc_45_bad();
int goodG2BSink_23();
int goodG2B_136();
int goodB2GSink_17();
int goodB2G_126();
int CWE190_Integer_Overflow__char_max_postinc_45_good();
int CWE190_Integer_Overflow__char_max_postinc_06_bad();
int goodB2G1_80();
int goodB2G2_80();
int goodG2B1_70();
int goodG2B2_70();
int CWE190_Integer_Overflow__char_max_postinc_06_good();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54e_goodB2GSink(__int16 a1);
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_bad();
int goodB2G1_81();
int goodB2G2_81();
int goodG2B1_71();
int goodG2B2_71();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_good();
int CWE190_Integer_Overflow__int_max_postinc_54_bad();
int goodG2B_137();
int goodB2G_127();
int CWE190_Integer_Overflow__int_max_postinc_54_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_67_bad();
int goodG2B_138();
int goodB2G_128();
int CWE190_Integer_Overflow__char_fscanf_postinc_67_good();
int CWE190_Integer_Overflow__int_max_postinc_68_bad();
int goodG2B_139();
int goodB2G_129();
int CWE190_Integer_Overflow__int_max_postinc_68_good();
int CWE190_Integer_Overflow__short_rand_postinc_68_bad();
int goodG2B_140();
int goodB2G_130();
int CWE190_Integer_Overflow__short_rand_postinc_68_good();
int __fastcall badSink_24(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_44_bad();
int __fastcall goodG2BSink_24(__int64 a1);
int goodG2B_141();
int __fastcall goodB2GSink_18(__int64 a1);
int goodB2G_131();
int CWE190_Integer_Overflow__int64_t_max_postinc_44_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_bad();
int goodG2B_142();
int goodB2G_132();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_34_bad();
int goodG2B_143();
int goodB2G_133();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_34_good();
int CWE190_Integer_Overflow__short_rand_postinc_53_bad();
int goodG2B_144();
int goodB2G_134();
int CWE190_Integer_Overflow__short_rand_postinc_53_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_12_bad();
int goodB2G_135();
int goodG2B_145();
int CWE190_Integer_Overflow__int64_t_rand_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53d_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B1_72();
int goodG2B2_72();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_12_bad();
int goodB2G_136();
int goodG2B_146();
int CWE190_Integer_Overflow__int_connect_socket_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_bad();
int goodG2B_147();
int goodB2G_137();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_64b_goodB2GSink(_WORD *a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_11_bad();
int goodB2G1_83();
int goodB2G2_83();
int goodG2B1_73();
int goodG2B2_73();
int CWE190_Integer_Overflow__int64_t_rand_postinc_11_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_02_bad();
int goodB2G1_84();
int goodB2G2_84();
int goodG2B1_74();
int goodG2B2_74();
int CWE190_Integer_Overflow__int64_t_rand_postinc_02_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54d_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_64_bad();
int goodG2B_148();
int goodB2G_138();
int CWE190_Integer_Overflow__int_connect_socket_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_postinc_65_bad();
int goodG2B_149();
int goodB2G_139();
int CWE190_Integer_Overflow__int_max_postinc_65_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad();
int goodB2G1_85();
int goodB2G2_85();
int goodG2B1_75();
int goodG2B2_75();
int CWE190_Integer_Overflow__int64_t_rand_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53d_goodB2GSink(char a1);
int CWE190_Integer_Overflow__char_rand_postinc_14_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_76();
int goodG2B2_76();
int CWE190_Integer_Overflow__char_rand_postinc_14_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_postinc_32_bad();
int goodG2B_150();
int goodB2G_140();
int CWE190_Integer_Overflow__char_rand_postinc_32_good();
int __fastcall badSink_25(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_bad();
int __fastcall goodG2BSink_25(int a1);
int goodG2B_151();
int __fastcall goodB2GSink_19(int a1);
__int64 goodB2G_141();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_good();
int CWE190_Integer_Overflow__int_rand_postinc_63_bad();
int goodG2B_152();
int goodB2G_142();
int CWE190_Integer_Overflow__int_rand_postinc_63_good();
__int64 badSource_7();
int CWE190_Integer_Overflow__short_rand_postinc_42_bad();
__int64 goodG2BSource_7();
int goodG2B_153();
__int64 goodB2GSource_7();
int goodB2G_143();
int CWE190_Integer_Overflow__short_rand_postinc_42_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_max_postinc_54_bad();
int goodG2B_154();
int goodB2G_144();
int CWE190_Integer_Overflow__char_max_postinc_54_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_34_bad();
int goodG2B_155();
int goodB2G_145();
int CWE190_Integer_Overflow__int_listen_socket_postinc_34_good();
int CWE190_Integer_Overflow__int_fgets_postinc_68b_badSink();
int CWE190_Integer_Overflow__int_fgets_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fgets_postinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_64_bad();
int goodG2B_156();
int goodB2G_146();
int CWE190_Integer_Overflow__short_fscanf_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_08_bad();
int goodB2G1_87();
int goodB2G2_87();
int goodG2B1_77();
int goodG2B2_77();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_08_good();
int CWE190_Integer_Overflow__char_rand_postinc_31_bad();
int goodG2B_157();
int goodB2G_147();
int CWE190_Integer_Overflow__char_rand_postinc_31_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_14_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_78();
int goodG2B2_78();
int CWE190_Integer_Overflow__int_connect_socket_postinc_14_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_79();
int goodG2B2_79();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_18_bad();
int goodB2G_148();
int goodG2B_158();
int CWE190_Integer_Overflow__char_fscanf_postinc_18_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_65b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_65b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_65b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_32_bad();
int goodG2B_159();
int goodB2G_149();
int CWE190_Integer_Overflow__int_connect_socket_postinc_32_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_09_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B1_80();
int goodG2B2_80();
int CWE190_Integer_Overflow__int64_t_rand_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_postinc_51_bad();
int goodG2B_160();
int goodB2G_150();
int CWE190_Integer_Overflow__short_rand_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_postinc_53_bad();
int goodG2B_161();
int goodB2G_151();
int CWE190_Integer_Overflow__int_max_postinc_53_good();
int CWE190_Integer_Overflow__int_fgets_postinc_68_bad();
int goodG2B_162();
int goodB2G_152();
int CWE190_Integer_Overflow__int_fgets_postinc_68_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_badSink();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BSink(char a1);
int badSink_26();
int CWE190_Integer_Overflow__short_rand_postinc_45_bad();
int goodG2BSink_26();
int goodG2B_163();
int goodB2GSink_20();
int goodB2G_153();
int CWE190_Integer_Overflow__short_rand_postinc_45_good();
int CWE190_Integer_Overflow__int_rand_postinc_05_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_81();
int goodG2B2_81();
int CWE190_Integer_Overflow__int_rand_postinc_05_good();
int __fastcall badSink_27(int a1);
int CWE190_Integer_Overflow__int_rand_postinc_41_bad();
int __fastcall goodG2BSink_27(int a1);
int goodG2B_164();
int __fastcall goodB2GSink_21(int a1);
int goodB2G_154();
int CWE190_Integer_Overflow__int_rand_postinc_41_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_02_bad();
int goodB2G1_92();
int goodB2G2_92();
int goodG2B1_82();
int goodG2B2_82();
int CWE190_Integer_Overflow__short_fscanf_postinc_02_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_04_bad();
int goodB2G1_93();
int goodB2G2_93();
int goodG2B1_83();
int goodG2B2_83();
int CWE190_Integer_Overflow__int_connect_socket_postinc_04_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_31_bad();
int goodG2B_165();
int goodB2G_155();
int CWE190_Integer_Overflow__int_connect_socket_postinc_31_good();
int CWE190_Integer_Overflow__int_fgets_postinc_53_bad();
int goodG2B_166();
int goodB2G_156();
int CWE190_Integer_Overflow__int_fgets_postinc_53_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_67b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_51b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__char_rand_postinc_22_bad();
int goodB2G1_94();
int goodB2G2_94();
int goodG2B_167();
int CWE190_Integer_Overflow__char_rand_postinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_54_bad();
int goodG2B_168();
int goodB2G_157();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54e_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54e_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54e_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_10_bad();
int goodB2G1_95();
int goodB2G2_95();
int goodG2B1_84();
int goodG2B2_84();
int CWE190_Integer_Overflow__int_connect_socket_postinc_10_good();
int CWE190_Integer_Overflow__short_rand_postinc_52_bad();
int goodG2B_169();
int goodB2G_158();
int CWE190_Integer_Overflow__short_rand_postinc_52_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_15_bad();
int goodB2G1_96();
int goodB2G2_96();
int goodG2B1_85();
int goodG2B2_85();
int CWE190_Integer_Overflow__int64_t_max_postinc_15_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_63b_goodB2GSink(_WORD *a1);
int CWE190_Integer_Overflow__short_max_postinc_67_bad();
int goodG2B_170();
int goodB2G_159();
int CWE190_Integer_Overflow__short_max_postinc_67_good();
int CWE190_Integer_Overflow__int_rand_postinc_66_bad();
int goodG2B_171();
int goodB2G_160();
int CWE190_Integer_Overflow__int_rand_postinc_66_good();
__int64 badSource_8();
int CWE190_Integer_Overflow__int64_t_max_postinc_42_bad();
__int64 goodG2BSource_8();
int goodG2B_172();
__int64 goodB2GSource_8();
int goodB2G_161();
int CWE190_Integer_Overflow__int64_t_max_postinc_42_good();
int CWE190_Integer_Overflow__char_max_postinc_65_bad();
int goodG2B_173();
int goodB2G_162();
int CWE190_Integer_Overflow__char_max_postinc_65_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_max_postinc_16_bad();
int goodB2G_163();
int goodG2B_174();
int CWE190_Integer_Overflow__int_max_postinc_16_good();
int CWE190_Integer_Overflow__int_fgets_postinc_52_bad();
int goodG2B_175();
int goodB2G_164();
int CWE190_Integer_Overflow__int_fgets_postinc_52_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_64_bad();
int goodG2B_176();
int goodB2G_165();
int CWE190_Integer_Overflow__int_listen_socket_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_51b_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_postinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fgets_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_postinc_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_63_bad();
int goodG2B_177();
int goodB2G_166();
int CWE190_Integer_Overflow__short_fscanf_postinc_63_good();
int CWE190_Integer_Overflow__int_fgets_postinc_16_bad();
int goodB2G_167();
int goodG2B_178();
int CWE190_Integer_Overflow__int_fgets_postinc_16_good();
int CWE190_Integer_Overflow__char_rand_postinc_03_bad();
int goodB2G1_97();
int goodB2G2_97();
int goodG2B1_86();
int goodG2B2_86();
int CWE190_Integer_Overflow__char_rand_postinc_03_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_05_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_87();
int goodG2B2_87();
int CWE190_Integer_Overflow__int64_t_max_postinc_05_good();
int CWE190_Integer_Overflow__short_max_postinc_66_bad();
int goodG2B_179();
int goodB2G_168();
int CWE190_Integer_Overflow__short_max_postinc_66_good();
int __fastcall badSink_28(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_41_bad();
int __fastcall goodG2BSink_28(__int64 a1);
int goodG2B_180();
int __fastcall goodB2GSink_22(__int64 a1);
int goodB2G_169();
int CWE190_Integer_Overflow__int64_t_max_postinc_41_good();
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_65_bad();
int goodG2B_181();
__int64 goodB2G_170();
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_65_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_13_bad();
int goodB2G1_99();
int goodB2G2_99();
int goodG2B1_88();
int goodG2B2_88();
int CWE190_Integer_Overflow__int_connect_socket_postinc_13_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_63b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_67b_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad();
int goodB2G1_100();
int goodB2G2_100();
int goodG2B1_89();
int goodG2B2_89();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_badSink();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_max_postinc_34_bad();
int goodG2B_182();
int goodB2G_171();
int CWE190_Integer_Overflow__int64_t_max_postinc_34_good();
int badSink_29();
int CWE190_Integer_Overflow__int_max_postinc_45_bad();
int goodG2BSink_29();
int goodG2B_183();
int goodB2GSink_23();
int goodB2G_172();
int CWE190_Integer_Overflow__int_max_postinc_45_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_postinc_51_bad();
int goodG2B_184();
int goodB2G_173();
int CWE190_Integer_Overflow__int_fgets_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_max_postinc_06_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_90();
int goodG2B2_90();
int CWE190_Integer_Overflow__int_max_postinc_06_good();
int CWE190_Integer_Overflow__char_rand_postinc_12_bad();
int goodB2G_174();
int goodG2B_185();
int CWE190_Integer_Overflow__char_rand_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52c_goodB2GSink(char a1);
int __fastcall badSink_30(int a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_21_bad();
int __fastcall goodB2G1Sink_5(int a1);
int goodB2G1_102();
int __fastcall goodB2G2Sink_5(int a1);
int goodB2G2_102();
int __fastcall goodG2BSink_30(int a1);
int goodG2B_186();
int CWE190_Integer_Overflow__int_connect_socket_postinc_21_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_03_bad();
int goodB2G1_103();
int goodB2G2_103();
int goodG2B1_91();
int goodG2B2_91();
int CWE190_Integer_Overflow__int_connect_socket_postinc_03_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_goodB2GSink(int a1);
int badSink_31();
int CWE190_Integer_Overflow__int_fgets_postinc_45_bad();
int goodG2BSink_31();
int goodG2B_187();
int goodB2GSink_24();
int goodB2G_175();
int CWE190_Integer_Overflow__int_fgets_postinc_45_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_postinc_06_bad();
int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_92();
int goodG2B2_92();
int CWE190_Integer_Overflow__int_fgets_postinc_06_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_bad();
int goodG2B_188();
int goodB2G_176();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_good();
__int64 badSource_9();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_bad();
__int64 goodG2BSource_9();
int goodG2B_189();
__int64 goodB2GSource_9();
int goodB2G_177();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_66_bad();
int goodG2B_190();
int goodB2G_178();
int CWE190_Integer_Overflow__int64_t_max_postinc_66_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_54_bad();
int goodG2B_191();
int goodB2G_179();
int CWE190_Integer_Overflow__char_fscanf_postinc_54_good();
int CWE190_Integer_Overflow__char_rand_postinc_11_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B1_93();
int goodG2B2_93();
int CWE190_Integer_Overflow__char_rand_postinc_11_good();
int CWE190_Integer_Overflow__char_rand_postinc_02_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B1_94();
int goodG2B2_94();
int CWE190_Integer_Overflow__char_rand_postinc_02_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_bad();
int goodG2B_192();
int goodB2G_180();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_good();
int CWE190_Integer_Overflow__int_rand_postinc_61_bad();
int goodG2B_193();
int goodB2G_181();
int CWE190_Integer_Overflow__int_rand_postinc_61_good();
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource(unsigned __int16 a1);
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_61b_goodB2GSource(unsigned __int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_53_bad();
int goodG2B_194();
int goodB2G_182();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_53_good();
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE190_Integer_Overflow__char_fscanf_postinc_08_bad();
int goodB2G1_107();
int goodB2G2_107();
int goodG2B1_95();
int goodG2B2_95();
int CWE190_Integer_Overflow__char_fscanf_postinc_08_good();
int CWE190_Integer_Overflow__char_rand_postinc_10_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_96();
int goodG2B2_96();
int CWE190_Integer_Overflow__char_rand_postinc_10_good();
int CWE190_Integer_Overflow__int_fgets_postinc_61_bad();
int goodG2B_195();
int goodB2G_183();
int CWE190_Integer_Overflow__int_fgets_postinc_61_good();
int badSink_32();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_bad();
int goodG2BSink_32();
int goodG2B_196();
int goodB2GSink_25();
int goodB2G_184();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_good();
int CWE190_Integer_Overflow__short_max_postinc_18_bad();
int goodB2G_185();
int goodG2B_197();
int CWE190_Integer_Overflow__short_max_postinc_18_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad();
int goodB2G1_109();
int goodB2G2_109();
int goodG2B1_97();
int goodG2B2_97();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_98();
int goodG2B2_98();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodB2GSink(__int64 a1);
int __fastcall badSink_33(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_bad();
int __fastcall goodG2BSink_33(int a1);
int goodG2B_198();
int __fastcall goodB2GSink_26(int a1);
int goodB2G_186();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_good();
int CWE190_Integer_Overflow__char_rand_postinc_01_bad();
int goodG2B_199();
int goodB2G_187();
int CWE190_Integer_Overflow__char_rand_postinc_01_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_02_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_99();
int goodG2B2_99();
int CWE190_Integer_Overflow__int_connect_socket_postinc_02_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__short_rand_postinc_13_bad();
int goodB2G1_112();
int goodB2G2_112();
int goodG2B1_100();
int goodG2B2_100();
int CWE190_Integer_Overflow__short_rand_postinc_13_good();
void CWE190_Integer_Overflow__int_connect_socket_postinc_17_bad();
void goodB2G_188();
int goodG2B_200();
int CWE190_Integer_Overflow__int_connect_socket_postinc_17_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_postinc_14_bad();
int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_101();
int goodG2B2_101();
int CWE190_Integer_Overflow__int_fgets_postinc_14_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_bad();
int goodG2B_201();
int goodB2G_189();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_good();
int CWE190_Integer_Overflow__int_fgets_postinc_32_bad();
int goodG2B_202();
int goodB2G_190();
int CWE190_Integer_Overflow__int_fgets_postinc_32_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_15_bad();
int goodB2G1_114();
int goodB2G2_114();
int goodG2B1_102();
int goodG2B2_102();
int CWE190_Integer_Overflow__char_fscanf_postinc_15_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_rand_postinc_61_bad();
int goodG2B_203();
int goodB2G_191();
int CWE190_Integer_Overflow__char_rand_postinc_61_good();
int CWE190_Integer_Overflow__int_max_postinc_04_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_103();
int goodG2B2_103();
int CWE190_Integer_Overflow__int_max_postinc_04_good();
int CWE190_Integer_Overflow__int_max_postinc_31_bad();
int goodG2B_204();
int goodB2G_192();
int CWE190_Integer_Overflow__int_max_postinc_31_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_51b_goodB2GSink(int a1);
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE190_Integer_Overflow__short_fscanf_postinc_08_bad();
int goodB2G1_116();
int goodB2G2_116();
int goodG2B1_104();
int goodG2B2_104();
int CWE190_Integer_Overflow__short_fscanf_postinc_08_good();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_63_bad();
int goodG2B_205();
int goodB2G_193();
int CWE190_Integer_Overflow__int64_t_max_postinc_63_good();
int __fastcall badSink_34(__int16 a1);
int CWE190_Integer_Overflow__short_rand_postinc_21_bad();
int __fastcall goodB2G1Sink_6(__int16 a1);
int goodB2G1_117();
int __fastcall goodB2G2Sink_6(__int16 a1);
int goodB2G2_117();
int __fastcall goodG2BSink_34(__int16 a1);
int goodG2B_206();
int CWE190_Integer_Overflow__short_rand_postinc_21_good();
int CWE190_Integer_Overflow__char_rand_postinc_07_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_105();
int goodG2B2_105();
int CWE190_Integer_Overflow__char_rand_postinc_07_good();
int CWE190_Integer_Overflow__int_rand_postinc_18_bad();
int goodB2G_194();
int goodG2B_207();
int CWE190_Integer_Overflow__int_rand_postinc_18_good();
int CWE190_Integer_Overflow__int_max_postinc_52_bad();
int goodG2B_208();
int goodB2G_195();
int CWE190_Integer_Overflow__int_max_postinc_52_good();
int __fastcall badSink_35(__int16 a1);
int CWE190_Integer_Overflow__short_max_postinc_44_bad();
int __fastcall goodG2BSink_35(__int16 a1);
int goodG2B_209();
int __fastcall goodB2GSink_27(__int16 a1);
int goodB2G_196();
int CWE190_Integer_Overflow__short_max_postinc_44_good();
__int64 badSource_10();
int CWE190_Integer_Overflow__int64_t_rand_postinc_42_bad();
__int64 goodG2BSource_10();
int goodG2B_210();
__int64 goodB2GSource_10();
int goodB2G_197();
int CWE190_Integer_Overflow__int64_t_rand_postinc_42_good();
int CWE190_Integer_Overflow__int_fgets_postinc_04_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B1_106();
int goodG2B2_106();
int CWE190_Integer_Overflow__int_fgets_postinc_04_good();
int CWE190_Integer_Overflow__int_fgets_postinc_31_bad();
int goodG2B_211();
int goodB2G_198();
int CWE190_Integer_Overflow__int_fgets_postinc_31_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_bad();
int goodB2G1_120();
int goodB2G2_120();
int goodG2B1_107();
int goodG2B2_107();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad();
int goodG2B_212();
int goodB2G_199();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_18_bad();
int goodB2G_200();
int goodG2B_213();
int CWE190_Integer_Overflow__int_listen_socket_postinc_18_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_61_bad();
int goodG2B_214();
int goodB2G_201();
int CWE190_Integer_Overflow__int_connect_socket_postinc_61_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_05_bad();
int goodB2G1_121();
int goodB2G2_121();
int goodG2B1_108();
int goodG2B2_108();
int CWE190_Integer_Overflow__char_fscanf_postinc_05_good();
int __fastcall badSink_36(char a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_41_bad();
int __fastcall goodG2BSink_36(char a1);
int goodG2B_215();
int __fastcall goodB2GSink_28(char a1);
int goodB2G_202();
int CWE190_Integer_Overflow__char_fscanf_postinc_41_good();
int CWE190_Integer_Overflow__int_max_postinc_22_bad();
int goodB2G1_122();
int goodB2G2_122();
int goodG2B_216();
int CWE190_Integer_Overflow__int_max_postinc_22_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_bad();
int goodB2G1_123();
int goodB2G2_123();
int goodG2B1_109();
int goodG2B2_109();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_54_bad();
int goodG2B_217();
int goodB2G_203();
int CWE190_Integer_Overflow__short_fscanf_postinc_54_good();
int CWE190_Integer_Overflow__short_rand_postinc_11_bad();
int goodB2G1_124();
int goodB2G2_124();
int goodG2B1_110();
int goodG2B2_110();
int CWE190_Integer_Overflow__short_rand_postinc_11_good();
int CWE190_Integer_Overflow__short_rand_postinc_02_bad();
int goodB2G1_125();
int goodB2G2_125();
int goodG2B1_111();
int goodG2B2_111();
int CWE190_Integer_Overflow__short_rand_postinc_02_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int_fgets_postinc_22_bad();
int goodB2G1_126();
int goodB2G2_126();
int goodG2B_218();
int CWE190_Integer_Overflow__int_fgets_postinc_22_good();
int CWE190_Integer_Overflow__int_max_postinc_51_bad();
int goodG2B_219();
int goodB2G_204();
int CWE190_Integer_Overflow__int_max_postinc_51_good();
int CWE190_Integer_Overflow__short_rand_postinc_10_bad();
int goodB2G1_127();
int goodB2G2_127();
int goodG2B1_112();
int goodG2B2_112();
int CWE190_Integer_Overflow__short_rand_postinc_10_good();
int CWE190_Integer_Overflow__int_max_postinc_13_bad();
int goodB2G1_128();
int goodB2G2_128();
int goodG2B1_113();
int goodG2B2_113();
int CWE190_Integer_Overflow__int_max_postinc_13_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_bad();
int goodG2B_220();
int goodB2G_205();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_good();
int CWE190_Integer_Overflow__int_rand_postinc_07_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_114();
int goodG2B2_114();
int CWE190_Integer_Overflow__int_rand_postinc_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52b_goodB2GSink(__int64 a1);
int __fastcall badSink_37(int a1);
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_44_bad();
int __fastcall goodG2BSink_37(int a1);
int goodG2B_221();
int __fastcall goodB2GSink_29(int a1);
__int64 goodB2G_206();
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_44_good();
int __fastcall badSink_38(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_41_bad();
int __fastcall goodG2BSink_38(__int64 a1);
int goodG2B_222();
int __fastcall goodB2GSink_30(__int64 a1);
int goodB2G_207();
int CWE190_Integer_Overflow__int64_t_rand_postinc_41_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_66_bad();
int goodG2B_223();
int goodB2G_208();
int CWE190_Integer_Overflow__char_fscanf_postinc_66_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_fgets_postinc_13_bad();
int goodB2G1_130();
int goodB2G2_130();
int goodG2B1_115();
int goodG2B2_115();
int CWE190_Integer_Overflow__int_fgets_postinc_13_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_07_bad();
int goodB2G1_131();
int goodB2G2_131();
int goodG2B1_116();
int goodG2B2_116();
int CWE190_Integer_Overflow__char_fscanf_postinc_07_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B_224();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_good();
int __fastcall badSink_39(int a1);
int CWE190_Integer_Overflow__int_max_postinc_21_bad();
int __fastcall goodB2G1Sink_7(int a1);
int goodB2G1_133();
int __fastcall goodB2G2Sink_7(int a1);
int goodB2G2_133();
int __fastcall goodG2BSink_39(int a1);
int goodG2B_225();
int CWE190_Integer_Overflow__int_max_postinc_21_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_64_bad();
int goodG2B_226();
int goodB2G_209();
int CWE190_Integer_Overflow__int64_t_max_postinc_64_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_13_bad();
int goodB2G1_134();
int goodB2G2_134();
int goodG2B1_117();
int goodG2B2_117();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_13_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_32_bad();
int goodG2B_227();
int goodB2G_210();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_32_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_63b_goodB2GSink(_DWORD *a1);
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE190_Integer_Overflow__int_listen_socket_postinc_08_bad();
int goodB2G1_135();
int goodB2G2_135();
int goodG2B1_118();
int goodG2B2_118();
int CWE190_Integer_Overflow__int_listen_socket_postinc_08_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_15_bad();
int goodB2G1_136();
int goodB2G2_136();
int goodG2B1_119();
int goodG2B2_119();
int CWE190_Integer_Overflow__int_fscanf_postinc_15_good();
int __fastcall badSink_40(int a1);
int CWE190_Integer_Overflow__int_fgets_postinc_21_bad();
int __fastcall goodB2G1Sink_8(int a1);
int goodB2G1_137();
int __fastcall goodB2G2Sink_8(int a1);
int goodB2G2_137();
int __fastcall goodG2BSink_40(int a1);
int goodG2B_228();
int CWE190_Integer_Overflow__int_fgets_postinc_21_good();
int CWE190_Integer_Overflow__int_fgets_postinc_03_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_120();
int goodG2B2_120();
int CWE190_Integer_Overflow__int_fgets_postinc_03_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_bad();
int goodB2G1_139();
int goodB2G2_139();
int goodG2B1_121();
int goodG2B2_121();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_68b_badSink();
int CWE190_Integer_Overflow__short_fscanf_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__short_fscanf_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_max_postinc_12_bad();
int goodB2G_211();
int goodG2B_229();
int CWE190_Integer_Overflow__int_max_postinc_12_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_14_bad();
int goodB2G1_140();
int goodB2G2_140();
int goodG2B1_122();
int goodG2B2_122();
int CWE190_Integer_Overflow__char_fscanf_postinc_14_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_04_bad();
int goodB2G1_141();
int goodB2G2_141();
int goodG2B1_123();
int goodG2B2_123();
int CWE190_Integer_Overflow__char_fscanf_postinc_04_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_67b_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE190_Integer_Overflow__int_fgets_postinc_08_bad();
int goodB2G1_142();
int goodB2G2_142();
int goodG2B1_124();
int goodG2B2_124();
int CWE190_Integer_Overflow__int_fgets_postinc_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_bad();
int goodB2G1_143();
int goodB2G2_143();
int goodG2B1_125();
int goodG2B2_125();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_31_bad();
int goodG2B_230();
int goodB2G_212();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_31_good();
int CWE190_Integer_Overflow__int_fgets_postinc_12_bad();
int goodB2G_213();
int goodG2B_231();
int CWE190_Integer_Overflow__int_fgets_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_max_postinc_03_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B1_126();
int goodG2B2_126();
int CWE190_Integer_Overflow__int_max_postinc_03_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B1_127();
int goodG2B2_127();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_good();
int CWE190_Integer_Overflow__int_max_postinc_11_bad();
int goodB2G1_146();
int goodB2G2_146();
int goodG2B1_128();
int goodG2B2_128();
int CWE190_Integer_Overflow__int_max_postinc_11_good();
int CWE190_Integer_Overflow__int_max_postinc_02_bad();
int goodB2G1_147();
int goodB2G2_147();
int goodG2B1_129();
int goodG2B2_129();
int CWE190_Integer_Overflow__int_max_postinc_02_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_68_bad();
int goodG2B_232();
int goodB2G_214();
int CWE190_Integer_Overflow__short_fscanf_postinc_68_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_postinc_12_bad();
int goodB2G_215();
int goodG2B_233();
int CWE190_Integer_Overflow__short_rand_postinc_12_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_67_bad();
int goodG2B_234();
int goodB2G_216();
int CWE190_Integer_Overflow__int64_t_rand_postinc_67_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_53_bad();
int goodG2B_235();
int goodB2G_217();
int CWE190_Integer_Overflow__short_fscanf_postinc_53_good();
int CWE190_Integer_Overflow__short_max_postinc_15_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B1_130();
int goodG2B2_130();
int CWE190_Integer_Overflow__short_max_postinc_15_good();
int CWE190_Integer_Overflow__int_max_postinc_01_bad();
int goodG2B_236();
int goodB2G_218();
int CWE190_Integer_Overflow__int_max_postinc_01_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_65b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_bad();
int goodB2G1_149();
int goodB2G2_149();
int goodG2B1_131();
int goodG2B2_131();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_good();
int __fastcall badSink_41(__int16 a1);
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_44_bad();
int __fastcall goodG2BSink_41(__int16 a1);
int goodG2B_237();
int __fastcall goodB2GSink_31(__int16 a1);
__int64 goodB2G_219();
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_44_good();
__int64 __fastcall badSource_11(unsigned int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_42_bad();
__int64 goodG2BSource_11();
int goodG2B_238();
__int64 __fastcall goodB2GSource_11(unsigned int a1);
int goodB2G_220();
int CWE190_Integer_Overflow__int_fscanf_postinc_42_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_63b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_bad();
int goodB2G1_150();
int goodB2G2_150();
int goodG2B_239();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_good();
int CWE190_Integer_Overflow__int_fgets_postinc_01_bad();
int goodG2B_240();
int goodB2G_221();
int CWE190_Integer_Overflow__int_fgets_postinc_01_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_bad();
int goodB2G1_151();
int goodB2G2_151();
int goodG2B1_132();
int goodG2B2_132();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad();
int goodB2G1_152();
int goodB2G2_152();
int goodG2B1_133();
int goodG2B2_133();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_good();
int CWE190_Integer_Overflow__int_max_postinc_09_bad();
int goodB2G1_153();
int goodB2G2_153();
int goodG2B1_134();
int goodG2B2_134();
int CWE190_Integer_Overflow__int_max_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53c_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__int_rand_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int_rand_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_rand_postinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__short_max_postinc_05_bad();
int goodB2G1_154();
int goodB2G2_154();
int goodG2B1_135();
int goodG2B2_135();
int CWE190_Integer_Overflow__short_max_postinc_05_good();
int __fastcall badSink_42(__int16 a1);
int CWE190_Integer_Overflow__short_max_postinc_41_bad();
int __fastcall goodG2BSink_42(__int16 a1);
int goodG2B_241();
int __fastcall goodB2GSink_32(__int16 a1);
int goodB2G_222();
int CWE190_Integer_Overflow__short_max_postinc_41_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_65b_goodB2GSink(__int64 a1);
__int64 CWE190_Integer_Overflow__short_rand_postinc_65_bad();
int goodG2B_242();
__int64 goodB2G_223();
__int64 CWE190_Integer_Overflow__short_rand_postinc_65_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_bad();
int goodG2B_243();
int goodB2G_224();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_bad();
int goodB2G1_155();
int goodB2G2_155();
int goodG2B1_136();
int goodG2B2_136();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_51_bad();
int goodG2B_244();
int goodB2G_225();
int CWE190_Integer_Overflow__int_listen_socket_postinc_51_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_32_bad();
int goodG2B_245();
int goodB2G_226();
int CWE190_Integer_Overflow__char_fscanf_postinc_32_good();
int CWE190_Integer_Overflow__short_max_postinc_34_bad();
int goodG2B_246();
int goodB2G_227();
int CWE190_Integer_Overflow__short_max_postinc_34_good();
int CWE190_Integer_Overflow__int_fgets_postinc_09_bad();
int goodB2G1_156();
int goodB2G2_156();
int goodG2B1_137();
int goodG2B2_137();
int CWE190_Integer_Overflow__int_fgets_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_rand_postinc_22_bad();
int goodB2G1_157();
int goodB2G2_157();
int goodG2B_247();
int CWE190_Integer_Overflow__int_rand_postinc_22_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54e_goodB2GSink(int a1);
int __fastcall badSink_43(int a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_bad();
int __fastcall goodG2BSink_43(int a1);
int goodG2B_248();
int __fastcall goodB2GSink_33(int a1);
__int64 goodB2G_228();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad();
int goodG2B_249();
int goodB2G_229();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_52_bad();
int goodG2B_250();
int goodB2G_230();
int CWE190_Integer_Overflow__short_fscanf_postinc_52_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_51b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_31_bad();
int goodG2B_251();
int goodB2G_231();
int CWE190_Integer_Overflow__char_fscanf_postinc_31_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_34_bad();
int goodG2B_252();
int goodB2G_232();
int CWE190_Integer_Overflow__int_fscanf_postinc_34_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_65b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_65b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_65b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_16_bad();
int goodB2G_233();
int goodG2B_253();
int CWE190_Integer_Overflow__short_fscanf_postinc_16_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_goodB2GSink(__int64 a1);
int __fastcall badSink_44(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_21_bad();
int __fastcall goodB2G1Sink_9(int a1);
int goodB2G1_158();
int __fastcall goodB2G2Sink_9(int a1);
int goodB2G2_158();
int __fastcall goodG2BSink_44(int a1);
int goodG2B_254();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_21_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad();
int goodB2G1_159();
int goodB2G2_159();
int goodG2B1_138();
int goodG2B2_138();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_03_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_09_bad();
int goodB2G1_160();
int goodB2G2_160();
int goodG2B1_139();
int goodG2B2_139();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_09_good();
int badSink_45();
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_bad();
int goodG2BSink_45();
int goodG2B_255();
int goodB2GSink_34();
int goodB2G_234();
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_bad();
int goodG2B_256();
int goodB2G_235();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_bad();
int goodB2G1_161();
int goodB2G2_161();
int goodG2B1_140();
int goodG2B2_140();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_51_bad();
int goodG2B_257();
int goodB2G_236();
int CWE190_Integer_Overflow__short_fscanf_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_17_bad();
int goodB2G_237();
int goodG2B_258();
int CWE190_Integer_Overflow__int64_t_max_postinc_17_good();
int __fastcall badSink_46(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_41_bad();
int __fastcall goodG2BSink_46(int a1);
int goodG2B_259();
int __fastcall goodB2GSink_35(int a1);
int goodB2G_238();
int CWE190_Integer_Overflow__int_fscanf_postinc_41_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_51b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_51b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_51b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_18_bad();
int goodB2G_239();
int goodG2B_260();
int CWE190_Integer_Overflow__int64_t_rand_postinc_18_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_bad();
int goodG2B_261();
int goodB2G_240();
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Sink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_12_bad();
int goodB2G_241();
int goodG2B_262();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_64b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_64b_goodB2GSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_05_bad();
int goodB2G1_162();
int goodB2G2_162();
int goodG2B1_141();
int goodG2B2_141();
int CWE190_Integer_Overflow__int_fscanf_postinc_05_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_01_bad();
int goodG2B_263();
int goodB2G_242();
int CWE190_Integer_Overflow__int64_t_rand_postinc_01_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_06_bad();
int goodB2G1_163();
int goodB2G2_163();
int goodG2B1_142();
int goodG2B2_142();
int CWE190_Integer_Overflow__short_fscanf_postinc_06_good();
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__short_fscanf_postinc_17_bad();
int goodB2G_243();
int goodG2B_264();
int CWE190_Integer_Overflow__short_fscanf_postinc_17_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_53_bad();
int goodG2B_265();
int goodB2G_244();
int CWE190_Integer_Overflow__int_listen_socket_postinc_53_good();
int CWE190_Integer_Overflow__short_max_postinc_65_bad();
int goodG2B_266();
int goodB2G_245();
int CWE190_Integer_Overflow__short_max_postinc_65_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_bad();
int goodG2B_267();
int goodB2G_246();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_22_bad();
int goodB2G1_164();
int goodB2G2_164();
int goodG2B_268();
int CWE190_Integer_Overflow__char_fscanf_postinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_11_bad();
int goodB2G1_165();
int goodB2G2_165();
int goodG2B1_143();
int goodG2B2_143();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_11_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_02_bad();
int goodB2G1_166();
int goodB2G2_166();
int goodG2B1_144();
int goodG2B2_144();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_02_good();
int CWE190_Integer_Overflow__char_max_postinc_64_bad();
int goodG2B_269();
int goodB2G_247();
int CWE190_Integer_Overflow__char_max_postinc_64_good();
int badSink_47();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_bad();
int goodG2BSink_47();
int goodG2B_270();
int goodB2GSink_36();
int goodB2G_248();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_10_bad();
int goodB2G1_167();
int goodB2G2_167();
int goodG2B1_145();
int goodG2B2_145();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_07_bad();
int goodB2G1_168();
int goodB2G2_168();
int goodG2B1_146();
int goodG2B2_146();
int CWE190_Integer_Overflow__int64_t_max_postinc_07_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_13_bad();
int goodB2G1_169();
int goodB2G2_169();
int goodG2B1_147();
int goodG2B2_147();
int CWE190_Integer_Overflow__char_fscanf_postinc_13_good();
int badSink_48();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_bad();
int goodG2BSink_48();
int goodG2B_271();
int goodB2GSink_37();
int goodB2G_249();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_good();
__int64 CWE190_Integer_Overflow__int_fgets_postinc_65_bad();
int goodG2B_272();
__int64 goodB2G_250();
__int64 CWE190_Integer_Overflow__int_fgets_postinc_65_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_01_bad();
int goodG2B_273();
int goodB2G_251();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_01_good();
int CWE190_Integer_Overflow__int_max_postinc_10_bad();
int goodB2G1_170();
int goodB2G2_170();
int goodG2B1_148();
int goodG2B2_148();
int CWE190_Integer_Overflow__int_max_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54c_goodB2GSink(__int64 a1);
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad();
void goodB2G_252();
int goodG2B_274();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_good();
int CWE190_Integer_Overflow__short_rand_postinc_66_bad();
int goodG2B_275();
int goodB2G_253();
int CWE190_Integer_Overflow__short_rand_postinc_66_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_67b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_67b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_67b_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52c_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_10();
__int64 staticReturnsFalse_10();
int CWE190_Integer_Overflow__int_connect_socket_postinc_08_bad();
int goodB2G1_171();
int goodB2G2_171();
int goodG2B1_149();
int goodG2B2_149();
int CWE190_Integer_Overflow__int_connect_socket_postinc_08_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52c_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52c_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52c_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_52_bad();
int goodG2B_276();
int goodB2G_254();
int CWE190_Integer_Overflow__int_listen_socket_postinc_52_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_67_bad();
int goodG2B_277();
int goodB2G_255();
int CWE190_Integer_Overflow__int_fscanf_postinc_67_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53b_goodB2GSink(__int64 a1);
int __fastcall badSink_49(char a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_21_bad();
int __fastcall goodB2G1Sink_10(char a1);
int goodB2G1_172();
int __fastcall goodB2G2Sink_10(char a1);
int goodB2G2_172();
int __fastcall goodG2BSink_49(char a1);
int goodG2B_278();
int CWE190_Integer_Overflow__char_fscanf_postinc_21_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_03_bad();
int goodB2G1_173();
int goodB2G2_173();
int goodG2B1_150();
int goodG2B2_150();
int CWE190_Integer_Overflow__char_fscanf_postinc_03_good();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_bad();
int goodG2B_279();
__int64 goodB2G_256();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_good();
__int64 staticReturnsTrue_11();
__int64 staticReturnsFalse_11();
int CWE190_Integer_Overflow__int64_t_rand_postinc_08_bad();
int goodB2G1_174();
int goodB2G2_174();
int goodG2B1_151();
int goodG2B2_151();
int CWE190_Integer_Overflow__int64_t_rand_postinc_08_good();
int CWE190_Integer_Overflow__char_rand_postinc_67_bad();
int goodG2B_280();
int goodB2G_257();
int CWE190_Integer_Overflow__char_rand_postinc_67_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_07_bad();
int goodB2G1_175();
int goodB2G2_175();
int goodG2B1_152();
int goodG2B2_152();
int CWE190_Integer_Overflow__int_connect_socket_postinc_07_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_12_bad();
int goodB2G_258();
int goodG2B_281();
int CWE190_Integer_Overflow__char_fscanf_postinc_12_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_bad();
int goodG2B_282();
int goodB2G_259();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_good();
int CWE190_Integer_Overflow__short_max_postinc_14_bad();
int goodB2G1_176();
int goodB2G2_176();
int goodG2B1_153();
int goodG2B2_153();
int CWE190_Integer_Overflow__short_max_postinc_14_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_63b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_63b_goodB2GSink(_BYTE *a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_06_bad();
int goodB2G1_177();
int goodB2G2_177();
int goodG2B1_154();
int goodG2B2_154();
int CWE190_Integer_Overflow__int_listen_socket_postinc_06_good();
__int64 __fastcall badSource_12(unsigned int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_bad();
__int64 goodG2BSource_12();
int goodG2B_283();
__int64 __fastcall goodB2GSource_12(unsigned int a1);
int goodB2G_260();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_67_bad();
int goodG2B_284();
int goodB2G_261();
int CWE190_Integer_Overflow__int_connect_socket_postinc_67_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_11_bad();
int goodB2G1_178();
int goodB2G2_178();
int goodG2B1_155();
int goodG2B2_155();
int CWE190_Integer_Overflow__char_fscanf_postinc_11_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_02_bad();
int goodB2G1_179();
int goodB2G2_179();
int goodG2B1_156();
int goodG2B2_156();
int CWE190_Integer_Overflow__char_fscanf_postinc_02_good();
int CWE190_Integer_Overflow__short_max_postinc_31_bad();
int goodG2B_285();
int goodB2G_262();
int CWE190_Integer_Overflow__short_max_postinc_31_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_10_bad();
int goodB2G1_180();
int goodB2G2_180();
int goodG2B1_157();
int goodG2B2_157();
int CWE190_Integer_Overflow__char_fscanf_postinc_10_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_54_bad();
int goodG2B_286();
int goodB2G_263();
int CWE190_Integer_Overflow__int64_t_rand_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54d_goodB2GSink(char a1);
int __fastcall badSink_50(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_bad();
int __fastcall goodB2G1Sink_11(__int64 a1);
int goodB2G1_181();
int __fastcall goodB2G2Sink_11(__int64 a1);
int goodB2G2_181();
int __fastcall goodG2BSink_50(__int64 a1);
int goodG2B_287();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_bad();
int goodB2G1_182();
int goodB2G2_182();
int goodG2B1_158();
int goodG2B2_158();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_good();
int __fastcall badSink_51(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_bad();
int __fastcall goodG2BSink_51(int a1);
int goodG2B_288();
int __fastcall goodB2GSink_38(int a1);
int goodB2G_264();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_bad();
int goodB2G1_183();
int goodB2G2_183();
int goodG2B_289();
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_goodG2BSink(__int16 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_bad();
int goodG2B_290();
int goodB2G_265();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_rand_postinc_64_bad();
int goodG2B_291();
int goodB2G_266();
int CWE190_Integer_Overflow__short_rand_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54d_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54d_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54d_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_max_postinc_04_bad();
int goodB2G1_184();
int goodB2G2_184();
int goodG2B1_159();
int goodG2B2_159();
int CWE190_Integer_Overflow__short_max_postinc_04_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_65_bad();
int goodG2B_292();
int goodB2G_267();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_14_bad();
int goodB2G1_185();
int goodB2G2_185();
int goodG2B1_160();
int goodG2B2_160();
int CWE190_Integer_Overflow__int_fscanf_postinc_14_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad();
int goodB2G_268();
int goodG2B_293();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_09_bad();
int goodB2G1_186();
int goodB2G2_186();
int goodG2B1_161();
int goodG2B2_161();
int CWE190_Integer_Overflow__char_fscanf_postinc_09_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_32_bad();
int goodG2B_294();
int goodB2G_269();
int CWE190_Integer_Overflow__int_fscanf_postinc_32_good();
int CWE190_Integer_Overflow__char_max_postinc_17_bad();
int goodB2G_270();
int goodG2B_295();
int CWE190_Integer_Overflow__char_max_postinc_17_good();
int CWE190_Integer_Overflow__int_max_postinc_63_bad();
int goodG2B_296();
int goodB2G_271();
int CWE190_Integer_Overflow__int_max_postinc_63_good();
int CWE190_Integer_Overflow__short_max_postinc_22_bad();
int goodB2G1_187();
int goodB2G2_187();
int goodG2B_297();
int CWE190_Integer_Overflow__short_max_postinc_22_good();
int CWE190_Integer_Overflow__char_rand_postinc_18_bad();
int goodB2G_272();
int goodG2B_298();
int CWE190_Integer_Overflow__char_rand_postinc_18_good();
__int64 badSource_13();
int CWE190_Integer_Overflow__int_rand_postinc_42_bad();
__int64 goodG2BSource_13();
int goodG2B_299();
__int64 goodB2GSource_13();
int goodB2G_273();
int CWE190_Integer_Overflow__int_rand_postinc_42_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_bad();
int goodG2B_300();
int goodB2G_274();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_good();
int CWE190_Integer_Overflow__short_max_postinc_32_bad();
int goodG2B_301();
int goodB2G_275();
int CWE190_Integer_Overflow__short_max_postinc_32_good();
int CWE190_Integer_Overflow__char_rand_postinc_04_bad();
int goodB2G1_188();
int goodB2G2_188();
int goodG2B1_162();
int goodG2B2_162();
int CWE190_Integer_Overflow__char_rand_postinc_04_good();
int CWE190_Integer_Overflow__int_fgets_postinc_05_bad();
int goodB2G1_189();
int goodB2G2_189();
int goodG2B1_163();
int goodG2B2_163();
int CWE190_Integer_Overflow__int_fgets_postinc_05_good();
__int64 CWE190_Integer_Overflow__char_max_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__char_max_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__char_max_postinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_rand_postinc_68b_badSink();
int CWE190_Integer_Overflow__int64_t_rand_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_rand_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_fscanf_postinc_04_bad();
int goodB2G1_190();
int goodB2G2_190();
int goodG2B1_164();
int goodG2B2_164();
int CWE190_Integer_Overflow__int_fscanf_postinc_04_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_31_bad();
int goodG2B_302();
int goodB2G_276();
int CWE190_Integer_Overflow__int_fscanf_postinc_31_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_63_bad();
int goodG2B_303();
int goodB2G_277();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_63_good();
int CWE190_Integer_Overflow__short_max_postinc_13_bad();
int goodB2G1_191();
int goodB2G2_191();
int goodG2B1_165();
int goodG2B2_165();
int CWE190_Integer_Overflow__short_max_postinc_13_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_18_bad();
int goodB2G_278();
int goodG2B_304();
int CWE190_Integer_Overflow__int_connect_socket_postinc_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_max_postinc_61_bad();
int goodG2B_305();
int goodB2G_279();
int CWE190_Integer_Overflow__char_max_postinc_61_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_rand_postinc_15_bad();
int goodB2G1_192();
int goodB2G2_192();
int goodG2B1_166();
int goodG2B2_166();
int CWE190_Integer_Overflow__int_rand_postinc_15_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_68_bad();
int goodG2B_306();
int goodB2G_280();
int CWE190_Integer_Overflow__int64_t_rand_postinc_68_good();
int __fastcall badSink_52(__int16 a1);
int CWE190_Integer_Overflow__short_max_postinc_21_bad();
int __fastcall goodB2G1Sink_12(__int16 a1);
int goodB2G1_193();
int __fastcall goodB2G2Sink_12(__int16 a1);
int goodB2G2_193();
int __fastcall goodG2BSink_52(__int16 a1);
int goodG2B_307();
int CWE190_Integer_Overflow__short_max_postinc_21_good();
int CWE190_Integer_Overflow__short_max_postinc_03_bad();
int goodB2G1_194();
int goodB2G2_194();
int goodG2B1_167();
int goodG2B2_167();
int CWE190_Integer_Overflow__short_max_postinc_03_good();
int CWE190_Integer_Overflow__int_rand_postinc_34_bad();
int goodG2B_308();
int goodB2G_281();
int CWE190_Integer_Overflow__int_rand_postinc_34_good();
int CWE190_Integer_Overflow__char_max_postinc_07_bad();
int goodB2G1_195();
int goodB2G2_195();
int goodG2B1_168();
int goodG2B2_168();
int CWE190_Integer_Overflow__char_max_postinc_07_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_65b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_65b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_65b_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_51b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_51b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_51b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_53_bad();
int goodG2B_309();
int goodB2G_282();
int CWE190_Integer_Overflow__int64_t_rand_postinc_53_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54c_goodB2GSink(char a1);
void CWE190_Integer_Overflow__short_rand_postinc_17_bad();
void goodB2G_283();
int goodG2B_310();
int CWE190_Integer_Overflow__short_rand_postinc_17_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_22_bad();
int goodB2G1_196();
int goodB2G2_196();
int goodG2B_311();
int CWE190_Integer_Overflow__int_fscanf_postinc_22_good();
int CWE190_Integer_Overflow__int_max_postinc_64_bad();
int goodG2B_312();
int goodB2G_284();
int CWE190_Integer_Overflow__int_max_postinc_64_good();
int CWE190_Integer_Overflow__short_max_postinc_12_bad();
int goodB2G_285();
int goodG2B_313();
int CWE190_Integer_Overflow__short_max_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_65_bad();
int goodG2B_314();
__int64 goodB2G_286();
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_65_good();
int CWE190_Integer_Overflow__short_rand_postinc_06_bad();
int goodB2G1_197();
int goodB2G2_197();
int goodG2B1_169();
int goodG2B2_169();
int CWE190_Integer_Overflow__short_rand_postinc_06_good();
int CWE190_Integer_Overflow__int_fgets_postinc_64_bad();
int goodG2B_315();
int goodB2G_287();
int CWE190_Integer_Overflow__int_fgets_postinc_64_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_13_bad();
int goodB2G1_198();
int goodB2G2_198();
int goodG2B1_170();
int goodG2B2_170();
int CWE190_Integer_Overflow__int_fscanf_postinc_13_good();
__int64 staticReturnsTrue_12();
__int64 staticReturnsFalse_12();
int CWE190_Integer_Overflow__char_rand_postinc_08_bad();
int goodB2G1_199();
int goodB2G2_199();
int goodG2B1_171();
int goodG2B2_171();
int CWE190_Integer_Overflow__char_rand_postinc_08_good();
int CWE190_Integer_Overflow__short_rand_postinc_63_bad();
int goodG2B_316();
int goodB2G_288();
int CWE190_Integer_Overflow__short_rand_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_postinc_11_bad();
int goodB2G1_200();
int goodB2G2_200();
int goodG2B1_172();
int goodG2B2_172();
int CWE190_Integer_Overflow__short_max_postinc_11_good();
int CWE190_Integer_Overflow__short_max_postinc_02_bad();
int goodB2G1_201();
int goodB2G2_201();
int goodG2B1_173();
int goodG2B2_173();
int CWE190_Integer_Overflow__short_max_postinc_02_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_postinc_10_bad();
int goodB2G1_202();
int goodB2G2_202();
int goodG2B1_174();
int goodG2B2_174();
int CWE190_Integer_Overflow__short_max_postinc_10_good();
int __fastcall badSink_53(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_21_bad();
int __fastcall goodB2G1Sink_13(int a1);
int goodB2G1_203();
int __fastcall goodB2G2Sink_13(int a1);
int goodB2G2_203();
int __fastcall goodG2BSink_53(int a1);
int goodG2B_317();
int CWE190_Integer_Overflow__int_fscanf_postinc_21_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_52_bad();
int goodG2B_318();
int goodB2G_289();
int CWE190_Integer_Overflow__int64_t_rand_postinc_52_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_bad();
int goodG2B_319();
int goodB2G_290();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_51b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_51_bad();
int goodG2B_320();
int goodB2G_291();
int CWE190_Integer_Overflow__int64_t_rand_postinc_51_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_16_bad();
int goodB2G_292();
int goodG2B_321();
int CWE190_Integer_Overflow__int64_t_rand_postinc_16_good();
int CWE190_Integer_Overflow__short_max_postinc_01_bad();
int goodG2B_322();
int goodB2G_293();
int CWE190_Integer_Overflow__short_max_postinc_01_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_bad();
int goodB2G1_204();
int goodB2G2_204();
int goodG2B1_175();
int goodG2B2_175();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad();
int goodG2B_323();
int goodB2G_294();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_good();
int CWE190_Integer_Overflow__int_rand_postinc_67_bad();
int goodG2B_324();
int goodB2G_295();
int CWE190_Integer_Overflow__int_rand_postinc_67_good();
int CWE190_Integer_Overflow__char_max_postinc_66_bad();
int goodG2B_325();
int goodB2G_296();
int CWE190_Integer_Overflow__char_max_postinc_66_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_12_bad();
int goodB2G_297();
int goodG2B_326();
int CWE190_Integer_Overflow__int_fscanf_postinc_12_good();
int __fastcall badSink_54(int a1);
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_44_bad();
int __fastcall goodG2BSink_54(int a1);
int goodG2B_327();
int __fastcall goodB2GSink_39(int a1);
__int64 goodB2G_298();
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_44_good();
int CWE190_Integer_Overflow__char_rand_postinc_54_bad();
int goodG2B_328();
int goodB2G_299();
int CWE190_Integer_Overflow__char_rand_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_max_postinc_09_bad();
int goodB2G1_205();
int goodB2G2_205();
int goodG2B1_176();
int goodG2B2_176();
int CWE190_Integer_Overflow__short_max_postinc_09_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_64_bad();
int goodG2B_329();
int goodB2G_300();
int CWE190_Integer_Overflow__int_fscanf_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad();
int goodB2G1_206();
int goodB2G2_206();
int goodG2B1_177();
int goodG2B2_177();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad();
int goodG2B_330();
int goodB2G_301();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_good();
int badSink_55();
int CWE190_Integer_Overflow__int64_t_rand_postinc_45_bad();
int goodG2BSink_55();
int goodG2B_331();
int goodB2GSink_40();
int goodB2G_302();
int CWE190_Integer_Overflow__int64_t_rand_postinc_45_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad();
int goodB2G1_207();
int goodB2G2_207();
int goodG2B1_178();
int goodG2B2_178();
int CWE190_Integer_Overflow__int64_t_rand_postinc_06_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_02_bad();
int goodB2G1_208();
int goodB2G2_208();
int goodG2B1_179();
int goodG2B2_179();
int CWE190_Integer_Overflow__int_fscanf_postinc_02_good();
int CWE190_Integer_Overflow__char_rand_postinc_13_bad();
int goodB2G1_209();
int goodB2G2_209();
int goodG2B1_180();
int goodG2B2_180();
int CWE190_Integer_Overflow__char_rand_postinc_13_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_54_bad();
int goodG2B_332();
int goodB2G_303();
int CWE190_Integer_Overflow__int_connect_socket_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_rand_postinc_61_bad();
int goodG2B_333();
int goodB2G_304();
int CWE190_Integer_Overflow__short_rand_postinc_61_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_10_bad();
int goodB2G1_210();
int goodB2G2_210();
int goodG2B1_181();
int goodG2B2_181();
int CWE190_Integer_Overflow__int_fscanf_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_postinc_54_bad();
int goodG2B_334();
int goodB2G_305();
int CWE190_Integer_Overflow__int_fgets_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_15_bad();
int goodB2G1_211();
int goodB2G2_211();
int goodG2B1_182();
int goodG2B2_182();
int CWE190_Integer_Overflow__short_fscanf_postinc_15_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_rand_postinc_07_bad();
int goodB2G1_212();
int goodB2G2_212();
int goodG2B1_183();
int goodG2B2_183();
int CWE190_Integer_Overflow__short_rand_postinc_07_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_01_bad();
int goodG2B_335();
int goodB2G_306();
int CWE190_Integer_Overflow__int_fscanf_postinc_01_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_68b_badSink();
int CWE190_Integer_Overflow__int64_t_max_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_max_postinc_68b_goodB2GSink();
__int64 __fastcall badSource_14(unsigned __int16 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_42_bad();
__int64 goodG2BSource_14();
int goodG2B_336();
__int64 __fastcall goodB2GSource_14(unsigned __int16 a1);
int goodB2G_307();
int CWE190_Integer_Overflow__short_fscanf_postinc_42_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_03_bad();
int goodB2G1_213();
int goodB2G2_213();
int goodG2B1_184();
int goodG2B2_184();
int CWE190_Integer_Overflow__int64_t_rand_postinc_03_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_bad();
int goodG2B_337();
int goodB2G_308();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_good();
int CWE190_Integer_Overflow__char_max_postinc_15_bad();
int goodB2G1_214();
int goodB2G2_214();
int goodG2B1_185();
int goodG2B2_185();
int CWE190_Integer_Overflow__char_max_postinc_15_good();
int __fastcall badSink_56(char a1);
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_44_bad();
int __fastcall goodG2BSink_56(char a1);
int goodG2B_338();
int __fastcall goodB2GSink_41(char a1);
__int64 goodB2G_309();
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_44_good();
int CWE190_Integer_Overflow__int_fgets_postinc_63_bad();
int goodG2B_339();
int goodB2G_310();
int CWE190_Integer_Overflow__int_fgets_postinc_63_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_68b_badSink();
int CWE190_Integer_Overflow__int_listen_socket_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_listen_socket_postinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_67_bad();
int goodG2B_340();
int goodB2G_311();
int CWE190_Integer_Overflow__int64_t_max_postinc_67_good();
int CWE190_Integer_Overflow__char_rand_postinc_68b_badSink();
int CWE190_Integer_Overflow__char_rand_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__char_rand_postinc_68b_goodB2GSink();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_64_bad();
int goodG2B_341();
int goodB2G_312();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_09_bad();
int goodB2G1_215();
int goodB2G2_215();
int goodG2B1_186();
int goodG2B2_186();
int CWE190_Integer_Overflow__int_fscanf_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_65b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_05_bad();
int goodB2G1_216();
int goodB2G2_216();
int goodG2B1_187();
int goodG2B2_187();
int CWE190_Integer_Overflow__short_fscanf_postinc_05_good();
int __fastcall badSink_57(__int16 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_41_bad();
int __fastcall goodG2BSink_57(__int16 a1);
int goodG2B_342();
int __fastcall goodB2GSink_42(__int16 a1);
int goodB2G_313();
int CWE190_Integer_Overflow__short_fscanf_postinc_41_good();
int CWE190_Integer_Overflow__int_max_postinc_17_bad();
int goodB2G_314();
int goodG2B_343();
int CWE190_Integer_Overflow__int_max_postinc_17_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_bad();
int goodG2B_344();
int goodB2G_315();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53b_goodB2GSink(char a1);
int __fastcall badSink_58(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_postinc_21_bad();
int __fastcall goodB2G1Sink_14(__int64 a1);
int goodB2G1_217();
int __fastcall goodB2G2Sink_14(__int64 a1);
int goodB2G2_217();
int __fastcall goodG2BSink_58(__int64 a1);
int goodG2B_345();
int CWE190_Integer_Overflow__int64_t_rand_postinc_21_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54e_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54e_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54e_goodB2GSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad();
int goodB2G1_218();
int goodB2G2_218();
int goodG2B1_188();
int goodG2B2_188();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_34_bad();
int goodG2B_346();
int goodB2G_316();
int CWE190_Integer_Overflow__short_fscanf_postinc_34_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_bad();
int goodG2B_347();
int goodB2G_317();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_good();
int CWE190_Integer_Overflow__char_rand_postinc_68_bad();
int goodG2B_348();
int goodB2G_318();
int CWE190_Integer_Overflow__char_rand_postinc_68_good();
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_68b_badSink();
int CWE190_Integer_Overflow__int_connect_socket_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_connect_socket_postinc_68b_goodB2GSink();
void CWE190_Integer_Overflow__int_fgets_postinc_17_bad();
void goodB2G_319();
int goodG2B_349();
int CWE190_Integer_Overflow__int_fgets_postinc_17_good();
__int64 CWE190_Integer_Overflow__int_max_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__int_max_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int_max_postinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_postinc_53_bad();
int goodG2B_350();
int goodB2G_320();
int CWE190_Integer_Overflow__char_rand_postinc_53_good();
int __fastcall badSink_59(int a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_bad();
int __fastcall goodB2G1Sink_15(int a1);
int goodB2G1_219();
int __fastcall goodB2G2Sink_15(int a1);
int goodB2G2_219();
int __fastcall goodG2BSink_59(int a1);
int goodG2B_351();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_bad();
int goodB2G1_220();
int goodB2G2_220();
int goodG2B1_189();
int goodG2B2_189();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_66_bad();
int goodG2B_352();
int goodB2G_321();
int CWE190_Integer_Overflow__short_fscanf_postinc_66_good();
int CWE190_Integer_Overflow__int_max_postinc_61_bad();
int goodG2B_353();
int goodB2G_322();
int CWE190_Integer_Overflow__int_max_postinc_61_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_bad();
int goodG2B_354();
int goodB2G_323();
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_bad();
int goodB2G_324();
int goodG2B_355();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_good();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_bad();
int goodG2B_356();
int goodB2G_325();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_good();
int CWE190_Integer_Overflow__int_max_postinc_07_bad();
int goodB2G1_221();
int goodB2G2_221();
int goodG2B1_190();
int goodG2B2_190();
int CWE190_Integer_Overflow__int_max_postinc_07_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_bad();
int goodB2G_326();
int goodG2B_357();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_64b_goodB2GSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_53_bad();
int goodG2B_358();
int goodB2G_327();
int CWE190_Integer_Overflow__int_connect_socket_postinc_53_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54c_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_badSource(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_goodB2GSource(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_fgets_postinc_07_bad();
int goodB2G1_222();
int goodB2G2_222();
int goodG2B1_191();
int goodG2B2_191();
int CWE190_Integer_Overflow__int_fgets_postinc_07_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_01_bad();
int goodG2B_359();
int goodB2G_328();
int CWE190_Integer_Overflow__char_fscanf_postinc_01_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_18_bad();
int goodB2G_329();
int goodG2B_360();
int CWE190_Integer_Overflow__int64_t_max_postinc_18_good();
__int64 __fastcall badSource_15(unsigned int a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_42_bad();
__int64 goodG2BSource_15();
int goodG2B_361();
__int64 __fastcall goodB2GSource_15(unsigned int a1);
int goodB2G_330();
int CWE190_Integer_Overflow__int_listen_socket_postinc_42_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_bad();
int goodB2G1_223();
int goodB2G2_223();
int goodG2B1_192();
int goodG2B2_192();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_bad();
int goodB2G1_224();
int goodB2G2_224();
int goodG2B1_193();
int goodG2B2_193();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_good();
int CWE190_Integer_Overflow__char_rand_postinc_52_bad();
int goodG2B_362();
int goodB2G_331();
int CWE190_Integer_Overflow__char_rand_postinc_52_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_64_bad();
int goodG2B_363();
int goodB2G_332();
int CWE190_Integer_Overflow__char_fscanf_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_51b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_51b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_51b_goodB2GSink(char a1);
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_65_bad();
int goodG2B_364();
__int64 goodB2G_333();
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_65_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_bad();
int goodG2B_365();
int goodB2G_334();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_good();
int CWE190_Integer_Overflow__char_rand_postinc_16_bad();
int goodB2G_335();
int goodG2B_366();
int CWE190_Integer_Overflow__char_rand_postinc_16_good();
__int64 staticReturnsTrue_13();
__int64 staticReturnsFalse_13();
int CWE190_Integer_Overflow__int_rand_postinc_08_bad();
int goodB2G1_225();
int goodB2G2_225();
int goodG2B1_194();
int goodG2B2_194();
int CWE190_Integer_Overflow__int_rand_postinc_08_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad();
int goodB2G1_226();
int goodB2G2_226();
int goodG2B1_195();
int goodG2B2_195();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_bad();
int goodB2G1_227();
int goodB2G2_227();
int goodG2B1_196();
int goodG2B2_196();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_05_bad();
int goodB2G1_228();
int goodB2G2_228();
int goodG2B1_197();
int goodG2B2_197();
int CWE190_Integer_Overflow__int_listen_socket_postinc_05_good();
int __fastcall badSink_60(int a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_41_bad();
int __fastcall goodG2BSink_60(int a1);
int goodG2B_367();
int __fastcall goodB2GSink_43(int a1);
int goodB2G_336();
int CWE190_Integer_Overflow__int_listen_socket_postinc_41_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_bad();
int goodG2B_368();
int goodB2G_337();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_rand_postinc_51_bad();
int goodG2B_369();
int goodB2G_338();
int CWE190_Integer_Overflow__char_rand_postinc_51_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_52_bad();
int goodG2B_370();
int goodB2G_339();
int CWE190_Integer_Overflow__int_connect_socket_postinc_52_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_postinc_16_bad();
int goodB2G_340();
int goodG2B_371();
int CWE190_Integer_Overflow__int_connect_socket_postinc_16_good();
int badSink_61();
int CWE190_Integer_Overflow__char_rand_postinc_45_bad();
int goodG2BSink_61();
int goodG2B_372();
int goodB2GSink_44();
int goodB2G_341();
int CWE190_Integer_Overflow__char_rand_postinc_45_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad();
int goodB2G1_229();
int goodB2G2_229();
int goodG2B1_198();
int goodG2B2_198();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_rand_postinc_06_bad();
int goodB2G1_230();
int goodB2G2_230();
int goodG2B1_199();
int goodG2B2_199();
int CWE190_Integer_Overflow__char_rand_postinc_06_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad();
int goodB2G_342();
int goodG2B_373();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_17_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_03_bad();
int goodB2G1_231();
int goodB2G2_231();
int goodG2B1_200();
int goodG2B2_200();
int CWE190_Integer_Overflow__int_fscanf_postinc_03_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54e_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54e_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54e_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_67b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_67b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_67b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_bad();
int goodB2G_343();
int goodG2B_374();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_good();
int CWE190_Integer_Overflow__int_rand_postinc_54_bad();
int goodG2B_375();
int goodB2G_344();
int CWE190_Integer_Overflow__int_rand_postinc_54_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_66_bad();
int goodG2B_376();
int goodB2G_345();
int CWE190_Integer_Overflow__int_listen_socket_postinc_66_good();
int CWE190_Integer_Overflow__char_max_postinc_68b_badSink();
int CWE190_Integer_Overflow__char_max_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__char_max_postinc_68b_goodB2GSink();
int __fastcall badSink_62(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_44_bad();
int __fastcall goodG2BSink_62(__int64 a1);
int goodG2B_377();
int __fastcall goodB2GSink_45(__int64 a1);
__int64 goodB2G_346();
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_44_good();
__int64 CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_goodB2GSource();
int badSink_63();
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_bad();
int goodG2BSink_63();
int goodG2B_378();
int goodB2GSink_46();
int goodB2G_347();
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_14_bad();
int goodB2G1_232();
int goodB2G2_232();
int goodG2B1_201();
int goodG2B2_201();
int CWE190_Integer_Overflow__short_fscanf_postinc_14_good();
int CWE190_Integer_Overflow__int_connect_socket_postinc_06_bad();
int goodB2G1_233();
int goodB2G2_233();
int goodG2B1_202();
int goodG2B2_202();
int CWE190_Integer_Overflow__int_connect_socket_postinc_06_good();
__int64 staticReturnsTrue_14();
__int64 staticReturnsFalse_14();
int CWE190_Integer_Overflow__int64_t_max_postinc_08_bad();
int goodB2G1_234();
int goodB2G2_234();
int goodG2B1_203();
int goodG2B2_203();
int CWE190_Integer_Overflow__int64_t_max_postinc_08_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_32_bad();
int goodG2B_379();
int goodB2G_348();
int CWE190_Integer_Overflow__short_fscanf_postinc_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_63b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_63b_goodB2GSink(_BYTE *a1);
int CWE190_Integer_Overflow__char_max_postinc_67_bad();
int goodG2B_380();
int goodB2G_349();
int CWE190_Integer_Overflow__char_max_postinc_67_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_61_bad();
int goodG2B_381();
int goodB2G_350();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_61_good();
int __fastcall badSink_64(char a1);
int CWE190_Integer_Overflow__char_max_postinc_44_bad();
int __fastcall goodG2BSink_64(char a1);
int goodG2B_382();
int __fastcall goodB2GSink_47(char a1);
int goodB2G_351();
int CWE190_Integer_Overflow__char_max_postinc_44_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_04_bad();
int goodB2G1_235();
int goodB2G2_235();
int goodG2B1_204();
int goodG2B2_204();
int CWE190_Integer_Overflow__short_fscanf_postinc_04_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_31_bad();
int goodG2B_383();
int goodB2G_352();
int CWE190_Integer_Overflow__short_fscanf_postinc_31_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad();
int goodB2G1_236();
int goodB2G2_236();
int goodG2B1_205();
int goodG2B2_205();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_07_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_63_bad();
int goodG2B_384();
int goodB2G_353();
int CWE190_Integer_Overflow__char_fscanf_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_65b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_65b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_65b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_postinc_68b_badSink();
int CWE190_Integer_Overflow__int_rand_postinc_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_rand_postinc_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BSink(__int16 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_54_bad();
int goodG2B_385();
int goodB2G_354();
int CWE190_Integer_Overflow__int64_t_max_postinc_54_good();
int __fastcall CWE190_Integer_Overflow__short_max_postinc_64b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54d_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54d_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54d_goodB2GSink(char a1);
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_bad();
int goodG2B_386();
__int64 goodB2G_355();
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_15();
__int64 staticReturnsFalse_15();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad();
int goodB2G1_237();
int goodB2G2_237();
int goodG2B1_206();
int goodG2B2_206();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_17_bad();
int goodB2G_356();
int goodG2B_387();
int CWE190_Integer_Overflow__char_fscanf_postinc_17_good();
int CWE190_Integer_Overflow__int_rand_postinc_68_bad();
int goodG2B_388();
int goodB2G_357();
int CWE190_Integer_Overflow__int_rand_postinc_68_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_bad();
int goodG2B_389();
int goodB2G_358();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_22_bad();
int goodB2G1_238();
int goodB2G2_238();
int goodG2B_390();
int CWE190_Integer_Overflow__short_fscanf_postinc_22_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_bad();
int goodG2B_391();
int goodB2G_359();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_good();
int CWE190_Integer_Overflow__int_rand_postinc_31_bad();
int goodG2B_392();
int goodB2G_360();
int CWE190_Integer_Overflow__int_rand_postinc_31_good();
int CWE190_Integer_Overflow__short_max_postinc_64_bad();
int goodG2B_393();
int goodB2G_361();
int CWE190_Integer_Overflow__short_max_postinc_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_postinc_53_bad();
int goodG2B_394();
int goodB2G_362();
int CWE190_Integer_Overflow__int_rand_postinc_53_good();
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_61b_badSource(unsigned __int8 a1);
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_61b_goodB2GSource(unsigned __int8 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_13_bad();
int goodB2G1_239();
int goodB2G2_239();
int goodG2B1_207();
int goodG2B2_207();
int CWE190_Integer_Overflow__short_fscanf_postinc_13_good();
int CWE190_Integer_Overflow__char_max_postinc_18_bad();
int goodB2G_363();
int goodG2B_395();
int CWE190_Integer_Overflow__char_max_postinc_18_good();
int CWE190_Integer_Overflow__int_fscanf_postinc_11_bad();
int goodB2G1_240();
int goodB2G2_240();
int goodG2B1_208();
int goodG2B2_208();
int CWE190_Integer_Overflow__int_fscanf_postinc_11_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_63_bad();
int goodG2B_396();
int goodB2G_364();
int CWE190_Integer_Overflow__int64_t_rand_postinc_63_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_14_bad();
int goodB2G1_241();
int goodB2G2_241();
int goodG2B1_209();
int goodG2B2_209();
int CWE190_Integer_Overflow__int_listen_socket_postinc_14_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_32_bad();
int goodG2B_397();
int goodB2G_365();
int CWE190_Integer_Overflow__int_listen_socket_postinc_32_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_67b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_67b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_67b_goodB2GSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__char_fscanf_postinc_61_bad();
int goodG2B_398();
int goodB2G_366();
int CWE190_Integer_Overflow__char_fscanf_postinc_61_good();
int __fastcall badSink_65(__int16 a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_21_bad();
int __fastcall goodB2G1Sink_16(__int16 a1);
int goodB2G1_242();
int __fastcall goodB2G2Sink_16(__int16 a1);
int goodB2G2_242();
int __fastcall goodG2BSink_65(__int16 a1);
int goodG2B_399();
int CWE190_Integer_Overflow__short_fscanf_postinc_21_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_03_bad();
int goodB2G1_243();
int goodB2G2_243();
int goodG2B1_210();
int goodG2B2_210();
int CWE190_Integer_Overflow__short_fscanf_postinc_03_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_bad();
int goodB2G_367();
int goodG2B_400();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_good();
int CWE190_Integer_Overflow__char_rand_postinc_63_bad();
int goodG2B_401();
int goodB2G_368();
int CWE190_Integer_Overflow__char_rand_postinc_63_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_04_bad();
int goodB2G1_244();
int goodB2G2_244();
int goodG2B1_211();
int goodG2B2_211();
int CWE190_Integer_Overflow__int_listen_socket_postinc_04_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_31_bad();
int goodG2B_402();
int goodB2G_369();
int CWE190_Integer_Overflow__int_listen_socket_postinc_31_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_15_bad();
int goodB2G1_245();
int goodB2G2_245();
int goodG2B1_212();
int goodG2B2_212();
int CWE190_Integer_Overflow__int_listen_socket_postinc_15_good();
int CWE190_Integer_Overflow__short_rand_postinc_67_bad();
int goodG2B_403();
int goodB2G_370();
int CWE190_Integer_Overflow__short_rand_postinc_67_good();
int CWE190_Integer_Overflow__int64_t_max_postinc_68_bad();
int goodG2B_404();
int goodB2G_371();
int CWE190_Integer_Overflow__int64_t_max_postinc_68_good();
int CWE190_Integer_Overflow__int_rand_postinc_52_bad();
int goodG2B_405();
int goodB2G_372();
int CWE190_Integer_Overflow__int_rand_postinc_52_good();
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__short_fscanf_postinc_12_bad();
int goodB2G_373();
int goodG2B_406();
int CWE190_Integer_Overflow__short_fscanf_postinc_12_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_rand_postinc_16_bad();
int goodB2G_374();
int goodG2B_407();
int CWE190_Integer_Overflow__int_rand_postinc_16_good();
int CWE190_Integer_Overflow__char_fscanf_postinc_16_bad();
int goodB2G_375();
int goodG2B_408();
int CWE190_Integer_Overflow__char_fscanf_postinc_16_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_53_bad();
int goodG2B_409();
int goodB2G_376();
int CWE190_Integer_Overflow__int64_t_max_postinc_53_good();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54c_goodB2GSink(char a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_63b_badSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_max_postinc_63b_goodB2GSink(_WORD *a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53b_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53b_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53b_goodB2GSink(__int16 a1);
int CWE190_Integer_Overflow__int_rand_postinc_51_bad();
int goodG2B_410();
int goodB2G_377();
int CWE190_Integer_Overflow__int_rand_postinc_51_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_05_bad();
int goodB2G1_246();
int goodB2G2_246();
int goodG2B1_213();
int goodG2B2_213();
int CWE190_Integer_Overflow__int64_t_rand_postinc_05_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_11_bad();
int goodB2G1_247();
int goodB2G2_247();
int goodG2B1_214();
int goodG2B2_214();
int CWE190_Integer_Overflow__short_fscanf_postinc_11_good();
int __fastcall badSink_66(char a1);
__int64 CWE190_Integer_Overflow__char_rand_postinc_44_bad();
int __fastcall goodG2BSink_66(char a1);
int goodG2B_411();
int __fastcall goodB2GSink_48(char a1);
__int64 goodB2G_378();
__int64 CWE190_Integer_Overflow__char_rand_postinc_44_good();
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_66_bad();
int goodG2B_412();
int goodB2G_379();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_66_good();
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_bad();
int goodB2G1_248();
int goodB2G2_248();
int goodG2B_413();
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_18_bad();
int goodB2G_380();
int goodG2B_414();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_18_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_34_bad();
int goodG2B_415();
int goodB2G_381();
int CWE190_Integer_Overflow__int64_t_rand_postinc_34_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_10_bad();
int goodB2G1_249();
int goodB2G2_249();
int goodG2B1_215();
int goodG2B2_215();
int CWE190_Integer_Overflow__short_fscanf_postinc_10_good();
int badSink_67();
int CWE190_Integer_Overflow__int_rand_postinc_45_bad();
int goodG2BSink_67();
int goodG2B_416();
int goodB2GSink_49();
int goodB2G_382();
int CWE190_Integer_Overflow__int_rand_postinc_45_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_rand_postinc_13_bad();
int goodB2G1_250();
int goodB2G2_250();
int goodG2B1_216();
int goodG2B2_216();
int CWE190_Integer_Overflow__int_rand_postinc_13_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52b_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_16();
__int64 staticReturnsFalse_16();
int CWE190_Integer_Overflow__char_max_postinc_08_bad();
int goodB2G1_251();
int goodB2G2_251();
int goodG2B1_217();
int goodG2B2_217();
int CWE190_Integer_Overflow__char_max_postinc_08_good();
int CWE190_Integer_Overflow__short_max_postinc_63_bad();
int goodG2B_417();
int goodB2G_383();
int CWE190_Integer_Overflow__short_max_postinc_63_good();
int CWE190_Integer_Overflow__int_rand_postinc_06_bad();
int goodB2G1_252();
int goodB2G2_252();
int goodG2B1_218();
int goodG2B2_218();
int CWE190_Integer_Overflow__int_rand_postinc_06_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_01_bad();
int goodG2B_418();
int goodB2G_384();
int CWE190_Integer_Overflow__short_fscanf_postinc_01_good();
int __fastcall CWE190_Integer_Overflow__int_max_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_max_postinc_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_goodB2GSink(int a1);
int __fastcall badSink_68(int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_44_bad();
int __fastcall goodG2BSink_68(int a1);
int goodG2B_419();
int __fastcall goodB2GSink_50(int a1);
__int64 goodB2G_385();
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_44_good();
int CWE190_Integer_Overflow__short_rand_postinc_03_bad();
int goodB2G1_253();
int goodB2G2_253();
int goodG2B1_219();
int goodG2B2_219();
int CWE190_Integer_Overflow__short_rand_postinc_03_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_bad();
int goodG2B_420();
int goodB2G_386();
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_good();
__int64 CWE190_Integer_Overflow__short_max_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__short_max_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__short_max_postinc_61b_goodB2GSource();
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54b_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54b_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54b_goodB2GSink(char a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_52_bad();
int goodG2B_421();
int goodB2G_387();
int CWE190_Integer_Overflow__int64_t_max_postinc_52_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_66_bad();
int goodG2B_422();
int goodB2G_388();
int CWE190_Integer_Overflow__int64_t_rand_postinc_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_51b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_16_bad();
int goodB2G_389();
int goodG2B_423();
int CWE190_Integer_Overflow__int64_t_max_postinc_16_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_09_bad();
int goodB2G1_254();
int goodB2G2_254();
int goodG2B1_220();
int goodG2B2_220();
int CWE190_Integer_Overflow__short_fscanf_postinc_09_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_bad();
int goodG2B_424();
int goodB2G_390();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_good();
int badSink_69();
int CWE190_Integer_Overflow__int_fscanf_postinc_45_bad();
int goodG2BSink_69();
int goodG2B_425();
int goodB2GSink_51();
int goodB2G_391();
int CWE190_Integer_Overflow__int_fscanf_postinc_45_good();
int CWE190_Integer_Overflow__int_fgets_postinc_66_bad();
int goodG2B_426();
int goodB2G_392();
int CWE190_Integer_Overflow__int_fgets_postinc_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fscanf_postinc_06_bad();
int goodB2G1_255();
int goodB2G2_255();
int goodG2B1_221();
int goodG2B2_221();
int CWE190_Integer_Overflow__int_fscanf_postinc_06_good();
int CWE190_Integer_Overflow__char_max_postinc_03_bad();
int goodB2G1_256();
int goodB2G2_256();
int goodG2B1_222();
int goodG2B2_222();
int CWE190_Integer_Overflow__char_max_postinc_03_good();
__int64 CWE190_Integer_Overflow__short_rand_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__short_rand_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__short_rand_postinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_max_postinc_65_bad();
int goodG2B_427();
int goodB2G_393();
int CWE190_Integer_Overflow__int64_t_max_postinc_65_good();
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__short_rand_postinc_14_bad();
int goodB2G1_257();
int goodB2G2_257();
int goodG2B1_223();
int goodG2B2_223();
int CWE190_Integer_Overflow__short_rand_postinc_14_good();
int CWE190_Integer_Overflow__short_rand_postinc_32_bad();
int goodG2B_428();
int goodB2G_394();
int CWE190_Integer_Overflow__short_rand_postinc_32_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_63b_badSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_63b_goodB2GSink(_BYTE *a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_bad();
int goodG2B_429();
int goodB2G_395();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_good();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_bad();
int goodG2B_430();
int goodB2G_396();
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_good();
int CWE190_Integer_Overflow__char_max_postinc_12_bad();
int goodB2G_397();
int goodG2B_431();
int CWE190_Integer_Overflow__char_max_postinc_12_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_13_bad();
int goodB2G1_258();
int goodB2G2_258();
int goodG2B1_224();
int goodG2B2_224();
int CWE190_Integer_Overflow__int64_t_rand_postinc_13_good();
void CWE190_Integer_Overflow__int_rand_postinc_17_bad();
void goodB2G_398();
int goodG2B_432();
int CWE190_Integer_Overflow__int_rand_postinc_17_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_bad();
int goodG2B_433();
int goodB2G_399();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_15_bad();
int goodB2G1_259();
int goodB2G2_259();
int goodG2B1_225();
int goodG2B2_225();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_15_good();
int CWE190_Integer_Overflow__short_rand_postinc_04_bad();
int goodB2G1_260();
int goodB2G2_260();
int goodG2B1_226();
int goodG2B2_226();
int CWE190_Integer_Overflow__short_rand_postinc_04_good();
int CWE190_Integer_Overflow__short_rand_postinc_31_bad();
int goodG2B_434();
int goodB2G_400();
int CWE190_Integer_Overflow__short_rand_postinc_31_good();
int CWE190_Integer_Overflow__short_fscanf_postinc_18_bad();
int goodB2G_401();
int goodG2B_435();
int CWE190_Integer_Overflow__short_fscanf_postinc_18_good();
__int64 badSource_16();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_42_bad();
__int64 goodG2BSource_16();
int goodG2B_436();
__int64 goodB2GSource_16();
int goodB2G_402();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_42_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_67_bad();
int goodG2B_437();
int goodB2G_403();
int CWE190_Integer_Overflow__int_listen_socket_postinc_67_good();
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_badSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BSink(__int16 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_postinc_61_bad();
int goodG2B_438();
int goodB2G_404();
int CWE190_Integer_Overflow__int64_t_max_postinc_61_good();
int CWE190_Integer_Overflow__char_max_postinc_10_bad();
int goodB2G1_261();
int goodB2G2_261();
int goodG2B1_227();
int goodG2B2_227();
int CWE190_Integer_Overflow__char_max_postinc_10_good();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_05_bad();
int goodB2G1_262();
int goodB2G2_262();
int goodG2B1_228();
int goodG2B2_228();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_05_good();
int __fastcall badSink_70(int a1);
int CWE190_Integer_Overflow__unsigned_int_max_postinc_41_bad();
int __fastcall goodG2BSink_70(int a1);
int goodG2B_439();
int __fastcall goodB2GSink_52(int a1);
int goodB2G_405();
int CWE190_Integer_Overflow__unsigned_int_max_postinc_41_good();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_bad();
int goodG2B_440();
__int64 goodB2G_406();
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_good();
int CWE190_Integer_Overflow__char_max_postinc_01_bad();
int goodG2B_441();
int goodB2G_407();
int CWE190_Integer_Overflow__char_max_postinc_01_good();
int CWE190_Integer_Overflow__int64_t_rand_postinc_15_bad();
int goodB2G1_263();
int goodB2G2_263();
int goodG2B1_229();
int goodG2B2_229();
int CWE190_Integer_Overflow__int64_t_rand_postinc_15_good();
void CWE190_Integer_Overflow__char_rand_postinc_17_bad();
void goodB2G_408();
int goodG2B_442();
int CWE190_Integer_Overflow__char_rand_postinc_17_good();
int CWE190_Integer_Overflow__char_rand_postinc_66_bad();
int goodG2B_443();
int goodB2G_409();
int CWE190_Integer_Overflow__char_rand_postinc_66_good();
int CWE190_Integer_Overflow__short_rand_postinc_22_bad();
int goodB2G1_264();
int goodB2G2_264();
int goodG2B_444();
int CWE190_Integer_Overflow__short_rand_postinc_22_good();
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_listen_socket_postinc_16_bad();
int goodB2G_410();
int goodG2B_445();
int CWE190_Integer_Overflow__int_listen_socket_postinc_16_good();
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53c_badSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53c_goodG2BSink(char a1);
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53c_goodB2GSink(char a1);
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_bad();
int goodB2G1_265();
int goodB2G2_265();
int goodG2B_446();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_good();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad();
int goodB2G_411();
int goodG2B_447();
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_good();
int CWE190_Integer_Overflow__int_max_postinc_14_bad();
int goodB2G1_266();
int goodB2G2_266();
int goodG2B1_230();
int goodG2B2_230();
int CWE190_Integer_Overflow__int_max_postinc_14_good();
int CWE190_Integer_Overflow__char_max_postinc_09_bad();
int goodB2G1_267();
int goodB2G2_267();
int goodG2B1_231();
int goodG2B2_231();
int CWE190_Integer_Overflow__char_max_postinc_09_good();
int CWE190_Integer_Overflow__int_max_postinc_32_bad();
int goodG2B_448();
int goodB2G_412();
int CWE190_Integer_Overflow__int_max_postinc_32_good();
__int64 CWE190_Integer_Overflow__char_rand_postinc_61b_badSource();
__int64 CWE190_Integer_Overflow__char_rand_postinc_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__char_rand_postinc_61b_goodB2GSource();
int CWE190_Integer_Overflow__char_rand_postinc_15_bad();
int goodB2G1_268();
int goodB2G2_268();
int goodG2B1_232();
int goodG2B2_232();
int CWE190_Integer_Overflow__char_rand_postinc_15_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_4729E4; // weak
_UNKNOWN unk_4756A4; // weak
_UNKNOWN unk_475D3C; // weak
_UNKNOWN unk_4766B8; // weak
_UNKNOWN unk_476DB8; // weak
_UNKNOWN unk_477CDC; // weak
_UNKNOWN unk_478B60; // weak
_UNKNOWN unk_4794C8; // weak
_UNKNOWN unk_47AC40; // weak
_UNKNOWN unk_47BC04; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_6AB010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticFive = 5; // weak
int staticTrue_0 = 1; // weak
int staticFive_0 = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_1 = 5; // weak
int staticTrue_2 = 1; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int staticTrue_3 = 1; // weak
int staticTrue_4 = 1; // weak
int staticFive_4 = 5; // weak
int staticTrue_5 = 1; // weak
int staticTrue_6 = 1; // weak
int staticTrue_7 = 1; // weak
int staticFive_5 = 5; // weak
int staticTrue_8 = 1; // weak
int staticFive_6 = 5; // weak
int staticFive_7 = 5; // weak
int staticFive_8 = 5; // weak
int staticTrue_9 = 1; // weak
int staticTrue_10 = 1; // weak
int staticFive_9 = 5; // weak
int staticFive_10 = 5; // weak
int staticTrue_11 = 1; // weak
int staticTrue_12 = 1; // weak
int staticFive_11 = 5; // weak
int staticFive_12 = 5; // weak
int staticTrue_13 = 1; // weak
int staticFive_13 = 5; // weak
int staticFive_14 = 5; // weak
int staticFive_15 = 5; // weak
int staticTrue_14 = 1; // weak
int staticFive_16 = 5; // weak
int staticTrue_15 = 1; // weak
int staticTrue_16 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
__int16 CWE190_Integer_Overflow__short_max_postinc_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_max_postinc_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_max_postinc_45_goodB2GData; // weak
int staticFalse; // weak
int CWE190_Integer_Overflow__char_max_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__char_max_postinc_22_goodG2BGlobal; // weak
int staticFalse_0; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodB2GData; // weak
int staticFalse_1; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int CWE190_Integer_Overflow__int64_t_max_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BGlobal; // weak
char CWE190_Integer_Overflow__char_fscanf_postinc_45_badData; // weak
char CWE190_Integer_Overflow__char_fscanf_postinc_45_goodG2BData; // weak
char CWE190_Integer_Overflow__char_fscanf_postinc_45_goodB2GData; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BGlobal; // weak
int staticFalse_2; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_goodB2GData; // weak
int staticFalse_3; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
int staticFalse_4; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BGlobal; // weak
char CWE190_Integer_Overflow__char_max_postinc_45_badData; // weak
char CWE190_Integer_Overflow__char_max_postinc_45_goodG2BData; // weak
char CWE190_Integer_Overflow__char_max_postinc_45_goodB2GData; // weak
__int16 CWE190_Integer_Overflow__short_rand_postinc_45_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_postinc_45_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData; // weak
int staticFalse_5; // weak
int CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BGlobal; // weak
int staticFalse_6; // weak
int CWE190_Integer_Overflow__int_max_postinc_45_badData; // weak
int CWE190_Integer_Overflow__int_max_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_postinc_45_goodB2GData; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_45_badData; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_45_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodB2GData; // weak
int staticFalse_7; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int staticFalse_8; // weak
int CWE190_Integer_Overflow__int_max_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_max_postinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BGlobal; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BGlobal; // weak
int staticFalse_9; // weak
int CWE190_Integer_Overflow__int_rand_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BGlobal; // weak
int badStatic_9; // weak
int goodB2G1Static_9; // weak
int goodB2G2Static_9; // weak
int goodG2BStatic_9; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodB2GData; // weak
int staticFalse_10; // weak
int CWE190_Integer_Overflow__char_fscanf_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodB2GData; // weak
int badStatic_10; // weak
int goodB2G1Static_10; // weak
int goodB2G2Static_10; // weak
int goodG2BStatic_10; // weak
int badStatic_11; // weak
int goodB2G1Static_11; // weak
int goodB2G2Static_11; // weak
int goodG2BStatic_11; // weak
int staticFalse_11; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__short_max_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_max_postinc_22_goodG2BGlobal; // weak
int staticFalse_12; // weak
int badStatic_12; // weak
int goodB2G1Static_12; // weak
int goodB2G2Static_12; // weak
int goodG2BStatic_12; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BGlobal; // weak
int badStatic_13; // weak
int goodB2G1Static_13; // weak
int goodB2G2Static_13; // weak
int goodG2BStatic_13; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodB2GData; // weak
int staticFalse_13; // weak
int badStatic_14; // weak
int goodB2G1Static_14; // weak
int goodB2G2Static_14; // weak
int goodG2BStatic_14; // weak
int badStatic_15; // weak
int goodB2G1Static_15; // weak
int goodB2G2Static_15; // weak
int goodG2BStatic_15; // weak
int staticFalse_14; // weak
char CWE190_Integer_Overflow__char_rand_postinc_45_badData; // weak
char CWE190_Integer_Overflow__char_rand_postinc_45_goodG2BData; // weak
char CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__short_fscanf_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BGlobal; // weak
int badStatic_16; // weak
int goodB2G1Static_16; // weak
int goodB2G2Static_16; // weak
int goodG2BStatic_16; // weak
int staticFalse_15; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_rand_postinc_45_badData; // weak
int CWE190_Integer_Overflow__int_rand_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_rand_postinc_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_45_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_45_goodB2GData; // weak
int staticFalse_16; // weak
int CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badGlobal; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BGlobal; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
char CWE190_Integer_Overflow__char_fscanf_postinc_68_goodG2BData; // weak
char CWE190_Integer_Overflow__char_fscanf_postinc_68_badData; // weak
char CWE190_Integer_Overflow__char_fscanf_postinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_max_postinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_max_postinc_68_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_max_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_68_badData; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fscanf_postinc_68_goodB2GData; // weak
char CWE190_Integer_Overflow__char_max_postinc_68_badData; // weak
char CWE190_Integer_Overflow__char_max_postinc_68_goodB2GData; // weak
char CWE190_Integer_Overflow__char_max_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_max_postinc_68_badData; // weak
int CWE190_Integer_Overflow__int_max_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_max_postinc_68_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_rand_postinc_68_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_rand_postinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_68_badData; // weak
int CWE190_Integer_Overflow__int_fgets_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodB2GData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_goodG2BData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_badData; // weak
__int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_badData; // weak
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_badData; // weak
char CWE190_Integer_Overflow__char_rand_postinc_68_badData; // weak
char CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData; // weak
char CWE190_Integer_Overflow__char_rand_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_badData; // weak
int CWE190_Integer_Overflow__int_rand_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_rand_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_rand_postinc_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_badData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodB2GData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodG2BData; // weak
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_badData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400BD0) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400E10: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400BF0) ----------------------------------------------------
__int64 sub_400BF0()
{
  return qword_6AB010();
}
// 6AB010: using guessed type __int64 (*qword_6AB010)(void);

//----- (0000000000400E20) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400E26: positive sp value 8 has been found

//----- (0000000000400E50) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6992327LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6992327LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400E80) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400EC0) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6AB1C8: using guessed type char completed_6355;

//----- (0000000000400EE0) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400EE0: could not find valid save-restore pair for rbp

//----- (0000000000400F0D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_13_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_54_good();");
  CWE190_Integer_Overflow__char_max_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_51_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_64_good();");
  CWE190_Integer_Overflow__short_max_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_12_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_18_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_66_good();");
  CWE190_Integer_Overflow__int_max_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_44_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_16_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_61_good();");
  CWE190_Integer_Overflow__char_max_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_52_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_14_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_52_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_04_good();");
  CWE190_Integer_Overflow__char_max_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_41_good();");
  CWE190_Integer_Overflow__short_max_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_52_good();");
  CWE190_Integer_Overflow__int_max_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_11_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_53_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_64_good();");
  CWE190_Integer_Overflow__short_rand_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_45_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_41_good();");
  CWE190_Integer_Overflow__char_max_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_31_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_63_good();");
  CWE190_Integer_Overflow__short_max_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_09_good();");
  CWE190_Integer_Overflow__char_max_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_12_good();");
  CWE190_Integer_Overflow__int_max_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_44_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_16_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_06_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_44_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_08_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_14_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_16_good();");
  CWE190_Integer_Overflow__short_max_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_68_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_14_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_17_good();");
  CWE190_Integer_Overflow__int_rand_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_63_good();");
  CWE190_Integer_Overflow__short_rand_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_06_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_65_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_10_good();");
  CWE190_Integer_Overflow__int_rand_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_67_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_21_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_03_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_65_good();");
  CWE190_Integer_Overflow__int_max_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_08_good();");
  CWE190_Integer_Overflow__int_rand_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_09_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_03_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_12_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_15_good();");
  CWE190_Integer_Overflow__int_max_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_14_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_41_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_21_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_11_good();");
  CWE190_Integer_Overflow__short_max_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_68_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_63_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_65_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_15_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_18_good();");
  CWE190_Integer_Overflow__short_rand_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_52_good();");
  CWE190_Integer_Overflow__short_rand_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_18_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_54_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_66_good();");
  CWE190_Integer_Overflow__int_rand_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_01_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_21_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_31_good();");
  CWE190_Integer_Overflow__short_max_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_04_good();");
  CWE190_Integer_Overflow__short_rand_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_04_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_17_good();");
  CWE190_Integer_Overflow__char_max_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_66_good();");
  CWE190_Integer_Overflow__char_rand_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_61_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_03_good();");
  CWE190_Integer_Overflow__short_rand_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_31_good();");
  CWE190_Integer_Overflow__int_rand_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_09_good();");
  CWE190_Integer_Overflow__int_max_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_51_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_22_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_44_good();");
  CWE190_Integer_Overflow__char_rand_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_10_good();");
  CWE190_Integer_Overflow__short_rand_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_34_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_07_good();");
  CWE190_Integer_Overflow__char_rand_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_01_good();");
  CWE190_Integer_Overflow__int_rand_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_45_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_68_good();");
  CWE190_Integer_Overflow__short_max_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_05_good();");
  CWE190_Integer_Overflow__int_rand_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_42_good();");
  CWE190_Integer_Overflow__int_rand_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_01_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_45_good();");
  CWE190_Integer_Overflow__int_max_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_31_good();");
  CWE190_Integer_Overflow__char_max_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_42_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_65_good();");
  CWE190_Integer_Overflow__short_rand_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_63_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_32_good();");
  CWE190_Integer_Overflow__short_rand_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_66_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_34_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_04_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_67_good();");
  CWE190_Integer_Overflow__int_rand_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_68_good();");
  CWE190_Integer_Overflow__char_max_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_05_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_68_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_01_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_11_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_03_good();");
  CWE190_Integer_Overflow__int_max_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_15_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_42_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_21_good();");
  CWE190_Integer_Overflow__char_max_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_08_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_13_good();");
  CWE190_Integer_Overflow__char_max_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_02_good();");
  CWE190_Integer_Overflow__int_max_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_44_good();");
  CWE190_Integer_Overflow__short_rand_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_31_good();");
  CWE190_Integer_Overflow__short_rand_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_61_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_13_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_08_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_04_good();");
  CWE190_Integer_Overflow__int_rand_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_67_good();");
  CWE190_Integer_Overflow__short_max_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_68_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_32_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_18_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_06_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_13_good();");
  CWE190_Integer_Overflow__int_rand_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_13_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_54_good();");
  CWE190_Integer_Overflow__int_rand_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_09_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_51_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_14_good();");
  CWE190_Integer_Overflow__char_rand_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_15_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_34_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_53_good();");
  CWE190_Integer_Overflow__char_rand_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_31_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_45_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_15_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_12_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_64_good();");
  CWE190_Integer_Overflow__char_rand_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_44_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_12_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_12_good();");
  CWE190_Integer_Overflow__short_rand_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_07_good();");
  CWE190_Integer_Overflow__char_max_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_61_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_05_good();");
  CWE190_Integer_Overflow__char_max_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_64_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_64_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_03_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_42_good();");
  CWE190_Integer_Overflow__short_max_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_53_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_68_good();");
  CWE190_Integer_Overflow__short_rand_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_08_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_16_good();");
  CWE190_Integer_Overflow__int_rand_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_51_good();");
  CWE190_Integer_Overflow__short_rand_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_34_good();");
  CWE190_Integer_Overflow__char_rand_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_53_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_68_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_67_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_06_good();");
  CWE190_Integer_Overflow__char_rand_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_16_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_17_good();");
  CWE190_Integer_Overflow__char_rand_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_14_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_04_good();");
  CWE190_Integer_Overflow__int_max_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_22_good();");
  CWE190_Integer_Overflow__char_max_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_45_good();");
  CWE190_Integer_Overflow__short_max_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_67_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_66_good();");
  CWE190_Integer_Overflow__short_rand_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_17_good();");
  CWE190_Integer_Overflow__short_rand_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_51_good();");
  CWE190_Integer_Overflow__int_max_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_53_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_03_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_13_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_16_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_66_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_07_good();");
  CWE190_Integer_Overflow__int_rand_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_54_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_53_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_54_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_03_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_02_good();");
  CWE190_Integer_Overflow__short_rand_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_07_good();");
  CWE190_Integer_Overflow__short_rand_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_05_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_07_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_02_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_11_good();");
  CWE190_Integer_Overflow__int_max_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_66_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_66_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_31_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_42_good();");
  CWE190_Integer_Overflow__short_rand_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_09_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_51_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_12_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_61_good();");
  CWE190_Integer_Overflow__short_rand_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_08_good();");
  CWE190_Integer_Overflow__int_max_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_03_good();");
  CWE190_Integer_Overflow__char_rand_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_10_good();");
  CWE190_Integer_Overflow__int_max_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_44_good();");
  CWE190_Integer_Overflow__short_max_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_21_good();");
  CWE190_Integer_Overflow__short_rand_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_02_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_22_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_01_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_18_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_02_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_65_good();");
  CWE190_Integer_Overflow__char_rand_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_45_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_14_good();");
  CWE190_Integer_Overflow__char_max_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_04_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_18_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_08_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_67_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_22_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_01_good();");
  CWE190_Integer_Overflow__char_max_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_66_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_42_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_34_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_54_good();");
  CWE190_Integer_Overflow__char_rand_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_15_good();");
  CWE190_Integer_Overflow__short_rand_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_54_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_01_good();");
  CWE190_Integer_Overflow__short_rand_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_09_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_15_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_06_good();");
  CWE190_Integer_Overflow__int_max_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_02_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_68_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_67_good();");
  CWE190_Integer_Overflow__int_max_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_34_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_65_good();");
  CWE190_Integer_Overflow__int_rand_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_54_good();");
  CWE190_Integer_Overflow__int_max_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_54_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_31_good();");
  CWE190_Integer_Overflow__char_rand_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_03_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_02_good();");
  CWE190_Integer_Overflow__char_max_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_63_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_34_good();");
  CWE190_Integer_Overflow__char_max_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_16_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_17_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_31_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_42_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_31_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_45_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_05_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_15_good();");
  CWE190_Integer_Overflow__short_max_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_31_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_61_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_61_good();");
  CWE190_Integer_Overflow__char_rand_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_11_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_45_good();");
  CWE190_Integer_Overflow__short_rand_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_05_good();");
  CWE190_Integer_Overflow__char_rand_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_07_good();");
  CWE190_Integer_Overflow__int_max_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_16_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_41_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_17_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_02_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_09_good();");
  CWE190_Integer_Overflow__short_rand_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_66_good();");
  CWE190_Integer_Overflow__char_max_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_52_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_07_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_10_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_11_good();");
  CWE190_Integer_Overflow__char_max_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_54_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_41_good();");
  CWE190_Integer_Overflow__short_rand_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_45_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_12_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_64_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_21_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_63_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_52_good();");
  CWE190_Integer_Overflow__int_rand_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_14_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_04_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_34_good();");
  CWE190_Integer_Overflow__int_rand_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_21_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_52_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_16_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_14_good();");
  CWE190_Integer_Overflow__short_max_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_52_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_11_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_08_good();");
  CWE190_Integer_Overflow__short_max_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_61_good();");
  CWE190_Integer_Overflow__int_rand_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_64_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_02_good();");
  CWE190_Integer_Overflow__int_rand_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_52_good();");
  CWE190_Integer_Overflow__short_max_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_53_good();");
  CWE190_Integer_Overflow__int_rand_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_53_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_67_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_63_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_05_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_32_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_04_good();");
  CWE190_Integer_Overflow__char_rand_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_41_good();");
  CWE190_Integer_Overflow__int_max_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_42_good();");
  CWE190_Integer_Overflow__int_max_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_64_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_01_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_10_good();");
  CWE190_Integer_Overflow__char_rand_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_05_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_04_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_16_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_14_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_06_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_63_good();");
  CWE190_Integer_Overflow__int_max_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_07_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_18_good();");
  CWE190_Integer_Overflow__char_rand_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_03_good();");
  CWE190_Integer_Overflow__char_max_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_02_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_34_good();");
  CWE190_Integer_Overflow__short_max_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_08_good();");
  CWE190_Integer_Overflow__short_rand_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_32_good();");
  CWE190_Integer_Overflow__short_max_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_06_good();");
  CWE190_Integer_Overflow__char_max_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_05_good();");
  CWE190_Integer_Overflow__int_max_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_34_good();");
  CWE190_Integer_Overflow__int_max_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_63_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_68_good();");
  CWE190_Integer_Overflow__char_rand_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_31_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_44_good();");
  CWE190_Integer_Overflow__int_rand_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_52_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_22_good();");
  CWE190_Integer_Overflow__int_max_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_45_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_11_good();");
  CWE190_Integer_Overflow__int_rand_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_08_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_42_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_67_good();");
  CWE190_Integer_Overflow__char_max_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_41_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_18_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_16_good();");
  CWE190_Integer_Overflow__char_max_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_66_good();");
  CWE190_Integer_Overflow__short_max_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_65_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_32_good();");
  CWE190_Integer_Overflow__int_max_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_64_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_63_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_61_good();");
  CWE190_Integer_Overflow__short_max_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_10_good();");
  CWE190_Integer_Overflow__char_max_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_01_good();");
  CWE190_Integer_Overflow__short_max_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_12_good();");
  CWE190_Integer_Overflow__char_rand_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_65_good();");
  CWE190_Integer_Overflow__short_max_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_51_good();");
  CWE190_Integer_Overflow__short_max_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_68_good();");
  CWE190_Integer_Overflow__int_rand_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_68_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_06_good();");
  CWE190_Integer_Overflow__short_max_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_18_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_10_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_12_good();");
  CWE190_Integer_Overflow__char_max_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_13_good();");
  CWE190_Integer_Overflow__int_max_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_31_good();");
  CWE190_Integer_Overflow__int_max_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_07_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_41_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_22_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_52_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_32_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_64_good();");
  CWE190_Integer_Overflow__char_max_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_34_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_02_good();");
  CWE190_Integer_Overflow__char_rand_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_07_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_21_good();");
  CWE190_Integer_Overflow__int_rand_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_54_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_32_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_21_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_45_good();");
  CWE190_Integer_Overflow__int_rand_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_67_good();");
  CWE190_Integer_Overflow__short_rand_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_34_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_11_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_01_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_42_good();");
  CWE190_Integer_Overflow__char_max_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_12_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_09_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_12_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_32_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_51_good();");
  CWE190_Integer_Overflow__char_max_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_16_good();");
  CWE190_Integer_Overflow__short_rand_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_12_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_14_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_22_good();");
  CWE190_Integer_Overflow__short_rand_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_67_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_42_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_10_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_09_good();");
  CWE190_Integer_Overflow__char_rand_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_21_good();");
  CWE190_Integer_Overflow__char_rand_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_13_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_65_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_32_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_63_good();");
  CWE190_Integer_Overflow__char_rand_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_09_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_17_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_11_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_63_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_05_good();");
  CWE190_Integer_Overflow__short_max_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_34_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_03_good();");
  CWE190_Integer_Overflow__short_max_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_10_good();");
  CWE190_Integer_Overflow__short_max_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_15_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_22_good();");
  CWE190_Integer_Overflow__char_rand_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_12_good();");
  CWE190_Integer_Overflow__short_max_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_61_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_44_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_10_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_68_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_65_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_14_good();");
  CWE190_Integer_Overflow__int_max_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_61_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_51_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_41_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_44_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_15_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_22_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_53_good();");
  CWE190_Integer_Overflow__short_max_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_42_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_52_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_18_good();");
  CWE190_Integer_Overflow__char_max_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_68_good();");
  CWE190_Integer_Overflow__int_max_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_03_good();");
  CWE190_Integer_Overflow__int_rand_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_54_good();");
  CWE190_Integer_Overflow__short_max_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_18_good();");
  CWE190_Integer_Overflow__int_max_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_45_good();");
  CWE190_Integer_Overflow__char_max_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_21_good();");
  CWE190_Integer_Overflow__short_max_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_31_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_15_good();");
  CWE190_Integer_Overflow__char_max_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_17_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_51_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_18_good();");
  CWE190_Integer_Overflow__short_max_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_45_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_22_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_11_good();");
  CWE190_Integer_Overflow__short_rand_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_13_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_18_good();");
  CWE190_Integer_Overflow__int_rand_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_32_good();");
  CWE190_Integer_Overflow__int_rand_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_64_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_34_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_51_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_04_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_31_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_53_good();");
  CWE190_Integer_Overflow__short_rand_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_10_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_21_good();");
  CWE190_Integer_Overflow__int_max_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_15_good();");
  CWE190_Integer_Overflow__char_rand_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_67_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_22_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_44_good();");
  CWE190_Integer_Overflow__char_max_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_03_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_05_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_32_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_03_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_63_good();");
  CWE190_Integer_Overflow__int_rand_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_09_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_05_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_65_good();");
  CWE190_Integer_Overflow__char_max_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_42_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_15_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_41_good();");
  CWE190_Integer_Overflow__int_rand_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_66_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_64_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_06_good();");
  CWE190_Integer_Overflow__short_rand_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_67_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_54_good();");
  CWE190_Integer_Overflow__short_rand_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_22_good();");
  CWE190_Integer_Overflow__short_max_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_16_good();");
  CWE190_Integer_Overflow__int_max_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_52_good();");
  CWE190_Integer_Overflow__char_max_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_08_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_61_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_61_good();");
  CWE190_Integer_Overflow__int_max_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_02_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_22_good();");
  CWE190_Integer_Overflow__int_rand_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_05_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_17_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_18_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_21_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_41_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_51_good();");
  CWE190_Integer_Overflow__int_rand_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_66_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_12_good();");
  CWE190_Integer_Overflow__int_rand_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_14_good();");
  CWE190_Integer_Overflow__int_rand_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_42_good();");
  CWE190_Integer_Overflow__char_rand_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_13_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_67_good();");
  CWE190_Integer_Overflow__char_rand_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_34_good();");
  CWE190_Integer_Overflow__short_rand_postinc_34_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_08_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_51_good();");
  CWE190_Integer_Overflow__char_rand_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_09_good();");
  CWE190_Integer_Overflow__short_max_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_32_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_17_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_44_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_53_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_14_good();");
  CWE190_Integer_Overflow__short_rand_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_22_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_51_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_06_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_41_good();");
  CWE190_Integer_Overflow__char_rand_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_09_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_04_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_41_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_14_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_41_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_07_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_65_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_32_good();");
  CWE190_Integer_Overflow__char_rand_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_04_good();");
  CWE190_Integer_Overflow__short_max_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_07_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_10_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_13_good();");
  CWE190_Integer_Overflow__short_max_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_05_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_02_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_11_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_07_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_08_good();");
  CWE190_Integer_Overflow__char_rand_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_04_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_68_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_15_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_13_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_51_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_32_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_64_good();");
  CWE190_Integer_Overflow__int_rand_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_06_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_53_good();");
  CWE190_Integer_Overflow__char_max_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_65_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_11_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_08_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_44_good();");
  CWE190_Integer_Overflow__int_max_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_42_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_42_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_07_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_61_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_65_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_17_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_53_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_11_good();");
  CWE190_Integer_Overflow__char_rand_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_64_good();");
  CWE190_Integer_Overflow__int_max_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_10_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_13_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_01_good();");
  CWE190_Integer_Overflow__char_rand_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_06_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_06_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_09_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_61_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_61_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_13_good();");
  CWE190_Integer_Overflow__char_rand_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_32_good();");
  CWE190_Integer_Overflow__char_max_postinc_32_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_03_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_06_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_22_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_22_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_64_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_45_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_63_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_01_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_09_good();");
  CWE190_Integer_Overflow__int_rand_postinc_09_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_21_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_21_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_21_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_52_good();");
  CWE190_Integer_Overflow__char_rand_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_07_good();");
  CWE190_Integer_Overflow__short_max_postinc_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_01_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_10_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_17_good();");
  CWE190_Integer_Overflow__short_max_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_17_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_54_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_08_good();");
  CWE190_Integer_Overflow__char_max_postinc_08_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_13_good();");
  CWE190_Integer_Overflow__short_rand_postinc_13_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_10_good();");
  CWE190_Integer_Overflow__int_fscanf_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_65_good();");
  CWE190_Integer_Overflow__short_fscanf_postinc_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_54_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_01_good();");
  CWE190_Integer_Overflow__int_max_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_01_good();");
  CWE190_Integer_Overflow__int_fgets_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_15_good();");
  CWE190_Integer_Overflow__int_rand_postinc_15_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_04_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_45_good();");
  CWE190_Integer_Overflow__char_rand_postinc_45_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_02_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_44_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_41_good();");
  CWE190_Integer_Overflow__char_fscanf_postinc_41_good();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_63_good();");
  CWE190_Integer_Overflow__char_max_postinc_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_44_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_66_good();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_53_good();");
  CWE190_Integer_Overflow__int_max_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_good();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_05_good();");
  CWE190_Integer_Overflow__short_rand_postinc_05_good();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_16_good();");
  CWE190_Integer_Overflow__char_rand_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_06_good();");
  CWE190_Integer_Overflow__int_rand_postinc_06_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_17_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_02_good();");
  CWE190_Integer_Overflow__short_max_postinc_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_67_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_17_good();");
  CWE190_Integer_Overflow__int_max_postinc_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_16_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_52_good();");
  CWE190_Integer_Overflow__int64_t_max_postinc_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_11_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_11_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_66_good();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_53_good();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_18_good();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_18_good();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_good();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_good();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_13_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_54_bad();");
  CWE190_Integer_Overflow__char_max_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_51_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_64_bad();");
  CWE190_Integer_Overflow__short_max_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_12_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_18_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_66_bad();");
  CWE190_Integer_Overflow__int_max_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_44_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_16_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_61_bad();");
  CWE190_Integer_Overflow__char_max_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_52_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_14_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_52_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_04_bad();");
  CWE190_Integer_Overflow__char_max_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_41_bad();");
  CWE190_Integer_Overflow__short_max_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_52_bad();");
  CWE190_Integer_Overflow__int_max_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_11_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_53_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_64_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_45_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_41_bad();");
  CWE190_Integer_Overflow__char_max_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_31_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_63_bad();");
  CWE190_Integer_Overflow__short_max_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_09_bad();");
  CWE190_Integer_Overflow__char_max_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_12_bad();");
  CWE190_Integer_Overflow__int_max_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_44_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_16_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_06_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_44_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_08_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_14_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_16_bad();");
  CWE190_Integer_Overflow__short_max_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_68_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_14_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_17_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_63_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_06_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_65_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_10_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_67_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_21_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_03_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_65_bad();");
  CWE190_Integer_Overflow__int_max_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_08_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_09_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_03_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_12_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_15_bad();");
  CWE190_Integer_Overflow__int_max_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_14_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_41_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_21_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_11_bad();");
  CWE190_Integer_Overflow__short_max_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_68_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_63_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_65_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_15_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_18_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_52_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_18_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_54_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_66_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_01_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_21_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_31_bad();");
  CWE190_Integer_Overflow__short_max_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_04_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_04_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_17_bad();");
  CWE190_Integer_Overflow__char_max_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_66_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_03_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_31_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_09_bad();");
  CWE190_Integer_Overflow__int_max_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_51_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_22_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_44_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_10_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_34_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_07_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_01_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_45_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_68_bad();");
  CWE190_Integer_Overflow__short_max_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_05_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_42_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_01_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_45_bad();");
  CWE190_Integer_Overflow__int_max_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_31_bad();");
  CWE190_Integer_Overflow__char_max_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_42_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_65_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_63_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_32_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_66_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_34_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_04_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_67_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_68_bad();");
  CWE190_Integer_Overflow__char_max_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_05_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_01_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_03_bad();");
  CWE190_Integer_Overflow__int_max_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_15_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_42_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_21_bad();");
  CWE190_Integer_Overflow__char_max_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_08_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_13_bad();");
  CWE190_Integer_Overflow__char_max_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_02_bad();");
  CWE190_Integer_Overflow__int_max_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_44_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_31_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_61_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_13_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_08_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_04_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_67_bad();");
  CWE190_Integer_Overflow__short_max_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_68_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_32_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_18_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_06_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_13_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_54_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_09_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_51_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_14_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_34_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_53_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_31_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_45_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_15_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_64_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_44_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_12_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_12_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_07_bad();");
  CWE190_Integer_Overflow__char_max_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_61_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_05_bad();");
  CWE190_Integer_Overflow__char_max_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_64_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_64_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_03_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_42_bad();");
  CWE190_Integer_Overflow__short_max_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_53_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_68_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_16_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_51_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_34_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_53_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_68_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_67_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_06_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_16_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_17_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_04_bad();");
  CWE190_Integer_Overflow__int_max_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_22_bad();");
  CWE190_Integer_Overflow__char_max_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_45_bad();");
  CWE190_Integer_Overflow__short_max_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_67_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_66_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_17_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_51_bad();");
  CWE190_Integer_Overflow__int_max_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_03_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_13_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_66_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_07_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_54_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_53_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_54_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_03_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_02_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_07_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_05_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_07_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_02_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_11_bad();");
  CWE190_Integer_Overflow__int_max_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_66_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_66_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_31_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_42_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_09_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_51_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_12_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_61_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_08_bad();");
  CWE190_Integer_Overflow__int_max_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_03_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_10_bad();");
  CWE190_Integer_Overflow__int_max_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_44_bad();");
  CWE190_Integer_Overflow__short_max_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_21_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_02_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_22_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_18_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_02_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_65_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_45_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_14_bad();");
  CWE190_Integer_Overflow__char_max_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_04_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_18_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_08_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_67_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_22_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_01_bad();");
  CWE190_Integer_Overflow__char_max_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_66_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_42_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_34_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_54_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_15_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_54_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_01_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_09_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_15_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_06_bad();");
  CWE190_Integer_Overflow__int_max_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_68_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_67_bad();");
  CWE190_Integer_Overflow__int_max_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_34_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_65_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_54_bad();");
  CWE190_Integer_Overflow__int_max_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_54_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_31_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_02_bad();");
  CWE190_Integer_Overflow__char_max_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_63_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_34_bad();");
  CWE190_Integer_Overflow__char_max_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_16_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_17_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_31_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_42_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_31_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_45_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_05_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_15_bad();");
  CWE190_Integer_Overflow__short_max_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_31_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_61_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_61_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_11_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_45_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_05_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_07_bad();");
  CWE190_Integer_Overflow__int_max_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_16_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_17_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_02_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_09_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_66_bad();");
  CWE190_Integer_Overflow__char_max_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_07_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_10_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_11_bad();");
  CWE190_Integer_Overflow__char_max_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_54_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_41_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_45_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_12_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_64_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_21_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_63_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_52_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_14_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_04_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_34_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_21_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_52_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_16_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_14_bad();");
  CWE190_Integer_Overflow__short_max_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_52_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_11_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_08_bad();");
  CWE190_Integer_Overflow__short_max_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_61_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_64_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_02_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_52_bad();");
  CWE190_Integer_Overflow__short_max_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_53_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_53_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_63_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_05_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_32_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_04_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_41_bad();");
  CWE190_Integer_Overflow__int_max_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_42_bad();");
  CWE190_Integer_Overflow__int_max_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_64_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_01_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_10_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_05_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_04_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_16_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_14_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_63_bad();");
  CWE190_Integer_Overflow__int_max_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_07_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_18_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_03_bad();");
  CWE190_Integer_Overflow__char_max_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_02_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_34_bad();");
  CWE190_Integer_Overflow__short_max_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_08_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_32_bad();");
  CWE190_Integer_Overflow__short_max_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_06_bad();");
  CWE190_Integer_Overflow__char_max_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_05_bad();");
  CWE190_Integer_Overflow__int_max_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_34_bad();");
  CWE190_Integer_Overflow__int_max_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_63_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_68_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_31_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_44_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_52_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_22_bad();");
  CWE190_Integer_Overflow__int_max_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_45_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_11_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_08_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_42_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_67_bad();");
  CWE190_Integer_Overflow__char_max_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_41_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_18_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_16_bad();");
  CWE190_Integer_Overflow__char_max_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_66_bad();");
  CWE190_Integer_Overflow__short_max_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_65_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_32_bad();");
  CWE190_Integer_Overflow__int_max_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_64_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_63_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_61_bad();");
  CWE190_Integer_Overflow__short_max_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_10_bad();");
  CWE190_Integer_Overflow__char_max_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_01_bad();");
  CWE190_Integer_Overflow__short_max_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_12_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_65_bad();");
  CWE190_Integer_Overflow__short_max_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_51_bad();");
  CWE190_Integer_Overflow__short_max_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_68_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_68_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_06_bad();");
  CWE190_Integer_Overflow__short_max_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_18_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_10_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_12_bad();");
  CWE190_Integer_Overflow__char_max_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_13_bad();");
  CWE190_Integer_Overflow__int_max_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_31_bad();");
  CWE190_Integer_Overflow__int_max_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_07_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_41_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_22_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_52_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_32_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_64_bad();");
  CWE190_Integer_Overflow__char_max_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_34_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_02_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_21_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_32_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_21_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_45_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_67_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_34_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_11_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_01_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_42_bad();");
  CWE190_Integer_Overflow__char_max_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_12_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_09_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_12_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_32_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_51_bad();");
  CWE190_Integer_Overflow__char_max_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_16_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_12_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_14_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_22_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_67_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_42_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_09_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_21_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_13_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_65_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_63_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_09_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_11_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_63_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_05_bad();");
  CWE190_Integer_Overflow__short_max_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_34_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_03_bad();");
  CWE190_Integer_Overflow__short_max_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_10_bad();");
  CWE190_Integer_Overflow__short_max_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_15_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_22_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_12_bad();");
  CWE190_Integer_Overflow__short_max_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_61_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_10_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_68_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_65_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_14_bad();");
  CWE190_Integer_Overflow__int_max_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_61_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_41_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_44_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_15_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_22_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_53_bad();");
  CWE190_Integer_Overflow__short_max_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_42_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_52_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_18_bad();");
  CWE190_Integer_Overflow__char_max_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_68_bad();");
  CWE190_Integer_Overflow__int_max_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_03_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_54_bad();");
  CWE190_Integer_Overflow__short_max_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_18_bad();");
  CWE190_Integer_Overflow__int_max_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_45_bad();");
  CWE190_Integer_Overflow__char_max_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_21_bad();");
  CWE190_Integer_Overflow__short_max_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_31_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_15_bad();");
  CWE190_Integer_Overflow__char_max_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_17_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_51_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_18_bad();");
  CWE190_Integer_Overflow__short_max_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_45_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_22_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_11_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_13_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_18_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_32_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_64_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_34_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_51_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_04_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_53_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_21_bad();");
  CWE190_Integer_Overflow__int_max_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_15_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_67_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_22_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_44_bad();");
  CWE190_Integer_Overflow__char_max_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_03_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_05_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_32_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_03_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_63_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_05_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_65_bad();");
  CWE190_Integer_Overflow__char_max_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_42_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_15_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_41_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_66_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_64_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_06_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_67_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_54_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_22_bad();");
  CWE190_Integer_Overflow__short_max_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_16_bad();");
  CWE190_Integer_Overflow__int_max_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_52_bad();");
  CWE190_Integer_Overflow__char_max_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_08_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_61_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_61_bad();");
  CWE190_Integer_Overflow__int_max_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_02_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_22_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_05_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_17_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_18_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_21_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_41_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_51_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_66_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_12_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_14_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_42_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_13_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_67_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_34_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_34_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_08_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_51_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_09_bad();");
  CWE190_Integer_Overflow__short_max_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_32_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_17_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_44_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_53_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_14_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_22_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_51_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_06_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_41_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_09_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_04_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_41_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_14_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_41_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_07_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_65_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_32_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_04_bad();");
  CWE190_Integer_Overflow__short_max_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_07_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_10_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_13_bad();");
  CWE190_Integer_Overflow__short_max_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_05_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_02_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_11_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_07_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_08_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_04_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_68_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_15_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_13_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_51_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_32_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_64_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_06_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_53_bad();");
  CWE190_Integer_Overflow__char_max_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_65_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_11_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_08_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_44_bad();");
  CWE190_Integer_Overflow__int_max_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_42_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_42_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_07_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_61_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_65_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_17_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_53_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_11_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_64_bad();");
  CWE190_Integer_Overflow__int_max_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_10_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_13_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_01_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_06_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_06_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_09_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_61_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_61_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_13_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_32_bad();");
  CWE190_Integer_Overflow__char_max_postinc_32_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_03_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_22_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_22_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_64_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_45_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_63_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_01_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_09_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_09_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_21_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_21_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_21_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_52_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_07_bad();");
  CWE190_Integer_Overflow__short_max_postinc_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_01_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_10_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_17_bad();");
  CWE190_Integer_Overflow__short_max_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_17_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_54_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_08_bad();");
  CWE190_Integer_Overflow__char_max_postinc_08_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_13_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_13_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fscanf_postinc_10_bad();");
  CWE190_Integer_Overflow__int_fscanf_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__short_fscanf_postinc_65_bad();");
  CWE190_Integer_Overflow__short_fscanf_postinc_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_54_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_01_bad();");
  CWE190_Integer_Overflow__int_max_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_postinc_01_bad();");
  CWE190_Integer_Overflow__int_fgets_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_15_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_15_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_04_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_45_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_45_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_02_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_44_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__char_fscanf_postinc_41_bad();");
  CWE190_Integer_Overflow__char_fscanf_postinc_41_bad();
  printLine("Calling CWE190_Integer_Overflow__char_max_postinc_63_bad();");
  CWE190_Integer_Overflow__char_max_postinc_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_44_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_postinc_66_bad();");
  CWE190_Integer_Overflow__int_connect_socket_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_53_bad();");
  CWE190_Integer_Overflow__int_max_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_bad();");
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__short_rand_postinc_05_bad();");
  CWE190_Integer_Overflow__short_rand_postinc_05_bad();
  printLine("Calling CWE190_Integer_Overflow__char_rand_postinc_16_bad();");
  CWE190_Integer_Overflow__char_rand_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_rand_postinc_06_bad();");
  CWE190_Integer_Overflow__int_rand_postinc_06_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__short_max_postinc_02_bad();");
  CWE190_Integer_Overflow__short_max_postinc_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_67_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_max_postinc_17_bad();");
  CWE190_Integer_Overflow__int_max_postinc_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_16_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_postinc_52_bad();");
  CWE190_Integer_Overflow__int64_t_max_postinc_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_11_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_11_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_max_postinc_66_bad();");
  CWE190_Integer_Overflow__unsigned_int_max_postinc_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_postinc_53_bad();");
  CWE190_Integer_Overflow__int64_t_rand_postinc_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_listen_socket_postinc_18_bad();");
  CWE190_Integer_Overflow__int_listen_socket_postinc_18_bad();
  printLine("Calling CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_bad();");
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_bad();
  return 0;
}
// 6AB534: using guessed type int globalArgc;
// 6AB538: using guessed type __int64 globalArgv;

//----- (0000000000407A28) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_01_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000407A61) ----------------------------------------------------
int goodG2B()
{
  return printLongLongLine(3LL);
}

//----- (0000000000407A94) ----------------------------------------------------
int goodB2G()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000407AE9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_01_good()
{
  goodG2B();
  return goodB2G();
}

//----- (0000000000407B03) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_52_bad()
{
  return CWE190_Integer_Overflow__short_max_postinc_52b_badSink(0x7FFF);
}

//----- (0000000000407B24) ----------------------------------------------------
int goodG2B_0()
{
  return CWE190_Integer_Overflow__short_max_postinc_52b_goodG2BSink(2);
}

//----- (0000000000407B45) ----------------------------------------------------
int goodB2G_0()
{
  return CWE190_Integer_Overflow__short_max_postinc_52b_goodB2GSink(0x7FFF);
}

//----- (0000000000407B66) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_52_good()
{
  goodG2B_0();
  return goodB2G_0();
}

//----- (0000000000407B80) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54e_badSink(a1);
}

//----- (0000000000407B9A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54e_goodG2BSink(a1);
}

//----- (0000000000407BB4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54e_goodB2GSink(a1);
}

//----- (0000000000407BCE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_04_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000407C0C) ----------------------------------------------------
int goodB2G1()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000407C68) ----------------------------------------------------
int goodB2G2()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000407CB8) ----------------------------------------------------
int goodG2B1()
{
  return printUnsignedLine(3u);
}

//----- (0000000000407D02) ----------------------------------------------------
int goodG2B2()
{
  return printUnsignedLine(3u);
}

//----- (0000000000407D40) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_04_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1();
  return goodG2B2();
}

//----- (0000000000407D6E) ----------------------------------------------------
void CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
    printLongLongLine(++v9);
}

//----- (0000000000407E65) ----------------------------------------------------
void goodB2G_1()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v9 == 0x7FFFFFFFFFFFFFFFLL )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printLongLongLine(++v9);
  }
}

//----- (0000000000407F78) ----------------------------------------------------
int goodG2B_1()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (0000000000407FD1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_17_good()
{
  goodB2G_1();
  return goodG2B_1();
}

//----- (0000000000407FEB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54e_badSink(a1);
}

//----- (0000000000408006) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54e_goodG2BSink(a1);
}

//----- (0000000000408021) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54e_goodB2GSink(a1);
}

//----- (000000000040803C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_16_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000408072) ----------------------------------------------------
int goodB2G_2()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004080BC) ----------------------------------------------------
int goodG2B_2()
{
  return printIntLine(3u);
}

//----- (00000000004080F2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_16_good()
{
  goodB2G_2();
  return goodG2B_2();
}

//----- (000000000040810C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040812D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040814E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000408184) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004081BC) ----------------------------------------------------
int goodG2B_3()
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53b_goodG2BSink(2);
}

//----- (00000000004081DE) ----------------------------------------------------
int goodB2G_3()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408216) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_53_good()
{
  goodG2B_3();
  return goodB2G_3();
}

//----- (0000000000408230) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_15_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000040825E) ----------------------------------------------------
int goodB2G1_0()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004082A1) ----------------------------------------------------
int goodB2G2_0()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004082E4) ----------------------------------------------------
int goodG2B1_0()
{
  return printIntLine(3u);
}

//----- (0000000000408312) ----------------------------------------------------
int goodG2B2_0()
{
  return printIntLine(3u);
}

//----- (0000000000408340) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_15_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (000000000040836E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_02_bad()
{
  return printHexCharLine(-128);
}

//----- (000000000040839C) ----------------------------------------------------
int goodB2G1_1()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004083DC) ----------------------------------------------------
int goodB2G2_1()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040841C) ----------------------------------------------------
int goodG2B1_1()
{
  return printHexCharLine(3);
}

//----- (000000000040844A) ----------------------------------------------------
int goodG2B2_1()
{
  return printHexCharLine(3);
}

//----- (0000000000408478) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_02_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (00000000004084A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_badSink(a1);
}

//----- (00000000004084BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_goodG2BSink(a1);
}

//----- (00000000004084D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_goodB2GSink(a1);
}

//----- (00000000004084EB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_04_bad()
{
  return printHexCharLine(128);
}

//----- (000000000040852B) ----------------------------------------------------
int goodB2G1_2()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000408589) ----------------------------------------------------
int goodB2G2_2()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004085DB) ----------------------------------------------------
int goodG2B1_2()
{
  return printHexCharLine(3);
}

//----- (0000000000408627) ----------------------------------------------------
int goodG2B2_2()
{
  return printHexCharLine(3);
}

//----- (0000000000408667) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_04_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000408695) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_31_bad()
{
  return printHexCharLine(-128);
}

//----- (00000000004086D1) ----------------------------------------------------
int goodG2B_4()
{
  return printHexCharLine(3);
}

//----- (000000000040870D) ----------------------------------------------------
int goodB2G_4()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040875B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_31_good()
{
  goodG2B_4();
  return goodB2G_4();
}

//----- (0000000000408775) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v6 + 1);
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (0000000000408836) ----------------------------------------------------
int goodB2G_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v11 + 1);
  }
  else if ( v11 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(v11 + 1);
  }
  return result;
}

//----- (000000000040894B) ----------------------------------------------------
int goodG2B_5()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (00000000004089B2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_12_good()
{
  goodB2G_5();
  return goodG2B_5();
}

//----- (00000000004089CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000408A08) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000408A44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (0000000000408A92) ----------------------------------------------------
__int64 badSource()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000408AA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000408AD7) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 2LL;
}

//----- (0000000000408AEA) ----------------------------------------------------
int goodG2B_6()
{
  int v0; // eax

  v0 = goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000408B1C) ----------------------------------------------------
__int64 goodB2GSource()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000408B2F) ----------------------------------------------------
int goodB2G_6()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000408B76) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_42_good()
{
  goodB2G_6();
  return goodG2B_6();
}

//----- (0000000000408B90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000408BB1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000408BD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000408C08) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000408C55) ----------------------------------------------------
int goodB2G1_3()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000408CCA) ----------------------------------------------------
int goodB2G2_3()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000408D33) ----------------------------------------------------
int goodG2B1_3()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000408D86) ----------------------------------------------------
int goodG2B2_3()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000408DCD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_09_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (0000000000408DFB) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_61b_badSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (0000000000408EAC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000408EC2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_61b_goodB2GSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (0000000000408F73) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_51_bad()
{
  return CWE190_Integer_Overflow__short_max_postinc_51b_badSink(0x7FFF);
}

//----- (0000000000408F94) ----------------------------------------------------
int goodG2B_7()
{
  return CWE190_Integer_Overflow__short_max_postinc_51b_goodG2BSink(2);
}

//----- (0000000000408FB5) ----------------------------------------------------
int goodB2G_7()
{
  return CWE190_Integer_Overflow__short_max_postinc_51b_goodB2GSink(0x7FFF);
}

//----- (0000000000408FD6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_51_good()
{
  goodG2B_7();
  return goodB2G_7();
}

//----- (0000000000408FF0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_15_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000409064) ----------------------------------------------------
int goodB2G1_4()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (00000000004090ED) ----------------------------------------------------
int goodB2G2_4()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000409176) ----------------------------------------------------
int goodG2B1_4()
{
  return printIntLine(3u);
}

//----- (00000000004091A4) ----------------------------------------------------
int goodG2B2_4()
{
  return printIntLine(3u);
}

//----- (00000000004091D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_15_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (0000000000409200) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000409234) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000409268) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004092B0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printUnsignedLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040931D) ----------------------------------------------------
int goodB2G_8()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -1 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printUnsignedLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040939E) ----------------------------------------------------
int goodG2B_8()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (00000000004093F0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_17_good()
{
  goodB2G_8();
  return goodG2B_8();
}

//----- (000000000040940A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_badSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_max_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__char_max_postinc_22_badGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB1D4: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_badGlobal;

//----- (000000000040943F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Sink(char a1)
{
  if ( CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6AB1D8: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Global;

//----- (0000000000409492) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Global )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6AB1DC: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Global;

//----- (00000000004094D9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_max_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__char_max_postinc_22_goodG2BGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB1E0: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_goodG2BGlobal;

//----- (000000000040950E) ----------------------------------------------------
__int64 __fastcall badSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000040956B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_0(0);
  return printIntLine(v0 + 1);
}

//----- (000000000040959D) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 2LL;
}

//----- (00000000004095B0) ----------------------------------------------------
int goodG2B_9()
{
  int v0; // eax

  v0 = goodG2BSource_0();
  return printIntLine(v0 + 1);
}

//----- (00000000004095E2) ----------------------------------------------------
__int64 __fastcall goodB2GSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000040963F) ----------------------------------------------------
int goodB2G_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_0(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000409686) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_42_good()
{
  goodB2G_9();
  return goodG2B_9();
}

//----- (00000000004096A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_52c_badSink(a1);
}

//----- (00000000004096B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_52c_goodG2BSink(a1);
}

//----- (00000000004096CE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_52c_goodB2GSink(a1);
}

//----- (00000000004096E5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040971D) ----------------------------------------------------
int goodG2B_10()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_goodG2BSink(2);
}

//----- (000000000040973F) ----------------------------------------------------
int goodB2G_10()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409777) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54_good()
{
  goodG2B_10();
  return goodB2G_10();
}

//----- (0000000000409791) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v6 + 1);
  return result;
}

//----- (0000000000409821) ----------------------------------------------------
int goodB2G1_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (00000000004098CF) ----------------------------------------------------
int goodB2G2_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}

//----- (0000000000409971) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (00000000004099C5) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000409A0D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_11_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (0000000000409A3B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000409AAF) ----------------------------------------------------
int goodB2G1_6()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000409B35) ----------------------------------------------------
int goodB2G2_6()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000409BBB) ----------------------------------------------------
int goodG2B1_6()
{
  return printUnsignedLine(3u);
}

//----- (0000000000409BE7) ----------------------------------------------------
int goodG2B2_6()
{
  return printUnsignedLine(3u);
}

//----- (0000000000409C13) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_02_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (0000000000409C41) ----------------------------------------------------
int badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_postinc_45_badData + 1));
}
// 6AB1CA: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_45_badData;

//----- (0000000000409C74) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_45_bad()
{
  CWE190_Integer_Overflow__short_max_postinc_45_badData = 0x7FFF;
  return badSink();
}
// 6AB1CA: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_45_badData;

//----- (0000000000409C9F) ----------------------------------------------------
int goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_postinc_45_goodG2BData + 1));
}
// 6AB1CC: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_45_goodG2BData;

//----- (0000000000409CD2) ----------------------------------------------------
int goodG2B_11()
{
  CWE190_Integer_Overflow__short_max_postinc_45_goodG2BData = 2;
  return goodG2BSink();
}
// 6AB1CC: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_45_goodG2BData;

//----- (0000000000409CFD) ----------------------------------------------------
int goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_max_postinc_45_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_max_postinc_45_goodB2GData + 1));
  return result;
}
// 6AB1CE: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_45_goodB2GData;

//----- (0000000000409D44) ----------------------------------------------------
int goodB2G_11()
{
  CWE190_Integer_Overflow__short_max_postinc_45_goodB2GData = 0x7FFF;
  return goodB2GSink();
}
// 6AB1CE: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_45_goodB2GData;

//----- (0000000000409D6F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_45_good()
{
  goodG2B_11();
  return goodB2G_11();
}

//----- (0000000000409D89) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 0x7FFFFFFF;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB124: using guessed type int staticTrue;

//----- (0000000000409DC9) ----------------------------------------------------
int goodB2G1_7()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 0x7FFFFFFF;
  if ( staticFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6AB124: using guessed type int staticTrue;
// 6AB1D0: using guessed type int staticFalse;

//----- (0000000000409E2A) ----------------------------------------------------
int goodB2G2_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 0x7FFFFFFF;
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6AB124: using guessed type int staticTrue;

//----- (0000000000409E7F) ----------------------------------------------------
int goodG2B1_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB124: using guessed type int staticTrue;
// 6AB1D0: using guessed type int staticFalse;

//----- (0000000000409ECB) ----------------------------------------------------
int goodG2B2_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB124: using guessed type int staticTrue;

//----- (0000000000409F0B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_05_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (0000000000409F39) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_64_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_64b_badSink(&v2);
}

//----- (0000000000409F84) ----------------------------------------------------
int goodG2B_12()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_rand_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000409FA2) ----------------------------------------------------
int goodB2G_12()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_64b_goodB2GSink(&v2);
}

//----- (0000000000409FED) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_64_good()
{
  goodG2B_12();
  return goodB2G_12();
}

//----- (000000000040A007) ----------------------------------------------------
int __fastcall badSink_0(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040A028) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_41_bad()
{
  return badSink_0(0x7FFFFFFF);
}

//----- (000000000040A04A) ----------------------------------------------------
int __fastcall goodG2BSink_0(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040A06B) ----------------------------------------------------
int goodG2B_13()
{
  return goodG2BSink_0(2);
}

//----- (000000000040A08D) ----------------------------------------------------
int __fastcall goodB2GSink_0(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040A0C3) ----------------------------------------------------
int goodB2G_13()
{
  return goodB2GSink_0(0x7FFFFFFF);
}

//----- (000000000040A0E5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_41_good()
{
  goodB2G_13();
  return goodG2B_13();
}

//----- (000000000040A0FF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_06_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000040A147) ----------------------------------------------------
int goodB2G1_8()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A1AF) ----------------------------------------------------
int goodB2G2_8()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A20B) ----------------------------------------------------
int goodG2B1_8()
{
  return printIntLine(3u);
}

//----- (000000000040A25F) ----------------------------------------------------
int goodG2B2_8()
{
  return printIntLine(3u);
}

//----- (000000000040A2A7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_06_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (000000000040A2D5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__int_rand_postinc_65b_badSink)(v2);
}

//----- (000000000040A348) ----------------------------------------------------
int goodG2B_14()
{
  return CWE190_Integer_Overflow__int_rand_postinc_65b_goodG2BSink(2);
}

//----- (000000000040A373) ----------------------------------------------------
__int64 goodB2G_14()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__int_rand_postinc_65b_goodB2GSink)(v2);
}

//----- (000000000040A3E6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_65_good()
{
  goodG2B_14();
  return goodB2G_14();
}

//----- (000000000040A400) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000040A433) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000040A466) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000040A4AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_postinc_61b_badSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000040A4E9) ----------------------------------------------------
int goodG2B_15()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_postinc_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000040A524) ----------------------------------------------------
int goodB2G_15()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_rand_postinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000040A57B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_61_good()
{
  goodG2B_15();
  return goodB2G_15();
}

//----- (000000000040A595) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040A61D) ----------------------------------------------------
int goodB2G1_9()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000040A6C3) ----------------------------------------------------
int goodB2G2_9()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040A75D) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000040A7A9) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040A7E9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_10_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (000000000040A817) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_34_bad()
{
  char v1; // [rsp+Dh] [rbp-3h]
  char v2; // [rsp+Eh] [rbp-2h]
  char v3; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A86C) ----------------------------------------------------
int goodG2B_16()
{
  return printHexCharLine(3);
}

//----- (000000000040A8A8) ----------------------------------------------------
int goodB2G_16()
{
  int result; // eax
  char v1; // [rsp+Dh] [rbp-3h]
  char v2; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v2 = v1;
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A90F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_34_good()
{
  goodG2B_16();
  return goodB2G_16();
}

//----- (000000000040A929) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_34_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000040A961) ----------------------------------------------------
int goodG2B_17()
{
  return printIntLine(3u);
}

//----- (000000000040A999) ----------------------------------------------------
int goodB2G_17()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A9E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_34_good()
{
  goodG2B_17();
  return goodB2G_17();
}

//----- (000000000040AA00) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AA51) ----------------------------------------------------
int goodB2G1_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AAC1) ----------------------------------------------------
int goodB2G2_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AB31) ----------------------------------------------------
int goodG2B1_10()
{
  return printLongLongLine(3LL);
}

//----- (000000000040AB66) ----------------------------------------------------
int goodG2B2_10()
{
  return printLongLongLine(3LL);
}

//----- (000000000040AB9B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_15_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (000000000040ABC9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040ABF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040AC21) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000040AC62) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_67_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040ACA2) ----------------------------------------------------
int goodG2B_18()
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_67b_goodG2BSink(2);
}

//----- (000000000040ACCB) ----------------------------------------------------
int goodB2G_18()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AD0B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_67_good()
{
  goodG2B_18();
  return goodB2G_18();
}

//----- (000000000040AD25) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_07_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive;
  if ( staticFive == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040AE09) ----------------------------------------------------
int goodB2G1_11()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040AF15) ----------------------------------------------------
int goodB2G2_11()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040B015) ----------------------------------------------------
int goodG2B1_11()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040B06A) ----------------------------------------------------
int goodG2B2_11()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive == 5 )
    v1 = 2LL;
  result = staticFive;
  if ( staticFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040B0B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_07_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (000000000040B0E1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_22_bad()
{
  CWE190_Integer_Overflow__char_max_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__char_max_postinc_22_badSink(127);
}
// 6AB1D4: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_badGlobal;

//----- (000000000040B108) ----------------------------------------------------
int goodB2G1_12()
{
  CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Sink(127);
}
// 6AB1D8: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_goodB2G1Global;

//----- (000000000040B12F) ----------------------------------------------------
int goodB2G2_12()
{
  CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Sink(127);
}
// 6AB1DC: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_goodB2G2Global;

//----- (000000000040B156) ----------------------------------------------------
int goodG2B_19()
{
  CWE190_Integer_Overflow__char_max_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__char_max_postinc_22_goodG2BSink(2);
}
// 6AB1E0: using guessed type int CWE190_Integer_Overflow__char_max_postinc_22_goodG2BGlobal;

//----- (000000000040B17D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_22_good()
{
  goodB2G1_12();
  goodB2G2_12();
  return goodG2B_19();
}

//----- (000000000040B1A1) ----------------------------------------------------
int __fastcall badSink_1(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040B1C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_1(v4);
}

//----- (000000000040B22A) ----------------------------------------------------
int __fastcall goodG2BSink_1(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040B24B) ----------------------------------------------------
int goodG2B_20()
{
  return goodG2BSink_1(2);
}

//----- (000000000040B26D) ----------------------------------------------------
int __fastcall goodB2GSink_1(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040B2A3) ----------------------------------------------------
int goodB2G_19()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_1(v4);
}

//----- (000000000040B30B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_41_good()
{
  goodB2G_19();
  return goodG2B_20();
}

//----- (000000000040B325) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B35D) ----------------------------------------------------
int goodG2B_21()
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_52b_goodG2BSink(2);
}

//----- (000000000040B37F) ----------------------------------------------------
int goodB2G_20()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B3B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_52_good()
{
  goodG2B_21();
  return goodB2G_20();
}

//----- (000000000040B3D1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000040B445) ----------------------------------------------------
int goodG2B_22()
{
  return printUnsignedLine(3u);
}

//----- (000000000040B471) ----------------------------------------------------
int goodB2G_21()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000040B4F7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_01_good()
{
  goodG2B_22();
  return goodB2G_21();
}

//----- (000000000040B511) ----------------------------------------------------
__int64 __fastcall badSource_1(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B540) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_1(0LL);
  return printLongLongLine(v0 + 1);
}

//----- (000000000040B57B) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 2LL;
}

//----- (000000000040B591) ----------------------------------------------------
int goodG2B_23()
{
  __int64 v0; // rax

  v0 = goodG2BSource_1();
  return printLongLongLine(v0 + 1);
}

//----- (000000000040B5CC) ----------------------------------------------------
__int64 __fastcall goodB2GSource_1(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B5FB) ----------------------------------------------------
int goodB2G_22()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_1(0LL);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000040B652) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_42_good()
{
  goodB2G_22();
  return goodG2B_23();
}

//----- (000000000040B66C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040B68D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040B6AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040B6E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B72D) ----------------------------------------------------
int goodB2G_23()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B78C) ----------------------------------------------------
int goodG2B_24()
{
  return printIntLine(3u);
}

//----- (000000000040B7BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_16_good()
{
  goodB2G_23();
  return goodG2B_24();
}

//----- (000000000040B7D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_34_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7 + 1;
  v5 = v7 + 1;
  return printIntLine(v7 + 1);
}

//----- (000000000040B852) ----------------------------------------------------
int goodG2B_25()
{
  return printIntLine(3u);
}

//----- (000000000040B88A) ----------------------------------------------------
int goodB2G_24()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v6;
  v5 = v6;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}

//----- (000000000040B91D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_34_good()
{
  goodG2B_25();
  return goodB2G_24();
}

//----- (000000000040B937) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040B963) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040B98F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000040B9D0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_13_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 127;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BA14) ----------------------------------------------------
int goodB2G1_13()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 127;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BA76) ----------------------------------------------------
int goodB2G2_13()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 127;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BACC) ----------------------------------------------------
int goodG2B1_12()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BB1C) ----------------------------------------------------
int goodG2B2_12()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040BB60) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_13_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040BB8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_66b_badSink((__int64)&v1);
}

//----- (000000000040BBB8) ----------------------------------------------------
int goodG2B_26()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_max_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040BBE2) ----------------------------------------------------
int goodB2G_25()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040BC0C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_66_good()
{
  goodG2B_26();
  return goodB2G_25();
}

//----- (000000000040BC26) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040BCAE) ----------------------------------------------------
int goodB2G1_14()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040BD54) ----------------------------------------------------
int goodB2G2_14()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040BDEE) ----------------------------------------------------
int goodG2B1_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040BE3A) ----------------------------------------------------
int goodG2B2_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040BE7A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040BEA8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040BECF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040BEF6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000040BF39) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB12C: using guessed type int staticTrue_0;

//----- (000000000040BF9C) ----------------------------------------------------
int goodB2G1_15()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB12C: using guessed type int staticTrue_0;
// 6AB1E4: using guessed type int staticFalse_0;

//----- (000000000040C02A) ----------------------------------------------------
int goodB2G2_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB12C: using guessed type int staticTrue_0;

//----- (000000000040C0AC) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB12C: using guessed type int staticTrue_0;
// 6AB1E4: using guessed type int staticFalse_0;

//----- (000000000040C0FF) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_0 )
    v1 = 2LL;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB12C: using guessed type int staticTrue_0;

//----- (000000000040C146) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_05_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040C174) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C1AC) ----------------------------------------------------
int goodG2B_27()
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_51b_goodG2BSink(2);
}

//----- (000000000040C1CE) ----------------------------------------------------
int goodB2G_26()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C206) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_51_good()
{
  goodG2B_27();
  return goodB2G_26();
}

//----- (000000000040C220) ----------------------------------------------------
int __fastcall badSink_2(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040C247) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return badSink_2(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C282) ----------------------------------------------------
int __fastcall goodG2BSink_2(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040C2A9) ----------------------------------------------------
int goodG2B_28()
{
  return goodG2BSink_2(2LL);
}

//----- (000000000040C2CF) ----------------------------------------------------
int __fastcall goodB2GSink_2(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000040C312) ----------------------------------------------------
int goodB2G_27()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return goodB2GSink_2(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040C34D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_41_good()
{
  goodB2G_27();
  return goodG2B_28();
}

//----- (000000000040C367) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_badData + 1);
}
// 6AB61C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_badData;

//----- (000000000040C38E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodG2BData + 1);
}
// 6AB618: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodG2BData;

//----- (000000000040C3B5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB614: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodB2GData;

//----- (000000000040C3EE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_11_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 127;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040C438) ----------------------------------------------------
int goodB2G1_16()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 127;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}

//----- (000000000040C4A0) ----------------------------------------------------
int goodB2G2_16()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 127;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}

//----- (000000000040C4FC) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040C552) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040C59C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_11_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040C5CA) ----------------------------------------------------
__int64 badSource_2()
{
  return 0x7FFFLL;
}

//----- (000000000040C5E0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_2();
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000040C61D) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 2LL;
}

//----- (000000000040C633) ----------------------------------------------------
int goodG2B_29()
{
  __int16 v0; // ax

  v0 = goodG2BSource_2();
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000040C670) ----------------------------------------------------
__int64 goodB2GSource_2()
{
  return 0x7FFFLL;
}

//----- (000000000040C686) ----------------------------------------------------
int goodB2G_28()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_2();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040C6D7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_42_good()
{
  goodB2G_28();
  return goodG2B_29();
}

//----- (000000000040C6F1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000040C771) ----------------------------------------------------
int goodG2B_30()
{
  return printUnsignedLine(3u);
}

//----- (000000000040C7A9) ----------------------------------------------------
int goodB2G_29()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000040C83B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_34_good()
{
  goodG2B_30();
  return goodB2G_29();
}

//----- (000000000040C855) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_63b_badSink(&v5);
}
// 40C855: using guessed type char buf[16];

//----- (000000000040C93F) ----------------------------------------------------
int goodG2B_31()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000040C963) ----------------------------------------------------
int goodB2G_30()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_63b_goodB2GSink(&v5);
}
// 40C963: using guessed type char buf[16];

//----- (000000000040CA4D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_63_good()
{
  goodG2B_31();
  return goodB2G_30();
}

//----- (000000000040CA67) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54e_badSink(a1);
}

//----- (000000000040CA7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54e_goodG2BSink(a1);
}

//----- (000000000040CA95) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54e_goodB2GSink(a1);
}

//----- (000000000040CAAC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040CAD8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000040CB04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000040CB42) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_badSink(a1);
}

//----- (000000000040CB59) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_goodG2BSink(a1);
}

//----- (000000000040CB70) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_goodB2GSink(a1);
}

//----- (000000000040CB87) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_07_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040CBE8) ----------------------------------------------------
int goodB2G1_17()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040CC6B) ----------------------------------------------------
int goodB2G2_17()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040CCE2) ----------------------------------------------------
int goodG2B1_16()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040CD38) ----------------------------------------------------
int goodG2B2_16()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040CD82) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_07_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040CDB0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000040CE3A) ----------------------------------------------------
int goodB2G1_18()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000040CEE5) ----------------------------------------------------
int goodB2G2_18()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000040CF84) ----------------------------------------------------
int goodG2B1_17()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000040CFD2) ----------------------------------------------------
int goodG2B2_17()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000040D014) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_14_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040D042) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_09_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040D0B1) ----------------------------------------------------
int goodB2G1_19()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040D13E) ----------------------------------------------------
int goodB2G2_19()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040D1BF) ----------------------------------------------------
int goodG2B1_18()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040D20D) ----------------------------------------------------
int goodG2B2_18()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040D24F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_09_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040D27D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printIntLine(*v8 + 1);
}

//----- (000000000040D31C) ----------------------------------------------------
int goodG2B_32()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000040D373) ----------------------------------------------------
int goodB2G_31()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+Ch] [rbp-24h]
  int *v9; // [rsp+10h] [rbp-20h]
  int *v10; // [rsp+18h] [rbp-18h]

  v10 = &v6;
  v9 = &v6;
  v6 = 0;
  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  *v10 = v2;
  v7 = *v9;
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}

//----- (000000000040D427) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_32_good()
{
  goodG2B_32();
  return goodB2G_31();
}

//----- (000000000040D441) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 40D441: using guessed type char buf[16];

//----- (000000000040D533) ----------------------------------------------------
int goodG2B_33()
{
  return printIntLine(3u);
}

//----- (000000000040D55F) ----------------------------------------------------
int goodB2G_32()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 40D55F: using guessed type char buf[16];

//----- (000000000040D666) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_01_good()
{
  goodG2B_33();
  return goodB2G_32();
}

//----- (000000000040D680) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_63b_badSink(&v5);
}
// 40D680: using guessed type char buf[16];

//----- (000000000040D7B0) ----------------------------------------------------
int goodG2B_34()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000040D7D4) ----------------------------------------------------
int goodB2G_33()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_63b_goodB2GSink(&v5);
}
// 40D7D4: using guessed type char buf[16];

//----- (000000000040D904) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_63_good()
{
  goodG2B_34();
  return goodB2G_33();
}

//----- (000000000040D91E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_53_bad()
{
  return CWE190_Integer_Overflow__char_max_postinc_53b_badSink(127);
}

//----- (000000000040D93B) ----------------------------------------------------
int goodG2B_35()
{
  return CWE190_Integer_Overflow__char_max_postinc_53b_goodG2BSink(2);
}

//----- (000000000040D958) ----------------------------------------------------
int goodB2G_34()
{
  return CWE190_Integer_Overflow__char_max_postinc_53b_goodB2GSink(127);
}

//----- (000000000040D975) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_53_good()
{
  goodG2B_35();
  return goodB2G_34();
}

//----- (000000000040D98F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_68b_badSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_postinc_68_badData + 1);
}
// 6AB541: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_68_badData;

//----- (000000000040D9BF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_68b_goodG2BSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_postinc_68_goodG2BData + 1);
}
// 6AB540: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_68_goodG2BData;

//----- (000000000040D9EF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_fscanf_postinc_68_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_fscanf_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB542: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_68_goodB2GData;

//----- (000000000040DA31) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_52_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_badSink(-1);
}

//----- (000000000040DA53) ----------------------------------------------------
int goodG2B_36()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_goodG2BSink(2);
}

//----- (000000000040DA75) ----------------------------------------------------
int goodB2G_35()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_52b_goodB2GSink(-1);
}

//----- (000000000040DA97) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_52_good()
{
  goodG2B_36();
  return goodB2G_35();
}

//----- (000000000040DAB1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_badSink((__int64)&v6);
}

//----- (000000000040DB23) ----------------------------------------------------
int goodG2B_37()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040DB4D) ----------------------------------------------------
int goodB2G_36()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_66b_goodB2GSink((__int64)&v6);
}

//----- (000000000040DBBF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_66_good()
{
  goodG2B_37();
  return goodB2G_36();
}

//----- (000000000040DBD9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040DBFA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040DC1B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040DC4E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_16_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000040DC7C) ----------------------------------------------------
int goodB2G_37()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040DCBC) ----------------------------------------------------
int goodG2B_38()
{
  return printUnsignedLine(3u);
}

//----- (000000000040DCEA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_16_good()
{
  goodB2G_37();
  return goodG2B_38();
}

//----- (000000000040DD04) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v8 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;
// 40DD04: using guessed type char buf[16];

//----- (000000000040DE56) ----------------------------------------------------
int goodB2G1_20()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;
// 40DE56: using guessed type char buf[16];

//----- (000000000040DFC9) ----------------------------------------------------
int goodB2G2_20()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;
// 40DFC9: using guessed type char buf[16];

//----- (000000000040E130) ----------------------------------------------------
int goodG2B1_19()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040E17E) ----------------------------------------------------
int goodG2B2_19()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040E1C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_13_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040E1EE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53d_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000040E219) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000040E244) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000040E281) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000040E307) ----------------------------------------------------
int goodB2G1_21()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000040E3AE) ----------------------------------------------------
int goodB2G2_21()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000040E449) ----------------------------------------------------
int goodG2B1_20()
{
  return printIntLine(3u);
}

//----- (000000000040E493) ----------------------------------------------------
int goodG2B2_20()
{
  return printIntLine(3u);
}

//----- (000000000040E4D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_04_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040E4FF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54d_badSink(a1);
}

//----- (000000000040E51A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54d_goodG2BSink(a1);
}

//----- (000000000040E535) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54d_goodB2GSink(a1);
}

//----- (000000000040E550) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v7 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 40E550: using guessed type char buf[16];

//----- (000000000040E65A) ----------------------------------------------------
int goodB2G1_22()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;
// 40E65A: using guessed type char buf[16];

//----- (000000000040E785) ----------------------------------------------------
int goodB2G2_22()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 40E785: using guessed type char buf[16];

//----- (000000000040E8A4) ----------------------------------------------------
int goodG2B1_21()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040E8F0) ----------------------------------------------------
int goodG2B2_21()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040E930) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_09_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040E95E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53c_badSink(a1);
}

//----- (000000000040E978) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53c_goodG2BSink(a1);
}

//----- (000000000040E992) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53c_goodB2GSink(a1);
}

//----- (000000000040E9AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E9F5) ----------------------------------------------------
int goodB2G_38()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EA54) ----------------------------------------------------
int goodG2B_39()
{
  return printIntLine(3u);
}

//----- (000000000040EA82) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_18_good()
{
  goodB2G_38();
  return goodG2B_39();
}

//----- (000000000040EA9C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000040EACA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000040EAF8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000040EB3A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52c_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000040EB65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000040EB90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000040EBCD) ----------------------------------------------------
__int64 __fastcall badSource_3(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EBFD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_42_bad()
{
  char v0; // al

  v0 = badSource_3(0x20u);
  return printHexCharLine(v0 + 1);
}

//----- (000000000040EC35) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 2LL;
}

//----- (000000000040EC48) ----------------------------------------------------
int goodG2B_40()
{
  char v0; // al

  v0 = goodG2BSource_3();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040EC80) ----------------------------------------------------
__int64 __fastcall goodB2GSource_3(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040ECB0) ----------------------------------------------------
int goodB2G_39()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_3(0x20u);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040ECFA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_42_good()
{
  goodB2G_39();
  return goodG2B_40();
}

//----- (000000000040ED14) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_68_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_68_badData = v1;
  return CWE190_Integer_Overflow__char_fscanf_postinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB541: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_68_badData;

//----- (000000000040ED53) ----------------------------------------------------
int goodG2B_41()
{
  CWE190_Integer_Overflow__char_fscanf_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__char_fscanf_postinc_68b_goodG2BSink();
}
// 6AB540: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_68_goodG2BData;

//----- (000000000040ED79) ----------------------------------------------------
int goodB2G_40()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__char_fscanf_postinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB542: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_68_goodB2GData;

//----- (000000000040EDB8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_68_good()
{
  goodG2B_41();
  return goodB2G_40();
}

//----- (000000000040EDD2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_51_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_badSink(-1);
}

//----- (000000000040EDF4) ----------------------------------------------------
int goodG2B_42()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_goodG2BSink(2);
}

//----- (000000000040EE16) ----------------------------------------------------
int goodB2G_41()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_51b_goodB2GSink(-1);
}

//----- (000000000040EE38) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_51_good()
{
  goodG2B_42();
  return goodB2G_41();
}

//----- (000000000040EE52) ----------------------------------------------------
int __fastcall badSink_3(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000040EE80) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_44_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_3)((unsigned int)(__int16)v1);
}

//----- (000000000040EEEA) ----------------------------------------------------
int __fastcall goodG2BSink_3(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000040EF18) ----------------------------------------------------
int goodG2B_43()
{
  return goodG2BSink_3(2);
}

//----- (000000000040EF42) ----------------------------------------------------
int __fastcall goodB2GSink_3(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000040EF84) ----------------------------------------------------
__int64 goodB2G_42()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_3)((unsigned int)(__int16)v1);
}

//----- (000000000040EFEE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_44_good()
{
  goodG2B_43();
  return goodB2G_42();
}

//----- (000000000040F008) ----------------------------------------------------
void CWE190_Integer_Overflow__int_listen_socket_postinc_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = ++v8;
    printIntLine(v8);
  }
}
// 40F008: using guessed type char buf[16];

//----- (000000000040F16D) ----------------------------------------------------
void goodB2G_43()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = ++v8;
      printIntLine(v8);
    }
  }
}
// 40F16D: using guessed type char buf[16];

//----- (000000000040F2E7) ----------------------------------------------------
int goodG2B_44()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (000000000040F339) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_17_good()
{
  goodB2G_43();
  return goodG2B_44();
}

//----- (000000000040F353) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_rand_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_rand_postinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB39C: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_badGlobal;

//----- (000000000040F37E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB3A0: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Global;

//----- (000000000040F3CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB3A4: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Global;

//----- (000000000040F40A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB3A8: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BGlobal;

//----- (000000000040F435) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040F45C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000040F483) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000040F4BC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_16_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000040F532) ----------------------------------------------------
int goodB2G_44()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040F5BC) ----------------------------------------------------
int goodG2B_45()
{
  return printIntLine(3u);
}

//----- (000000000040F5F2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_16_good()
{
  goodB2G_44();
  return goodG2B_45();
}

//----- (000000000040F60C) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (000000000040F617) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (000000000040F622) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_08_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFF;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040F672) ----------------------------------------------------
int goodB2G1_23()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFF;
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000040F6E2) ----------------------------------------------------
int goodB2G2_23()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFF;
  result = staticReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}

//----- (000000000040F746) ----------------------------------------------------
int goodG2B1_22()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040F7A2) ----------------------------------------------------
int goodG2B2_22()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 2;
  result = staticReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000040F7F2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_08_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040F820) ----------------------------------------------------
int badSink_4()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_postinc_45_badData + 1);
}
// 6AB1E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_badData;

//----- (000000000040F847) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_45_badData = -1;
  return badSink_4();
}
// 6AB1E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_badData;

//----- (000000000040F872) ----------------------------------------------------
int goodG2BSink_4()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodG2BData + 1);
}
// 6AB1EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodG2BData;

//----- (000000000040F899) ----------------------------------------------------
int goodG2B_46()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodG2BData = 2;
  return goodG2BSink_4();
}
// 6AB1EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodG2BData;

//----- (000000000040F8C4) ----------------------------------------------------
int goodB2GSink_4()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB1F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodB2GData;

//----- (000000000040F8FD) ----------------------------------------------------
int goodB2G_45()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodB2GData = -1;
  return goodB2GSink_4();
}
// 6AB1F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_goodB2GData;

//----- (000000000040F928) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_45_good()
{
  goodG2B_46();
  return goodB2G_45();
}

//----- (000000000040F942) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_53_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F97B) ----------------------------------------------------
int goodG2B_47()
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53b_goodG2BSink(2);
}

//----- (000000000040F998) ----------------------------------------------------
int goodB2G_46()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F9D1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_53_good()
{
  goodG2B_47();
  return goodB2G_46();
}

//----- (000000000040F9EB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000040FA2B) ----------------------------------------------------
int goodB2G1_24()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040FA89) ----------------------------------------------------
int goodB2G2_24()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040FADB) ----------------------------------------------------
int goodG2B1_23()
{
  return printUnsignedLine(3u);
}

//----- (000000000040FB27) ----------------------------------------------------
int goodG2B2_23()
{
  return printUnsignedLine(3u);
}

//----- (000000000040FB67) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_06_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000040FB95) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_postinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FBD5) ----------------------------------------------------
int goodG2B_48()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fscanf_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040FBFF) ----------------------------------------------------
int goodB2G_47()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int_fscanf_postinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FC3F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_66_good()
{
  goodG2B_48();
  return goodB2G_47();
}

//----- (000000000040FC59) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 40FC59: using guessed type char buf[16];

//----- (000000000040FD7C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040FD8F) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 40FD8F: using guessed type char buf[16];

//----- (000000000040FEB2) ----------------------------------------------------
__int64 badSource_4()
{
  return 127LL;
}

//----- (000000000040FEC5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_42_bad()
{
  char v0; // al

  v0 = badSource_4();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040FEFD) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 2LL;
}

//----- (000000000040FF10) ----------------------------------------------------
int goodG2B_49()
{
  char v0; // al

  v0 = goodG2BSource_4();
  return printHexCharLine(v0 + 1);
}

//----- (000000000040FF48) ----------------------------------------------------
__int64 goodB2GSource_4()
{
  return 127LL;
}

//----- (000000000040FF5B) ----------------------------------------------------
int goodB2G_48()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_4();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000040FFA5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_42_good()
{
  goodB2G_48();
  return goodG2B_49();
}

//----- (000000000040FFBF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041000E) ----------------------------------------------------
int goodB2G1_25()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000410085) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004100F0) ----------------------------------------------------
int goodG2B1_24()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000410145) ----------------------------------------------------
int goodG2B2_24()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041018E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_14_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (00000000004101BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v3 = 0x8000000000000000LL;
  v2 = 0x8000000000000000LL;
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000410226) ----------------------------------------------------
int goodG2B_50()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 3LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (000000000041028A) ----------------------------------------------------
int goodB2G_49()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000410310) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_32_good()
{
  goodG2B_50();
  return goodB2G_49();
}

//----- (000000000041032A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410368) ----------------------------------------------------
int goodG2B_51()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_goodG2BSink(2);
}

//----- (0000000000410390) ----------------------------------------------------
int goodB2G_50()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004103CE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_67_good()
{
  goodG2B_51();
  return goodB2G_50();
}

//----- (00000000004103E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54c_badSink(a1);
}

//----- (0000000000410403) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54c_goodG2BSink(a1);
}

//----- (000000000041041E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000410439) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_52c_badSink(a1);
}

//----- (0000000000410453) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_52c_goodG2BSink(a1);
}

//----- (000000000041046D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_52b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_52c_goodB2GSink(a1);
}

//----- (0000000000410487) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_postinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004104B9) ----------------------------------------------------
int goodG2B_52()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_listen_socket_postinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (00000000004104EB) ----------------------------------------------------
int goodB2G_51()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_listen_socket_postinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000410532) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_61_good()
{
  goodG2B_52();
  return goodB2G_51();
}

//----- (000000000041054C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_05_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = 127;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB134: using guessed type int staticTrue_1;

//----- (000000000041058E) ----------------------------------------------------
int goodB2G1_26()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = 127;
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6AB134: using guessed type int staticTrue_1;
// 6AB1F4: using guessed type int staticFalse_1;

//----- (00000000004105EE) ----------------------------------------------------
int goodB2G2_26()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = 127;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6AB134: using guessed type int staticTrue_1;

//----- (0000000000410642) ----------------------------------------------------
int goodG2B1_25()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB134: using guessed type int staticTrue_1;
// 6AB1F4: using guessed type int staticFalse_1;

//----- (0000000000410690) ----------------------------------------------------
int goodG2B2_25()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = 2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB134: using guessed type int staticTrue_1;

//----- (00000000004106D2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_05_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (0000000000410700) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54d_badSink(a1);
}

//----- (0000000000410717) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54d_goodG2BSink(a1);
}

//----- (000000000041072E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000410745) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_65_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__char_rand_postinc_65b_badSink)((unsigned int)(char)v0);
}

//----- (0000000000410798) ----------------------------------------------------
int goodG2B_53()
{
  return CWE190_Integer_Overflow__char_rand_postinc_65b_goodG2BSink(2);
}

//----- (00000000004107BE) ----------------------------------------------------
__int64 goodB2G_52()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__char_rand_postinc_65b_goodB2GSink)((unsigned int)(char)v0);
}

//----- (0000000000410811) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_65_good()
{
  goodG2B_53();
  return goodB2G_52();
}

//----- (000000000041082B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_04_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000410876) ----------------------------------------------------
int goodB2G1_27()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004108E9) ----------------------------------------------------
int goodB2G2_27()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000410950) ----------------------------------------------------
int goodG2B1_26()
{
  return printLongLongLine(3LL);
}

//----- (00000000004109A1) ----------------------------------------------------
int goodG2B2_26()
{
  return printLongLongLine(3LL);
}

//----- (00000000004109E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_04_good()
{
  goodB2G1_27();
  goodB2G2_27();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (0000000000410A14) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_31_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000410A5D) ----------------------------------------------------
int goodG2B_54()
{
  return printLongLongLine(3LL);
}

//----- (0000000000410AA0) ----------------------------------------------------
int goodB2G_53()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000410B05) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_31_good()
{
  goodG2B_54();
  return goodB2G_53();
}

//----- (0000000000410B1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000410B40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000410B61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000410B97) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000410BD1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000410C0B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000410C61) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_1 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v8 + 1);
  return result;
}
// 6AB138: using guessed type int staticFive_1;
// 410C61: using guessed type char buf[16];

//----- (0000000000410DB3) ----------------------------------------------------
int goodB2G1_28()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_1 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6AB138: using guessed type int staticFive_1;
// 410DB3: using guessed type char buf[16];

//----- (0000000000410F26) ----------------------------------------------------
int goodB2G2_28()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_1 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6AB138: using guessed type int staticFive_1;
// 410F26: using guessed type char buf[16];

//----- (000000000041108D) ----------------------------------------------------
int goodG2B1_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB138: using guessed type int staticFive_1;

//----- (00000000004110DB) ----------------------------------------------------
int goodG2B2_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB138: using guessed type int staticFive_1;

//----- (000000000041111D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_07_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (000000000041114B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_34_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000411187) ----------------------------------------------------
int goodG2B_55()
{
  return printHexCharLine(3);
}

//----- (00000000004111C3) ----------------------------------------------------
int goodB2G_54()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000411211) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_34_good()
{
  goodG2B_55();
  return goodB2G_54();
}

//----- (000000000041122B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_54_bad()
{
  return CWE190_Integer_Overflow__short_max_postinc_54b_badSink(0x7FFF);
}

//----- (000000000041124C) ----------------------------------------------------
int goodG2B_56()
{
  return CWE190_Integer_Overflow__short_max_postinc_54b_goodG2BSink(2);
}

//----- (000000000041126D) ----------------------------------------------------
int goodB2G_55()
{
  return CWE190_Integer_Overflow__short_max_postinc_54b_goodB2GSink(0x7FFF);
}

//----- (000000000041128E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_54_good()
{
  goodG2B_56();
  return goodB2G_55();
}

//----- (00000000004112A8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (00000000004112DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (0000000000411312) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (0000000000411359) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_52_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411392) ----------------------------------------------------
int goodG2B_57()
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_52b_goodG2BSink(2);
}

//----- (00000000004113AF) ----------------------------------------------------
int goodB2G_56()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004113E8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_52_good()
{
  goodG2B_57();
  return goodB2G_56();
}

//----- (0000000000411402) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_postinc_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB208: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_badGlobal;

//----- (0000000000411433) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6AB20C: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Global;

//----- (000000000041148C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6AB210: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Global;

//----- (00000000004114D9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB214: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BGlobal;

//----- (000000000041150A) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000411515) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000411520) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411583) ----------------------------------------------------
int goodB2G1_29()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411608) ----------------------------------------------------
int goodB2G2_29()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411681) ----------------------------------------------------
int goodG2B1_28()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004116D5) ----------------------------------------------------
int goodG2B2_28()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041171D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_08_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (000000000041174B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_badData = v1;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB550: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_badData;

//----- (000000000041178F) ----------------------------------------------------
int goodG2B_58()
{
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_goodG2BSink();
}
// 6AB558: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodG2BData;

//----- (00000000004117BE) ----------------------------------------------------
int goodB2G_57()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB548: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodB2GData;

//----- (0000000000411802) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_good()
{
  goodG2B_58();
  return goodB2G_57();
}

//----- (000000000041181C) ----------------------------------------------------
int __fastcall badSink_5(int a1)
{
  int result; // eax

  result = badStatic;
  if ( badStatic )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB1F8: using guessed type int badStatic;

//----- (0000000000411847) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic = 1;
  return badSink_5(v2);
}
// 6AB1F8: using guessed type int badStatic;

//----- (00000000004118BB) ----------------------------------------------------
int __fastcall goodB2G1Sink(int a1)
{
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB1FC: using guessed type int goodB2G1Static;

//----- (0000000000411907) ----------------------------------------------------
int goodB2G1_30()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static = 0;
  return goodB2G1Sink(v2);
}
// 6AB1FC: using guessed type int goodB2G1Static;

//----- (000000000041197B) ----------------------------------------------------
int __fastcall goodB2G2Sink(int a1)
{
  int result; // eax

  result = goodB2G2Static;
  if ( goodB2G2Static )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB200: using guessed type int goodB2G2Static;

//----- (00000000004119BB) ----------------------------------------------------
int goodB2G2_30()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static = 1;
  return goodB2G2Sink(v2);
}
// 6AB200: using guessed type int goodB2G2Static;

//----- (0000000000411A2F) ----------------------------------------------------
int __fastcall goodG2BSink_5(int a1)
{
  int result; // eax

  result = goodG2BStatic;
  if ( goodG2BStatic )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB204: using guessed type int goodG2BStatic;

//----- (0000000000411A5A) ----------------------------------------------------
int goodG2B_59()
{
  goodG2BStatic = 1;
  return goodG2BSink_5(2);
}
// 6AB204: using guessed type int goodG2BStatic;

//----- (0000000000411A86) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_21_good()
{
  goodB2G1_30();
  goodB2G2_30();
  return goodG2B_59();
}

//----- (0000000000411AAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_badSink(a1);
}

//----- (0000000000411AC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_goodG2BSink(a1);
}

//----- (0000000000411AD8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_goodB2GSink(a1);
}

//----- (0000000000411AEF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_postinc_65b_badSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 411AEF: using guessed type char buf[16];

//----- (0000000000411BE0) ----------------------------------------------------
int goodG2B_60()
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_65b_goodG2BSink(2);
}

//----- (0000000000411C0B) ----------------------------------------------------
__int64 goodB2G_58()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_postinc_65b_goodB2GSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 411C0B: using guessed type char buf[16];

//----- (0000000000411CFC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_65_good()
{
  goodG2B_60();
  return goodB2G_58();
}

//----- (0000000000411D16) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_64_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_64b_badSink(&v10);
}

//----- (0000000000411DD3) ----------------------------------------------------
int goodG2B_61()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000411DF9) ----------------------------------------------------
int goodB2G_59()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_64b_goodB2GSink(&v10);
}

//----- (0000000000411EB6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_64_good()
{
  goodG2B_61();
  return goodB2G_59();
}

//----- (0000000000411ED0) ----------------------------------------------------
int __fastcall badSink_6(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000411EF1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_44_bad()
{
  return badSink_6(0x7FFFFFFF);
}

//----- (0000000000411F1C) ----------------------------------------------------
int __fastcall goodG2BSink_6(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000411F3D) ----------------------------------------------------
int goodG2B_62()
{
  return goodG2BSink_6(2);
}

//----- (0000000000411F68) ----------------------------------------------------
int __fastcall goodB2GSink_5(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000411F9E) ----------------------------------------------------
int goodB2G_60()
{
  return goodB2GSink_5(0x7FFFFFFF);
}

//----- (0000000000411FC9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_44_good()
{
  goodG2B_62();
  return goodB2G_60();
}

//----- (0000000000411FE3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041206D) ----------------------------------------------------
int goodB2G1_31()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000412115) ----------------------------------------------------
int goodB2G2_31()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004121B1) ----------------------------------------------------
int goodG2B1_29()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004121FF) ----------------------------------------------------
int goodG2B2_29()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000412241) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_14_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (000000000041226F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_51_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004122A8) ----------------------------------------------------
int goodG2B_63()
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_51b_goodG2BSink(2);
}

//----- (00000000004122C5) ----------------------------------------------------
int goodB2G_61()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004122FE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_51_good()
{
  goodG2B_63();
  return goodB2G_61();
}

//----- (0000000000412318) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printUnsignedLine(*v8 + 1);
}

//----- (00000000004123B7) ----------------------------------------------------
int goodG2B_64()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (000000000041240E) ----------------------------------------------------
int goodB2G_62()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+Ch] [rbp-24h]
  int *v9; // [rsp+10h] [rbp-20h]
  int *v10; // [rsp+18h] [rbp-18h]

  v10 = &v6;
  v9 = &v6;
  v6 = 0;
  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  *v10 = v2;
  v7 = *v9;
  if ( v7 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v7 + 1);
  return result;
}

//----- (00000000004124BF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_good()
{
  goodG2B_64();
  return goodB2G_62();
}

//----- (00000000004124D9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_postinc_68_badData + 1));
}
// 6AB560: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_68_badData;

//----- (000000000041250C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_max_postinc_68_goodG2BData + 1));
}
// 6AB562: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_68_goodG2BData;

//----- (000000000041253F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_max_postinc_68_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_max_postinc_68_goodB2GData + 1));
  return result;
}
// 6AB564: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_68_goodB2GData;

//----- (0000000000412586) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_22_bad()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_postinc_22_badSink(0x7FFFFFFFFFFFFFFFLL);
}
// 6AB208: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_badGlobal;

//----- (00000000004125BC) ----------------------------------------------------
int goodB2G1_32()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 6AB20C: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G1Global;

//----- (00000000004125F2) ----------------------------------------------------
int goodB2G2_32()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 6AB210: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodB2G2Global;

//----- (0000000000412628) ----------------------------------------------------
int goodG2B_65()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BSink(2LL);
}
// 6AB214: using guessed type int CWE190_Integer_Overflow__int64_t_max_postinc_22_goodG2BGlobal;

//----- (0000000000412658) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_22_good()
{
  goodB2G1_32();
  goodB2G2_32();
  return goodG2B_65();
}

//----- (000000000041267C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54c_badSink(a1);
}

//----- (0000000000412693) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54c_goodG2BSink(a1);
}

//----- (00000000004126AA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54c_goodB2GSink(a1);
}

//----- (00000000004126C1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v8 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 4126C1: using guessed type char buf[16];

//----- (0000000000412811) ----------------------------------------------------
int goodB2G1_33()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;
// 412811: using guessed type char buf[16];

//----- (0000000000412982) ----------------------------------------------------
int goodB2G2_33()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 412982: using guessed type char buf[16];

//----- (0000000000412AE7) ----------------------------------------------------
int goodG2B1_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412B33) ----------------------------------------------------
int goodG2B2_30()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412B73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_09_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (0000000000412BA1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v6 + 1);
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}

//----- (0000000000412C65) ----------------------------------------------------
int goodB2G_63()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v11 + 1);
  }
  else if ( v11 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v11 + 1);
  }
  return result;
}

//----- (0000000000412D80) ----------------------------------------------------
int goodG2B_66()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000412DE7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_12_good()
{
  goodB2G_63();
  return goodG2B_66();
}

//----- (0000000000412E01) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000412E22) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_postinc_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_7;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000412E93) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000412EB4) ----------------------------------------------------
int goodG2B_67()
{
  return goodG2BSink_7(2);
}

//----- (0000000000412EDF) ----------------------------------------------------
int __fastcall goodB2GSink_6(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000412F15) ----------------------------------------------------
__int64 goodB2G_64()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_6;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000412F86) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_postinc_44_good()
{
  goodG2B_67();
  return goodB2G_64();
}

//----- (0000000000412FA0) ----------------------------------------------------
int badSink_8()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_postinc_45_badData + 1);
}
// 6AB218: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_45_badData;

//----- (0000000000412FD0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_45_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_45_badData = v1;
  return badSink_8();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB218: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_45_badData;

//----- (000000000041300F) ----------------------------------------------------
int goodG2BSink_8()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_fscanf_postinc_45_goodG2BData + 1);
}
// 6AB219: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_45_goodG2BData;

//----- (000000000041303F) ----------------------------------------------------
int goodG2B_68()
{
  CWE190_Integer_Overflow__char_fscanf_postinc_45_goodG2BData = 2;
  return goodG2BSink_8();
}
// 6AB219: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_45_goodG2BData;

//----- (0000000000413065) ----------------------------------------------------
int goodB2GSink_7()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_fscanf_postinc_45_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_fscanf_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB21A: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_45_goodB2GData;

//----- (00000000004130A7) ----------------------------------------------------
int goodB2G_65()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_45_goodB2GData = v1;
  return goodB2GSink_7();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB21A: using guessed type char CWE190_Integer_Overflow__char_fscanf_postinc_45_goodB2GData;

//----- (00000000004130E6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_45_good()
{
  goodG2B_68();
  return goodB2G_65();
}

//----- (0000000000413100) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_06_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_4729E4, &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041315B) ----------------------------------------------------
int goodB2G1_34()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_4729E4, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004131D6) ----------------------------------------------------
int goodB2G2_34()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_4729E4, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413245) ----------------------------------------------------
int goodG2B1_31()
{
  return printHexCharLine(3);
}

//----- (0000000000413293) ----------------------------------------------------
int goodG2B2_31()
{
  return printHexCharLine(3);
}

//----- (00000000004132D5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_06_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (0000000000413303) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000413389) ----------------------------------------------------
int goodB2G1_35()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041342D) ----------------------------------------------------
int goodB2G2_35()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004134C5) ----------------------------------------------------
int goodG2B1_32()
{
  return printUnsignedLine(3u);
}

//----- (000000000041350F) ----------------------------------------------------
int goodG2B2_32()
{
  return printUnsignedLine(3u);
}

//----- (000000000041354D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (000000000041357B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (00000000004135FB) ----------------------------------------------------
int goodG2B_69()
{
  return printUnsignedLine(3u);
}

//----- (0000000000413633) ----------------------------------------------------
int goodB2G_66()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004136C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_31_good()
{
  goodG2B_69();
  return goodB2G_66();
}

//----- (00000000004136DF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_01_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000413753) ----------------------------------------------------
int goodG2B_70()
{
  return printIntLine(3u);
}

//----- (0000000000413787) ----------------------------------------------------
int goodB2G_67()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041380F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_01_good()
{
  goodG2B_70();
  return goodB2G_67();
}

//----- (0000000000413829) ----------------------------------------------------
int __fastcall badSink_9(char a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB21C: using guessed type int badStatic_0;

//----- (000000000041385E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_21_bad()
{
  badStatic_0 = 1;
  return badSink_9(127);
}
// 6AB21C: using guessed type int badStatic_0;

//----- (0000000000413885) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(char a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6AB220: using guessed type int goodB2G1Static_0;

//----- (00000000004138D8) ----------------------------------------------------
int goodB2G1_36()
{
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(127);
}
// 6AB220: using guessed type int goodB2G1Static_0;

//----- (00000000004138FF) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(char a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6AB224: using guessed type int goodB2G2Static_0;

//----- (0000000000413946) ----------------------------------------------------
int goodB2G2_36()
{
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(127);
}
// 6AB224: using guessed type int goodB2G2Static_0;

//----- (000000000041396D) ----------------------------------------------------
int __fastcall goodG2BSink_9(char a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB228: using guessed type int goodG2BStatic_0;

//----- (00000000004139A2) ----------------------------------------------------
int goodG2B_71()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_9(2);
}
// 6AB228: using guessed type int goodG2BStatic_0;

//----- (00000000004139C9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_21_good()
{
  goodB2G1_36();
  goodB2G2_36();
  return goodG2B_71();
}

//----- (00000000004139ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000413A1B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000413A49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000413A8B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413ADA) ----------------------------------------------------
int goodB2G1_37()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413B51) ----------------------------------------------------
int goodB2G2_37()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413BBC) ----------------------------------------------------
int goodG2B1_33()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413C11) ----------------------------------------------------
int goodG2B2_33()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413C5A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_13_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (0000000000413C88) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413CD1) ----------------------------------------------------
int goodB2G_68()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413D2E) ----------------------------------------------------
int goodG2B_72()
{
  return printUnsignedLine(3u);
}

//----- (0000000000413D5C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_18_good()
{
  goodB2G_68();
  return goodG2B_72();
}

//----- (0000000000413D76) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413DAE) ----------------------------------------------------
int goodG2B_73()
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_54b_goodG2BSink(2);
}

//----- (0000000000413DD0) ----------------------------------------------------
int goodB2G_69()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413E08) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_54_good()
{
  goodG2B_73();
  return goodB2G_69();
}

//----- (0000000000413E22) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v6 + 1);
  return result;
}

//----- (0000000000413EB2) ----------------------------------------------------
int goodB2G1_38()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}

//----- (0000000000413F63) ----------------------------------------------------
int goodB2G2_38()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}

//----- (0000000000414008) ----------------------------------------------------
int goodG2B1_34()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041405C) ----------------------------------------------------
int goodG2B2_34()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004140A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_11_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (00000000004140D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (0000000000414146) ----------------------------------------------------
int goodB2G1_39()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004141CF) ----------------------------------------------------
int goodB2G2_39()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000414258) ----------------------------------------------------
int goodG2B1_35()
{
  return printIntLine(3u);
}

//----- (0000000000414284) ----------------------------------------------------
int goodG2B2_35()
{
  return printIntLine(3u);
}

//----- (00000000004142B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_02_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (00000000004142DE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_63_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_postinc_63b_badSink(&v1);
}

//----- (00000000004142FC) ----------------------------------------------------
int goodG2B_74()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_max_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000041431A) ----------------------------------------------------
int goodB2G_70()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_postinc_63b_goodB2GSink(&v1);
}

//----- (0000000000414338) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_63_good()
{
  goodG2B_74();
  return goodB2G_70();
}

//----- (0000000000414352) ----------------------------------------------------
int __fastcall badSink_10(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000414379) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = badSink_10;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004143BD) ----------------------------------------------------
int __fastcall goodG2BSink_10(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004143E4) ----------------------------------------------------
int goodG2B_75()
{
  return goodG2BSink_10(2LL);
}

//----- (0000000000414413) ----------------------------------------------------
int __fastcall goodB2GSink_8(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000414456) ----------------------------------------------------
__int64 goodB2G_71()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_8;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041449A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_44_good()
{
  goodG2B_75();
  return goodB2G_71();
}

//----- (00000000004144B4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource(0);
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004144F1) ----------------------------------------------------
int goodG2B_76()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_fscanf_postinc_61b_goodG2BSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000041452E) ----------------------------------------------------
int goodB2G_72()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_fscanf_postinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041457F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_61_good()
{
  goodG2B_76();
  return goodB2G_72();
}

//----- (0000000000414599) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v6 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000414621) ----------------------------------------------------
int goodB2G1_40()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004146CA) ----------------------------------------------------
int goodB2G2_40()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000414767) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004147B3) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004147F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_10_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (0000000000414821) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB23C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badGlobal;

//----- (000000000041484C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6AB240: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Global;

//----- (0000000000414895) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6AB244: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Global;

//----- (00000000004148D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB248: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BGlobal;

//----- (00000000004148FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_53c_badSink(a1);
}

//----- (0000000000414918) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000414933) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_53c_goodB2GSink(a1);
}

//----- (000000000041494E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000414990) ----------------------------------------------------
int goodB2G1_41()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004149F0) ----------------------------------------------------
int goodB2G2_41()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -1;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000414A44) ----------------------------------------------------
int goodG2B1_37()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000414A92) ----------------------------------------------------
int goodG2B2_37()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000414AD4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_14_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (0000000000414B02) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_15_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000414B78) ----------------------------------------------------
int goodB2G1_42()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000414C02) ----------------------------------------------------
int goodB2G2_42()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000414C8C) ----------------------------------------------------
int goodG2B1_38()
{
  return printIntLine(3u);
}

//----- (0000000000414CC2) ----------------------------------------------------
int goodG2B2_38()
{
  return printIntLine(3u);
}

//----- (0000000000414CF8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_15_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (0000000000414D26) ----------------------------------------------------
int __fastcall badSink_11(__int64 a1)
{
  int result; // eax

  result = badStatic_1;
  if ( badStatic_1 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB22C: using guessed type int badStatic_1;

//----- (0000000000414D57) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_21_bad()
{
  badStatic_1 = 1;
  return badSink_11(0x7FFFFFFFFFFFFFFFLL);
}
// 6AB22C: using guessed type int badStatic_1;

//----- (0000000000414D8D) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(__int64 a1)
{
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6AB230: using guessed type int goodB2G1Static_1;

//----- (0000000000414DE6) ----------------------------------------------------
int goodB2G1_43()
{
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(0x7FFFFFFFFFFFFFFFLL);
}
// 6AB230: using guessed type int goodB2G1Static_1;

//----- (0000000000414E1C) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6AB234: using guessed type int goodB2G2Static_1;

//----- (0000000000414E69) ----------------------------------------------------
int goodB2G2_43()
{
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(0x7FFFFFFFFFFFFFFFLL);
}
// 6AB234: using guessed type int goodB2G2Static_1;

//----- (0000000000414E9F) ----------------------------------------------------
int __fastcall goodG2BSink_11(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB238: using guessed type int goodG2BStatic_1;

//----- (0000000000414ED0) ----------------------------------------------------
int goodG2B_77()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_11(2LL);
}
// 6AB238: using guessed type int goodG2BStatic_1;

//----- (0000000000414F00) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_21_good()
{
  goodB2G1_43();
  goodB2G2_43();
  return goodG2B_77();
}

//----- (0000000000414F24) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_03_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000414F5D) ----------------------------------------------------
int goodB2G1_44()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000414FB2) ----------------------------------------------------
int goodB2G2_44()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000415007) ----------------------------------------------------
int goodG2B1_39()
{
  return printLongLongLine(3LL);
}

//----- (000000000041503A) ----------------------------------------------------
int goodG2B2_39()
{
  return printLongLongLine(3LL);
}

//----- (000000000041506D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_03_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (000000000041509B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000041510F) ----------------------------------------------------
int goodG2B_78()
{
  return printIntLine(3u);
}

//----- (000000000041513B) ----------------------------------------------------
int goodB2G_73()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004151C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_01_good()
{
  goodG2B_78();
  return goodB2G_73();
}

//----- (00000000004151DE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_68_bad()
{
  CWE190_Integer_Overflow__short_max_postinc_68_badData = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_68b_badSink();
}
// 6AB560: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_68_badData;

//----- (0000000000415209) ----------------------------------------------------
int goodG2B_79()
{
  CWE190_Integer_Overflow__short_max_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_max_postinc_68b_goodG2BSink();
}
// 6AB562: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_68_goodG2BData;

//----- (0000000000415234) ----------------------------------------------------
int goodB2G_74()
{
  CWE190_Integer_Overflow__short_max_postinc_68_goodB2GData = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_68b_goodB2GSink();
}
// 6AB564: using guessed type __int16 CWE190_Integer_Overflow__short_max_postinc_68_goodB2GData;

//----- (000000000041525F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_68_good()
{
  goodG2B_79();
  return goodB2G_74();
}

//----- (0000000000415279) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53d_badSink(a1);
}

//----- (0000000000415290) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53d_goodG2BSink(a1);
}

//----- (00000000004152A7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004152BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (00000000004152F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000415322) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000415370) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badSink(v2);
}
// 6AB23C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_badGlobal;

//----- (00000000004153E4) ----------------------------------------------------
int goodB2G1_45()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Sink(v2);
}
// 6AB240: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G1Global;

//----- (0000000000415458) ----------------------------------------------------
int goodB2G2_45()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Sink(v2);
}
// 6AB244: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodB2G2Global;

//----- (00000000004154CC) ----------------------------------------------------
int goodG2B_80()
{
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BSink(2);
}
// 6AB248: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_goodG2BGlobal;

//----- (00000000004154F8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_22_good()
{
  goodB2G1_45();
  goodB2G2_45();
  return goodG2B_80();
}

//----- (000000000041551C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_53_bad()
{
  return CWE190_Integer_Overflow__short_max_postinc_53b_badSink(0x7FFF);
}

//----- (000000000041553D) ----------------------------------------------------
int goodG2B_81()
{
  return CWE190_Integer_Overflow__short_max_postinc_53b_goodG2BSink(2);
}

//----- (000000000041555E) ----------------------------------------------------
int goodB2G_75()
{
  return CWE190_Integer_Overflow__short_max_postinc_53b_goodB2GSink(0x7FFF);
}

//----- (000000000041557F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_53_good()
{
  goodG2B_81();
  return goodB2G_75();
}

//----- (0000000000415599) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_12_bad()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 + 1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (000000000041562F) ----------------------------------------------------
int goodB2G_76()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004156E7) ----------------------------------------------------
int goodG2B_82()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (000000000041575B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_12_good()
{
  goodB2G_76();
  return goodG2B_82();
}

//----- (0000000000415775) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v6 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004157FD) ----------------------------------------------------
int goodB2G1_46()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004158A6) ----------------------------------------------------
int goodB2G2_46()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000415943) ----------------------------------------------------
int goodG2B1_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041598F) ----------------------------------------------------
int goodG2B2_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004159CF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_09_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (00000000004159FD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_05_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6AB13C: using guessed type int staticTrue_2;

//----- (0000000000415A85) ----------------------------------------------------
int goodB2G1_47()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6AB13C: using guessed type int staticTrue_2;
// 6AB24C: using guessed type int staticFalse_2;

//----- (0000000000415B2D) ----------------------------------------------------
int goodB2G2_47()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_2 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6AB13C: using guessed type int staticTrue_2;

//----- (0000000000415BC9) ----------------------------------------------------
int goodG2B1_41()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB13C: using guessed type int staticTrue_2;
// 6AB24C: using guessed type int staticFalse_2;

//----- (0000000000415C1D) ----------------------------------------------------
int goodG2B2_41()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_2 )
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB13C: using guessed type int staticTrue_2;

//----- (0000000000415C65) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_05_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000415C93) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_53d_badSink(a1);
}

//----- (0000000000415CAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_53d_goodG2BSink(a1);
}

//----- (0000000000415CC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000415CD8) ----------------------------------------------------
int __fastcall badSink_12(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000415D06) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_41_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return badSink_12(v1);
}

//----- (0000000000415D67) ----------------------------------------------------
int __fastcall goodG2BSink_12(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000415D95) ----------------------------------------------------
int goodG2B_83()
{
  return goodG2BSink_12(2);
}

//----- (0000000000415DB6) ----------------------------------------------------
int __fastcall goodB2GSink_9(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000415DF8) ----------------------------------------------------
int goodB2G_77()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return goodB2GSink_9(v1);
}

//----- (0000000000415E59) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_41_good()
{
  goodB2G_77();
  return goodG2B_83();
}

//----- (0000000000415E73) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_badSink(a1);
}

//----- (0000000000415E8A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000415EA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000415EB8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_postinc_68_badData + 1);
}
// 6AB568: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_68_badData;

//----- (0000000000415EDF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_postinc_68_goodG2BData + 1);
}
// 6AB56C: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_68_goodG2BData;

//----- (0000000000415F06) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_postinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fscanf_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB570: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_68_goodB2GData;

//----- (0000000000415F42) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000415FCC) ----------------------------------------------------
int goodB2G1_48()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416074) ----------------------------------------------------
int goodB2G2_48()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000416110) ----------------------------------------------------
int goodG2B1_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041615E) ----------------------------------------------------
int goodG2B2_42()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004161A0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_13_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (00000000004161CE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_34_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000416252) ----------------------------------------------------
int goodG2B_84()
{
  return printIntLine(3u);
}

//----- (0000000000416296) ----------------------------------------------------
int goodB2G_78()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041632E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_34_good()
{
  goodG2B_84();
  return goodB2G_78();
}

//----- (0000000000416348) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (0000000000416380) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (00000000004163B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}

//----- (0000000000416404) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000416459) ----------------------------------------------------
int goodB2G1_49()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (00000000004164D6) ----------------------------------------------------
int goodB2G2_49()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (0000000000416547) ----------------------------------------------------
int goodG2B1_43()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004165A2) ----------------------------------------------------
int goodG2B2_43()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004165F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_11_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (000000000041661F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_02_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000416658) ----------------------------------------------------
int goodB2G1_50()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004166AD) ----------------------------------------------------
int goodB2G2_50()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416702) ----------------------------------------------------
int goodG2B1_44()
{
  return printLongLongLine(3LL);
}

//----- (0000000000416735) ----------------------------------------------------
int goodG2B2_44()
{
  return printLongLongLine(3LL);
}

//----- (0000000000416768) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_02_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (0000000000416796) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53d_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004167C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004167EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000416829) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53c_badSink(a1);
}

//----- (0000000000416840) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000416857) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_53c_goodB2GSink(a1);
}

//----- (000000000041686E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004168BB) ----------------------------------------------------
int goodB2G1_51()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000416930) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000416999) ----------------------------------------------------
int goodG2B1_45()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004169EC) ----------------------------------------------------
int goodG2B2_45()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000416A33) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_10_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (0000000000416A61) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_14_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 127;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000416AA5) ----------------------------------------------------
int goodB2G1_52()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 127;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000416B07) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 127;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000416B5D) ----------------------------------------------------
int goodG2B1_46()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000416BAD) ----------------------------------------------------
int goodG2B2_46()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000416BF1) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_14_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (0000000000416C1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000416C40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000416C61) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000416C97) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (0000000000416CA2) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (0000000000416CAD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_1();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416D10) ----------------------------------------------------
int goodB2G1_53()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)staticReturnsFalse_1() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416D93) ----------------------------------------------------
int goodB2G2_53()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000416E0A) ----------------------------------------------------
int goodG2B1_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000416E5E) ----------------------------------------------------
int goodG2B2_47()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000416EA6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (0000000000416ED4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_32_bad()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 127;
  v1 = 127;
  v3 = -128;
  v2 = -128;
  return printHexCharLine(-128);
}

//----- (0000000000416F30) ----------------------------------------------------
int goodG2B_85()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printHexCharLine(3);
}

//----- (0000000000416F8C) ----------------------------------------------------
int goodB2G_79()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Eh] [rbp-12h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 127;
  v1 = 127;
  v2 = 127;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416FFA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_32_good()
{
  goodG2B_85();
  return goodB2G_79();
}

//----- (0000000000417014) ----------------------------------------------------
int __fastcall badSink_13(int a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB250: using guessed type int badStatic_2;

//----- (000000000041703F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_2 = 1;
  return badSink_13(v2);
}
// 6AB250: using guessed type int badStatic_2;

//----- (00000000004170B3) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(int a1)
{
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6AB254: using guessed type int goodB2G1Static_2;

//----- (00000000004170FC) ----------------------------------------------------
int goodB2G1_54()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(v2);
}
// 6AB254: using guessed type int goodB2G1Static_2;

//----- (0000000000417170) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(int a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6AB258: using guessed type int goodB2G2Static_2;

//----- (00000000004171AD) ----------------------------------------------------
int goodB2G2_54()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(v2);
}
// 6AB258: using guessed type int goodB2G2Static_2;

//----- (0000000000417221) ----------------------------------------------------
int __fastcall goodG2BSink_13(int a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB25C: using guessed type int goodG2BStatic_2;

//----- (000000000041724C) ----------------------------------------------------
int goodG2B_86()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_13(2);
}
// 6AB25C: using guessed type int goodG2BStatic_2;

//----- (0000000000417278) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_21_good()
{
  goodB2G1_54();
  goodB2G2_54();
  return goodG2B_86();
}

//----- (000000000041729C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (0000000000417310) ----------------------------------------------------
int goodB2G1_55()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000417396) ----------------------------------------------------
int goodB2G2_55()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041741C) ----------------------------------------------------
int goodG2B1_48()
{
  return printUnsignedLine(3u);
}

//----- (0000000000417448) ----------------------------------------------------
int goodG2B2_48()
{
  return printUnsignedLine(3u);
}

//----- (0000000000417474) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_03_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (00000000004174A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_68_badData = v1;
  return CWE190_Integer_Overflow__int_fscanf_postinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB568: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_68_badData;

//----- (00000000004174E3) ----------------------------------------------------
int goodG2B_87()
{
  CWE190_Integer_Overflow__int_fscanf_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fscanf_postinc_68b_goodG2BSink();
}
// 6AB56C: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_68_goodG2BData;

//----- (000000000041750E) ----------------------------------------------------
int goodB2G_80()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int_fscanf_postinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB570: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_68_goodB2GData;

//----- (000000000041754F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_68_good()
{
  goodG2B_87();
  return goodB2G_80();
}

//----- (0000000000417569) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041758A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004175AB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004175E1) ----------------------------------------------------
int __fastcall badSink_14(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000417602) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_44_bad()
{
  return badSink_14(-1);
}

//----- (000000000041762D) ----------------------------------------------------
int __fastcall goodG2BSink_14(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041764E) ----------------------------------------------------
int goodG2B_88()
{
  return goodG2BSink_14(2);
}

//----- (0000000000417679) ----------------------------------------------------
int __fastcall goodB2GSink_10(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004176AC) ----------------------------------------------------
int goodB2G_81()
{
  return goodB2GSink_10(-1);
}

//----- (00000000004176D7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_44_good()
{
  goodG2B_88();
  return goodB2G_81();
}

//----- (00000000004176F1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_badSink(v2);
}

//----- (000000000041775B) ----------------------------------------------------
int goodG2B_89()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_goodG2BSink(2);
}

//----- (000000000041777D) ----------------------------------------------------
int goodB2G_82()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_goodB2GSink(v2);
}

//----- (00000000004177E7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_53_good()
{
  goodG2B_89();
  return goodB2G_82();
}

//----- (0000000000417801) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_17_bad()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFF;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (000000000041785B) ----------------------------------------------------
int goodB2G_83()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(++v1);
  }
  return result;
}

//----- (00000000004178C9) ----------------------------------------------------
int goodG2B_90()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000417923) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_17_good()
{
  goodB2G_83();
  return goodG2B_90();
}

//----- (000000000041793D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000417968) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000417993) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (00000000004179D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_67_bad()
{
  return CWE190_Integer_Overflow__int_max_postinc_67b_badSink(0x7FFFFFFF);
}

//----- (00000000004179FB) ----------------------------------------------------
int goodG2B_91()
{
  return CWE190_Integer_Overflow__int_max_postinc_67b_goodG2BSink(2);
}

//----- (0000000000417A23) ----------------------------------------------------
int goodB2G_84()
{
  return CWE190_Integer_Overflow__int_max_postinc_67b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000417A4B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_67_good()
{
  goodG2B_91();
  return goodB2G_84();
}

//----- (0000000000417A65) ----------------------------------------------------
int __fastcall badSink_15(int a1)
{
  int result; // eax

  result = badStatic_3;
  if ( badStatic_3 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB260: using guessed type int badStatic_3;

//----- (0000000000417A90) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_3 = 1;
  return badSink_15(v8);
}
// 6AB260: using guessed type int badStatic_3;
// 417A90: using guessed type char buf[16];

//----- (0000000000417BC8) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(int a1)
{
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB264: using guessed type int goodB2G1Static_3;

//----- (0000000000417C14) ----------------------------------------------------
int goodB2G1_56()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(v8);
}
// 6AB264: using guessed type int goodB2G1Static_3;
// 417C14: using guessed type char buf[16];

//----- (0000000000417D4C) ----------------------------------------------------
int __fastcall goodB2G2Sink_3(int a1)
{
  int result; // eax

  result = goodB2G2Static_3;
  if ( goodB2G2Static_3 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB268: using guessed type int goodB2G2Static_3;

//----- (0000000000417D8C) ----------------------------------------------------
int goodB2G2_56()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(v8);
}
// 6AB268: using guessed type int goodB2G2Static_3;
// 417D8C: using guessed type char buf[16];

//----- (0000000000417EC4) ----------------------------------------------------
int __fastcall goodG2BSink_15(int a1)
{
  int result; // eax

  result = goodG2BStatic_3;
  if ( goodG2BStatic_3 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB26C: using guessed type int goodG2BStatic_3;

//----- (0000000000417EEF) ----------------------------------------------------
int goodG2B_92()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_15(2);
}
// 6AB26C: using guessed type int goodG2BStatic_3;

//----- (0000000000417F1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_21_good()
{
  goodB2G1_56();
  goodB2G2_56();
  return goodG2B_92();
}

//----- (0000000000417F3F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 417F3F: using guessed type char buf[16];

//----- (0000000000418077) ----------------------------------------------------
int goodB2G1_57()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 418077: using guessed type char buf[16];

//----- (00000000004181C4) ----------------------------------------------------
int goodB2G2_57()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 4181C4: using guessed type char buf[16];

//----- (0000000000418311) ----------------------------------------------------
int goodG2B1_49()
{
  return printIntLine(3u);
}

//----- (000000000041833D) ----------------------------------------------------
int goodG2B2_49()
{
  return printIntLine(3u);
}

//----- (0000000000418369) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_03_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (0000000000418397) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_18_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000041840D) ----------------------------------------------------
int goodB2G_85()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000418497) ----------------------------------------------------
int goodG2B_93()
{
  return printIntLine(3u);
}

//----- (00000000004184CD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_18_good()
{
  goodB2G_85();
  return goodG2B_93();
}

//----- (00000000004184E7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000041855B) ----------------------------------------------------
int goodB2G1_58()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004185E4) ----------------------------------------------------
int goodB2G2_58()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000041866D) ----------------------------------------------------
int goodG2B1_50()
{
  return printIntLine(3u);
}

//----- (0000000000418699) ----------------------------------------------------
int goodG2B2_50()
{
  return printIntLine(3u);
}

//----- (00000000004186C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_03_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (00000000004186F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_51_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_51b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041871F) ----------------------------------------------------
int goodG2B_94()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_51b_goodG2BSink(2LL);
}

//----- (0000000000418745) ----------------------------------------------------
int goodB2G_86()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_51b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000418771) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_51_good()
{
  goodG2B_94();
  return goodB2G_86();
}

//----- (000000000041878B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_52c_badSink(a1);
}

//----- (00000000004187A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_52c_goodG2BSink(a1);
}

//----- (00000000004187B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_52c_goodB2GSink(a1);
}

//----- (00000000004187D0) ----------------------------------------------------
int badSink_16()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_postinc_45_badData + 1);
}
// 6AB270: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_badData;

//----- (00000000004187FE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_45_bad()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_45_badData = 0x7FFFFFFFFFFFFFFFLL;
  return badSink_16();
}
// 6AB270: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_badData;

//----- (0000000000418833) ----------------------------------------------------
int goodG2BSink_16()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_postinc_45_goodG2BData + 1);
}
// 6AB278: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_goodG2BData;

//----- (0000000000418861) ----------------------------------------------------
int goodG2B_95()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_45_goodG2BData = 2LL;
  return goodG2BSink_16();
}
// 6AB278: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_goodG2BData;

//----- (0000000000418890) ----------------------------------------------------
int goodB2GSink_11()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_max_postinc_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_max_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB280: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_goodB2GData;

//----- (00000000004188DA) ----------------------------------------------------
int goodB2G_87()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_45_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return goodB2GSink_11();
}
// 6AB280: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_45_goodB2GData;

//----- (000000000041890F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_45_good()
{
  goodG2B_95();
  return goodB2G_87();
}

//----- (0000000000418929) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_postinc_67b_badSink(v5);
}

//----- (0000000000418997) ----------------------------------------------------
int goodG2B_96()
{
  return CWE190_Integer_Overflow__int_fgets_postinc_67b_goodG2BSink(2);
}

//----- (00000000004189BF) ----------------------------------------------------
int goodB2G_88()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_postinc_67b_goodB2GSink(v5);
}

//----- (0000000000418A2D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_67_good()
{
  goodG2B_96();
  return goodB2G_88();
}

//----- (0000000000418A47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000418A76) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000418AA5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000418AF0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000418B2A) ----------------------------------------------------
int goodG2B_97()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000418B4E) ----------------------------------------------------
int goodB2G_89()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000418B88) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_63_good()
{
  goodG2B_97();
  return goodB2G_89();
}

//----- (0000000000418BA2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000418BD5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000418C08) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000418C50) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_12_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  else
  {
    v8 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v8 + 1);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 418C50: using guessed type char buf[16];

//----- (0000000000418DDE) ----------------------------------------------------
int goodB2G_90()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+54h] [rbp-1Ch]
  int v8; // [rsp+58h] [rbp-18h]
  int v9; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v11; // [rsp+64h] [rbp-Ch]
  int v12; // [rsp+68h] [rbp-8h]
  int v13; // [rsp+6Ch] [rbp-4h]

  v13 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v9 = recv(v12, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  else
  {
    v11 = -1;
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v8, &addr, 0x10u) != -1 && listen(v8, 5) != -1 )
      {
        v11 = accept(v8, 0LL, 0LL);
        if ( v11 != -1 )
        {
          v7 = recv(v11, nptr, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              nptr[v7] = 0;
              v13 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
    if ( v11 != -1 )
      close(v11);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v13 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v13 + 1);
  }
  else if ( v13 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v13 + 1);
  }
  return result;
}
// 418DDE: using guessed type char buf[16];
// 418DDE: using guessed type char nptr[16];

//----- (0000000000419093) ----------------------------------------------------
int goodG2B_98()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (00000000004190FA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_12_good()
{
  goodB2G_90();
  return goodG2B_98();
}

//----- (0000000000419114) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_09_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041919C) ----------------------------------------------------
int goodB2G1_59()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000419244) ----------------------------------------------------
int goodB2G2_59()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004192E0) ----------------------------------------------------
int goodG2B1_51()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000419334) ----------------------------------------------------
int goodG2B2_51()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041937C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_09_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (00000000004193AA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_06_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (00000000004193F7) ----------------------------------------------------
int goodB2G1_60()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041946C) ----------------------------------------------------
int goodB2G2_60()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004194D5) ----------------------------------------------------
int goodG2B1_52()
{
  return printLongLongLine(3LL);
}

//----- (0000000000419528) ----------------------------------------------------
int goodG2B2_52()
{
  return printLongLongLine(3LL);
}

//----- (000000000041956F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_06_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (000000000041959D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (00000000004195D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000419611) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000419667) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_53d_badSink(a1);
}

//----- (0000000000419681) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_53d_goodG2BSink(a1);
}

//----- (000000000041969B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004196B5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_max_postinc_61b_badSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004196F2) ----------------------------------------------------
int goodG2B_99()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_max_postinc_61b_goodG2BSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (000000000041972F) ----------------------------------------------------
int goodB2G_91()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_max_postinc_61b_goodB2GSource();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000419780) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_61_good()
{
  goodG2B_99();
  return goodB2G_91();
}

//----- (000000000041979A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_52c_badSink(a1);
}

//----- (00000000004197B5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_52c_goodG2BSink(a1);
}

//----- (00000000004197D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_52c_goodB2GSink(a1);
}

//----- (00000000004197EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041982E) ----------------------------------------------------
int goodG2B_100()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_goodG2BSink(2LL);
}

//----- (000000000041985C) ----------------------------------------------------
int goodB2G_92()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041989F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_67_good()
{
  goodG2B_100();
  return goodB2G_92();
}

//----- (00000000004198B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v8 + 1);
  return result;
}
// 4198B9: using guessed type char buf[16];

//----- (0000000000419A11) ----------------------------------------------------
int goodB2G1_61()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 419A11: using guessed type char buf[16];

//----- (0000000000419B8A) ----------------------------------------------------
int goodB2G2_61()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 419B8A: using guessed type char buf[16];

//----- (0000000000419CF7) ----------------------------------------------------
int goodG2B1_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000419D4B) ----------------------------------------------------
int goodG2B2_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000419D93) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_11_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (0000000000419DC1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 419DC1: using guessed type char buf[16];

//----- (0000000000419EF9) ----------------------------------------------------
int goodB2G1_62()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 419EF9: using guessed type char buf[16];

//----- (000000000041A046) ----------------------------------------------------
int goodB2G2_62()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 41A046: using guessed type char buf[16];

//----- (000000000041A193) ----------------------------------------------------
int goodG2B1_54()
{
  return printIntLine(3u);
}

//----- (000000000041A1BF) ----------------------------------------------------
int goodG2B2_54()
{
  return printIntLine(3u);
}

//----- (000000000041A1EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_02_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (000000000041A219) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_07_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 0x7FFF;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041A263) ----------------------------------------------------
int goodB2G1_63()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 0x7FFF;
  if ( staticFive_2 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041A2CD) ----------------------------------------------------
int goodB2G2_63()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 0x7FFF;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041A32B) ----------------------------------------------------
int goodG2B1_55()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041A381) ----------------------------------------------------
int goodG2B2_55()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041A3CB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_07_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (000000000041A3F9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000041A46F) ----------------------------------------------------
int goodB2G_93()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041A4F7) ----------------------------------------------------
int goodG2B_101()
{
  return printUnsignedLine(3u);
}

//----- (000000000041A525) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_16_good()
{
  goodB2G_93();
  return goodG2B_101();
}

//----- (000000000041A53F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printIntLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A5AC) ----------------------------------------------------
int goodB2G_94()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printIntLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A62F) ----------------------------------------------------
int goodG2B_102()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (000000000041A681) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_17_good()
{
  goodB2G_94();
  return goodG2B_102();
}

//----- (000000000041A69B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v8 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 41A69B: using guessed type char buf[16];

//----- (000000000041A7EB) ----------------------------------------------------
int goodB2G1_64()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;
// 41A7EB: using guessed type char buf[16];

//----- (000000000041A95C) ----------------------------------------------------
int goodB2G2_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 41A95C: using guessed type char buf[16];

//----- (000000000041AAC1) ----------------------------------------------------
int goodG2B1_56()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000041AB0D) ----------------------------------------------------
int goodG2B2_56()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000041AB4D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_10_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (000000000041AB7B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54d_badSink(a1);
}

//----- (000000000041AB96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54d_goodG2BSink(a1);
}

//----- (000000000041ABB1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54d_goodB2GSink(a1);
}

//----- (000000000041ABCC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54e_badSink(a1);
}

//----- (000000000041ABE3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54e_goodG2BSink(a1);
}

//----- (000000000041ABFA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54e_goodB2GSink(a1);
}

//----- (000000000041AC11) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000041AC3F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000041AC6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000041ACAF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54c_badSink(a1);
}

//----- (000000000041ACC6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54c_goodG2BSink(a1);
}

//----- (000000000041ACDD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54c_goodB2GSink(a1);
}

//----- (000000000041ACF4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54e_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041AD1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041AD4A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041AD87) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 41AD87: using guessed type char buf[16];

//----- (000000000041AEBF) ----------------------------------------------------
int goodG2B_103()
{
  return printIntLine(3u);
}

//----- (000000000041AEEB) ----------------------------------------------------
int goodB2G_95()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 41AEEB: using guessed type char buf[16];

//----- (000000000041B038) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_01_good()
{
  goodG2B_103();
  return goodB2G_95();
}

//----- (000000000041B052) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_badSink(v2);
}

//----- (000000000041B0BC) ----------------------------------------------------
int goodG2B_104()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_goodG2BSink(2);
}

//----- (000000000041B0DE) ----------------------------------------------------
int goodB2G_96()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_goodB2GSink(v2);
}

//----- (000000000041B148) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_51_good()
{
  goodG2B_104();
  return goodB2G_96();
}

//----- (000000000041B162) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041B18F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041B1A2) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041B1CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_53d_badSink(a1);
}

//----- (000000000041B1EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_53d_goodG2BSink(a1);
}

//----- (000000000041B205) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_53d_goodB2GSink(a1);
}

//----- (000000000041B220) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_65_bad()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__short_fscanf_postinc_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041B264) ----------------------------------------------------
int goodG2B_105()
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_65b_goodG2BSink(2);
}

//----- (000000000041B28E) ----------------------------------------------------
__int64 goodB2G_97()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__short_fscanf_postinc_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041B2D2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_65_good()
{
  goodG2B_105();
  return goodB2G_97();
}

//----- (000000000041B2EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_64b_badSink(&v6);
}

//----- (000000000041B358) ----------------------------------------------------
int goodG2B_106()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_rand_postinc_64b_goodG2BSink(&v1);
}

//----- (000000000041B37C) ----------------------------------------------------
int goodB2G_98()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_64b_goodB2GSink(&v6);
}

//----- (000000000041B3E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_64_good()
{
  goodG2B_106();
  return goodB2G_98();
}

//----- (000000000041B402) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_53c_badSink(a1);
}

//----- (000000000041B41C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_53c_goodG2BSink(a1);
}

//----- (000000000041B436) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_53c_goodB2GSink(a1);
}

//----- (000000000041B450) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_18_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000041B47E) ----------------------------------------------------
int goodB2G_99()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041B4C1) ----------------------------------------------------
int goodG2B_107()
{
  return printIntLine(3u);
}

//----- (000000000041B4EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_18_good()
{
  goodB2G_99();
  return goodG2B_107();
}

//----- (000000000041B509) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000041B514) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000041B51F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_08_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}

//----- (000000000041B5AF) ----------------------------------------------------
int goodB2G1_65()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}

//----- (000000000041B65F) ----------------------------------------------------
int goodB2G2_65()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_2();
  if ( result )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}

//----- (000000000041B703) ----------------------------------------------------
int goodG2B1_57()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041B75F) ----------------------------------------------------
int goodG2B2_57()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000041B7AF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_08_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (000000000041B7DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_badSink(a1);
}

//----- (000000000041B7F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_goodG2BSink(a1);
}

//----- (000000000041B811) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_goodB2GSink(a1);
}

//----- (000000000041B82B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_52c_badSink(a1);
}

//----- (000000000041B846) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_52c_goodG2BSink(a1);
}

//----- (000000000041B861) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_52c_goodB2GSink(a1);
}

//----- (000000000041B87C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000041B904) ----------------------------------------------------
int goodB2G1_66()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041B9AA) ----------------------------------------------------
int goodB2G2_66()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000041BA44) ----------------------------------------------------
int goodG2B1_58()
{
  return printUnsignedLine(3u);
}

//----- (000000000041BA90) ----------------------------------------------------
int goodG2B2_58()
{
  return printUnsignedLine(3u);
}

//----- (000000000041BAD0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (000000000041BAFE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_68_bad()
{
  CWE190_Integer_Overflow__char_max_postinc_68_badData = 127;
  return CWE190_Integer_Overflow__char_max_postinc_68b_badSink();
}
// 6AB574: using guessed type char CWE190_Integer_Overflow__char_max_postinc_68_badData;

//----- (000000000041BB24) ----------------------------------------------------
int goodG2B_108()
{
  CWE190_Integer_Overflow__char_max_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__char_max_postinc_68b_goodG2BSink();
}
// 6AB576: using guessed type char CWE190_Integer_Overflow__char_max_postinc_68_goodG2BData;

//----- (000000000041BB4A) ----------------------------------------------------
int goodB2G_100()
{
  CWE190_Integer_Overflow__char_max_postinc_68_goodB2GData = 127;
  return CWE190_Integer_Overflow__char_max_postinc_68b_goodB2GSink();
}
// 6AB575: using guessed type char CWE190_Integer_Overflow__char_max_postinc_68_goodB2GData;

//----- (000000000041BB70) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_68_good()
{
  goodG2B_108();
  return goodB2G_100();
}

//----- (000000000041BB8A) ----------------------------------------------------
__int64 badSource_5()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (000000000041BBCE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_42_bad()
{
  char v0; // al

  v0 = badSource_5();
  return printHexCharLine(v0 + 1);
}

//----- (000000000041BC06) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 2LL;
}

//----- (000000000041BC19) ----------------------------------------------------
int goodG2B_109()
{
  char v0; // al

  v0 = goodG2BSource_5();
  return printHexCharLine(v0 + 1);
}

//----- (000000000041BC51) ----------------------------------------------------
__int64 goodB2GSource_5()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (000000000041BC95) ----------------------------------------------------
int goodB2G_101()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_5();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000041BCDF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_42_good()
{
  goodB2G_101();
  return goodG2B_109();
}

//----- (000000000041BCF9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_14_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041BDDD) ----------------------------------------------------
int goodB2G1_67()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041BEE9) ----------------------------------------------------
int goodB2G2_67()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041BFE9) ----------------------------------------------------
int goodG2B1_59()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041C03E) ----------------------------------------------------
int goodG2B2_59()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041C087) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_14_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (000000000041C0B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_postinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (000000000041C0E7) ----------------------------------------------------
int goodG2B_110()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fscanf_postinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000041C119) ----------------------------------------------------
int goodB2G_102()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fscanf_postinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041C160) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_61_good()
{
  goodG2B_110();
  return goodB2G_102();
}

//----- (000000000041C17A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041C1A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000041C1C8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000041C201) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+18h] [rbp-28h]
  __int64 *v12; // [rsp+20h] [rbp-20h]
  __int64 *v13; // [rsp+28h] [rbp-18h]

  v13 = &v10;
  v12 = &v10;
  v10 = 0LL;
  v11 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v11 = v4;
  *v13 = v4;
  return printLongLongLine(*v12 + 1);
}

//----- (000000000041C2FC) ----------------------------------------------------
int goodG2B_111()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 3LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (000000000041C360) ----------------------------------------------------
int goodB2G_103()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+18h] [rbp-28h]
  __int64 *v13; // [rsp+20h] [rbp-20h]
  __int64 *v14; // [rsp+28h] [rbp-18h]

  v14 = &v10;
  v13 = &v10;
  v10 = 0LL;
  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  *v14 = v4;
  v11 = *v13;
  if ( v11 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v11 + 1);
  return result;
}

//----- (000000000041C477) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_32_good()
{
  goodG2B_111();
  return goodB2G_103();
}

//----- (000000000041C491) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_badSink(&v6);
}

//----- (000000000041C4FD) ----------------------------------------------------
int goodG2B_112()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_goodG2BSink(&v1);
}

//----- (000000000041C521) ----------------------------------------------------
int goodB2G_104()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_goodB2GSink(&v6);
}

//----- (000000000041C58D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_64_good()
{
  goodG2B_112();
  return goodB2G_104();
}

//----- (000000000041C5A7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_18_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (000000000041C61B) ----------------------------------------------------
int goodB2G_105()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000041C6A4) ----------------------------------------------------
int goodG2B_113()
{
  return printIntLine(3u);
}

//----- (000000000041C6D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_18_good()
{
  goodB2G_105();
  return goodG2B_113();
}

//----- (000000000041C6EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54c_badSink(a1);
}

//----- (000000000041C707) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54c_goodG2BSink(a1);
}

//----- (000000000041C722) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54c_goodB2GSink(a1);
}

//----- (000000000041C73D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041C79A) ----------------------------------------------------
int goodB2G1_68()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041C819) ----------------------------------------------------
int goodB2G2_68()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041C88C) ----------------------------------------------------
int goodG2B1_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041C8DA) ----------------------------------------------------
int goodG2B2_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = 2;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041C91C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_07_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (000000000041C94A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 41C94A: using guessed type char buf[16];

//----- (000000000041CA3E) ----------------------------------------------------
int goodB2G1_69()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 41CA3E: using guessed type char buf[16];

//----- (000000000041CB47) ----------------------------------------------------
int goodB2G2_69()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 41CB47: using guessed type char buf[16];

//----- (000000000041CC50) ----------------------------------------------------
int goodG2B1_61()
{
  return printIntLine(3u);
}

//----- (000000000041CC7E) ----------------------------------------------------
int goodG2B2_61()
{
  return printIntLine(3u);
}

//----- (000000000041CCAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_15_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (000000000041CCDA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_05_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_3 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6AB148: using guessed type int staticTrue_3;

//----- (000000000041CD49) ----------------------------------------------------
int goodB2G1_70()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_3 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( staticFalse_3 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6AB148: using guessed type int staticTrue_3;
// 6AB288: using guessed type int staticFalse_3;

//----- (000000000041CDD6) ----------------------------------------------------
int goodB2G2_70()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_3 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6AB148: using guessed type int staticTrue_3;

//----- (000000000041CE57) ----------------------------------------------------
int goodG2B1_62()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB148: using guessed type int staticTrue_3;
// 6AB288: using guessed type int staticFalse_3;

//----- (000000000041CEA5) ----------------------------------------------------
int goodG2B2_62()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_3 )
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB148: using guessed type int staticTrue_3;

//----- (000000000041CEE7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_05_good()
{
  goodB2G1_70();
  goodB2G2_70();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (000000000041CF15) ----------------------------------------------------
int __fastcall badSink_17(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041CF40) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_41_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return badSink_17(v0);
}

//----- (000000000041CF8A) ----------------------------------------------------
int __fastcall goodG2BSink_17(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041CFB5) ----------------------------------------------------
int goodG2B_114()
{
  return goodG2BSink_17(2);
}

//----- (000000000041CFD2) ----------------------------------------------------
int __fastcall goodB2GSink_12(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041D00F) ----------------------------------------------------
int goodB2G_106()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return goodB2GSink_12(v0);
}

//----- (000000000041D059) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_41_good()
{
  goodB2G_106();
  return goodG2B_114();
}

//----- (000000000041D073) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_02_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (000000000041D0E5) ----------------------------------------------------
int goodB2G1_71()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000041D16C) ----------------------------------------------------
int goodB2G2_71()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000041D1F3) ----------------------------------------------------
int goodG2B1_63()
{
  return printIntLine(3u);
}

//----- (000000000041D21F) ----------------------------------------------------
int goodG2B2_63()
{
  return printIntLine(3u);
}

//----- (000000000041D24B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_02_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041D279) ----------------------------------------------------
__int64 __fastcall badSource_6(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41D279: using guessed type char buf[16];

//----- (000000000041D356) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_6(0);
  return printIntLine(v0 + 1);
}

//----- (000000000041D388) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return 2LL;
}

//----- (000000000041D39B) ----------------------------------------------------
int goodG2B_115()
{
  int v0; // eax

  v0 = goodG2BSource_6();
  return printIntLine(v0 + 1);
}

//----- (000000000041D3CD) ----------------------------------------------------
__int64 __fastcall goodB2GSource_6(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41D3CD: using guessed type char buf[16];

//----- (000000000041D4AA) ----------------------------------------------------
int goodB2G_107()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_6(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041D4F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_42_good()
{
  goodB2G_107();
  return goodG2B_115();
}

//----- (000000000041D50B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_04_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000041D5EB) ----------------------------------------------------
int goodB2G1_72()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000041D6F3) ----------------------------------------------------
int goodB2G2_72()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000041D7EF) ----------------------------------------------------
int goodG2B1_64()
{
  return printLongLongLine(3LL);
}

//----- (000000000041D840) ----------------------------------------------------
int goodG2B2_64()
{
  return printLongLongLine(3LL);
}

//----- (000000000041D885) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_04_good()
{
  goodB2G1_72();
  goodB2G2_72();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041D8B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_31_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000041D98D) ----------------------------------------------------
int goodG2B_116()
{
  return printLongLongLine(3LL);
}

//----- (000000000041D9D0) ----------------------------------------------------
int goodB2G_108()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000041DAC6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_31_good()
{
  goodG2B_116();
  return goodB2G_108();
}

//----- (000000000041DAE0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_51b_badSink(v7);
}
// 41DAE0: using guessed type char buf[16];

//----- (000000000041DBC8) ----------------------------------------------------
int goodG2B_117()
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_51b_goodG2BSink(2);
}

//----- (000000000041DBEA) ----------------------------------------------------
int goodB2G_109()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_51b_goodB2GSink(v7);
}
// 41DBEA: using guessed type char buf[16];

//----- (000000000041DCD2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_51_good()
{
  goodG2B_117();
  return goodB2G_109();
}

//----- (000000000041DCEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041DD17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000041DD42) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000041DD7F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_67_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_badSink(-1);
}

//----- (000000000041DDA7) ----------------------------------------------------
int goodG2B_118()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_goodG2BSink(2);
}

//----- (000000000041DDCF) ----------------------------------------------------
int goodB2G_110()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_67b_goodB2GSink(-1);
}

//----- (000000000041DDF7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_67_good()
{
  goodG2B_118();
  return goodB2G_110();
}

//----- (000000000041DE11) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DE62) ----------------------------------------------------
int goodB2G_111()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DED2) ----------------------------------------------------
int goodG2B_119()
{
  return printLongLongLine(3LL);
}

//----- (000000000041DF07) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_18_good()
{
  goodB2G_111();
  return goodG2B_119();
}

//----- (000000000041DF21) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54b_badSink(v8);
}
// 41DF21: using guessed type char buf[16];

//----- (000000000041E04F) ----------------------------------------------------
int goodG2B_120()
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54b_goodG2BSink(2);
}

//----- (000000000041E071) ----------------------------------------------------
int goodB2G_112()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54b_goodB2GSink(v8);
}
// 41E071: using guessed type char buf[16];

//----- (000000000041E19F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_54_good()
{
  goodG2B_120();
  return goodB2G_112();
}

//----- (000000000041E1B9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_34_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000041E222) ----------------------------------------------------
int goodG2B_121()
{
  return printHexCharLine(3);
}

//----- (000000000041E25E) ----------------------------------------------------
int goodB2G_113()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000041E2D9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_34_good()
{
  goodG2B_121();
  return goodB2G_113();
}

//----- (000000000041E2F3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_54_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_54b_badSink(v1);
}

//----- (000000000041E354) ----------------------------------------------------
int goodG2B_122()
{
  return CWE190_Integer_Overflow__short_rand_postinc_54b_goodG2BSink(2);
}

//----- (000000000041E375) ----------------------------------------------------
int goodB2G_114()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_54b_goodB2GSink(v1);
}

//----- (000000000041E3D6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_54_good()
{
  goodG2B_122();
  return goodB2G_114();
}

//----- (000000000041E3F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000041E425) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000041E45A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (000000000041E4A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_52c_badSink(a1);
}

//----- (000000000041E4BB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_52c_goodG2BSink(a1);
}

//----- (000000000041E4D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_52c_goodB2GSink(a1);
}

//----- (000000000041E4EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000041E57D) ----------------------------------------------------
int goodB2G1_73()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}

//----- (000000000041E62C) ----------------------------------------------------
int goodB2G2_73()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}

//----- (000000000041E6CF) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041E723) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041E76B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_11_good()
{
  goodB2G1_73();
  goodB2G2_73();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041E799) ----------------------------------------------------
int __fastcall badSink_18(char a1)
{
  int result; // eax

  result = badStatic_4;
  if ( badStatic_4 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB28C: using guessed type int badStatic_4;

//----- (000000000041E7CE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_21_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  badStatic_4 = 1;
  return badSink_18(v0);
}
// 6AB28C: using guessed type int badStatic_4;

//----- (000000000041E822) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(char a1)
{
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6AB290: using guessed type int goodB2G1Static_4;

//----- (000000000041E875) ----------------------------------------------------
int goodB2G1_74()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v0);
}
// 6AB290: using guessed type int goodB2G1Static_4;

//----- (000000000041E8C9) ----------------------------------------------------
int __fastcall goodB2G2Sink_4(char a1)
{
  int result; // eax

  result = goodB2G2Static_4;
  if ( goodB2G2Static_4 )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6AB294: using guessed type int goodB2G2Static_4;

//----- (000000000041E910) ----------------------------------------------------
int goodB2G2_74()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v0);
}
// 6AB294: using guessed type int goodB2G2Static_4;

//----- (000000000041E964) ----------------------------------------------------
int __fastcall goodG2BSink_18(char a1)
{
  int result; // eax

  result = goodG2BStatic_4;
  if ( goodG2BStatic_4 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB298: using guessed type int goodG2BStatic_4;

//----- (000000000041E999) ----------------------------------------------------
int goodG2B_123()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_18(2);
}
// 6AB298: using guessed type int goodG2BStatic_4;

//----- (000000000041E9C0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_21_good()
{
  goodB2G1_74();
  goodB2G2_74();
  return goodG2B_123();
}

//----- (000000000041E9E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54d_badSink(a1);
}

//----- (000000000041E9FB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54d_goodG2BSink(a1);
}

//----- (000000000041EA12) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54d_goodB2GSink(a1);
}

//----- (000000000041EA29) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_postinc_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB2A8: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_badGlobal;

//----- (000000000041EA5A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6AB2AC: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Global;

//----- (000000000041EAB3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6AB2B0: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Global;

//----- (000000000041EB00) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB2B4: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BGlobal;

//----- (000000000041EB31) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041EB52) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041EB73) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041EBA9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_4 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v7 + 1);
  return result;
}
// 6AB14C: using guessed type int staticTrue_4;
// 41EBA9: using guessed type char buf[16];

//----- (000000000041ECB3) ----------------------------------------------------
int goodB2G1_75()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_4 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6AB14C: using guessed type int staticTrue_4;
// 6AB29C: using guessed type int staticFalse_4;
// 41ECB3: using guessed type char buf[16];

//----- (000000000041EDDE) ----------------------------------------------------
int goodB2G2_75()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_4 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6AB14C: using guessed type int staticTrue_4;
// 41EDDE: using guessed type char buf[16];

//----- (000000000041EEFD) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB14C: using guessed type int staticTrue_4;
// 6AB29C: using guessed type int staticFalse_4;

//----- (000000000041EF49) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB14C: using guessed type int staticTrue_4;

//----- (000000000041EF89) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_05_good()
{
  goodB2G1_75();
  goodB2G2_75();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041EFB7) ----------------------------------------------------
int __fastcall badSink_19(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041EFD8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_19(v7);
}
// 41EFD8: using guessed type char buf[16];

//----- (000000000041F0C0) ----------------------------------------------------
int __fastcall goodG2BSink_19(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041F0E1) ----------------------------------------------------
int goodG2B_124()
{
  return goodG2BSink_19(2);
}

//----- (000000000041F103) ----------------------------------------------------
int __fastcall goodB2GSink_13(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041F139) ----------------------------------------------------
int goodB2G_115()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_13(v7);
}
// 41F139: using guessed type char buf[16];

//----- (000000000041F221) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_41_good()
{
  goodB2G_115();
  return goodG2B_124();
}

//----- (000000000041F23B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_postinc_68_badData + 1);
}
// 6AB578: using guessed type int CWE190_Integer_Overflow__int_max_postinc_68_badData;

//----- (000000000041F262) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_postinc_68_goodG2BData + 1);
}
// 6AB580: using guessed type int CWE190_Integer_Overflow__int_max_postinc_68_goodG2BData;

//----- (000000000041F289) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_postinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_max_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB57C: using guessed type int CWE190_Integer_Overflow__int_max_postinc_68_goodB2GData;

//----- (000000000041F2C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F2FF) ----------------------------------------------------
int goodG2B_125()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000041F323) ----------------------------------------------------
int goodB2G_116()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F35D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_63_good()
{
  goodG2B_125();
  return goodB2G_116();
}

//----- (000000000041F377) ----------------------------------------------------
int badSink_20()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_postinc_45_badData + 1));
}
// 6AB2A0: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_badData;

//----- (000000000041F3AA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_45_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_45_badData = v1;
  return badSink_20();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB2A0: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_badData;

//----- (000000000041F3EC) ----------------------------------------------------
int goodG2BSink_20()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_postinc_45_goodG2BData + 1));
}
// 6AB2A2: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_goodG2BData;

//----- (000000000041F41F) ----------------------------------------------------
int goodG2B_126()
{
  CWE190_Integer_Overflow__short_fscanf_postinc_45_goodG2BData = 2;
  return goodG2BSink_20();
}
// 6AB2A2: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_goodG2BData;

//----- (000000000041F44A) ----------------------------------------------------
int goodB2GSink_14()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_fscanf_postinc_45_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_postinc_45_goodB2GData + 1));
  return result;
}
// 6AB2A4: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_goodB2GData;

//----- (000000000041F491) ----------------------------------------------------
int goodB2G_117()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_45_goodB2GData = v1;
  return goodB2GSink_14();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB2A4: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_45_goodB2GData;

//----- (000000000041F4D3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_45_good()
{
  goodG2B_126();
  return goodB2G_117();
}

//----- (000000000041F4ED) ----------------------------------------------------
int __fastcall badSink_21(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041F50E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_21)(v2);
}

//----- (000000000041F581) ----------------------------------------------------
int __fastcall goodG2BSink_21(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041F5A2) ----------------------------------------------------
int goodG2B_127()
{
  return goodG2BSink_21(2);
}

//----- (000000000041F5CD) ----------------------------------------------------
int __fastcall goodB2GSink_15(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041F603) ----------------------------------------------------
__int64 goodB2G_118()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_15)(v2);
}

//----- (000000000041F676) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_44_good()
{
  goodG2B_127();
  return goodB2G_118();
}

//----- (000000000041F690) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041F6B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041F6D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041F708) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54d_badSink(a1);
}

//----- (000000000041F71F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54d_goodG2BSink(a1);
}

//----- (000000000041F736) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54d_goodB2GSink(a1);
}

//----- (000000000041F74D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_52_bad()
{
  return CWE190_Integer_Overflow__char_max_postinc_52b_badSink(127);
}

//----- (000000000041F76A) ----------------------------------------------------
int goodG2B_128()
{
  return CWE190_Integer_Overflow__char_max_postinc_52b_goodG2BSink(2);
}

//----- (000000000041F787) ----------------------------------------------------
int goodB2G_119()
{
  return CWE190_Integer_Overflow__char_max_postinc_52b_goodB2GSink(127);
}

//----- (000000000041F7A4) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_52_good()
{
  goodG2B_128();
  return goodB2G_119();
}

//----- (000000000041F7BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10 + 1;
  v6 = v10 + 1;
  return printIntLine(v10 + 1);
}
// 41F7BE: using guessed type char buf[16];

//----- (000000000041F8BC) ----------------------------------------------------
int goodG2B_129()
{
  return printIntLine(3u);
}

//----- (000000000041F8F4) ----------------------------------------------------
int goodB2G_120()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v9;
  v6 = v9;
  if ( v9 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 41F8F4: using guessed type char buf[16];

//----- (000000000041FA07) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_34_good()
{
  goodG2B_129();
  return goodB2G_120();
}

//----- (000000000041FA21) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v7 + 1);
  return result;
}
// 41FA21: using guessed type char buf[16];

//----- (000000000041FB33) ----------------------------------------------------
int goodB2G1_76()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 41FB33: using guessed type char buf[16];

//----- (000000000041FC66) ----------------------------------------------------
int goodB2G2_76()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 41FC66: using guessed type char buf[16];

//----- (000000000041FD8D) ----------------------------------------------------
int goodG2B1_67()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041FDE1) ----------------------------------------------------
int goodG2B2_67()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041FE29) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_11_good()
{
  goodB2G1_76();
  goodB2G2_76();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000041FE57) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_51b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041FE82) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000041FEAD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000041FEEA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FF0B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041FF2C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041FF62) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_16_bad()
{
  return printHexCharLine(-128);
}

//----- (000000000041FF92) ----------------------------------------------------
int goodB2G_121()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041FFD4) ----------------------------------------------------
int goodG2B_130()
{
  return printHexCharLine(3);
}

//----- (0000000000420004) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_16_good()
{
  goodB2G_121();
  return goodG2B_130();
}

//----- (000000000042001E) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (0000000000420029) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (0000000000420034) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_3();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042007C) ----------------------------------------------------
int goodB2G1_77()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (00000000004200E5) ----------------------------------------------------
int goodB2G2_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 0x7FFFFFFF;
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (0000000000420142) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000420196) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 2;
  result = staticReturnsTrue_3();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004201DE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_08_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000042020C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_22_badSink(v4);
}
// 6AB2A8: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_badGlobal;

//----- (00000000004202D3) ----------------------------------------------------
int goodB2G1_78()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Sink(v4);
}
// 6AB2AC: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G1Global;

//----- (000000000042039A) ----------------------------------------------------
int goodB2G2_78()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Sink(v4);
}
// 6AB2B0: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodB2G2Global;

//----- (0000000000420461) ----------------------------------------------------
int goodG2B_131()
{
  CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BSink(2LL);
}
// 6AB2B4: using guessed type int CWE190_Integer_Overflow__int64_t_rand_postinc_22_goodG2BGlobal;

//----- (0000000000420491) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_22_good()
{
  goodB2G1_78();
  goodB2G2_78();
  return goodG2B_131();
}

//----- (00000000004204B5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_badData + 1);
}
// 6AB610: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_badData;

//----- (00000000004204DC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodG2BData + 1);
}
// 6AB608: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodG2BData;

//----- (0000000000420503) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB60C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodB2GData;

//----- (000000000042053C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_badSink(a1);
}

//----- (0000000000420553) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_goodG2BSink(a1);
}

//----- (000000000042056A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_goodB2GSink(a1);
}

//----- (0000000000420581) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v4 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000420607) ----------------------------------------------------
int goodB2G1_79()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004206AE) ----------------------------------------------------
int goodB2G2_79()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000420749) ----------------------------------------------------
int goodG2B1_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000420795) ----------------------------------------------------
int goodG2B2_69()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004207D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_10_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (0000000000420803) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_postinc_65b_badSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 420803: using guessed type char buf[16];

//----- (000000000042093A) ----------------------------------------------------
int goodG2B_132()
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_65b_goodG2BSink(2);
}

//----- (0000000000420965) ----------------------------------------------------
__int64 goodB2G_122()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_listen_socket_postinc_65b_goodB2GSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 420965: using guessed type char buf[16];

//----- (0000000000420A9C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_65_good()
{
  goodG2B_132();
  return goodB2G_122();
}

//----- (0000000000420AB6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000420AE4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000420B12) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000420B54) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_51_bad()
{
  return CWE190_Integer_Overflow__char_max_postinc_51b_badSink(127);
}

//----- (0000000000420B71) ----------------------------------------------------
int goodG2B_133()
{
  return CWE190_Integer_Overflow__char_max_postinc_51b_goodG2BSink(2);
}

//----- (0000000000420B8E) ----------------------------------------------------
int goodB2G_123()
{
  return CWE190_Integer_Overflow__char_max_postinc_51b_goodB2GSink(127);
}

//----- (0000000000420BAB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_51_good()
{
  goodG2B_133();
  return goodB2G_123();
}

//----- (0000000000420BC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_badSink(a1);
}

//----- (0000000000420BDF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000420BF9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000420C13) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_66b_badSink((__int64)&v5);
}
// 420C13: using guessed type char buf[16];

//----- (0000000000420D03) ----------------------------------------------------
int goodG2B_134()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000420D2D) ----------------------------------------------------
int goodB2G_124()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodB2GSink((__int64)&v5);
}
// 420D2D: using guessed type char buf[16];

//----- (0000000000420E1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_66_good()
{
  goodG2B_134();
  return goodB2G_124();
}

//----- (0000000000420E37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54c_badSink(a1);
}

//----- (0000000000420E4E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54c_goodG2BSink(a1);
}

//----- (0000000000420E65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000420E7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_67b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000420EAD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000420EDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000420F21) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_postinc_68_badData + 1));
}
// 6AB586: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_68_badData;

//----- (0000000000420F54) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_postinc_68_goodG2BData + 1));
}
// 6AB584: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_68_goodG2BData;

//----- (0000000000420F87) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData + 1));
  return result;
}
// 6AB588: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData;

//----- (0000000000420FCE) ----------------------------------------------------
int __fastcall badSink_22(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000420FF9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_41_bad()
{
  return badSink_22(127);
}

//----- (0000000000421016) ----------------------------------------------------
int __fastcall goodG2BSink_22(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000421041) ----------------------------------------------------
int goodG2B_135()
{
  return goodG2BSink_22(2);
}

//----- (000000000042105E) ----------------------------------------------------
int __fastcall goodB2GSink_16(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000042109B) ----------------------------------------------------
int goodB2G_125()
{
  return goodB2GSink_16(127);
}

//----- (00000000004210B8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_41_good()
{
  goodB2G_125();
  return goodG2B_135();
}

//----- (00000000004210D2) ----------------------------------------------------
int badSink_23()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_postinc_45_badData + 1);
}
// 6AB2B8: using guessed type char CWE190_Integer_Overflow__char_max_postinc_45_badData;

//----- (0000000000421102) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_45_bad()
{
  CWE190_Integer_Overflow__char_max_postinc_45_badData = 127;
  return badSink_23();
}
// 6AB2B8: using guessed type char CWE190_Integer_Overflow__char_max_postinc_45_badData;

//----- (0000000000421128) ----------------------------------------------------
int goodG2BSink_23()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_postinc_45_goodG2BData + 1);
}
// 6AB2B9: using guessed type char CWE190_Integer_Overflow__char_max_postinc_45_goodG2BData;

//----- (0000000000421158) ----------------------------------------------------
int goodG2B_136()
{
  CWE190_Integer_Overflow__char_max_postinc_45_goodG2BData = 2;
  return goodG2BSink_23();
}
// 6AB2B9: using guessed type char CWE190_Integer_Overflow__char_max_postinc_45_goodG2BData;

//----- (000000000042117E) ----------------------------------------------------
int goodB2GSink_17()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_max_postinc_45_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_max_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB2BA: using guessed type char CWE190_Integer_Overflow__char_max_postinc_45_goodB2GData;

//----- (00000000004211C0) ----------------------------------------------------
int goodB2G_126()
{
  CWE190_Integer_Overflow__char_max_postinc_45_goodB2GData = 127;
  return goodB2GSink_17();
}
// 6AB2BA: using guessed type char CWE190_Integer_Overflow__char_max_postinc_45_goodB2GData;

//----- (00000000004211E6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_45_good()
{
  goodG2B_136();
  return goodB2G_126();
}

//----- (0000000000421200) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_06_bad()
{
  return printHexCharLine(128);
}

//----- (0000000000421242) ----------------------------------------------------
int goodB2G1_80()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004212A2) ----------------------------------------------------
int goodB2G2_80()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004212F6) ----------------------------------------------------
int goodG2B1_70()
{
  return printHexCharLine(3);
}

//----- (0000000000421344) ----------------------------------------------------
int goodG2B2_70()
{
  return printHexCharLine(3);
}

//----- (0000000000421386) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_06_good()
{
  goodB2G1_80();
  goodB2G2_80();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (00000000004213B4) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004213E1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004213F4) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421421) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54c_badSink(a1);
}

//----- (0000000000421438) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54c_goodG2BSink(a1);
}

//----- (000000000042144F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000421466) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_53c_badSink(a1);
}

//----- (0000000000421481) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_53c_goodG2BSink(a1);
}

//----- (000000000042149C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_53c_goodB2GSink(a1);
}

//----- (00000000004214B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004214E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000421513) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000421555) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (0000000000421560) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (000000000042156B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_4();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004215D6) ----------------------------------------------------
int goodB2G1_81()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)staticReturnsFalse_4() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042166C) ----------------------------------------------------
int goodB2G2_81()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004216F6) ----------------------------------------------------
int goodG2B1_71()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_4();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000421751) ----------------------------------------------------
int goodG2B2_71()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 2LL;
  result = staticReturnsTrue_4();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004217A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_08_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (00000000004217CE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_54_bad()
{
  return CWE190_Integer_Overflow__int_max_postinc_54b_badSink(0x7FFFFFFF);
}

//----- (00000000004217F0) ----------------------------------------------------
int goodG2B_137()
{
  return CWE190_Integer_Overflow__int_max_postinc_54b_goodG2BSink(2);
}

//----- (0000000000421812) ----------------------------------------------------
int goodB2G_127()
{
  return CWE190_Integer_Overflow__int_max_postinc_54b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000421834) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_54_good()
{
  goodG2B_137();
  return goodB2G_127();
}

//----- (000000000042184E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_67_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042188B) ----------------------------------------------------
int goodG2B_138()
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodG2BSink(2);
}

//----- (00000000004218AF) ----------------------------------------------------
int goodB2G_128()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004218EC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_67_good()
{
  goodG2B_138();
  return goodB2G_128();
}

//----- (0000000000421906) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_68_bad()
{
  CWE190_Integer_Overflow__int_max_postinc_68_badData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_68b_badSink();
}
// 6AB578: using guessed type int CWE190_Integer_Overflow__int_max_postinc_68_badData;

//----- (0000000000421931) ----------------------------------------------------
int goodG2B_139()
{
  CWE190_Integer_Overflow__int_max_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_max_postinc_68b_goodG2BSink();
}
// 6AB580: using guessed type int CWE190_Integer_Overflow__int_max_postinc_68_goodG2BData;

//----- (000000000042195C) ----------------------------------------------------
int goodB2G_129()
{
  CWE190_Integer_Overflow__int_max_postinc_68_goodB2GData = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_68b_goodB2GSink();
}
// 6AB57C: using guessed type int CWE190_Integer_Overflow__int_max_postinc_68_goodB2GData;

//----- (0000000000421987) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_68_good()
{
  goodG2B_139();
  return goodB2G_129();
}

//----- (00000000004219A1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_68_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_68_badData = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_68b_badSink();
}
// 6AB586: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_68_badData;

//----- (0000000000421A0C) ----------------------------------------------------
int goodG2B_140()
{
  CWE190_Integer_Overflow__short_rand_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_rand_postinc_68b_goodG2BSink();
}
// 6AB584: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_68_goodG2BData;

//----- (0000000000421A37) ----------------------------------------------------
int goodB2G_130()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_68b_goodB2GSink();
}
// 6AB588: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData;

//----- (0000000000421AA2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_68_good()
{
  goodG2B_140();
  return goodB2G_130();
}

//----- (0000000000421ABC) ----------------------------------------------------
int __fastcall badSink_24(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000421AE3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_44_bad()
{
  return badSink_24(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000421B18) ----------------------------------------------------
int __fastcall goodG2BSink_24(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000421B3F) ----------------------------------------------------
int goodG2B_141()
{
  return goodG2BSink_24(2LL);
}

//----- (0000000000421B6E) ----------------------------------------------------
int __fastcall goodB2GSink_18(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000421BB1) ----------------------------------------------------
int goodB2G_131()
{
  return goodB2GSink_18(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000421BE6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_44_good()
{
  goodG2B_141();
  return goodB2G_131();
}

//----- (0000000000421C00) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_badSource(0);
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000421C32) ----------------------------------------------------
int goodG2B_142()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000421C64) ----------------------------------------------------
int goodB2G_132()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61b_goodB2GSource(0);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000421CA8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_61_good()
{
  goodG2B_142();
  return goodB2G_132();
}

//----- (0000000000421CC2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000421CED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000421D18) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000421D58) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_34_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000421D90) ----------------------------------------------------
int goodG2B_143()
{
  return printUnsignedLine(3u);
}

//----- (0000000000421DC8) ----------------------------------------------------
int goodB2G_133()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000421E12) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_34_good()
{
  goodG2B_143();
  return goodB2G_133();
}

//----- (0000000000421E2C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_53_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_53b_badSink(v1);
}

//----- (0000000000421E8D) ----------------------------------------------------
int goodG2B_144()
{
  return CWE190_Integer_Overflow__short_rand_postinc_53b_goodG2BSink(2);
}

//----- (0000000000421EAE) ----------------------------------------------------
int goodB2G_134()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_53b_goodB2GSink(v1);
}

//----- (0000000000421F0F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_53_good()
{
  goodG2B_144();
  return goodB2G_134();
}

//----- (0000000000421F29) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_badSink(a1);
}

//----- (0000000000421F43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_goodG2BSink(a1);
}

//----- (0000000000421F5D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000421F77) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_12_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  else
  {
    v10 = 2LL;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v10 + 1);
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (00000000004220A2) ----------------------------------------------------
int goodB2G_135()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rax
  __int64 v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // rbx
  __int64 v17; // rbx
  int result; // eax
  __int64 v19; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v19 = v4;
  }
  else
  {
    if ( rand() & 1 )
    {
      v9 = (__int64)rand() << 60;
      v10 = ((__int64)rand() << 45) ^ v9;
      v11 = ((__int64)rand() << 30) ^ v10;
      v12 = ((__int64)rand() << 15) ^ v11;
      v13 = v12 ^ rand();
    }
    else
    {
      v14 = (__int64)rand() << 60;
      v15 = ((__int64)rand() << 45) ^ v14;
      v16 = ((__int64)rand() << 30) ^ v15;
      v17 = ((__int64)rand() << 15) ^ v16;
      v13 = ~(v17 ^ rand());
    }
    v19 = v13;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v19 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v19 + 1);
  }
  else if ( v19 == 0x7FFFFFFFFFFFFFFFLL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v19 + 1);
  }
  return result;
}

//----- (000000000042227D) ----------------------------------------------------
int goodG2B_145()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (00000000004222F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_12_good()
{
  goodB2G_135();
  return goodG2B_145();
}

//----- (000000000042230B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000422339) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000422367) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004223A9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB150: using guessed type int staticFive_4;

//----- (0000000000422406) ----------------------------------------------------
int goodB2G1_82()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB150: using guessed type int staticFive_4;

//----- (0000000000422483) ----------------------------------------------------
int goodB2G2_82()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB150: using guessed type int staticFive_4;

//----- (00000000004224F4) ----------------------------------------------------
int goodG2B1_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB150: using guessed type int staticFive_4;

//----- (0000000000422542) ----------------------------------------------------
int goodG2B2_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_4 == 5 )
    v1 = 2;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB150: using guessed type int staticFive_4;

//----- (0000000000422584) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_good()
{
  goodB2G1_82();
  goodB2G2_82();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (00000000004225B2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_12_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v7 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v7 + 1);
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 4225B2: using guessed type char buf[16];

//----- (00000000004226FA) ----------------------------------------------------
int goodB2G_136()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+4Ch] [rbp-14h]
  int v8; // [rsp+50h] [rbp-10h]
  int v9; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v11; // [rsp+5Ch] [rbp-4h]

  v11 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v8, &addr, 0x10u) != -1 )
      {
        v7 = recv(v8, nptr, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            nptr[v7] = 0;
            v11 = atoi(nptr);
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v11 + 1);
  }
  else if ( v11 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v11 + 1);
  }
  return result;
}
// 4226FA: using guessed type char buf[16];
// 4226FA: using guessed type char nptr[16];

//----- (0000000000422923) ----------------------------------------------------
int goodG2B_146()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000042298A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_12_good()
{
  goodB2G_136();
  return goodG2B_146();
}

//----- (00000000004229A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB388: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badGlobal;

//----- (00000000004229CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6AB38C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Global;

//----- (0000000000422A18) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6AB390: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Global;

//----- (0000000000422A55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB394: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BGlobal;

//----- (0000000000422A80) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422ABB) ----------------------------------------------------
int goodG2B_147()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_goodG2BSink(2LL);
}

//----- (0000000000422AE1) ----------------------------------------------------
int goodB2G_137()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422B1C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_54_good()
{
  goodG2B_147();
  return goodB2G_137();
}

//----- (0000000000422B36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000422B57) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000422B78) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000422BAE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000422BED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000422C2C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (0000000000422C7F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_11_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v10 + 1);
  return result;
}

//----- (0000000000422D69) ----------------------------------------------------
int goodB2G1_83()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (0000000000422E7B) ----------------------------------------------------
int goodB2G2_83()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}

//----- (0000000000422F81) ----------------------------------------------------
int goodG2B1_73()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422FDC) ----------------------------------------------------
int goodG2B2_73()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000042302B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_11_good()
{
  goodB2G1_83();
  goodB2G2_83();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (0000000000423059) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_02_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000423123) ----------------------------------------------------
int goodB2G1_84()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000423209) ----------------------------------------------------
int goodB2G2_84()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004232EF) ----------------------------------------------------
int goodG2B1_74()
{
  return printLongLongLine(3LL);
}

//----- (0000000000423322) ----------------------------------------------------
int goodG2B2_74()
{
  return printLongLongLine(3LL);
}

//----- (0000000000423355) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_02_good()
{
  goodB2G1_84();
  goodB2G2_84();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (0000000000423383) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54d_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54e_badSink(a1);
}

//----- (000000000042339D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54d_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54e_goodG2BSink(a1);
}

//----- (00000000004233B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54d_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54e_goodB2GSink(a1);
}

//----- (00000000004233D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_64b_badSink(&v5);
}
// 4233D1: using guessed type char buf[16];

//----- (00000000004234BB) ----------------------------------------------------
int goodG2B_148()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_64b_goodG2BSink(&v1);
}

//----- (00000000004234DF) ----------------------------------------------------
int goodB2G_138()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_64b_goodB2GSink(&v5);
}
// 4234DF: using guessed type char buf[16];

//----- (00000000004235C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_64_good()
{
  goodG2B_148();
  return goodB2G_138();
}

//----- (00000000004235E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_badSink(a1);
}

//----- (00000000004235FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000423611) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000423628) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_65_bad()
{
  return CWE190_Integer_Overflow__int_max_postinc_65b_badSink(0x7FFFFFFF);
}

//----- (0000000000423653) ----------------------------------------------------
int goodG2B_149()
{
  return CWE190_Integer_Overflow__int_max_postinc_65b_goodG2BSink(2);
}

//----- (000000000042367E) ----------------------------------------------------
int goodB2G_139()
{
  return CWE190_Integer_Overflow__int_max_postinc_65b_goodB2GSink(0x7FFFFFFF);
}

//----- (00000000004236A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_65_good()
{
  goodG2B_149();
  return goodB2G_139();
}

//----- (00000000004236C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004237A5) ----------------------------------------------------
int goodB2G1_85()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004238AF) ----------------------------------------------------
int goodB2G2_85()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004239AD) ----------------------------------------------------
int goodG2B1_75()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000423A00) ----------------------------------------------------
int goodG2B2_75()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000423A47) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_10_good()
{
  goodB2G1_85();
  goodB2G2_85();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (0000000000423A75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000423A96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000423AB7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000423AED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53d_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000423B18) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000423B43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000423B80) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_14_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000423BF1) ----------------------------------------------------
int goodB2G1_86()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000423C80) ----------------------------------------------------
int goodB2G2_86()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000423D03) ----------------------------------------------------
int goodG2B1_76()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000423D53) ----------------------------------------------------
int goodG2B2_76()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000423D97) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_14_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (0000000000423DC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000423DE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000423E07) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000423E3A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54e_badSink(a1);
}

//----- (0000000000423E51) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54e_goodG2BSink(a1);
}

//----- (0000000000423E68) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_54e_goodB2GSink(a1);
}

//----- (0000000000423E7F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_32_bad()
{
  int v0; // eax
  char v2; // [rsp+Ch] [rbp-14h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 32;
  v3 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v3 = v0;
  *v5 = v0;
  return printHexCharLine(*v4 + 1);
}

//----- (0000000000423F08) ----------------------------------------------------
int goodG2B_150()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printHexCharLine(3);
}

//----- (0000000000423F64) ----------------------------------------------------
int goodB2G_140()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Ch] [rbp-14h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 32;
  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  *v6 = v0;
  v3 = *v5;
  if ( v3 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v3 + 1);
  return result;
}

//----- (0000000000423FFF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_32_good()
{
  goodG2B_150();
  return goodB2G_140();
}

//----- (0000000000424019) ----------------------------------------------------
int __fastcall badSink_25(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042403A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_25)(v2);
}

//----- (00000000004240AD) ----------------------------------------------------
int __fastcall goodG2BSink_25(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004240CE) ----------------------------------------------------
int goodG2B_151()
{
  return goodG2BSink_25(2);
}

//----- (00000000004240F9) ----------------------------------------------------
int __fastcall goodB2GSink_19(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042412C) ----------------------------------------------------
__int64 goodB2G_141()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_19)(v2);
}

//----- (000000000042419F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_44_good()
{
  goodG2B_151();
  return goodB2G_141();
}

//----- (00000000004241B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_63b_badSink(&v6);
}

//----- (0000000000424225) ----------------------------------------------------
int goodG2B_152()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_rand_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000424249) ----------------------------------------------------
int goodB2G_142()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_63b_goodB2GSink(&v6);
}

//----- (00000000004242B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_63_good()
{
  goodG2B_152();
  return goodB2G_142();
}

//----- (00000000004242CF) ----------------------------------------------------
__int64 badSource_7()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000424329) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_7();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000424366) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return 2LL;
}

//----- (000000000042437C) ----------------------------------------------------
int goodG2B_153()
{
  __int16 v0; // ax

  v0 = goodG2BSource_7();
  return printIntLine((__int16)(v0 + 1));
}

//----- (00000000004243B9) ----------------------------------------------------
__int64 goodB2GSource_7()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000424413) ----------------------------------------------------
int goodB2G_143()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_7();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000424464) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_42_good()
{
  goodB2G_143();
  return goodG2B_153();
}

//----- (000000000042447E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_badSink(a1);
}

//----- (0000000000424498) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_goodG2BSink(a1);
}

//----- (00000000004244B2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004244CC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_54_bad()
{
  return CWE190_Integer_Overflow__char_max_postinc_54b_badSink(127);
}

//----- (00000000004244E9) ----------------------------------------------------
int goodG2B_154()
{
  return CWE190_Integer_Overflow__char_max_postinc_54b_goodG2BSink(2);
}

//----- (0000000000424506) ----------------------------------------------------
int goodB2G_144()
{
  return CWE190_Integer_Overflow__char_max_postinc_54b_goodB2GSink(127);
}

//----- (0000000000424523) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_54_good()
{
  goodG2B_154();
  return goodB2G_144();
}

//----- (000000000042453D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11 + 1;
  v6 = v11 + 1;
  return printIntLine(v11 + 1);
}
// 42453D: using guessed type char buf[16];

//----- (0000000000424681) ----------------------------------------------------
int goodG2B_155()
{
  return printIntLine(3u);
}

//----- (00000000004246B9) ----------------------------------------------------
int goodB2G_145()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v5 = v10;
  v6 = v10;
  if ( v10 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 4246B9: using guessed type char buf[16];

//----- (0000000000424812) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_34_good()
{
  goodG2B_155();
  return goodB2G_145();
}

//----- (000000000042482C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_postinc_68_badData + 1);
}
// 6AB590: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_68_badData;

//----- (0000000000424853) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_postinc_68_goodG2BData + 1);
}
// 6AB594: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_68_goodG2BData;

//----- (000000000042487A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_postinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fgets_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB58C: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_68_goodB2GData;

//----- (00000000004248B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_53c_badSink(a1);
}

//----- (00000000004248CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_53c_goodG2BSink(a1);
}

//----- (00000000004248E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_53c_goodB2GSink(a1);
}

//----- (00000000004248FB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_64_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424934) ----------------------------------------------------
int goodG2B_156()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_fscanf_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000424956) ----------------------------------------------------
int goodB2G_146()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042498F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_64_good()
{
  goodG2B_156();
  return goodB2G_146();
}

//----- (00000000004249A9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004249CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004249EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000424A21) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (0000000000424A2C) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (0000000000424A37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_08_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -1;
  result = staticReturnsTrue_5();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000424A7F) ----------------------------------------------------
int goodB2G1_87()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -1;
  if ( (unsigned int)staticReturnsFalse_5() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (0000000000424AE5) ----------------------------------------------------
int goodB2G2_87()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -1;
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (0000000000424B3F) ----------------------------------------------------
int goodG2B1_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000424B93) ----------------------------------------------------
int goodG2B2_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = 2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (0000000000424BDB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_08_good()
{
  goodB2G1_87();
  goodB2G2_87();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (0000000000424C09) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_31_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (0000000000424C72) ----------------------------------------------------
int goodG2B_157()
{
  return printHexCharLine(3);
}

//----- (0000000000424CAE) ----------------------------------------------------
int goodB2G_147()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000424D29) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_31_good()
{
  goodG2B_157();
  return goodB2G_147();
}

//----- (0000000000424D43) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v7 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 424D43: using guessed type char buf[16];

//----- (0000000000424E4F) ----------------------------------------------------
int goodB2G1_88()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6AB1B8: using guessed type int globalFive;
// 424E4F: using guessed type char buf[16];

//----- (0000000000424F7C) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 424F7C: using guessed type char buf[16];

//----- (000000000042509D) ----------------------------------------------------
int goodG2B1_78()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004250EB) ----------------------------------------------------
int goodG2B2_78()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042512D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_14_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (000000000042515B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (00000000004251D1) ----------------------------------------------------
int goodB2G1_89()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (0000000000425259) ----------------------------------------------------
int goodB2G2_89()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (00000000004252E1) ----------------------------------------------------
int goodG2B1_79()
{
  return printUnsignedLine(3u);
}

//----- (000000000042530F) ----------------------------------------------------
int goodG2B2_79()
{
  return printUnsignedLine(3u);
}

//----- (000000000042533D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_15_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (000000000042536B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_18_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004253B4) ----------------------------------------------------
int goodB2G_148()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000425411) ----------------------------------------------------
int goodG2B_158()
{
  return printHexCharLine(3);
}

//----- (0000000000425441) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_18_good()
{
  goodB2G_148();
  return goodG2B_158();
}

//----- (000000000042545B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_65b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000425486) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004254B1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004254EE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v10 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v9 = v10;
  return printIntLine(*v8 + 1);
}
// 4254EE: using guessed type char buf[16];

//----- (000000000042560B) ----------------------------------------------------
int goodG2B_159()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (0000000000425662) ----------------------------------------------------
int goodB2G_149()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v11 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v11;
  v6 = *v9;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 425662: using guessed type char buf[16];

//----- (0000000000425794) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_32_good()
{
  goodG2B_159();
  return goodB2G_149();
}

//----- (00000000004257AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_09_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000425890) ----------------------------------------------------
int goodB2G1_90()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042599A) ----------------------------------------------------
int goodB2G2_90()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000425A98) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000425AEB) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000425B32) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_09_good()
{
  goodB2G1_90();
  goodB2G2_90();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (0000000000425B60) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53c_badSink(a1);
}

//----- (0000000000425B77) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000425B8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53c_goodB2GSink(a1);
}

//----- (0000000000425BA5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_51_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_51b_badSink(v1);
}

//----- (0000000000425C06) ----------------------------------------------------
int goodG2B_160()
{
  return CWE190_Integer_Overflow__short_rand_postinc_51b_goodG2BSink(2);
}

//----- (0000000000425C27) ----------------------------------------------------
int goodB2G_150()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_51b_goodB2GSink(v1);
}

//----- (0000000000425C88) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_51_good()
{
  goodG2B_160();
  return goodB2G_150();
}

//----- (0000000000425CA2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000425CC3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000425CE4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000425D1A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_53_bad()
{
  return CWE190_Integer_Overflow__int_max_postinc_53b_badSink(0x7FFFFFFF);
}

//----- (0000000000425D3C) ----------------------------------------------------
int goodG2B_161()
{
  return CWE190_Integer_Overflow__int_max_postinc_53b_goodG2BSink(2);
}

//----- (0000000000425D5E) ----------------------------------------------------
int goodB2G_151()
{
  return CWE190_Integer_Overflow__int_max_postinc_53b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000425D80) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_53_good()
{
  goodG2B_161();
  return goodB2G_151();
}

//----- (0000000000425D9A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_68_badData = v4;
  return CWE190_Integer_Overflow__int_fgets_postinc_68b_badSink();
}
// 6AB590: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_68_badData;

//----- (0000000000425E0B) ----------------------------------------------------
int goodG2B_162()
{
  CWE190_Integer_Overflow__int_fgets_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fgets_postinc_68b_goodG2BSink();
}
// 6AB594: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_68_goodG2BData;

//----- (0000000000425E36) ----------------------------------------------------
int goodB2G_152()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int_fgets_postinc_68b_goodB2GSink();
}
// 6AB58C: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_68_goodB2GData;

//----- (0000000000425EA7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_68_good()
{
  goodG2B_162();
  return goodB2G_152();
}

//----- (0000000000425EC1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_badData + 1);
}
// 6AB550: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_badData;

//----- (0000000000425EEF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodG2BData + 1);
}
// 6AB558: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodG2BData;

//----- (0000000000425F1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB548: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_68_goodB2GData;

//----- (0000000000425F67) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_badSink(a1);
}

//----- (0000000000425F7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_goodG2BSink(a1);
}

//----- (0000000000425F95) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000425FAC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_badSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB2C8: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal;

//----- (0000000000425FE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Sink(char a1)
{
  if ( CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6AB2CC: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Global;

//----- (0000000000426034) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6AB2D0: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global;

//----- (000000000042607B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB2D4: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BGlobal;

//----- (00000000004260B0) ----------------------------------------------------
int badSink_26()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_postinc_45_badData + 1));
}
// 6AB2BC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_45_badData;

//----- (00000000004260E3) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_45_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_45_badData = v1;
  return badSink_26();
}
// 6AB2BC: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_45_badData;

//----- (000000000042614E) ----------------------------------------------------
int goodG2BSink_26()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_postinc_45_goodG2BData + 1));
}
// 6AB2BE: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_45_goodG2BData;

//----- (0000000000426181) ----------------------------------------------------
int goodG2B_163()
{
  CWE190_Integer_Overflow__short_rand_postinc_45_goodG2BData = 2;
  return goodG2BSink_26();
}
// 6AB2BE: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_45_goodG2BData;

//----- (00000000004261AC) ----------------------------------------------------
int goodB2GSink_20()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData + 1));
  return result;
}
// 6AB2C0: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData;

//----- (00000000004261F3) ----------------------------------------------------
int goodB2G_153()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData = v1;
  return goodB2GSink_20();
}
// 6AB2C0: using guessed type __int16 CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData;

//----- (000000000042625E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_45_good()
{
  goodG2B_163();
  return goodB2G_153();
}

//----- (0000000000426278) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 6AB154: using guessed type int staticTrue_5;

//----- (0000000000426300) ----------------------------------------------------
int goodB2G1_91()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6AB154: using guessed type int staticTrue_5;
// 6AB2C4: using guessed type int staticFalse_5;

//----- (00000000004263A9) ----------------------------------------------------
int goodB2G2_91()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6AB154: using guessed type int staticTrue_5;

//----- (0000000000426446) ----------------------------------------------------
int goodG2B1_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB154: using guessed type int staticTrue_5;
// 6AB2C4: using guessed type int staticFalse_5;

//----- (0000000000426492) ----------------------------------------------------
int goodG2B2_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_5 )
    v1 = 2;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB154: using guessed type int staticTrue_5;

//----- (00000000004264D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_05_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000426500) ----------------------------------------------------
int __fastcall badSink_27(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000426521) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_27(v2);
}

//----- (000000000042658B) ----------------------------------------------------
int __fastcall goodG2BSink_27(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004265AC) ----------------------------------------------------
int goodG2B_164()
{
  return goodG2BSink_27(2);
}

//----- (00000000004265CE) ----------------------------------------------------
int __fastcall goodB2GSink_21(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000426604) ----------------------------------------------------
int goodB2G_154()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_21(v2);
}

//----- (000000000042666E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_41_good()
{
  goodB2G_154();
  return goodG2B_164();
}

//----- (0000000000426688) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_02_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004266D3) ----------------------------------------------------
int goodB2G1_92()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426734) ----------------------------------------------------
int goodB2G2_92()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426795) ----------------------------------------------------
int goodG2B1_82()
{
  return printIntLine(3u);
}

//----- (00000000004267C9) ----------------------------------------------------
int goodG2B2_82()
{
  return printIntLine(3u);
}

//----- (00000000004267FD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_02_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (000000000042682B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 42682B: using guessed type char buf[16];

//----- (0000000000426933) ----------------------------------------------------
int goodB2G1_93()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 426933: using guessed type char buf[16];

//----- (0000000000426A5C) ----------------------------------------------------
int goodB2G2_93()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 426A5C: using guessed type char buf[16];

//----- (0000000000426B79) ----------------------------------------------------
int goodG2B1_83()
{
  return printIntLine(3u);
}

//----- (0000000000426BC3) ----------------------------------------------------
int goodG2B2_83()
{
  return printIntLine(3u);
}

//----- (0000000000426C01) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_04_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (0000000000426C2F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10 + 1;
  v5 = v10 + 1;
  return printIntLine(v10 + 1);
}
// 426C2F: using guessed type char buf[16];

//----- (0000000000426D2D) ----------------------------------------------------
int goodG2B_165()
{
  return printIntLine(3u);
}

//----- (0000000000426D65) ----------------------------------------------------
int goodB2G_155()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  v5 = v9;
  if ( v9 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}
// 426D65: using guessed type char buf[16];

//----- (0000000000426E78) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_31_good()
{
  goodG2B_165();
  return goodB2G_155();
}

//----- (0000000000426E92) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_53b_badSink(v4);
}

//----- (0000000000426EFA) ----------------------------------------------------
int goodG2B_166()
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53b_goodG2BSink(2);
}

//----- (0000000000426F1C) ----------------------------------------------------
int goodB2G_156()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_53b_goodB2GSink(v4);
}

//----- (0000000000426F84) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_53_good()
{
  goodG2B_166();
  return goodB2G_156();
}

//----- (0000000000426F9E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_badSink(a1);
}

//----- (0000000000426FB8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000426FD2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53c_goodB2GSink(a1);
}

//----- (0000000000426FEC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000427020) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000427054) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000042709C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004270C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004270EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000042712D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000427159) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000427185) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004271C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_52c_badSink(a1);
}

//----- (00000000004271DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_52c_goodG2BSink(a1);
}

//----- (00000000004271F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_max_postinc_52c_goodB2GSink(a1);
}

//----- (000000000042720B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000427239) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000427267) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004272A9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_22_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__char_rand_postinc_22_badSink(v0);
}
// 6AB2C8: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal;

//----- (00000000004272FD) ----------------------------------------------------
int goodB2G1_94()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Sink(v0);
}
// 6AB2CC: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Global;

//----- (0000000000427351) ----------------------------------------------------
int goodB2G2_94()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Sink(v0);
}
// 6AB2D0: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global;

//----- (00000000004273A5) ----------------------------------------------------
int goodG2B_167()
{
  CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BSink(2);
}
// 6AB2D4: using guessed type int CWE190_Integer_Overflow__char_rand_postinc_22_goodG2BGlobal;

//----- (00000000004273CC) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_22_good()
{
  goodB2G1_94();
  goodB2G2_94();
  return goodG2B_167();
}

//----- (00000000004273F0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_54_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_badSink(-1);
}

//----- (0000000000427412) ----------------------------------------------------
int goodG2B_168()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_goodG2BSink(2);
}

//----- (0000000000427434) ----------------------------------------------------
int goodB2G_157()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_54b_goodB2GSink(-1);
}

//----- (0000000000427456) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_54_good()
{
  goodG2B_168();
  return goodB2G_157();
}

//----- (0000000000427470) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_postinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB418: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_badGlobal;

//----- (000000000042749B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB41C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Global;

//----- (00000000004274E7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB420: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Global;

//----- (0000000000427527) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB424: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BGlobal;

//----- (0000000000427552) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54e_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042757D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004275A8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004275E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_52c_badSink(a1);
}

//----- (0000000000427600) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_52c_goodG2BSink(a1);
}

//----- (000000000042761B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_52b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_52c_goodB2GSink(a1);
}

//----- (0000000000427636) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v7 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 427636: using guessed type char buf[16];

//----- (0000000000427740) ----------------------------------------------------
int goodB2G1_95()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;
// 427740: using guessed type char buf[16];

//----- (000000000042786B) ----------------------------------------------------
int goodB2G2_95()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 42786B: using guessed type char buf[16];

//----- (000000000042798A) ----------------------------------------------------
int goodG2B1_84()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004279D6) ----------------------------------------------------
int goodG2B2_84()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000427A16) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_10_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (0000000000427A44) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_52_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_52b_badSink(v1);
}

//----- (0000000000427AA5) ----------------------------------------------------
int goodG2B_169()
{
  return CWE190_Integer_Overflow__short_rand_postinc_52b_goodG2BSink(2);
}

//----- (0000000000427AC6) ----------------------------------------------------
int goodB2G_158()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_52b_goodB2GSink(v1);
}

//----- (0000000000427B27) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_52_good()
{
  goodG2B_169();
  return goodB2G_158();
}

//----- (0000000000427B41) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_52c_badSink(a1);
}

//----- (0000000000427B58) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_52c_goodG2BSink(a1);
}

//----- (0000000000427B6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_52c_goodB2GSink(a1);
}

//----- (0000000000427B86) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54d_badSink(a1);
}

//----- (0000000000427BA0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000427BBA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000427BD4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_15_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000427C0F) ----------------------------------------------------
int goodB2G1_96()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000427C66) ----------------------------------------------------
int goodB2G2_96()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000427CBD) ----------------------------------------------------
int goodG2B1_85()
{
  return printLongLongLine(3LL);
}

//----- (0000000000427CF2) ----------------------------------------------------
int goodG2B2_85()
{
  return printLongLongLine(3LL);
}

//----- (0000000000427D27) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_15_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000427D55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000427D8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000427DC3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (0000000000427E0E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_67_bad()
{
  return CWE190_Integer_Overflow__short_max_postinc_67b_badSink(0x7FFF);
}

//----- (0000000000427E37) ----------------------------------------------------
int goodG2B_170()
{
  return CWE190_Integer_Overflow__short_max_postinc_67b_goodG2BSink(2);
}

//----- (0000000000427E60) ----------------------------------------------------
int goodB2G_159()
{
  return CWE190_Integer_Overflow__short_max_postinc_67b_goodB2GSink(0x7FFF);
}

//----- (0000000000427E89) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_67_good()
{
  goodG2B_170();
  return goodB2G_159();
}

//----- (0000000000427EA3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_66b_badSink((__int64)&v6);
}

//----- (0000000000427F15) ----------------------------------------------------
int goodG2B_171()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_rand_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000427F3F) ----------------------------------------------------
int goodB2G_160()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_66b_goodB2GSink((__int64)&v6);
}

//----- (0000000000427FB1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_66_good()
{
  goodG2B_171();
  return goodB2G_160();
}

//----- (0000000000427FCB) ----------------------------------------------------
__int64 badSource_8()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000427FE7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_8();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000428022) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 2LL;
}

//----- (0000000000428038) ----------------------------------------------------
int goodG2B_172()
{
  __int64 v0; // rax

  v0 = goodG2BSource_8();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000428073) ----------------------------------------------------
__int64 goodB2GSource_8()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000042808F) ----------------------------------------------------
int goodB2G_161()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_8();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004280E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_42_good()
{
  goodB2G_161();
  return goodG2B_172();
}

//----- (0000000000428100) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_65_bad()
{
  return CWE190_Integer_Overflow__char_max_postinc_65b_badSink(127);
}

//----- (0000000000428126) ----------------------------------------------------
int goodG2B_173()
{
  return CWE190_Integer_Overflow__char_max_postinc_65b_goodG2BSink(2);
}

//----- (000000000042814C) ----------------------------------------------------
int goodB2G_162()
{
  return CWE190_Integer_Overflow__char_max_postinc_65b_goodB2GSink(127);
}

//----- (0000000000428172) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_65_good()
{
  goodG2B_173();
  return goodB2G_162();
}

//----- (000000000042818C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_badSink(a1);
}

//----- (00000000004281A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_goodG2BSink(a1);
}

//----- (00000000004281BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004281D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_16_bad()
{
  return printIntLine(0x80000000);
}

//----- (00000000004281FF) ----------------------------------------------------
int goodB2G_163()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000428242) ----------------------------------------------------
int goodG2B_174()
{
  return printIntLine(3u);
}

//----- (0000000000428270) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_16_good()
{
  goodB2G_163();
  return goodG2B_174();
}

//----- (000000000042828A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_52b_badSink(v4);
}

//----- (00000000004282F2) ----------------------------------------------------
int goodG2B_175()
{
  return CWE190_Integer_Overflow__int_fgets_postinc_52b_goodG2BSink(2);
}

//----- (0000000000428314) ----------------------------------------------------
int goodB2G_164()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_52b_goodB2GSink(v4);
}

//----- (000000000042837C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_52_good()
{
  goodG2B_175();
  return goodB2G_164();
}

//----- (0000000000428396) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_64b_badSink(&v5);
}
// 428396: using guessed type char buf[16];

//----- (00000000004284C6) ----------------------------------------------------
int goodG2B_176()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_64b_goodG2BSink(&v1);
}

//----- (00000000004284EA) ----------------------------------------------------
int goodB2G_165()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_64b_goodB2GSink(&v5);
}
// 4284EA: using guessed type char buf[16];

//----- (000000000042861A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_64_good()
{
  goodG2B_176();
  return goodB2G_165();
}

//----- (0000000000428634) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000428655) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000428676) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004286AC) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_postinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000428709) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042871C) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_postinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000428779) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_badSink(a1);
}

//----- (0000000000428793) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_goodG2BSink(a1);
}

//----- (00000000004287AD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_52c_goodB2GSink(a1);
}

//----- (00000000004287C7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_63_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428800) ----------------------------------------------------
int goodG2B_177()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_fscanf_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000428822) ----------------------------------------------------
int goodB2G_166()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042885B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_63_good()
{
  goodG2B_177();
  return goodB2G_166();
}

//----- (0000000000428875) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_16_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (00000000004288E9) ----------------------------------------------------
int goodB2G_167()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000428972) ----------------------------------------------------
int goodG2B_178()
{
  return printIntLine(3u);
}

//----- (00000000004289A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_16_good()
{
  goodB2G_167();
  return goodG2B_178();
}

//----- (00000000004289BA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_03_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (0000000000428A15) ----------------------------------------------------
int goodB2G1_97()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000428A82) ----------------------------------------------------
int goodB2G2_97()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000428AEF) ----------------------------------------------------
int goodG2B1_86()
{
  return printHexCharLine(3);
}

//----- (0000000000428B1D) ----------------------------------------------------
int goodG2B2_86()
{
  return printHexCharLine(3);
}

//----- (0000000000428B4B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_03_good()
{
  goodB2G1_97();
  goodB2G2_97();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000428B79) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_6 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB158: using guessed type int staticTrue_6;

//----- (0000000000428BC6) ----------------------------------------------------
int goodB2G1_98()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_6 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6AB158: using guessed type int staticTrue_6;
// 6AB2D8: using guessed type int staticFalse_6;

//----- (0000000000428C3B) ----------------------------------------------------
int goodB2G2_98()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_6 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6AB158: using guessed type int staticTrue_6;

//----- (0000000000428CA4) ----------------------------------------------------
int goodG2B1_87()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB158: using guessed type int staticTrue_6;
// 6AB2D8: using guessed type int staticFalse_6;

//----- (0000000000428CF7) ----------------------------------------------------
int goodG2B2_87()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_6 )
    v1 = 2LL;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB158: using guessed type int staticTrue_6;

//----- (0000000000428D3E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_05_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (0000000000428D6C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0x7FFF;
  v2 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_66b_badSink((__int64)&v1);
}

//----- (0000000000428D96) ----------------------------------------------------
int goodG2B_179()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_max_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000428DC0) ----------------------------------------------------
int goodB2G_168()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0x7FFF;
  v2 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000428DEA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_66_good()
{
  goodG2B_179();
  return goodB2G_168();
}

//----- (0000000000428E04) ----------------------------------------------------
int __fastcall badSink_28(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000428E2B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_41_bad()
{
  return badSink_28(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000428E57) ----------------------------------------------------
int __fastcall goodG2BSink_28(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000428E7E) ----------------------------------------------------
int goodG2B_180()
{
  return goodG2BSink_28(2LL);
}

//----- (0000000000428EA4) ----------------------------------------------------
int __fastcall goodB2GSink_22(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000428EE7) ----------------------------------------------------
int goodB2G_169()
{
  return goodB2GSink_22(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000428F13) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_41_good()
{
  goodB2G_169();
  return goodG2B_180();
}

//----- (0000000000428F2D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_65_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_postinc_65b_badSink)(v4);
}

//----- (0000000000428FF3) ----------------------------------------------------
int goodG2B_181()
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_65b_goodG2BSink(2LL);
}

//----- (0000000000429022) ----------------------------------------------------
__int64 goodB2G_170()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_postinc_65b_goodB2GSink)(v4);
}

//----- (00000000004290E8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_65_good()
{
  goodG2B_181();
  return goodB2G_170();
}

//----- (0000000000429102) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v7 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;
// 429102: using guessed type char buf[16];

//----- (000000000042920E) ----------------------------------------------------
int goodB2G1_99()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;
// 42920E: using guessed type char buf[16];

//----- (000000000042933B) ----------------------------------------------------
int goodB2G2_99()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;
// 42933B: using guessed type char buf[16];

//----- (000000000042945C) ----------------------------------------------------
int goodG2B1_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004294AA) ----------------------------------------------------
int goodG2B2_88()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004294EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_13_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (000000000042951A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000429551) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000429588) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (00000000004295D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004295FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429621) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042965D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004296BC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004296CF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000042972E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000429755) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042977C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004297BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004297E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000429801) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000429834) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4756A4, &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042988F) ----------------------------------------------------
int goodB2G1_100()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4756A4, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042990A) ----------------------------------------------------
int goodB2G2_100()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4756A4, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429979) ----------------------------------------------------
int goodG2B1_89()
{
  return printUnsignedLine(3u);
}

//----- (00000000004299C5) ----------------------------------------------------
int goodG2B2_89()
{
  return printUnsignedLine(3u);
}

//----- (0000000000429A05) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (0000000000429A33) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_badSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_postinc_68_badData + 1);
}
// 6AB598: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_badData;

//----- (0000000000429A5A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_goodG2BSink()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodG2BData + 1);
}
// 6AB59C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodG2BData;

//----- (0000000000429A81) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5A0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodB2GData;

//----- (0000000000429ABA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_34_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000429B03) ----------------------------------------------------
int goodG2B_182()
{
  return printLongLongLine(3LL);
}

//----- (0000000000429B46) ----------------------------------------------------
int goodB2G_171()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429BAB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_34_good()
{
  goodG2B_182();
  return goodB2G_171();
}

//----- (0000000000429BC5) ----------------------------------------------------
int badSink_29()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_postinc_45_badData + 1);
}
// 6AB2DC: using guessed type int CWE190_Integer_Overflow__int_max_postinc_45_badData;

//----- (0000000000429BEC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_45_bad()
{
  CWE190_Integer_Overflow__int_max_postinc_45_badData = 0x7FFFFFFF;
  return badSink_29();
}
// 6AB2DC: using guessed type int CWE190_Integer_Overflow__int_max_postinc_45_badData;

//----- (0000000000429C17) ----------------------------------------------------
int goodG2BSink_29()
{
  return printIntLine(CWE190_Integer_Overflow__int_max_postinc_45_goodG2BData + 1);
}
// 6AB2E0: using guessed type int CWE190_Integer_Overflow__int_max_postinc_45_goodG2BData;

//----- (0000000000429C3E) ----------------------------------------------------
int goodG2B_183()
{
  CWE190_Integer_Overflow__int_max_postinc_45_goodG2BData = 2;
  return goodG2BSink_29();
}
// 6AB2E0: using guessed type int CWE190_Integer_Overflow__int_max_postinc_45_goodG2BData;

//----- (0000000000429C69) ----------------------------------------------------
int goodB2GSink_23()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_max_postinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_max_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB2E4: using guessed type int CWE190_Integer_Overflow__int_max_postinc_45_goodB2GData;

//----- (0000000000429CA5) ----------------------------------------------------
int goodB2G_172()
{
  CWE190_Integer_Overflow__int_max_postinc_45_goodB2GData = 0x7FFFFFFF;
  return goodB2GSink_23();
}
// 6AB2E4: using guessed type int CWE190_Integer_Overflow__int_max_postinc_45_goodB2GData;

//----- (0000000000429CD0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_45_good()
{
  goodG2B_183();
  return goodB2G_172();
}

//----- (0000000000429CEA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000429D1D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000429D50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (0000000000429D9F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_51b_badSink(v4);
}

//----- (0000000000429E07) ----------------------------------------------------
int goodG2B_184()
{
  return CWE190_Integer_Overflow__int_fgets_postinc_51b_goodG2BSink(2);
}

//----- (0000000000429E29) ----------------------------------------------------
int goodB2G_173()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_51b_goodB2GSink(v4);
}

//----- (0000000000429E91) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_51_good()
{
  goodG2B_184();
  return goodB2G_173();
}

//----- (0000000000429EAB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54c_badSink(a1);
}

//----- (0000000000429EC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54c_goodG2BSink(a1);
}

//----- (0000000000429EDF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_54b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000429EF9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_06_bad()
{
  return printIntLine(0x80000000);
}

//----- (0000000000429F39) ----------------------------------------------------
int goodB2G1_101()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429F9A) ----------------------------------------------------
int goodB2G2_101()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000429FEF) ----------------------------------------------------
int goodG2B1_90()
{
  return printIntLine(3u);
}

//----- (000000000042A03B) ----------------------------------------------------
int goodG2B2_90()
{
  return printIntLine(3u);
}

//----- (000000000042A07B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_06_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (000000000042A0A9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_12_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  else
  {
    v2 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v2 + 1);
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}

//----- (000000000042A156) ----------------------------------------------------
int goodB2G_174()
{
  int v0; // eax
  int v1; // eax
  int result; // eax
  char v3; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v3 = v0;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v1) = rand();
    }
    else
    {
      rand();
      rand();
      v1 = ~rand();
    }
    v3 = v1;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v3 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v3 + 1);
  }
  else if ( v3 == 127 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printHexCharLine(v3 + 1);
  }
  return result;
}

//----- (000000000042A242) ----------------------------------------------------
int goodG2B_185()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(3);
}

//----- (000000000042A2B0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_12_good()
{
  goodB2G_174();
  return goodG2B_185();
}

//----- (000000000042A2CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52c_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042A2F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042A320) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000042A35D) ----------------------------------------------------
int __fastcall badSink_30(int a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB2E8: using guessed type int badStatic_5;

//----- (000000000042A388) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_5 = 1;
  return badSink_30(v7);
}
// 6AB2E8: using guessed type int badStatic_5;
// 42A388: using guessed type char buf[16];

//----- (000000000042A47A) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(int a1)
{
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB2EC: using guessed type int goodB2G1Static_5;

//----- (000000000042A4C6) ----------------------------------------------------
int goodB2G1_102()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(v7);
}
// 6AB2EC: using guessed type int goodB2G1Static_5;
// 42A4C6: using guessed type char buf[16];

//----- (000000000042A5B8) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(int a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB2F0: using guessed type int goodB2G2Static_5;

//----- (000000000042A5F8) ----------------------------------------------------
int goodB2G2_102()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(v7);
}
// 6AB2F0: using guessed type int goodB2G2Static_5;
// 42A5F8: using guessed type char buf[16];

//----- (000000000042A6EA) ----------------------------------------------------
int __fastcall goodG2BSink_30(int a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB2F4: using guessed type int goodG2BStatic_5;

//----- (000000000042A715) ----------------------------------------------------
int goodG2B_186()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_30(2);
}
// 6AB2F4: using guessed type int goodG2BStatic_5;

//----- (000000000042A741) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_21_good()
{
  goodB2G1_102();
  goodB2G2_102();
  return goodG2B_186();
}

//----- (000000000042A765) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 42A765: using guessed type char buf[16];

//----- (000000000042A857) ----------------------------------------------------
int goodB2G1_103()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 42A857: using guessed type char buf[16];

//----- (000000000042A95E) ----------------------------------------------------
int goodB2G2_103()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 42A95E: using guessed type char buf[16];

//----- (000000000042AA65) ----------------------------------------------------
int goodG2B1_91()
{
  return printIntLine(3u);
}

//----- (000000000042AA91) ----------------------------------------------------
int goodG2B2_91()
{
  return printIntLine(3u);
}

//----- (000000000042AABD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_03_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (000000000042AAEB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_badSink(a1);
}

//----- (000000000042AB02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_goodG2BSink(a1);
}

//----- (000000000042AB19) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53c_goodB2GSink(a1);
}

//----- (000000000042AB30) ----------------------------------------------------
int badSink_31()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_postinc_45_badData + 1);
}
// 6AB2F8: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_45_badData;

//----- (000000000042AB57) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_45_badData = v4;
  return badSink_31();
}
// 6AB2F8: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_45_badData;

//----- (000000000042ABC8) ----------------------------------------------------
int goodG2BSink_31()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_postinc_45_goodG2BData + 1);
}
// 6AB2FC: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_45_goodG2BData;

//----- (000000000042ABEF) ----------------------------------------------------
int goodG2B_187()
{
  CWE190_Integer_Overflow__int_fgets_postinc_45_goodG2BData = 2;
  return goodG2BSink_31();
}
// 6AB2FC: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_45_goodG2BData;

//----- (000000000042AC1A) ----------------------------------------------------
int goodB2GSink_24()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_postinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fgets_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB300: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_45_goodB2GData;

//----- (000000000042AC56) ----------------------------------------------------
int goodB2G_175()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_45_goodB2GData = v4;
  return goodB2GSink_24();
}
// 6AB300: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_45_goodB2GData;

//----- (000000000042ACC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_45_good()
{
  goodG2B_187();
  return goodB2G_175();
}

//----- (000000000042ACE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042AD02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042AD23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042AD56) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_06_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (000000000042ADDC) ----------------------------------------------------
int goodB2G1_104()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042AE83) ----------------------------------------------------
int goodB2G2_104()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042AF1E) ----------------------------------------------------
int goodG2B1_92()
{
  return printIntLine(3u);
}

//----- (000000000042AF6A) ----------------------------------------------------
int goodG2B2_92()
{
  return printIntLine(3u);
}

//----- (000000000042AFAA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_06_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (000000000042AFD8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_68_badData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_badSink();
}
// 6AB598: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_badData;

//----- (000000000042B003) ----------------------------------------------------
int goodG2B_188()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_goodG2BSink();
}
// 6AB59C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodG2BData;

//----- (000000000042B02E) ----------------------------------------------------
int goodB2G_176()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodB2GData = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_68b_goodB2GSink();
}
// 6AB5A0: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_goodB2GData;

//----- (000000000042B059) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_68_good()
{
  goodG2B_188();
  return goodB2G_176();
}

//----- (000000000042B073) ----------------------------------------------------
__int64 badSource_9()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000042B0D2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_9();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042B104) ----------------------------------------------------
__int64 goodG2BSource_9()
{
  return 2LL;
}

//----- (000000000042B117) ----------------------------------------------------
int goodG2B_189()
{
  int v0; // eax

  v0 = goodG2BSource_9();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000042B149) ----------------------------------------------------
__int64 goodB2GSource_9()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000042B1A8) ----------------------------------------------------
int goodB2G_177()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_9();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000042B1EC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_42_good()
{
  goodB2G_177();
  return goodG2B_189();
}

//----- (000000000042B206) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_66b_badSink((__int64)&v1);
}

//----- (000000000042B23A) ----------------------------------------------------
int goodG2B_190()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042B268) ----------------------------------------------------
int goodB2G_178()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000042B29C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_66_good()
{
  goodG2B_190();
  return goodB2G_178();
}

//----- (000000000042B2B6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_54_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B2EF) ----------------------------------------------------
int goodG2B_191()
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_54b_goodG2BSink(2);
}

//----- (000000000042B30C) ----------------------------------------------------
int goodB2G_179()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B345) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_54_good()
{
  goodG2B_191();
  return goodB2G_179();
}

//----- (000000000042B35F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_11_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (000000000042B3D6) ----------------------------------------------------
int goodB2G1_105()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}

//----- (000000000042B46B) ----------------------------------------------------
int goodB2G2_105()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}

//----- (000000000042B4F4) ----------------------------------------------------
int goodG2B1_93()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042B54A) ----------------------------------------------------
int goodG2B2_93()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042B594) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_11_good()
{
  goodB2G1_105();
  goodB2G2_105();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (000000000042B5C2) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_02_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000042B61D) ----------------------------------------------------
int goodB2G1_106()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000042B68A) ----------------------------------------------------
int goodB2G2_106()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000042B6F7) ----------------------------------------------------
int goodG2B1_94()
{
  return printHexCharLine(3);
}

//----- (000000000042B725) ----------------------------------------------------
int goodG2B2_94()
{
  return printHexCharLine(3);
}

//----- (000000000042B753) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_02_good()
{
  goodB2G1_106();
  goodB2G2_106();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (000000000042B781) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B7BC) ----------------------------------------------------
int goodG2B_192()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_goodG2BSink(2LL);
}

//----- (000000000042B7E2) ----------------------------------------------------
int goodB2G_180()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B81D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_51_good()
{
  goodG2B_192();
  return goodB2G_180();
}

//----- (000000000042B837) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_rand_postinc_61b_badSource();
  return printIntLine(v0 + 1);
}

//----- (000000000042B869) ----------------------------------------------------
int goodG2B_193()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_rand_postinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000042B89B) ----------------------------------------------------
int goodB2G_181()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_rand_postinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042B8E2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_61_good()
{
  goodG2B_193();
  return goodB2G_181();
}

//----- (000000000042B8FC) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B92D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042B943) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_61b_goodB2GSource(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B974) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB358: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badGlobal;

//----- (000000000042B9A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6AB35C: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Global;

//----- (000000000042B9FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6AB360: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Global;

//----- (000000000042BA4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB364: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BGlobal;

//----- (000000000042BA7C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_53_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_badSink(-1);
}

//----- (000000000042BA9E) ----------------------------------------------------
int goodG2B_194()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_goodG2BSink(2);
}

//----- (000000000042BAC0) ----------------------------------------------------
int goodB2G_182()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_53b_goodB2GSink(-1);
}

//----- (000000000042BAE2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_53_good()
{
  goodG2B_194();
  return goodB2G_182();
}

//----- (000000000042BAFC) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (000000000042BB07) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (000000000042BB12) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_08_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticReturnsTrue_6();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BB75) ----------------------------------------------------
int goodB2G1_107()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BBF8) ----------------------------------------------------
int goodB2G2_107()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticReturnsTrue_6();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BC6F) ----------------------------------------------------
int goodG2B1_95()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042BCC5) ----------------------------------------------------
int goodG2B2_95()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042BD0F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_08_good()
{
  goodB2G1_107();
  goodB2G2_107();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (000000000042BD3D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_10_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000042BDAC) ----------------------------------------------------
int goodB2G1_108()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000042BE39) ----------------------------------------------------
int goodB2G2_108()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000042BEBA) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000042BF08) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000042BF4A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_10_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (000000000042BF78) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_postinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (000000000042BFAA) ----------------------------------------------------
int goodG2B_195()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_postinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000042BFDC) ----------------------------------------------------
int goodB2G_183()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fgets_postinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042C023) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_61_good()
{
  goodG2B_195();
  return goodB2G_183();
}

//----- (000000000042C03D) ----------------------------------------------------
int badSink_32()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_badData + 1);
}
// 6AB308: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_badData;

//----- (000000000042C06B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_badData = v1;
  return badSink_32();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB308: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_badData;

//----- (000000000042C0AF) ----------------------------------------------------
int goodG2BSink_32()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodG2BData + 1);
}
// 6AB310: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodG2BData;

//----- (000000000042C0DD) ----------------------------------------------------
int goodG2B_196()
{
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodG2BData = 2LL;
  return goodG2BSink_32();
}
// 6AB310: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodG2BData;

//----- (000000000042C10C) ----------------------------------------------------
int goodB2GSink_25()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB318: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodB2GData;

//----- (000000000042C156) ----------------------------------------------------
int goodB2G_184()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodB2GData = v1;
  return goodB2GSink_25();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB318: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_goodB2GData;

//----- (000000000042C19A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_45_good()
{
  goodG2B_196();
  return goodB2G_184();
}

//----- (000000000042C1B4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_18_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000042C1EA) ----------------------------------------------------
int goodB2G_185()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042C234) ----------------------------------------------------
int goodG2B_197()
{
  return printIntLine(3u);
}

//----- (000000000042C26A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_18_good()
{
  goodB2G_185();
  return goodG2B_197();
}

//----- (000000000042C284) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_7 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6AB15C: using guessed type int staticTrue_7;

//----- (000000000042C30C) ----------------------------------------------------
int goodB2G1_109()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_7 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6AB15C: using guessed type int staticTrue_7;
// 6AB320: using guessed type int staticFalse_7;

//----- (000000000042C3B2) ----------------------------------------------------
int goodB2G2_109()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_7 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6AB15C: using guessed type int staticTrue_7;

//----- (000000000042C44C) ----------------------------------------------------
int goodG2B1_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB15C: using guessed type int staticTrue_7;
// 6AB320: using guessed type int staticFalse_7;

//----- (000000000042C498) ----------------------------------------------------
int goodG2B2_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    v1 = 2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB15C: using guessed type int staticTrue_7;

//----- (000000000042C4D8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_good()
{
  goodB2G1_109();
  goodB2G2_109();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (000000000042C506) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_475D3C, &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C569) ----------------------------------------------------
int goodB2G1_110()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_475D3C, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C5F7) ----------------------------------------------------
int goodB2G2_110()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_475D3C, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C679) ----------------------------------------------------
int goodG2B1_98()
{
  return printLongLongLine(3LL);
}

//----- (000000000042C6CC) ----------------------------------------------------
int goodG2B2_98()
{
  return printLongLongLine(3LL);
}

//----- (000000000042C713) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_06_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (000000000042C741) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000042C76D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000042C799) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000042C7DA) ----------------------------------------------------
int __fastcall badSink_33(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042C7FB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_33(v2);
}

//----- (000000000042C865) ----------------------------------------------------
int __fastcall goodG2BSink_33(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000042C886) ----------------------------------------------------
int goodG2B_198()
{
  return goodG2BSink_33(2);
}

//----- (000000000042C8A8) ----------------------------------------------------
int __fastcall goodB2GSink_26(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000042C8DB) ----------------------------------------------------
int goodB2G_186()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_26(v2);
}

//----- (000000000042C945) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_41_good()
{
  goodB2G_186();
  return goodG2B_198();
}

//----- (000000000042C95F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_01_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000042C9BA) ----------------------------------------------------
int goodG2B_199()
{
  return printHexCharLine(3);
}

//----- (000000000042C9E8) ----------------------------------------------------
int goodB2G_187()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000042CA55) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_01_good()
{
  goodG2B_199();
  return goodB2G_187();
}

//----- (000000000042CA6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042CA9A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042CAC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042CB05) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 42CB05: using guessed type char buf[16];

//----- (000000000042CBF7) ----------------------------------------------------
int goodB2G1_111()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 42CBF7: using guessed type char buf[16];

//----- (000000000042CCFE) ----------------------------------------------------
int goodB2G2_111()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 42CCFE: using guessed type char buf[16];

//----- (000000000042CE05) ----------------------------------------------------
int goodG2B1_99()
{
  return printIntLine(3u);
}

//----- (000000000042CE31) ----------------------------------------------------
int goodG2B2_99()
{
  return printIntLine(3u);
}

//----- (000000000042CE5D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_02_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (000000000042CE8B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54d_badSink(a1);
}

//----- (000000000042CEA6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54d_goodG2BSink(a1);
}

//----- (000000000042CEC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54d_goodB2GSink(a1);
}

//----- (000000000042CEDC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_13_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042CF66) ----------------------------------------------------
int goodB2G1_112()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042D010) ----------------------------------------------------
int goodB2G2_112()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042D0AE) ----------------------------------------------------
int goodG2B1_100()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042D104) ----------------------------------------------------
int goodG2B2_100()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042D14E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_13_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (000000000042D17C) ----------------------------------------------------
void CWE190_Integer_Overflow__int_connect_socket_postinc_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = ++v7;
    printIntLine(v7);
  }
}
// 42D17C: using guessed type char buf[16];

//----- (000000000042D29B) ----------------------------------------------------
void goodB2G_188()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = ++v7;
      printIntLine(v7);
    }
  }
}
// 42D29B: using guessed type char buf[16];

//----- (000000000042D3CF) ----------------------------------------------------
int goodG2B_200()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (000000000042D421) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_17_good()
{
  goodB2G_188();
  return goodG2B_200();
}

//----- (000000000042D43B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042D462) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042D489) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000042D4CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v4 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D554) ----------------------------------------------------
int goodB2G1_113()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D5FD) ----------------------------------------------------
int goodB2G2_113()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D69A) ----------------------------------------------------
int goodG2B1_101()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D6E8) ----------------------------------------------------
int goodG2B2_101()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D72A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_14_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (000000000042D758) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D790) ----------------------------------------------------
int goodG2B_201()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_goodG2BSink(2);
}

//----- (000000000042D7B2) ----------------------------------------------------
int goodB2G_189()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D7EA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51_good()
{
  goodG2B_201();
  return goodB2G_189();
}

//----- (000000000042D804) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_32_bad()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int *v5; // [rsp+28h] [rbp-18h]
  int *v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v6 = &v4;
  v5 = &v4;
  v4 = 0;
  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  *v6 = v7;
  return printIntLine(*v5 + 1);
}

//----- (000000000042D8A1) ----------------------------------------------------
int goodG2B_202()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000042D8F8) ----------------------------------------------------
int goodB2G_190()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v8 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v8 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v8;
  v5 = *v6;
  if ( v5 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}

//----- (000000000042D9AA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_32_good()
{
  goodG2B_202();
  return goodB2G_190();
}

//----- (000000000042D9C4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042D9F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042DA2A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042DA72) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_15_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DABB) ----------------------------------------------------
int goodB2G1_114()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DB18) ----------------------------------------------------
int goodB2G2_114()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DB75) ----------------------------------------------------
int goodG2B1_102()
{
  return printHexCharLine(3);
}

//----- (000000000042DBA5) ----------------------------------------------------
int goodG2B2_102()
{
  return printHexCharLine(3);
}

//----- (000000000042DBD5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_15_good()
{
  goodB2G1_114();
  goodB2G2_114();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (000000000042DC03) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042DC2A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042DC51) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000042DC94) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_61_bad()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_rand_postinc_61b_badSource();
  return printHexCharLine(v0 + 1);
}

//----- (000000000042DCCC) ----------------------------------------------------
int goodG2B_203()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_rand_postinc_61b_goodG2BSource();
  return printHexCharLine(v0 + 1);
}

//----- (000000000042DD04) ----------------------------------------------------
int goodB2G_191()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE190_Integer_Overflow__char_rand_postinc_61b_goodB2GSource();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000042DD4E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_61_good()
{
  goodG2B_203();
  return goodB2G_191();
}

//----- (000000000042DD68) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_04_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000042DDA6) ----------------------------------------------------
int goodB2G1_115()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042DE05) ----------------------------------------------------
int goodB2G2_115()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042DE58) ----------------------------------------------------
int goodG2B1_103()
{
  return printIntLine(3u);
}

//----- (000000000042DEA2) ----------------------------------------------------
int goodG2B2_103()
{
  return printIntLine(3u);
}

//----- (000000000042DEE0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_04_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (000000000042DF0E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_31_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000042DF46) ----------------------------------------------------
int goodG2B_204()
{
  return printIntLine(3u);
}

//----- (000000000042DF7E) ----------------------------------------------------
int goodB2G_192()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042DFCB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_31_good()
{
  goodG2B_204();
  return goodB2G_192();
}

//----- (000000000042DFE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042E018) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042E04B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042E093) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042E0B4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042E0D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042E10B) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (000000000042E116) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (000000000042E121) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_08_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E188) ----------------------------------------------------
int goodB2G1_116()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)staticReturnsFalse_7() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E211) ----------------------------------------------------
int goodB2G2_116()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E28E) ----------------------------------------------------
int goodG2B1_104()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042E2EA) ----------------------------------------------------
int goodG2B2_104()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000042E33A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_08_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (000000000042E368) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 42E368: using guessed type char buf[16];

//----- (000000000042E445) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042E458) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 42E458: using guessed type char buf[16];

//----- (000000000042E535) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_63b_badSink(&v1);
}

//----- (000000000042E561) ----------------------------------------------------
int goodG2B_205()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000042E587) ----------------------------------------------------
int goodB2G_193()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_63b_goodB2GSink(&v1);
}

//----- (000000000042E5B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_63_good()
{
  goodG2B_205();
  return goodB2G_193();
}

//----- (000000000042E5CD) ----------------------------------------------------
int __fastcall badSink_34(__int16 a1)
{
  int result; // eax

  result = badStatic_6;
  if ( badStatic_6 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB324: using guessed type int badStatic_6;

//----- (000000000042E605) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_21_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  badStatic_6 = 1;
  return badSink_34(v1);
}
// 6AB324: using guessed type int badStatic_6;

//----- (000000000042E670) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(__int16 a1)
{
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6AB328: using guessed type int goodB2G1Static_6;

//----- (000000000042E6C8) ----------------------------------------------------
int goodB2G1_117()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(v1);
}
// 6AB328: using guessed type int goodB2G1Static_6;

//----- (000000000042E733) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6AB32C: using guessed type int goodB2G2Static_6;

//----- (000000000042E77F) ----------------------------------------------------
int goodB2G2_117()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(v1);
}
// 6AB32C: using guessed type int goodB2G2Static_6;

//----- (000000000042E7EA) ----------------------------------------------------
int __fastcall goodG2BSink_34(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB330: using guessed type int goodG2BStatic_6;

//----- (000000000042E822) ----------------------------------------------------
int goodG2B_206()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_34(2);
}
// 6AB330: using guessed type int goodG2BStatic_6;

//----- (000000000042E84D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_21_good()
{
  goodB2G1_117();
  goodB2G2_117();
  return goodG2B_206();
}

//----- (000000000042E871) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_07_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 6AB160: using guessed type int staticFive_5;

//----- (000000000042E8E2) ----------------------------------------------------
int goodB2G1_118()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 6AB160: using guessed type int staticFive_5;

//----- (000000000042E971) ----------------------------------------------------
int goodB2G2_118()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 6AB160: using guessed type int staticFive_5;

//----- (000000000042E9F4) ----------------------------------------------------
int goodG2B1_105()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_5 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB160: using guessed type int staticFive_5;

//----- (000000000042EA44) ----------------------------------------------------
int goodG2B2_105()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_5 == 5 )
    v1 = 2;
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB160: using guessed type int staticFive_5;

//----- (000000000042EA88) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_07_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (000000000042EAB6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000042EB2C) ----------------------------------------------------
int goodB2G_194()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000042EBB7) ----------------------------------------------------
int goodG2B_207()
{
  return printIntLine(3u);
}

//----- (000000000042EBE5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_18_good()
{
  goodB2G_194();
  return goodG2B_207();
}

//----- (000000000042EBFF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_52_bad()
{
  return CWE190_Integer_Overflow__int_max_postinc_52b_badSink(0x7FFFFFFF);
}

//----- (000000000042EC21) ----------------------------------------------------
int goodG2B_208()
{
  return CWE190_Integer_Overflow__int_max_postinc_52b_goodG2BSink(2);
}

//----- (000000000042EC43) ----------------------------------------------------
int goodB2G_195()
{
  return CWE190_Integer_Overflow__int_max_postinc_52b_goodB2GSink(0x7FFFFFFF);
}

//----- (000000000042EC65) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_52_good()
{
  goodG2B_208();
  return goodB2G_195();
}

//----- (000000000042EC7F) ----------------------------------------------------
int __fastcall badSink_35(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000042ECAD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_44_bad()
{
  return badSink_35(0x7FFF);
}

//----- (000000000042ECD7) ----------------------------------------------------
int __fastcall goodG2BSink_35(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000042ED05) ----------------------------------------------------
int goodG2B_209()
{
  return goodG2BSink_35(2);
}

//----- (000000000042ED2F) ----------------------------------------------------
int __fastcall goodB2GSink_27(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000042ED71) ----------------------------------------------------
int goodB2G_196()
{
  return goodB2GSink_27(0x7FFF);
}

//----- (000000000042ED9B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_44_good()
{
  goodG2B_209();
  return goodB2G_196();
}

//----- (000000000042EDB5) ----------------------------------------------------
__int64 badSource_10()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000042EE66) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_10();
  return printLongLongLine(v0 + 1);
}

//----- (000000000042EEA1) ----------------------------------------------------
__int64 goodG2BSource_10()
{
  return 2LL;
}

//----- (000000000042EEB7) ----------------------------------------------------
int goodG2B_210()
{
  __int64 v0; // rax

  v0 = goodG2BSource_10();
  return printLongLongLine(v0 + 1);
}

//----- (000000000042EEF2) ----------------------------------------------------
__int64 goodB2GSource_10()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000042EFA3) ----------------------------------------------------
int goodB2G_197()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_10();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000042EFFA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_42_good()
{
  goodB2G_197();
  return goodG2B_210();
}

//----- (000000000042F014) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_04_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (000000000042F098) ----------------------------------------------------
int goodB2G1_119()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042F13D) ----------------------------------------------------
int goodB2G2_119()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042F1D6) ----------------------------------------------------
int goodG2B1_106()
{
  return printIntLine(3u);
}

//----- (000000000042F220) ----------------------------------------------------
int goodG2B2_106()
{
  return printIntLine(3u);
}

//----- (000000000042F25E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_04_good()
{
  goodB2G1_119();
  goodB2G2_119();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (000000000042F28C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_31_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7 + 1;
  v4 = v7 + 1;
  return printIntLine(v7 + 1);
}

//----- (000000000042F30A) ----------------------------------------------------
int goodG2B_211()
{
  return printIntLine(3u);
}

//----- (000000000042F342) ----------------------------------------------------
int goodB2G_198()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  v4 = v6;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (000000000042F3D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_31_good()
{
  goodG2B_211();
  return goodB2G_198();
}

//----- (000000000042F3EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042F454) ----------------------------------------------------
int goodB2G1_120()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042F4E4) ----------------------------------------------------
int goodB2G2_120()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042F568) ----------------------------------------------------
int goodG2B1_107()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042F5BD) ----------------------------------------------------
int goodG2B2_107()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042F606) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_14_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (000000000042F634) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_max_postinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB338: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_badGlobal;

//----- (000000000042F65F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB33C: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Global;

//----- (000000000042F6AB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB340: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Global;

//----- (000000000042F6EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_max_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_max_postinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB344: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_goodG2BGlobal;

//----- (000000000042F716) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v4 = v1;
  return printLongLongLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F78F) ----------------------------------------------------
int goodG2B_212()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 3LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (000000000042F7F3) ----------------------------------------------------
int goodB2G_199()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F888) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good()
{
  goodG2B_212();
  return goodB2G_199();
}

//----- (000000000042F8A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 42F8A2: using guessed type char buf[16];

//----- (000000000042F9DC) ----------------------------------------------------
int goodB2G_200()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 42F9DC: using guessed type char buf[16];

//----- (000000000042FB2B) ----------------------------------------------------
int goodG2B_213()
{
  return printIntLine(3u);
}

//----- (000000000042FB59) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_18_good()
{
  goodB2G_200();
  return goodG2B_213();
}

//----- (000000000042FB73) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54c_badSink(a1);
}

//----- (000000000042FB8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54c_goodG2BSink(a1);
}

//----- (000000000042FBA9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54c_goodB2GSink(a1);
}

//----- (000000000042FBC4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_postinc_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (000000000042FBF6) ----------------------------------------------------
int goodG2B_214()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_postinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000042FC28) ----------------------------------------------------
int goodB2G_201()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_connect_socket_postinc_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042FC6F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_61_good()
{
  goodG2B_214();
  return goodB2G_201();
}

//----- (000000000042FC89) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_postinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB348: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_badGlobal;

//----- (000000000042FCB4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB34C: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Global;

//----- (000000000042FD00) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB350: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Global;

//----- (000000000042FD40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB354: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BGlobal;

//----- (000000000042FD6B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_05_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_8 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB164: using guessed type int staticTrue_8;

//----- (000000000042FDC6) ----------------------------------------------------
int goodB2G1_121()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_8 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB164: using guessed type int staticTrue_8;
// 6AB334: using guessed type int staticFalse_8;

//----- (000000000042FE41) ----------------------------------------------------
int goodB2G2_121()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_8 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB164: using guessed type int staticTrue_8;

//----- (000000000042FEB0) ----------------------------------------------------
int goodG2B1_108()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB164: using guessed type int staticTrue_8;
// 6AB334: using guessed type int staticFalse_8;

//----- (000000000042FEFE) ----------------------------------------------------
int goodG2B2_108()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_8 )
    v1 = 2;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB164: using guessed type int staticTrue_8;

//----- (000000000042FF40) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_05_good()
{
  goodB2G1_121();
  goodB2G2_121();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (000000000042FF6E) ----------------------------------------------------
int __fastcall badSink_36(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042FF99) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_41_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return badSink_36(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FFD2) ----------------------------------------------------
int __fastcall goodG2BSink_36(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000042FFFD) ----------------------------------------------------
int goodG2B_215()
{
  return goodG2BSink_36(2);
}

//----- (000000000043001A) ----------------------------------------------------
int __fastcall goodB2GSink_28(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000430057) ----------------------------------------------------
int goodB2G_202()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return goodB2GSink_28(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430090) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_41_good()
{
  goodB2G_202();
  return goodG2B_215();
}

//----- (00000000004300AA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_22_bad()
{
  CWE190_Integer_Overflow__int_max_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_max_postinc_22_badSink(0x7FFFFFFF);
}
// 6AB338: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_badGlobal;

//----- (00000000004300D6) ----------------------------------------------------
int goodB2G1_122()
{
  CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Sink(0x7FFFFFFF);
}
// 6AB33C: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_goodB2G1Global;

//----- (0000000000430102) ----------------------------------------------------
int goodB2G2_122()
{
  CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Sink(0x7FFFFFFF);
}
// 6AB340: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_goodB2G2Global;

//----- (000000000043012E) ----------------------------------------------------
int goodG2B_216()
{
  CWE190_Integer_Overflow__int_max_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_max_postinc_22_goodG2BSink(2);
}
// 6AB344: using guessed type int CWE190_Integer_Overflow__int_max_postinc_22_goodG2BGlobal;

//----- (000000000043015A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_22_good()
{
  goodB2G1_122();
  goodB2G2_122();
  return goodG2B_216();
}

//----- (000000000043017E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4766B8, &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004301DF) ----------------------------------------------------
int goodB2G1_123()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4766B8, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043026B) ----------------------------------------------------
int goodB2G2_123()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4766B8, &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004302EB) ----------------------------------------------------
int goodG2B1_109()
{
  return printLongLongLine(3LL);
}

//----- (000000000043033C) ----------------------------------------------------
int goodG2B2_109()
{
  return printLongLongLine(3LL);
}

//----- (0000000000430381) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_04_good()
{
  goodB2G1_123();
  goodB2G2_123();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (00000000004303AF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_54_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004303E8) ----------------------------------------------------
int goodG2B_217()
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54b_goodG2BSink(2);
}

//----- (0000000000430409) ----------------------------------------------------
int goodB2G_203()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430442) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_54_good()
{
  goodG2B_217();
  return goodB2G_203();
}

//----- (000000000043045C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_11_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}

//----- (00000000004304EC) ----------------------------------------------------
int goodB2G1_124()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}

//----- (000000000043059C) ----------------------------------------------------
int goodB2G2_124()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}

//----- (0000000000430640) ----------------------------------------------------
int goodG2B1_110()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000043069C) ----------------------------------------------------
int goodG2B2_110()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004306EC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_11_good()
{
  goodB2G1_124();
  goodB2G2_124();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (000000000043071A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_02_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000043078E) ----------------------------------------------------
int goodB2G1_125()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000430816) ----------------------------------------------------
int goodB2G2_125()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000043089E) ----------------------------------------------------
int goodG2B1_111()
{
  return printIntLine(3u);
}

//----- (00000000004308D2) ----------------------------------------------------
int goodG2B2_111()
{
  return printIntLine(3u);
}

//----- (0000000000430906) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_02_good()
{
  goodB2G1_125();
  goodB2G2_125();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (0000000000430934) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (0000000000430969) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) + 1);
}

//----- (000000000043099E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (00000000004309E5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000430A1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000430A59) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000430AAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_postinc_22_badSink(v4);
}
// 6AB348: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_badGlobal;

//----- (0000000000430B21) ----------------------------------------------------
int goodB2G1_126()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Sink(v4);
}
// 6AB34C: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G1Global;

//----- (0000000000430B93) ----------------------------------------------------
int goodB2G2_126()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Sink(v4);
}
// 6AB350: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_goodB2G2Global;

//----- (0000000000430C05) ----------------------------------------------------
int goodG2B_218()
{
  CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BSink(2);
}
// 6AB354: using guessed type int CWE190_Integer_Overflow__int_fgets_postinc_22_goodG2BGlobal;

//----- (0000000000430C31) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_22_good()
{
  goodB2G1_126();
  goodB2G2_126();
  return goodG2B_218();
}

//----- (0000000000430C55) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_51_bad()
{
  return CWE190_Integer_Overflow__int_max_postinc_51b_badSink(0x7FFFFFFF);
}

//----- (0000000000430C77) ----------------------------------------------------
int goodG2B_219()
{
  return CWE190_Integer_Overflow__int_max_postinc_51b_goodG2BSink(2);
}

//----- (0000000000430C99) ----------------------------------------------------
int goodB2G_204()
{
  return CWE190_Integer_Overflow__int_max_postinc_51b_goodB2GSink(0x7FFFFFFF);
}

//----- (0000000000430CBB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_51_good()
{
  goodG2B_219();
  return goodB2G_204();
}

//----- (0000000000430CD5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_10_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000430D5D) ----------------------------------------------------
int goodB2G1_127()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000430E05) ----------------------------------------------------
int goodB2G2_127()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000430EA1) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000430EF5) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000430F3D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_10_good()
{
  goodB2G1_127();
  goodB2G2_127();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (0000000000430F6B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000430FAD) ----------------------------------------------------
int goodB2G1_128()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431010) ----------------------------------------------------
int goodB2G2_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431067) ----------------------------------------------------
int goodG2B1_113()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004310B5) ----------------------------------------------------
int goodG2B2_113()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004310F7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_13_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (0000000000431125) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043115D) ----------------------------------------------------
int goodG2B_220()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_goodG2BSink(2);
}

//----- (000000000043117F) ----------------------------------------------------
int goodB2G_205()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004311B7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52_good()
{
  goodG2B_220();
  return goodB2G_205();
}

//----- (00000000004311D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 6AB168: using guessed type int staticFive_6;

//----- (000000000043125B) ----------------------------------------------------
int goodB2G1_129()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 6AB168: using guessed type int staticFive_6;

//----- (0000000000431306) ----------------------------------------------------
int goodB2G2_129()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 6AB168: using guessed type int staticFive_6;

//----- (00000000004313A5) ----------------------------------------------------
int goodG2B1_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB168: using guessed type int staticFive_6;

//----- (00000000004313F3) ----------------------------------------------------
int goodG2B2_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_6 == 5 )
    v1 = 2;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB168: using guessed type int staticFive_6;

//----- (0000000000431435) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_07_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (0000000000431463) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_52c_badSink(a1);
}

//----- (000000000043147D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_52c_goodG2BSink(a1);
}

//----- (0000000000431497) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_52c_goodB2GSink(a1);
}

//----- (00000000004314B1) ----------------------------------------------------
int __fastcall badSink_37(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004314D2) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_37;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431513) ----------------------------------------------------
int __fastcall goodG2BSink_37(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000431534) ----------------------------------------------------
int goodG2B_221()
{
  return goodG2BSink_37(2);
}

//----- (000000000043155F) ----------------------------------------------------
int __fastcall goodB2GSink_29(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000431595) ----------------------------------------------------
__int64 goodB2G_206()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_29;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004315D6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_44_good()
{
  goodG2B_221();
  return goodB2G_206();
}

//----- (00000000004315F0) ----------------------------------------------------
int __fastcall badSink_38(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000431617) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_41_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return badSink_38(v4);
}

//----- (00000000004316D4) ----------------------------------------------------
int __fastcall goodG2BSink_38(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004316FB) ----------------------------------------------------
int goodG2B_222()
{
  return goodG2BSink_38(2LL);
}

//----- (0000000000431721) ----------------------------------------------------
int __fastcall goodB2GSink_30(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000431764) ----------------------------------------------------
int goodB2G_207()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return goodB2GSink_30(v4);
}

//----- (0000000000431821) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_41_good()
{
  goodB2G_207();
  return goodG2B_222();
}

//----- (000000000043183B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54d_badSink(a1);
}

//----- (0000000000431852) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000431869) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000431880) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 32;
  __isoc99_fscanf(stdin, "%c", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__char_fscanf_postinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004318BE) ----------------------------------------------------
int goodG2B_223()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__char_fscanf_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004318E3) ----------------------------------------------------
int goodB2G_208()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 32;
  __isoc99_fscanf(stdin, "%c", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__char_fscanf_postinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431921) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_66_good()
{
  goodG2B_223();
  return goodB2G_208();
}

//----- (000000000043193B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink(a1);
}

//----- (0000000000431956) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53d_goodG2BSink(a1);
}

//----- (0000000000431971) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53d_goodB2GSink(a1);
}

//----- (000000000043198C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v4 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431A14) ----------------------------------------------------
int goodB2G1_130()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431ABD) ----------------------------------------------------
int goodB2G2_130()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431B5A) ----------------------------------------------------
int goodG2B1_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431BA8) ----------------------------------------------------
int goodG2B2_115()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000431BEA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_13_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (0000000000431C18) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_07_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_7 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB16C: using guessed type int staticFive_7;

//----- (0000000000431C75) ----------------------------------------------------
int goodB2G1_131()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_7 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB16C: using guessed type int staticFive_7;

//----- (0000000000431CF2) ----------------------------------------------------
int goodB2G2_131()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_7 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB16C: using guessed type int staticFive_7;

//----- (0000000000431D63) ----------------------------------------------------
int goodG2B1_116()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_7 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB16C: using guessed type int staticFive_7;

//----- (0000000000431DB3) ----------------------------------------------------
int goodG2B2_116()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_7 == 5 )
    v1 = 2;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB16C: using guessed type int staticFive_7;

//----- (0000000000431DF7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_07_good()
{
  goodB2G1_131();
  goodB2G2_131();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (0000000000431E25) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB358: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_badGlobal;

//----- (0000000000431E6A) ----------------------------------------------------
int goodB2G1_132()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB35C: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G1Global;

//----- (0000000000431EAF) ----------------------------------------------------
int goodB2G2_132()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB360: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodB2G2Global;

//----- (0000000000431EF4) ----------------------------------------------------
int goodG2B_224()
{
  CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BSink(2LL);
}
// 6AB364: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_goodG2BGlobal;

//----- (0000000000431F24) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_22_good()
{
  goodB2G1_132();
  goodB2G2_132();
  return goodG2B_224();
}

//----- (0000000000431F48) ----------------------------------------------------
int __fastcall badSink_39(int a1)
{
  int result; // eax

  result = badStatic_7;
  if ( badStatic_7 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB368: using guessed type int badStatic_7;

//----- (0000000000431F73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_21_bad()
{
  badStatic_7 = 1;
  return badSink_39(0x7FFFFFFF);
}
// 6AB368: using guessed type int badStatic_7;

//----- (0000000000431F9F) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(int a1)
{
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB36C: using guessed type int goodB2G1Static_7;

//----- (0000000000431FEB) ----------------------------------------------------
int goodB2G1_133()
{
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(0x7FFFFFFF);
}
// 6AB36C: using guessed type int goodB2G1Static_7;

//----- (0000000000432017) ----------------------------------------------------
int __fastcall goodB2G2Sink_7(int a1)
{
  int result; // eax

  result = goodB2G2Static_7;
  if ( goodB2G2Static_7 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB370: using guessed type int goodB2G2Static_7;

//----- (0000000000432057) ----------------------------------------------------
int goodB2G2_133()
{
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(0x7FFFFFFF);
}
// 6AB370: using guessed type int goodB2G2Static_7;

//----- (0000000000432083) ----------------------------------------------------
int __fastcall goodG2BSink_39(int a1)
{
  int result; // eax

  result = goodG2BStatic_7;
  if ( goodG2BStatic_7 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB374: using guessed type int goodG2BStatic_7;

//----- (00000000004320AE) ----------------------------------------------------
int goodG2B_225()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_39(2);
}
// 6AB374: using guessed type int goodG2BStatic_7;

//----- (00000000004320DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_21_good()
{
  goodB2G1_133();
  goodB2G2_133();
  return goodG2B_225();
}

//----- (00000000004320FE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_64b_badSink(&v1);
}

//----- (000000000043212A) ----------------------------------------------------
int goodG2B_226()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000432150) ----------------------------------------------------
int goodB2G_209()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_64b_goodB2GSink(&v1);
}

//----- (000000000043217C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_64_good()
{
  goodG2B_226();
  return goodB2G_209();
}

//----- (0000000000432196) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004321D8) ----------------------------------------------------
int goodB2G1_134()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000432238) ----------------------------------------------------
int goodB2G2_134()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -1;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043228C) ----------------------------------------------------
int goodG2B1_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004322DA) ----------------------------------------------------
int goodG2B2_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043231C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_13_good()
{
  goodB2G1_134();
  goodB2G2_134();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (000000000043234A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -1;
  v1 = -1;
  v3 = 0;
  v2 = 0;
  return printUnsignedLine(0);
}

//----- (00000000004323A1) ----------------------------------------------------
int goodG2B_227()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (00000000004323F8) ----------------------------------------------------
int goodB2G_210()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = -1;
  v1 = -1;
  v2 = -1;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000432461) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_32_good()
{
  goodG2B_227();
  return goodB2G_210();
}

//----- (000000000043247B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004324A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004324D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000432511) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (000000000043251C) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (0000000000432527) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v8 + 1);
  return result;
}
// 432527: using guessed type char buf[16];

//----- (000000000043267F) ----------------------------------------------------
int goodB2G1_135()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 43267F: using guessed type char buf[16];

//----- (00000000004327F8) ----------------------------------------------------
int goodB2G2_135()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 4327F8: using guessed type char buf[16];

//----- (0000000000432965) ----------------------------------------------------
int goodG2B1_118()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004329B9) ----------------------------------------------------
int goodG2B2_118()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000432A01) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_08_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (0000000000432A2F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432A78) ----------------------------------------------------
int goodB2G1_136()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432AD7) ----------------------------------------------------
int goodB2G2_136()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432B36) ----------------------------------------------------
int goodG2B1_119()
{
  return printIntLine(3u);
}

//----- (0000000000432B64) ----------------------------------------------------
int goodG2B2_119()
{
  return printIntLine(3u);
}

//----- (0000000000432B92) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_15_good()
{
  goodB2G1_136();
  goodB2G2_136();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (0000000000432BC0) ----------------------------------------------------
int __fastcall badSink_40(int a1)
{
  int result; // eax

  result = badStatic_8;
  if ( badStatic_8 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB378: using guessed type int badStatic_8;

//----- (0000000000432BEB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_8 = 1;
  return badSink_40(v4);
}
// 6AB378: using guessed type int badStatic_8;

//----- (0000000000432C5D) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(int a1)
{
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB37C: using guessed type int goodB2G1Static_8;

//----- (0000000000432CA9) ----------------------------------------------------
int goodB2G1_137()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(v4);
}
// 6AB37C: using guessed type int goodB2G1Static_8;

//----- (0000000000432D1B) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(int a1)
{
  int result; // eax

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB380: using guessed type int goodB2G2Static_8;

//----- (0000000000432D5B) ----------------------------------------------------
int goodB2G2_137()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(v4);
}
// 6AB380: using guessed type int goodB2G2Static_8;

//----- (0000000000432DCD) ----------------------------------------------------
int __fastcall goodG2BSink_40(int a1)
{
  int result; // eax

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB384: using guessed type int goodG2BStatic_8;

//----- (0000000000432DF8) ----------------------------------------------------
int goodG2B_228()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_40(2);
}
// 6AB384: using guessed type int goodG2BStatic_8;

//----- (0000000000432E24) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_21_good()
{
  goodB2G1_137();
  goodB2G2_137();
  return goodG2B_228();
}

//----- (0000000000432E48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_03_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000432EBA) ----------------------------------------------------
int goodB2G1_138()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000432F41) ----------------------------------------------------
int goodB2G2_138()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000432FC8) ----------------------------------------------------
int goodG2B1_120()
{
  return printIntLine(3u);
}

//----- (0000000000432FF4) ----------------------------------------------------
int goodG2B2_120()
{
  return printIntLine(3u);
}

//----- (0000000000433020) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_03_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (000000000043304E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004330B3) ----------------------------------------------------
int goodB2G1_139()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000433143) ----------------------------------------------------
int goodB2G2_139()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004331C7) ----------------------------------------------------
int goodG2B1_121()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043321C) ----------------------------------------------------
int goodG2B2_121()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000433265) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_13_good()
{
  goodB2G1_139();
  goodB2G2_139();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (0000000000433293) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_68b_badSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_postinc_68_badData + 1));
}
// 6AB5A6: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_badData;

//----- (00000000004332C6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_postinc_68_goodG2BData + 1));
}
// 6AB5A4: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_goodG2BData;

//----- (00000000004332F9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__short_fscanf_postinc_68_goodB2GData == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE190_Integer_Overflow__short_fscanf_postinc_68_goodB2GData + 1));
  return result;
}
// 6AB5A8: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_goodB2GData;

//----- (0000000000433340) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 + 1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (00000000004333BC) ----------------------------------------------------
int goodB2G_211()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043344D) ----------------------------------------------------
int goodG2B_229()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (00000000004334B4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_12_good()
{
  goodB2G_211();
  return goodG2B_229();
}

//----- (00000000004334CE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_14_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043352B) ----------------------------------------------------
int goodB2G1_140()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004335A8) ----------------------------------------------------
int goodB2G2_140()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000433619) ----------------------------------------------------
int goodG2B1_122()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000433669) ----------------------------------------------------
int goodG2B2_122()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004336AD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_14_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (00000000004336DB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_04_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_476DB8, &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433734) ----------------------------------------------------
int goodB2G1_141()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_476DB8, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004337AD) ----------------------------------------------------
int goodB2G2_141()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_476DB8, &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043381A) ----------------------------------------------------
int goodG2B1_123()
{
  return printHexCharLine(3);
}

//----- (0000000000433866) ----------------------------------------------------
int goodG2B2_123()
{
  return printHexCharLine(3);
}

//----- (00000000004338A6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_04_good()
{
  goodB2G1_141();
  goodB2G2_141();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (00000000004338D4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000433903) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000433932) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043397D) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (0000000000433988) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (0000000000433993) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000433A21) ----------------------------------------------------
int goodB2G1_142()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_9() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}

//----- (0000000000433AD0) ----------------------------------------------------
int goodB2G2_142()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}

//----- (0000000000433B73) ----------------------------------------------------
int goodG2B1_124()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000433BC7) ----------------------------------------------------
int goodG2B2_124()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000433C0F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_08_good()
{
  goodB2G1_142();
  goodB2G2_142();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (0000000000433C3D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433C86) ----------------------------------------------------
int goodB2G1_143()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433CE3) ----------------------------------------------------
int goodB2G2_143()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433D40) ----------------------------------------------------
int goodG2B1_125()
{
  return printUnsignedLine(3u);
}

//----- (0000000000433D6E) ----------------------------------------------------
int goodG2B2_125()
{
  return printUnsignedLine(3u);
}

//----- (0000000000433D9C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_15_good()
{
  goodB2G1_143();
  goodB2G2_143();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (0000000000433DCA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_31_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000433E02) ----------------------------------------------------
int goodG2B_230()
{
  return printUnsignedLine(3u);
}

//----- (0000000000433E3A) ----------------------------------------------------
int goodB2G_212()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000433E84) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_31_good()
{
  goodG2B_230();
  return goodB2G_212();
}

//----- (0000000000433E9E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_12_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v4 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v4 + 1);
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}

//----- (0000000000433F60) ----------------------------------------------------
int goodB2G_213()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v7 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  else if ( v7 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v7 + 1);
  }
  return result;
}

//----- (000000000043407D) ----------------------------------------------------
int goodG2B_231()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (00000000004340E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_12_good()
{
  goodB2G_213();
  return goodG2B_231();
}

//----- (00000000004340FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000434131) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000434164) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (00000000004341A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_03_bad()
{
  return printIntLine(0x80000000);
}

//----- (00000000004341D5) ----------------------------------------------------
int goodB2G1_144()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000434216) ----------------------------------------------------
int goodB2G2_144()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000434257) ----------------------------------------------------
int goodG2B1_126()
{
  return printIntLine(3u);
}

//----- (0000000000434283) ----------------------------------------------------
int goodG2B2_126()
{
  return printIntLine(3u);
}

//----- (00000000004342AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_03_good()
{
  goodB2G1_144();
  goodB2G2_144();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (00000000004342DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043430B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000434339) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000043437B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004343CA) ----------------------------------------------------
int goodB2G1_145()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434438) ----------------------------------------------------
int goodB2G2_145()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004344A6) ----------------------------------------------------
int goodG2B1_127()
{
  return printLongLongLine(3LL);
}

//----- (00000000004344D9) ----------------------------------------------------
int goodG2B2_127()
{
  return printLongLongLine(3LL);
}

//----- (000000000043450C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_03_good()
{
  goodB2G1_145();
  goodB2G2_145();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (000000000043453A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000434582) ----------------------------------------------------
int goodB2G1_146()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}

//----- (00000000004345EB) ----------------------------------------------------
int goodB2G2_146()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}

//----- (0000000000434648) ----------------------------------------------------
int goodG2B1_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043469C) ----------------------------------------------------
int goodG2B2_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004346E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_11_good()
{
  goodB2G1_146();
  goodB2G2_146();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (0000000000434712) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_02_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000043473E) ----------------------------------------------------
int goodB2G1_147()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043477F) ----------------------------------------------------
int goodB2G2_147()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004347C0) ----------------------------------------------------
int goodG2B1_129()
{
  return printIntLine(3u);
}

//----- (00000000004347EC) ----------------------------------------------------
int goodG2B2_129()
{
  return printIntLine(3u);
}

//----- (0000000000434818) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_02_good()
{
  goodB2G1_147();
  goodB2G2_147();
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (0000000000434846) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_68_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_68_badData = v1;
  return CWE190_Integer_Overflow__short_fscanf_postinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB5A6: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_badData;

//----- (0000000000434888) ----------------------------------------------------
int goodG2B_232()
{
  CWE190_Integer_Overflow__short_fscanf_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__short_fscanf_postinc_68b_goodG2BSink();
}
// 6AB5A4: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_goodG2BData;

//----- (00000000004348B3) ----------------------------------------------------
int goodB2G_214()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__short_fscanf_postinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB5A8: using guessed type __int16 CWE190_Integer_Overflow__short_fscanf_postinc_68_goodB2GData;

//----- (00000000004348F5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_68_good()
{
  goodG2B_232();
  return goodB2G_214();
}

//----- (000000000043490F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000434930) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000434951) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000434987) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_12_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  else
  {
    v4 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v4 + 1));
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}

//----- (0000000000434A53) ----------------------------------------------------
int goodB2G_215()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int v3; // ebx
  int v4; // eax
  int v5; // ebx
  int result; // eax
  __int16 v7; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v7 = v1;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      v3 = rand() << 15;
      LOWORD(v4) = v3 ^ rand();
    }
    else
    {
      rand();
      v5 = rand() << 15;
      v4 = ~(v5 ^ rand());
    }
    v7 = v4;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v7 + 1));
  }
  else if ( v7 == 0x7FFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v7 + 1));
  }
  return result;
}

//----- (0000000000434B6D) ----------------------------------------------------
int goodG2B_233()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000434BE5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_12_good()
{
  goodB2G_215();
  return goodG2B_233();
}

//----- (0000000000434BFF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_67_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_67b_badSink(v4);
}

//----- (0000000000434CC4) ----------------------------------------------------
int goodG2B_234()
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_67b_goodG2BSink(2LL);
}

//----- (0000000000434CF2) ----------------------------------------------------
int goodB2G_216()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_67b_goodB2GSink(v4);
}

//----- (0000000000434DB7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_67_good()
{
  goodG2B_234();
  return goodB2G_216();
}

//----- (0000000000434DD1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_53_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434E0A) ----------------------------------------------------
int goodG2B_235()
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53b_goodG2BSink(2);
}

//----- (0000000000434E2B) ----------------------------------------------------
int goodB2G_217()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434E64) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_53_good()
{
  goodG2B_235();
  return goodB2G_217();
}

//----- (0000000000434E7E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_15_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000434EB4) ----------------------------------------------------
int goodB2G1_148()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000434EFE) ----------------------------------------------------
int goodB2G2_148()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000434F48) ----------------------------------------------------
int goodG2B1_130()
{
  return printIntLine(3u);
}

//----- (0000000000434F7E) ----------------------------------------------------
int goodG2B2_130()
{
  return printIntLine(3u);
}

//----- (0000000000434FB4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_15_good()
{
  goodB2G1_148();
  goodB2G2_148();
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (0000000000434FE2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_01_bad()
{
  return printIntLine(0x80000000);
}

//----- (000000000043500E) ----------------------------------------------------
int goodG2B_236()
{
  return printIntLine(3u);
}

//----- (000000000043503A) ----------------------------------------------------
int goodB2G_218()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043507B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_01_good()
{
  goodG2B_236();
  return goodB2G_218();
}

//----- (0000000000435095) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004350C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004350F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000435133) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_8 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printUnsignedLine(v6 + 1);
  return result;
}
// 6AB170: using guessed type int staticFive_8;

//----- (00000000004351BD) ----------------------------------------------------
int goodB2G1_149()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_8 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}
// 6AB170: using guessed type int staticFive_8;

//----- (0000000000435265) ----------------------------------------------------
int goodB2G2_149()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_8 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}
// 6AB170: using guessed type int staticFive_8;

//----- (0000000000435301) ----------------------------------------------------
int goodG2B1_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB170: using guessed type int staticFive_8;

//----- (000000000043534F) ----------------------------------------------------
int goodG2B2_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = 2;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB170: using guessed type int staticFive_8;

//----- (0000000000435391) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_07_good()
{
  goodB2G1_149();
  goodB2G2_149();
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (00000000004353BF) ----------------------------------------------------
int __fastcall badSink_41(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004353ED) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_44_bad()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = badSink_41;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435431) ----------------------------------------------------
int __fastcall goodG2BSink_41(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043545F) ----------------------------------------------------
int goodG2B_237()
{
  return goodG2BSink_41(2);
}

//----- (0000000000435489) ----------------------------------------------------
int __fastcall goodB2GSink_31(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004354CB) ----------------------------------------------------
__int64 goodB2G_219()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_31;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043550F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_fscanf_postinc_44_good()
{
  goodG2B_237();
  return goodB2G_219();
}

//----- (0000000000435529) ----------------------------------------------------
__int64 __fastcall badSource_11(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435556) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_11(0);
  return printIntLine(v0 + 1);
}

//----- (0000000000435588) ----------------------------------------------------
__int64 goodG2BSource_11()
{
  return 2LL;
}

//----- (000000000043559B) ----------------------------------------------------
int goodG2B_238()
{
  int v0; // eax

  v0 = goodG2BSource_11();
  return printIntLine(v0 + 1);
}

//----- (00000000004355CD) ----------------------------------------------------
__int64 __fastcall goodB2GSource_11(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004355FA) ----------------------------------------------------
int goodB2G_220()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_11(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000435641) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_42_good()
{
  goodB2G_220();
  return goodG2B_238();
}

//----- (000000000043565B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000043568D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (00000000004356BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (000000000043570D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_bad()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badSink(-1);
}
// 6AB388: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_badGlobal;

//----- (0000000000435739) ----------------------------------------------------
int goodB2G1_150()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Sink(-1);
}
// 6AB38C: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G1Global;

//----- (0000000000435765) ----------------------------------------------------
int goodB2G2_150()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Sink(-1);
}
// 6AB390: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodB2G2Global;

//----- (0000000000435791) ----------------------------------------------------
int goodG2B_239()
{
  CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BSink(2);
}
// 6AB394: using guessed type int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_goodG2BGlobal;

//----- (00000000004357BD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_22_good()
{
  goodB2G1_150();
  goodB2G2_150();
  return goodG2B_239();
}

//----- (00000000004357E1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_01_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 + 1);
}

//----- (0000000000435853) ----------------------------------------------------
int goodG2B_240()
{
  return printIntLine(3u);
}

//----- (000000000043587F) ----------------------------------------------------
int goodB2G_221()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 + 1);
  return result;
}

//----- (0000000000435906) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_01_good()
{
  goodG2B_240();
  return goodB2G_221();
}

//----- (0000000000435920) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043598B) ----------------------------------------------------
int goodB2G1_151()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435A21) ----------------------------------------------------
int goodB2G2_151()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435AAB) ----------------------------------------------------
int goodG2B1_132()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000435B06) ----------------------------------------------------
int goodG2B2_132()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000435B55) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_good()
{
  goodB2G1_151();
  goodB2G2_151();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (0000000000435B83) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435BD2) ----------------------------------------------------
int goodB2G1_152()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435C40) ----------------------------------------------------
int goodB2G2_152()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435CAE) ----------------------------------------------------
int goodG2B1_133()
{
  return printLongLongLine(3LL);
}

//----- (0000000000435CE1) ----------------------------------------------------
int goodG2B2_133()
{
  return printLongLongLine(3LL);
}

//----- (0000000000435D14) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_good()
{
  goodB2G1_152();
  goodB2G2_152();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (0000000000435D42) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000435D82) ----------------------------------------------------
int goodB2G1_153()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000435DE3) ----------------------------------------------------
int goodB2G2_153()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000435E38) ----------------------------------------------------
int goodG2B1_134()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000435E84) ----------------------------------------------------
int goodG2B2_134()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000435EC4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_09_good()
{
  goodB2G1_153();
  goodB2G2_153();
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (0000000000435EF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53d_badSink(a1);
}

//----- (0000000000435F09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53d_goodG2BSink(a1);
}

//----- (0000000000435F20) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000435F37) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000435F96) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000435FA9) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_rand_postinc_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000436008) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_05_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = 0x7FFF;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB174: using guessed type int staticTrue_9;

//----- (0000000000436050) ----------------------------------------------------
int goodB2G1_154()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = 0x7FFF;
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6AB174: using guessed type int staticTrue_9;
// 6AB398: using guessed type int staticFalse_9;

//----- (00000000004360B8) ----------------------------------------------------
int goodB2G2_154()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = 0x7FFF;
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6AB174: using guessed type int staticTrue_9;

//----- (0000000000436114) ----------------------------------------------------
int goodG2B1_135()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB174: using guessed type int staticTrue_9;
// 6AB398: using guessed type int staticFalse_9;

//----- (0000000000436168) ----------------------------------------------------
int goodG2B2_135()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = 2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB174: using guessed type int staticTrue_9;

//----- (00000000004361B0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_05_good()
{
  goodB2G1_154();
  goodB2G2_154();
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (00000000004361DE) ----------------------------------------------------
int __fastcall badSink_42(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043620C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_41_bad()
{
  return badSink_42(0x7FFF);
}

//----- (000000000043622D) ----------------------------------------------------
int __fastcall goodG2BSink_42(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043625B) ----------------------------------------------------
int goodG2B_241()
{
  return goodG2BSink_42(2);
}

//----- (000000000043627C) ----------------------------------------------------
int __fastcall goodB2GSink_32(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004362BE) ----------------------------------------------------
int goodB2G_222()
{
  return goodB2GSink_32(0x7FFF);
}

//----- (00000000004362DF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_41_good()
{
  goodB2G_222();
  return goodG2B_241();
}

//----- (00000000004362F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000436320) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000436347) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043638A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_65_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__short_rand_postinc_65b_badSink)((unsigned int)(__int16)v1);
}

//----- (00000000004363F4) ----------------------------------------------------
int goodG2B_242()
{
  return CWE190_Integer_Overflow__short_rand_postinc_65b_goodG2BSink(2);
}

//----- (000000000043641E) ----------------------------------------------------
__int64 goodB2G_223()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__short_rand_postinc_65b_goodB2GSink)((unsigned int)(__int16)v1);
}

//----- (0000000000436488) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_65_good()
{
  goodG2B_242();
  return goodB2G_223();
}

//----- (00000000004364A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_bad()
{
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+8h] [rbp-18h]
  __int64 v3; // [rsp+10h] [rbp-10h]
  __int64 v4; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004364FA) ----------------------------------------------------
int goodG2B_243()
{
  return printLongLongLine(3LL);
}

//----- (000000000043653D) ----------------------------------------------------
int goodB2G_224()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004365B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_31_good()
{
  goodG2B_243();
  return goodB2G_224();
}

//----- (00000000004365CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043662E) ----------------------------------------------------
int goodB2G1_155()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004366BC) ----------------------------------------------------
int goodB2G2_155()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043673E) ----------------------------------------------------
int goodG2B1_136()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000436791) ----------------------------------------------------
int goodG2B2_136()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004367D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_10_good()
{
  goodB2G1_155();
  goodB2G2_155();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (0000000000436806) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_51b_badSink(v8);
}
// 436806: using guessed type char buf[16];

//----- (0000000000436934) ----------------------------------------------------
int goodG2B_244()
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_51b_goodG2BSink(2);
}

//----- (0000000000436956) ----------------------------------------------------
int goodB2G_225()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_51b_goodB2GSink(v8);
}
// 436956: using guessed type char buf[16];

//----- (0000000000436A84) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_51_good()
{
  goodG2B_244();
  return goodB2G_225();
}

//----- (0000000000436A9E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_32_bad()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char *v3; // [rsp+10h] [rbp-10h]
  char *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 32;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  *v4 = v1;
  return printHexCharLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436B13) ----------------------------------------------------
int goodG2B_245()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printHexCharLine(3);
}

//----- (0000000000436B6F) ----------------------------------------------------
int goodB2G_226()
{
  int result; // eax
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 32;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436BF6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_32_good()
{
  goodG2B_245();
  return goodB2G_226();
}

//----- (0000000000436C10) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_34_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000436C54) ----------------------------------------------------
int goodG2B_246()
{
  return printIntLine(3u);
}

//----- (0000000000436C98) ----------------------------------------------------
int goodB2G_227()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000436CF0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_34_good()
{
  goodG2B_246();
  return goodB2G_227();
}

//----- (0000000000436D0A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v4 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000436D90) ----------------------------------------------------
int goodB2G1_156()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000436E37) ----------------------------------------------------
int goodB2G2_156()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000436ED2) ----------------------------------------------------
int goodG2B1_137()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000436F1E) ----------------------------------------------------
int goodG2B2_137()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000436F5E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_09_good()
{
  goodB2G1_156();
  goodB2G2_156();
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (0000000000436F8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53c_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_53d_badSink(a1);
}

//----- (0000000000436FA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53c_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_53d_goodG2BSink(a1);
}

//----- (0000000000436FC2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_53c_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_max_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000436FDD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_rand_postinc_22_badSink(v2);
}
// 6AB39C: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_badGlobal;

//----- (0000000000437051) ----------------------------------------------------
int goodB2G1_157()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Sink(v2);
}
// 6AB3A0: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G1Global;

//----- (00000000004370C5) ----------------------------------------------------
int goodB2G2_157()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Sink(v2);
}
// 6AB3A4: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_goodB2G2Global;

//----- (0000000000437139) ----------------------------------------------------
int goodG2B_247()
{
  CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BSink(2);
}
// 6AB3A8: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_22_goodG2BGlobal;

//----- (0000000000437165) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_22_good()
{
  goodB2G1_157();
  goodB2G2_157();
  return goodG2B_247();
}

//----- (0000000000437189) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (00000000004371C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (00000000004371F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}

//----- (0000000000437245) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437266) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437287) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004372BD) ----------------------------------------------------
int __fastcall badSink_43(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004372DE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_43;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043731F) ----------------------------------------------------
int __fastcall goodG2BSink_43(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000437340) ----------------------------------------------------
int goodG2B_248()
{
  return goodG2BSink_43(2);
}

//----- (000000000043736B) ----------------------------------------------------
int __fastcall goodB2GSink_33(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000043739E) ----------------------------------------------------
__int64 goodB2G_228()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_33;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004373DF) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_44_good()
{
  goodG2B_248();
  return goodB2G_228();
}

//----- (00000000004373F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437448) ----------------------------------------------------
int goodG2B_249()
{
  return printLongLongLine(3LL);
}

//----- (000000000043747B) ----------------------------------------------------
int goodB2G_229()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004374E9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_good()
{
  goodG2B_249();
  return goodB2G_229();
}

//----- (0000000000437503) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_52_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043753C) ----------------------------------------------------
int goodG2B_250()
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_52b_goodG2BSink(2);
}

//----- (000000000043755D) ----------------------------------------------------
int goodB2G_230()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437596) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_52_good()
{
  goodG2B_250();
  return goodB2G_230();
}

//----- (00000000004375B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004375DE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043760C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000043764E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_31_bad()
{
  char v1; // [rsp+Ch] [rbp-4h]
  char v2; // [rsp+Dh] [rbp-3h]
  char v3; // [rsp+Eh] [rbp-2h]
  char v4; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004376A3) ----------------------------------------------------
int goodG2B_251()
{
  return printHexCharLine(3);
}

//----- (00000000004376DF) ----------------------------------------------------
int goodB2G_231()
{
  int result; // eax
  char v1; // [rsp+Ch] [rbp-4h]
  char v2; // [rsp+Eh] [rbp-2h]
  char v3; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437746) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_31_good()
{
  goodG2B_251();
  return goodB2G_231();
}

//----- (0000000000437760) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004377AE) ----------------------------------------------------
int goodG2B_252()
{
  return printIntLine(3u);
}

//----- (00000000004377E6) ----------------------------------------------------
int goodB2G_232()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1;
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437849) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_34_good()
{
  goodG2B_252();
  return goodB2G_232();
}

//----- (0000000000437863) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_65b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043788E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004378B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004378F6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_16_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437943) ----------------------------------------------------
int goodB2G_233()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004379A6) ----------------------------------------------------
int goodG2B_253()
{
  return printIntLine(3u);
}

//----- (00000000004379DC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_16_good()
{
  goodB2G_233();
  return goodG2B_253();
}

//----- (00000000004379F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000437A1D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000437A44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000437A87) ----------------------------------------------------
int __fastcall badSink_44(int a1)
{
  int result; // eax

  result = badStatic_9;
  if ( badStatic_9 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB3AC: using guessed type int badStatic_9;

//----- (0000000000437AB2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_21_bad()
{
  badStatic_9 = 1;
  return badSink_44(-1);
}
// 6AB3AC: using guessed type int badStatic_9;

//----- (0000000000437ADE) ----------------------------------------------------
int __fastcall goodB2G1Sink_9(int a1)
{
  if ( goodB2G1Static_9 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6AB3B0: using guessed type int goodB2G1Static_9;

//----- (0000000000437B27) ----------------------------------------------------
int goodB2G1_158()
{
  goodB2G1Static_9 = 0;
  return goodB2G1Sink_9(-1);
}
// 6AB3B0: using guessed type int goodB2G1Static_9;

//----- (0000000000437B53) ----------------------------------------------------
int __fastcall goodB2G2Sink_9(int a1)
{
  int result; // eax

  result = goodB2G2Static_9;
  if ( goodB2G2Static_9 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6AB3B4: using guessed type int goodB2G2Static_9;

//----- (0000000000437B90) ----------------------------------------------------
int goodB2G2_158()
{
  goodB2G2Static_9 = 1;
  return goodB2G2Sink_9(-1);
}
// 6AB3B4: using guessed type int goodB2G2Static_9;

//----- (0000000000437BBC) ----------------------------------------------------
int __fastcall goodG2BSink_44(int a1)
{
  int result; // eax

  result = goodG2BStatic_9;
  if ( goodG2BStatic_9 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB3B8: using guessed type int goodG2BStatic_9;

//----- (0000000000437BE7) ----------------------------------------------------
int goodG2B_254()
{
  goodG2BStatic_9 = 1;
  return goodG2BSink_44(2);
}
// 6AB3B8: using guessed type int goodG2BStatic_9;

//----- (0000000000437C13) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_21_good()
{
  goodB2G1_158();
  goodB2G2_158();
  return goodG2B_254();
}

//----- (0000000000437C37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000437C63) ----------------------------------------------------
int goodB2G1_159()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000437CA1) ----------------------------------------------------
int goodB2G2_159()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000437CDF) ----------------------------------------------------
int goodG2B1_138()
{
  return printUnsignedLine(3u);
}

//----- (0000000000437D0B) ----------------------------------------------------
int goodG2B2_138()
{
  return printUnsignedLine(3u);
}

//----- (0000000000437D37) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_03_good()
{
  goodB2G1_159();
  goodB2G2_159();
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (0000000000437D65) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000437DA5) ----------------------------------------------------
int goodB2G1_160()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000437E03) ----------------------------------------------------
int goodB2G2_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -1;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000437E55) ----------------------------------------------------
int goodG2B1_139()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000437EA1) ----------------------------------------------------
int goodG2B2_139()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000437EE1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_09_good()
{
  goodB2G1_160();
  goodB2G2_160();
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (0000000000437F0F) ----------------------------------------------------
int badSink_45()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_postinc_45_badData + 1);
}
// 6AB3BC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_45_badData;

//----- (0000000000437F36) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_45_badData = v8;
  return badSink_45();
}
// 6AB3BC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_45_badData;
// 437F36: using guessed type char buf[16];

//----- (000000000043806D) ----------------------------------------------------
int goodG2BSink_45()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodG2BData + 1);
}
// 6AB3C0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodG2BData;

//----- (0000000000438094) ----------------------------------------------------
int goodG2B_255()
{
  CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodG2BData = 2;
  return goodG2BSink_45();
}
// 6AB3C0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodG2BData;

//----- (00000000004380BF) ----------------------------------------------------
int goodB2GSink_34()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB3C4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodB2GData;

//----- (00000000004380FB) ----------------------------------------------------
int goodB2G_234()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodB2GData = v8;
  return goodB2GSink_34();
}
// 6AB3C4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_45_goodB2GData;
// 4380FB: using guessed type char buf[16];

//----- (0000000000438232) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_45_good()
{
  goodG2B_255();
  return goodB2G_234();
}

//----- (000000000043824C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438287) ----------------------------------------------------
int goodG2B_256()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_goodG2BSink(2LL);
}

//----- (00000000004382AD) ----------------------------------------------------
int goodB2G_235()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004382E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_52_good()
{
  goodG2B_256();
  return goodB2G_235();
}

//----- (0000000000438302) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438365) ----------------------------------------------------
int goodB2G1_161()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004383F3) ----------------------------------------------------
int goodB2G2_161()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438475) ----------------------------------------------------
int goodG2B1_140()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004384C8) ----------------------------------------------------
int goodG2B2_140()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043850F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_good()
{
  goodB2G1_161();
  goodB2G2_161();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (000000000043853D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_51_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438576) ----------------------------------------------------
int goodG2B_257()
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_51b_goodG2BSink(2);
}

//----- (0000000000438597) ----------------------------------------------------
int goodB2G_236()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE190_Integer_Overflow__short_fscanf_postinc_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004385D0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_51_good()
{
  goodG2B_257();
  return goodB2G_236();
}

//----- (00000000004385EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53c_badSink(a1);
}

//----- (0000000000438601) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000438618) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53c_goodB2GSink(a1);
}

//----- (000000000043862F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (000000000043868E) ----------------------------------------------------
int goodB2G_237()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(++v1);
  }
  return result;
}

//----- (0000000000438709) ----------------------------------------------------
int goodG2B_258()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (0000000000438762) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_17_good()
{
  goodB2G_237();
  return goodG2B_258();
}

//----- (000000000043877C) ----------------------------------------------------
int __fastcall badSink_46(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043879D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_46(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004387D5) ----------------------------------------------------
int __fastcall goodG2BSink_46(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004387F6) ----------------------------------------------------
int goodG2B_259()
{
  return goodG2BSink_46(2);
}

//----- (0000000000438818) ----------------------------------------------------
int __fastcall goodB2GSink_35(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043884E) ----------------------------------------------------
int goodB2G_238()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_35(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438886) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_41_good()
{
  goodB2G_238();
  return goodG2B_259();
}

//----- (00000000004388A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (00000000004388CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (00000000004388F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (0000000000438933) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_51b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043895E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000438989) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004389C6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_18_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000438A92) ----------------------------------------------------
int goodB2G_239()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000438B7A) ----------------------------------------------------
int goodG2B_260()
{
  return printLongLongLine(3LL);
}

//----- (0000000000438BAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_18_good()
{
  goodB2G_239();
  return goodG2B_260();
}

//----- (0000000000438BC9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_68_badData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_68b_badSink();
}
// 6AB5B0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_68_badData;
// 438BC9: using guessed type char buf[16];

//----- (0000000000438D00) ----------------------------------------------------
int goodG2B_261()
{
  CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_68b_goodG2BSink();
}
// 6AB5AC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodG2BData;

//----- (0000000000438D2B) ----------------------------------------------------
int goodB2G_240()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodB2GData = v8;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_68b_goodB2GSink();
}
// 6AB5B4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodB2GData;
// 438D2B: using guessed type char buf[16];

//----- (0000000000438E62) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_68_good()
{
  goodG2B_261();
  return goodB2G_240();
}

//----- (0000000000438E7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_badSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_fscanf_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__char_fscanf_postinc_22_badGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB3CC: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_badGlobal;

//----- (0000000000438EB1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Sink(char a1)
{
  if ( CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6AB3D0: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Global;

//----- (0000000000438F04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Global )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6AB3D4: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Global;

//----- (0000000000438F4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BGlobal )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB3D8: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BGlobal;

//----- (0000000000438F80) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -1;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 + 1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (0000000000438FF9) ----------------------------------------------------
int goodB2G_241()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000439084) ----------------------------------------------------
int goodG2B_262()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (00000000004390EB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_12_good()
{
  goodB2G_241();
  return goodG2B_262();
}

//----- (0000000000439105) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000439141) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000043917D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (00000000004391CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004391EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043920D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000439243) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_10 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB178: using guessed type int staticTrue_10;

//----- (000000000043929E) ----------------------------------------------------
int goodB2G1_162()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_10 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse_10 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB178: using guessed type int staticTrue_10;
// 6AB3C8: using guessed type int staticFalse_10;

//----- (000000000043931B) ----------------------------------------------------
int goodB2G2_162()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_10 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB178: using guessed type int staticTrue_10;

//----- (000000000043938C) ----------------------------------------------------
int goodG2B1_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_10 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB178: using guessed type int staticTrue_10;
// 6AB3C8: using guessed type int staticFalse_10;

//----- (00000000004393D8) ----------------------------------------------------
int goodG2B2_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_10 )
    v1 = 2;
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB178: using guessed type int staticTrue_10;

//----- (0000000000439418) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_05_good()
{
  goodB2G1_162();
  goodB2G2_162();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (0000000000439446) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_01_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000439510) ----------------------------------------------------
int goodG2B_263()
{
  return printLongLongLine(3LL);
}

//----- (0000000000439543) ----------------------------------------------------
int goodB2G_242()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000439629) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_01_good()
{
  goodG2B_263();
  return goodB2G_242();
}

//----- (0000000000439643) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_06_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477CDC, &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004396A2) ----------------------------------------------------
int goodB2G1_163()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477CDC, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439723) ----------------------------------------------------
int goodB2G2_163()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477CDC, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439798) ----------------------------------------------------
int goodG2B1_142()
{
  return printIntLine(3u);
}

//----- (00000000004397EC) ----------------------------------------------------
int goodG2B2_142()
{
  return printIntLine(3u);
}

//----- (0000000000439834) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_06_good()
{
  goodB2G1_163();
  goodB2G2_163();
  goodG2B1_142();
  return goodG2B2_142();
}

//----- (0000000000439862) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_61b_badSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000043987E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000439894) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_postinc_61b_goodB2GSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (00000000004398B0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_17_bad()
{
  int result; // eax
  __int16 v1; // [rsp+4h] [rbp-Ch]
  __int16 v2; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%hd", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printIntLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439921) ----------------------------------------------------
int goodB2G_243()
{
  int result; // eax
  __int16 v1; // [rsp+4h] [rbp-Ch]
  __int16 v2; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%hd", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printIntLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004399A8) ----------------------------------------------------
int goodG2B_264()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000439A02) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_17_good()
{
  goodB2G_243();
  return goodG2B_264();
}

//----- (0000000000439A1C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53b_badSink(v8);
}
// 439A1C: using guessed type char buf[16];

//----- (0000000000439B4A) ----------------------------------------------------
int goodG2B_265()
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53b_goodG2BSink(2);
}

//----- (0000000000439B6C) ----------------------------------------------------
int goodB2G_244()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_53b_goodB2GSink(v8);
}
// 439B6C: using guessed type char buf[16];

//----- (0000000000439C9A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_53_good()
{
  goodG2B_265();
  return goodB2G_244();
}

//----- (0000000000439CB4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_65_bad()
{
  return CWE190_Integer_Overflow__short_max_postinc_65b_badSink(0x7FFF);
}

//----- (0000000000439CDE) ----------------------------------------------------
int goodG2B_266()
{
  return CWE190_Integer_Overflow__short_max_postinc_65b_goodG2BSink(2);
}

//----- (0000000000439D08) ----------------------------------------------------
int goodB2G_245()
{
  return CWE190_Integer_Overflow__short_max_postinc_65b_goodB2GSink(0x7FFF);
}

//----- (0000000000439D32) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_65_good()
{
  goodG2B_266();
  return goodB2G_245();
}

//----- (0000000000439D4C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_badSink(&v6);
}

//----- (0000000000439DB8) ----------------------------------------------------
int goodG2B_267()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000439DDC) ----------------------------------------------------
int goodB2G_246()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_63b_goodB2GSink(&v6);
}

//----- (0000000000439E48) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_63_good()
{
  goodG2B_267();
  return goodB2G_246();
}

//----- (0000000000439E62) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000439E83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000439EA4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000439EDA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_22_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__char_fscanf_postinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3CC: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_badGlobal;

//----- (0000000000439F1D) ----------------------------------------------------
int goodB2G1_164()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3D0: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G1Global;

//----- (0000000000439F60) ----------------------------------------------------
int goodB2G2_164()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3D4: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodB2G2Global;

//----- (0000000000439FA3) ----------------------------------------------------
int goodG2B_268()
{
  CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BSink(2);
}
// 6AB3D8: using guessed type int CWE190_Integer_Overflow__char_fscanf_postinc_22_goodG2BGlobal;

//----- (0000000000439FCA) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_22_good()
{
  goodB2G1_164();
  goodB2G2_164();
  return goodG2B_268();
}

//----- (0000000000439FEE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043A036) ----------------------------------------------------
int goodB2G1_165()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}

//----- (000000000043A09C) ----------------------------------------------------
int goodB2G2_165()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -1;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}

//----- (000000000043A0F6) ----------------------------------------------------
int goodG2B1_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043A14A) ----------------------------------------------------
int goodG2B2_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043A192) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_11_good()
{
  goodB2G1_165();
  goodB2G2_165();
  goodG2B1_143();
  return goodG2B2_143();
}

//----- (000000000043A1C0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_02_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000043A1EC) ----------------------------------------------------
int goodB2G1_166()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043A22A) ----------------------------------------------------
int goodB2G2_166()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043A268) ----------------------------------------------------
int goodG2B1_144()
{
  return printUnsignedLine(3u);
}

//----- (000000000043A294) ----------------------------------------------------
int goodG2B2_144()
{
  return printUnsignedLine(3u);
}

//----- (000000000043A2C0) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_02_good()
{
  goodB2G1_166();
  goodB2G2_166();
  goodG2B1_144();
  return goodG2B2_144();
}

//----- (000000000043A2EE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_64_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_postinc_64b_badSink(&v1);
}

//----- (000000000043A30C) ----------------------------------------------------
int goodG2B_269()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_max_postinc_64b_goodG2BSink(&v1);
}

//----- (000000000043A32A) ----------------------------------------------------
int goodB2G_247()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 127;
  return CWE190_Integer_Overflow__char_max_postinc_64b_goodB2GSink(&v1);
}

//----- (000000000043A348) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_64_good()
{
  goodG2B_269();
  return goodB2G_247();
}

//----- (000000000043A362) ----------------------------------------------------
int badSink_47()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_badData + 1);
}
// 6AB3DC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_badData;

//----- (000000000043A389) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_badData = v2;
  return badSink_47();
}
// 6AB3DC: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_badData;

//----- (000000000043A3FC) ----------------------------------------------------
int goodG2BSink_47()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodG2BData + 1);
}
// 6AB3E0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodG2BData;

//----- (000000000043A423) ----------------------------------------------------
int goodG2B_270()
{
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodG2BData = 2;
  return goodG2BSink_47();
}
// 6AB3E0: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodG2BData;

//----- (000000000043A44E) ----------------------------------------------------
int goodB2GSink_36()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB3E4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodB2GData;

//----- (000000000043A487) ----------------------------------------------------
int goodB2G_248()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodB2GData = v2;
  return goodB2GSink_36();
}
// 6AB3E4: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_goodB2GData;

//----- (000000000043A4FA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_45_good()
{
  goodG2B_270();
  return goodB2G_248();
}

//----- (000000000043A514) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043A554) ----------------------------------------------------
int goodB2G1_167()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043A5B2) ----------------------------------------------------
int goodB2G2_167()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -1;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043A604) ----------------------------------------------------
int goodG2B1_145()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043A650) ----------------------------------------------------
int goodG2B2_145()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043A690) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_10_good()
{
  goodB2G1_167();
  goodB2G2_167();
  goodG2B1_145();
  return goodG2B2_145();
}

//----- (000000000043A6BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_52c_badSink(a1);
}

//----- (000000000043A6D5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_52c_goodG2BSink(a1);
}

//----- (000000000043A6EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_52c_goodB2GSink(a1);
}

//----- (000000000043A703) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB17C: using guessed type int staticFive_9;

//----- (000000000043A752) ----------------------------------------------------
int goodB2G1_168()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 6AB17C: using guessed type int staticFive_9;

//----- (000000000043A7C9) ----------------------------------------------------
int goodB2G2_168()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 6AB17C: using guessed type int staticFive_9;

//----- (000000000043A834) ----------------------------------------------------
int goodG2B1_146()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB17C: using guessed type int staticFive_9;

//----- (000000000043A889) ----------------------------------------------------
int goodG2B2_146()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 2LL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB17C: using guessed type int staticFive_9;

//----- (000000000043A8D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_07_good()
{
  goodB2G1_168();
  goodB2G2_168();
  goodG2B1_146();
  return goodG2B2_146();
}

//----- (000000000043A900) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_13_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A95D) ----------------------------------------------------
int goodB2G1_169()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A9DA) ----------------------------------------------------
int goodB2G2_169()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AA4B) ----------------------------------------------------
int goodG2B1_147()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AA9B) ----------------------------------------------------
int goodG2B2_147()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AADF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_13_good()
{
  goodB2G1_169();
  goodB2G2_169();
  goodG2B1_147();
  return goodG2B2_147();
}

//----- (000000000043AB0D) ----------------------------------------------------
int badSink_48()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_badData + 1);
}
// 6AB3E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_badData;

//----- (000000000043AB34) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_badData = v1;
  return badSink_48();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3E8: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_badData;

//----- (000000000043AB75) ----------------------------------------------------
int goodG2BSink_48()
{
  return printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodG2BData + 1);
}
// 6AB3EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodG2BData;

//----- (000000000043AB9C) ----------------------------------------------------
int goodG2B_271()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodG2BData = 2;
  return goodG2BSink_48();
}
// 6AB3EC: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodG2BData;

//----- (000000000043ABC7) ----------------------------------------------------
int goodB2GSink_37()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodB2GData == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB3F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodB2GData;

//----- (000000000043AC00) ----------------------------------------------------
int goodB2G_249()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodB2GData = v1;
  return goodB2GSink_37();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3F0: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_goodB2GData;

//----- (000000000043AC41) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_45_good()
{
  goodG2B_271();
  return goodB2G_249();
}

//----- (000000000043AC5B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_postinc_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_postinc_65b_badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000043ACCC) ----------------------------------------------------
int goodG2B_272()
{
  return CWE190_Integer_Overflow__int_fgets_postinc_65b_goodG2BSink(2);
}

//----- (000000000043ACF7) ----------------------------------------------------
__int64 goodB2G_250()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_postinc_65b_goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000043AD68) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_postinc_65_good()
{
  goodG2B_272();
  return goodB2G_250();
}

//----- (000000000043AD82) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_01_bad()
{
  return printUnsignedLine(0);
}

//----- (000000000043ADAE) ----------------------------------------------------
int goodG2B_273()
{
  return printUnsignedLine(3u);
}

//----- (000000000043ADDA) ----------------------------------------------------
int goodB2G_251()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043AE18) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_01_good()
{
  goodG2B_273();
  return goodB2G_251();
}

//----- (000000000043AE32) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043AE72) ----------------------------------------------------
int goodB2G1_170()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043AED3) ----------------------------------------------------
int goodB2G2_170()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFFFFFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043AF28) ----------------------------------------------------
int goodG2B1_148()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043AF74) ----------------------------------------------------
int goodG2B2_148()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043AFB4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_10_good()
{
  goodB2G1_170();
  goodB2G2_170();
  goodG2B1_148();
  return goodG2B2_148();
}

//----- (000000000043AFE2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54d_badSink(a1);
}

//----- (000000000043AFFC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54d_goodG2BSink(a1);
}

//----- (000000000043B016) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54d_goodB2GSink(a1);
}

//----- (000000000043B030) ----------------------------------------------------
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printUnsignedLine(++v5);
}

//----- (000000000043B0CA) ----------------------------------------------------
void goodB2G_252()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 == -1 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printUnsignedLine(++v5);
  }
}

//----- (000000000043B176) ----------------------------------------------------
int goodG2B_274()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (000000000043B1C8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_good()
{
  goodB2G_252();
  return goodG2B_274();
}

//----- (000000000043B1E2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_66_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_66b_badSink((__int64)&v4);
}

//----- (000000000043B24C) ----------------------------------------------------
int goodG2B_275()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_rand_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043B276) ----------------------------------------------------
int goodB2G_253()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_66b_goodB2GSink((__int64)&v4);
}

//----- (000000000043B2E0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_66_good()
{
  goodG2B_275();
  return goodB2G_253();
}

//----- (000000000043B2FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_67b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043B32B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000043B35C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000043B39F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043B3C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043B3ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043B430) ----------------------------------------------------
__int64 staticReturnsTrue_10()
{
  return 1LL;
}

//----- (000000000043B43B) ----------------------------------------------------
__int64 staticReturnsFalse_10()
{
  return 0LL;
}

//----- (000000000043B446) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_10();
  if ( result )
    result = printIntLine(v7 + 1);
  return result;
}
// 43B446: using guessed type char buf[16];

//----- (000000000043B558) ----------------------------------------------------
int goodB2G1_171()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_10() )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 43B558: using guessed type char buf[16];

//----- (000000000043B68B) ----------------------------------------------------
int goodB2G2_171()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_10();
  if ( result )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 43B68B: using guessed type char buf[16];

//----- (000000000043B7B2) ----------------------------------------------------
int goodG2B1_149()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_10() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_10();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043B806) ----------------------------------------------------
int goodG2B2_149()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
    v1 = 2;
  result = staticReturnsTrue_10();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043B84E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_08_good()
{
  goodB2G1_171();
  goodB2G2_171();
  goodG2B1_149();
  return goodG2B2_149();
}

//----- (000000000043B87C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043B8AA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000043B8D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000043B91A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_52b_badSink(v8);
}
// 43B91A: using guessed type char buf[16];

//----- (000000000043BA48) ----------------------------------------------------
int goodG2B_276()
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_52b_goodG2BSink(2);
}

//----- (000000000043BA6A) ----------------------------------------------------
int goodB2G_254()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE190_Integer_Overflow__int_listen_socket_postinc_52b_goodB2GSink(v8);
}
// 43BA6A: using guessed type char buf[16];

//----- (000000000043BB98) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_52_good()
{
  goodG2B_276();
  return goodB2G_254();
}

//----- (000000000043BBB2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BBF0) ----------------------------------------------------
int goodG2B_277()
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_67b_goodG2BSink(2);
}

//----- (000000000043BC18) ----------------------------------------------------
int goodB2G_255()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BC56) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_67_good()
{
  goodG2B_277();
  return goodB2G_255();
}

//----- (000000000043BC70) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043BC91) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043BCB2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043BCE8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53c_badSink(a1);
}

//----- (000000000043BD02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53c_goodG2BSink(a1);
}

//----- (000000000043BD1C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53c_goodB2GSink(a1);
}

//----- (000000000043BD36) ----------------------------------------------------
int __fastcall badSink_49(char a1)
{
  int result; // eax

  result = badStatic_10;
  if ( badStatic_10 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB3F4: using guessed type int badStatic_10;

//----- (000000000043BD6B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_21_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  badStatic_10 = 1;
  return badSink_49(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3F4: using guessed type int badStatic_10;

//----- (000000000043BDAE) ----------------------------------------------------
int __fastcall goodB2G1Sink_10(char a1)
{
  if ( goodB2G1Static_10 )
    return printLine("Benign, fixed string");
  if ( a1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 + 1);
}
// 6AB3F8: using guessed type int goodB2G1Static_10;

//----- (000000000043BE01) ----------------------------------------------------
int goodB2G1_172()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  goodB2G1Static_10 = 0;
  return goodB2G1Sink_10(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3F8: using guessed type int goodB2G1Static_10;

//----- (000000000043BE44) ----------------------------------------------------
int __fastcall goodB2G2Sink_10(char a1)
{
  int result; // eax

  result = goodB2G2Static_10;
  if ( goodB2G2Static_10 )
  {
    if ( a1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 + 1);
  }
  return result;
}
// 6AB3FC: using guessed type int goodB2G2Static_10;

//----- (000000000043BE8B) ----------------------------------------------------
int goodB2G2_172()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  goodB2G2Static_10 = 1;
  return goodB2G2Sink_10(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3FC: using guessed type int goodB2G2Static_10;

//----- (000000000043BECE) ----------------------------------------------------
int __fastcall goodG2BSink_49(char a1)
{
  int result; // eax

  result = goodG2BStatic_10;
  if ( goodG2BStatic_10 )
    result = printHexCharLine(a1 + 1);
  return result;
}
// 6AB400: using guessed type int goodG2BStatic_10;

//----- (000000000043BF03) ----------------------------------------------------
int goodG2B_278()
{
  goodG2BStatic_10 = 1;
  return goodG2BSink_49(2);
}
// 6AB400: using guessed type int goodG2BStatic_10;

//----- (000000000043BF2A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_21_good()
{
  goodB2G1_172();
  goodB2G2_172();
  return goodG2B_278();
}

//----- (000000000043BF4E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_03_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BF95) ----------------------------------------------------
int goodB2G1_173()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BFF0) ----------------------------------------------------
int goodB2G2_173()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C04B) ----------------------------------------------------
int goodG2B1_150()
{
  return printHexCharLine(3);
}

//----- (000000000043C079) ----------------------------------------------------
int goodG2B2_150()
{
  return printHexCharLine(3);
}

//----- (000000000043C0A7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_03_good()
{
  goodB2G1_173();
  goodB2G2_173();
  goodG2B1_150();
  return goodG2B2_150();
}

//----- (000000000043C0D5) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_badSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C119) ----------------------------------------------------
int goodG2B_279()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_goodG2BSink(2LL);
}

//----- (000000000043C148) ----------------------------------------------------
__int64 goodB2G_256()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_goodB2GSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C18C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_65_good()
{
  goodG2B_279();
  return goodB2G_256();
}

//----- (000000000043C1A6) ----------------------------------------------------
__int64 staticReturnsTrue_11()
{
  return 1LL;
}

//----- (000000000043C1B1) ----------------------------------------------------
__int64 staticReturnsFalse_11()
{
  return 0LL;
}

//----- (000000000043C1BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_08_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_11() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_11();
  if ( result )
    result = printLongLongLine(v10 + 1);
  return result;
}

//----- (000000000043C2A6) ----------------------------------------------------
int goodB2G1_174()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_11() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)staticReturnsFalse_11() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (000000000043C3B8) ----------------------------------------------------
int goodB2G2_174()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_11() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_11();
  if ( result )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}

//----- (000000000043C4BE) ----------------------------------------------------
int goodG2B1_151()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_11() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_11();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043C519) ----------------------------------------------------
int goodG2B2_151()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_11() )
    v1 = 2LL;
  result = staticReturnsTrue_11();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043C568) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_08_good()
{
  goodB2G1_174();
  goodB2G2_174();
  goodG2B1_151();
  return goodG2B2_151();
}

//----- (000000000043C596) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_67_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_67b_badSink(v0);
}

//----- (000000000043C5E7) ----------------------------------------------------
int goodG2B_280()
{
  return CWE190_Integer_Overflow__char_rand_postinc_67b_goodG2BSink(2);
}

//----- (000000000043C60B) ----------------------------------------------------
int goodB2G_257()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_67b_goodB2GSink(v0);
}

//----- (000000000043C65C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_67_good()
{
  goodG2B_280();
  return goodB2G_257();
}

//----- (000000000043C676) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_10 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printIntLine(v7 + 1);
  return result;
}
// 6AB180: using guessed type int staticFive_10;
// 43C676: using guessed type char buf[16];

//----- (000000000043C782) ----------------------------------------------------
int goodB2G1_175()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_10 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive_10 != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 + 1);
}
// 6AB180: using guessed type int staticFive_10;
// 43C782: using guessed type char buf[16];

//----- (000000000043C8AF) ----------------------------------------------------
int goodB2G2_175()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_10 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    if ( v7 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 + 1);
  }
  return result;
}
// 6AB180: using guessed type int staticFive_10;
// 43C8AF: using guessed type char buf[16];

//----- (000000000043C9D0) ----------------------------------------------------
int goodG2B1_152()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB180: using guessed type int staticFive_10;

//----- (000000000043CA1E) ----------------------------------------------------
int goodG2B2_152()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_10 == 5 )
    v1 = 2;
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB180: using guessed type int staticFive_10;

//----- (000000000043CA60) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_07_good()
{
  goodB2G1_175();
  goodB2G2_175();
  goodG2B1_152();
  return goodG2B2_152();
}

//----- (000000000043CA8E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043CAB5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000043CADC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043CB18) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_12_bad()
{
  char v1; // [rsp+Dh] [rbp-3h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%c", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v1 + 1);
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043CBB3) ----------------------------------------------------
int goodB2G_258()
{
  int result; // eax
  char v1; // [rsp+Dh] [rbp-3h]

  v1 = 32;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  else if ( v1 == 127 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043CC7B) ----------------------------------------------------
int goodG2B_281()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(3);
}

//----- (000000000043CCE9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_12_good()
{
  goodB2G_258();
  return goodG2B_281();
}

//----- (000000000043CD03) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_badSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000043CD35) ----------------------------------------------------
int goodG2B_282()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000043CD67) ----------------------------------------------------
int goodB2G_259()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_rand_postinc_61b_goodB2GSource();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043CDAB) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_61_good()
{
  goodG2B_282();
  return goodB2G_259();
}

//----- (000000000043CDC5) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_14_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFF;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043CE0F) ----------------------------------------------------
int goodB2G1_176()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFF;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043CE79) ----------------------------------------------------
int goodB2G2_176()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFF;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043CED7) ----------------------------------------------------
int goodG2B1_153()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043CF2D) ----------------------------------------------------
int goodG2B2_153()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043CF77) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_14_good()
{
  goodB2G1_176();
  goodB2G2_176();
  goodG2B1_153();
  return goodG2B2_153();
}

//----- (000000000043CFA5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54c_badSink(a1);
}

//----- (000000000043CFBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54c_goodG2BSink(a1);
}

//----- (000000000043CFD9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54c_goodB2GSink(a1);
}

//----- (000000000043CFF3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54e_badSink(a1);
}

//----- (000000000043D00E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54e_goodG2BSink(a1);
}

//----- (000000000043D029) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_rand_postinc_54e_goodB2GSink(a1);
}

//----- (000000000043D044) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000043D078) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000043D0AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (000000000043D0F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 43D0F2: using guessed type char buf[16];

//----- (000000000043D242) ----------------------------------------------------
int goodB2G1_177()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 43D242: using guessed type char buf[16];

//----- (000000000043D3B3) ----------------------------------------------------
int goodB2G2_177()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 43D3B3: using guessed type char buf[16];

//----- (000000000043D518) ----------------------------------------------------
int goodG2B1_154()
{
  return printIntLine(3u);
}

//----- (000000000043D564) ----------------------------------------------------
int goodG2B2_154()
{
  return printIntLine(3u);
}

//----- (000000000043D5A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_06_good()
{
  goodB2G1_177();
  goodB2G2_177();
  goodG2B1_154();
  return goodG2B2_154();
}

//----- (000000000043D5D2) ----------------------------------------------------
__int64 __fastcall badSource_12(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D5FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_12(0);
  return printUnsignedLine(v0 + 1);
}

//----- (000000000043D631) ----------------------------------------------------
__int64 goodG2BSource_12()
{
  return 2LL;
}

//----- (000000000043D644) ----------------------------------------------------
int goodG2B_283()
{
  int v0; // eax

  v0 = goodG2BSource_12();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000043D676) ----------------------------------------------------
__int64 __fastcall goodB2GSource_12(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D6A3) ----------------------------------------------------
int goodB2G_260()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_12(0);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000043D6E7) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_42_good()
{
  goodB2G_260();
  return goodG2B_283();
}

//----- (000000000043D701) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_67b_badSink(v8);
}
// 43D701: using guessed type char buf[16];

//----- (000000000043D7EF) ----------------------------------------------------
int goodG2B_284()
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_67b_goodG2BSink(2);
}

//----- (000000000043D817) ----------------------------------------------------
int goodB2G_261()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_67b_goodB2GSink(v8);
}
// 43D817: using guessed type char buf[16];

//----- (000000000043D905) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_67_good()
{
  goodG2B_284();
  return goodB2G_261();
}

//----- (000000000043D91F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_11_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D982) ----------------------------------------------------
int goodB2G1_178()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DA05) ----------------------------------------------------
int goodB2G2_178()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DA7C) ----------------------------------------------------
int goodG2B1_155()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000043DAD2) ----------------------------------------------------
int goodG2B2_155()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000043DB1C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_11_good()
{
  goodB2G1_178();
  goodB2G2_178();
  goodG2B1_155();
  return goodG2B2_155();
}

//----- (000000000043DB4A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_02_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DB91) ----------------------------------------------------
int goodB2G1_179()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DBEC) ----------------------------------------------------
int goodB2G2_179()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DC47) ----------------------------------------------------
int goodG2B1_156()
{
  return printHexCharLine(3);
}

//----- (000000000043DC75) ----------------------------------------------------
int goodG2B2_156()
{
  return printHexCharLine(3);
}

//----- (000000000043DCA3) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_02_good()
{
  goodB2G1_179();
  goodB2G2_179();
  goodG2B1_156();
  return goodG2B2_156();
}

//----- (000000000043DCD1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_31_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000043DD15) ----------------------------------------------------
int goodG2B_285()
{
  return printIntLine(3u);
}

//----- (000000000043DD59) ----------------------------------------------------
int goodB2G_262()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043DDB1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_31_good()
{
  goodG2B_285();
  return goodB2G_262();
}

//----- (000000000043DDCB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_10_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043DE26) ----------------------------------------------------
int goodB2G1_180()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043DEA1) ----------------------------------------------------
int goodB2G2_180()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043DF10) ----------------------------------------------------
int goodG2B1_157()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043DF5E) ----------------------------------------------------
int goodG2B2_157()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043DFA0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_10_good()
{
  goodB2G1_180();
  goodB2G2_180();
  goodG2B1_157();
  return goodG2B2_157();
}

//----- (000000000043DFCE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_54_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54b_badSink(v4);
}

//----- (000000000043E08B) ----------------------------------------------------
int goodG2B_286()
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54b_goodG2BSink(2LL);
}

//----- (000000000043E0B1) ----------------------------------------------------
int goodB2G_263()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_54b_goodB2GSink(v4);
}

//----- (000000000043E16E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_54_good()
{
  goodG2B_286();
  return goodB2G_263();
}

//----- (000000000043E188) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000043E1C7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000043E206) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (000000000043E259) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54d_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54e_badSink(a1);
}

//----- (000000000043E273) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54d_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54e_goodG2BSink(a1);
}

//----- (000000000043E28D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54d_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54e_goodB2GSink(a1);
}

//----- (000000000043E2A7) ----------------------------------------------------
int __fastcall badSink_50(__int64 a1)
{
  int result; // eax

  result = badStatic_11;
  if ( badStatic_11 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB404: using guessed type int badStatic_11;

//----- (000000000043E2D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  badStatic_11 = 1;
  return badSink_50(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB404: using guessed type int badStatic_11;

//----- (000000000043E31D) ----------------------------------------------------
int __fastcall goodB2G1Sink_11(__int64 a1)
{
  if ( goodB2G1Static_11 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6AB408: using guessed type int goodB2G1Static_11;

//----- (000000000043E376) ----------------------------------------------------
int goodB2G1_181()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G1Static_11 = 0;
  return goodB2G1Sink_11(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB408: using guessed type int goodB2G1Static_11;

//----- (000000000043E3BB) ----------------------------------------------------
int __fastcall goodB2G2Sink_11(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_11;
  if ( goodB2G2Static_11 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6AB40C: using guessed type int goodB2G2Static_11;

//----- (000000000043E408) ----------------------------------------------------
int goodB2G2_181()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G2Static_11 = 1;
  return goodB2G2Sink_11(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB40C: using guessed type int goodB2G2Static_11;

//----- (000000000043E44D) ----------------------------------------------------
int __fastcall goodG2BSink_50(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_11;
  if ( goodG2BStatic_11 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB410: using guessed type int goodG2BStatic_11;

//----- (000000000043E47E) ----------------------------------------------------
int goodG2B_287()
{
  goodG2BStatic_11 = 1;
  return goodG2BSink_50(2LL);
}
// 6AB410: using guessed type int goodG2BStatic_11;

//----- (000000000043E4AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_21_good()
{
  goodB2G1_181();
  goodB2G2_181();
  return goodG2B_287();
}

//----- (000000000043E4D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043E4F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043E514) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000043E547) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_11 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB184: using guessed type int staticTrue_11;

//----- (000000000043E5A2) ----------------------------------------------------
int goodB2G1_182()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_11 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFalse_11 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB184: using guessed type int staticTrue_11;
// 6AB414: using guessed type int staticFalse_11;

//----- (000000000043E61D) ----------------------------------------------------
int goodB2G2_182()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_11 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_11;
  if ( staticTrue_11 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB184: using guessed type int staticTrue_11;

//----- (000000000043E68C) ----------------------------------------------------
int goodG2B1_158()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_11 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB184: using guessed type int staticTrue_11;
// 6AB414: using guessed type int staticFalse_11;

//----- (000000000043E6D8) ----------------------------------------------------
int goodG2B2_158()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_11 )
    v1 = 2;
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB184: using guessed type int staticTrue_11;

//----- (000000000043E718) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_good()
{
  goodB2G1_182();
  goodB2G2_182();
  goodG2B1_158();
  return goodG2B2_158();
}

//----- (000000000043E746) ----------------------------------------------------
int __fastcall badSink_51(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043E767) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return badSink_51(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043E79F) ----------------------------------------------------
int __fastcall goodG2BSink_51(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000043E7C0) ----------------------------------------------------
int goodG2B_288()
{
  return goodG2BSink_51(2);
}

//----- (000000000043E7E2) ----------------------------------------------------
int __fastcall goodB2GSink_38(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000043E815) ----------------------------------------------------
int goodB2G_264()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return goodB2GSink_38(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043E84D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_41_good()
{
  goodB2G_264();
  return goodG2B_288();
}

//----- (000000000043E867) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_22_badSink(v7);
}
// 6AB418: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_badGlobal;
// 43E867: using guessed type char buf[16];

//----- (000000000043E959) ----------------------------------------------------
int goodB2G1_183()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Sink(v7);
}
// 6AB41C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G1Global;
// 43E959: using guessed type char buf[16];

//----- (000000000043EA4B) ----------------------------------------------------
int goodB2G2_183()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Sink(v7);
}
// 6AB420: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodB2G2Global;
// 43EA4B: using guessed type char buf[16];

//----- (000000000043EB3D) ----------------------------------------------------
int goodG2B_289()
{
  CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BSink(2);
}
// 6AB424: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_22_goodG2BGlobal;

//----- (000000000043EB69) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_22_good()
{
  goodB2G1_183();
  goodB2G2_183();
  return goodG2B_289();
}

//----- (000000000043EB8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_max_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_max_postinc_22_badGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB428: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_badGlobal;

//----- (000000000043EBC5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6AB42C: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Global;

//----- (000000000043EC1D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6AB430: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Global;

//----- (000000000043EC69) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_max_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_max_postinc_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB434: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_goodG2BGlobal;

//----- (000000000043ECA1) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043ECEF) ----------------------------------------------------
int goodG2B_290()
{
  return printUnsignedLine(3u);
}

//----- (000000000043ED27) ----------------------------------------------------
int goodB2G_265()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1;
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043ED87) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_34_good()
{
  goodG2B_290();
  return goodB2G_265();
}

//----- (000000000043EDA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043EDCD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043EDF9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000043EE37) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_64_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(&v4);
}

//----- (000000000043EE99) ----------------------------------------------------
int goodG2B_291()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_rand_postinc_64b_goodG2BSink(&v1);
}

//----- (000000000043EEBB) ----------------------------------------------------
int goodB2G_266()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_64b_goodB2GSink(&v4);
}

//----- (000000000043EF1D) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_64_good()
{
  goodG2B_291();
  return goodB2G_266();
}

//----- (000000000043EF37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54d_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54e_badSink(a1);
}

//----- (000000000043EF52) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54d_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54e_goodG2BSink(a1);
}

//----- (000000000043EF6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_54d_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_54e_goodB2GSink(a1);
}

//----- (000000000043EF88) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53d_badSink(a1);
}

//----- (000000000043EFA2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53d_goodG2BSink(a1);
}

//----- (000000000043EFBC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53d_goodB2GSink(a1);
}

//----- (000000000043EFD6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_04_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (000000000043F01C) ----------------------------------------------------
int goodB2G1_184()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043F082) ----------------------------------------------------
int goodB2G2_184()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043F0DC) ----------------------------------------------------
int goodG2B1_159()
{
  return printIntLine(3u);
}

//----- (000000000043F12E) ----------------------------------------------------
int goodG2B2_159()
{
  return printIntLine(3u);
}

//----- (000000000043F174) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_04_good()
{
  goodB2G1_184();
  goodB2G2_184();
  goodG2B1_159();
  return goodG2B2_159();
}

//----- (000000000043F1A2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_65_bad()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_badSink(-1);
}

//----- (000000000043F1CD) ----------------------------------------------------
int goodG2B_292()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_goodG2BSink(2);
}

//----- (000000000043F1F8) ----------------------------------------------------
int goodB2G_267()
{
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_65b_goodB2GSink(-1);
}

//----- (000000000043F223) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_65_good()
{
  goodG2B_292();
  return goodB2G_267();
}

//----- (000000000043F23D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54e_badSink(a1);
}

//----- (000000000043F254) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54e_goodG2BSink(a1);
}

//----- (000000000043F26B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54e_goodB2GSink(a1);
}

//----- (000000000043F282) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043F2DF) ----------------------------------------------------
int goodB2G1_185()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043F35E) ----------------------------------------------------
int goodB2G2_185()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043F3D1) ----------------------------------------------------
int goodG2B1_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043F41F) ----------------------------------------------------
int goodG2B2_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043F461) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_14_good()
{
  goodB2G1_185();
  goodB2G2_185();
  goodG2B1_160();
  return goodG2B2_160();
}

//----- (000000000043F48F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 + 1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F545) ----------------------------------------------------
int goodB2G_268()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]

  v1 = 0LL;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  else if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F62F) ----------------------------------------------------
int goodG2B_293()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (000000000043F6A3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_good()
{
  goodB2G_268();
  return goodG2B_293();
}

//----- (000000000043F6BD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_09_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043F718) ----------------------------------------------------
int goodB2G1_186()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043F793) ----------------------------------------------------
int goodB2G2_186()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043F802) ----------------------------------------------------
int goodG2B1_161()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043F850) ----------------------------------------------------
int goodG2B2_161()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043F892) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_09_good()
{
  goodB2G1_186();
  goodB2G2_186();
  goodG2B1_161();
  return goodG2B2_161();
}

//----- (000000000043F8C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v4 = v1;
  return printIntLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F92D) ----------------------------------------------------
int goodG2B_294()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000043F984) ----------------------------------------------------
int goodB2G_269()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FA06) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_32_good()
{
  goodG2B_294();
  return goodB2G_269();
}

//----- (000000000043FA20) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_17_bad()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 127;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (000000000043FA74) ----------------------------------------------------
int goodB2G_270()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 127;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(++v1);
  }
  return result;
}

//----- (000000000043FADA) ----------------------------------------------------
int goodG2B_295()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (000000000043FB2E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_17_good()
{
  goodB2G_270();
  return goodG2B_295();
}

//----- (000000000043FB48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_63b_badSink(&v1);
}

//----- (000000000043FB6C) ----------------------------------------------------
int goodG2B_296()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000043FB90) ----------------------------------------------------
int goodB2G_271()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_63b_goodB2GSink(&v1);
}

//----- (000000000043FBB4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_63_good()
{
  goodG2B_296();
  return goodB2G_271();
}

//----- (000000000043FBCE) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_22_bad()
{
  CWE190_Integer_Overflow__short_max_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_max_postinc_22_badSink(0x7FFF);
}
// 6AB428: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_badGlobal;

//----- (000000000043FBF9) ----------------------------------------------------
int goodB2G1_187()
{
  CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Sink(0x7FFF);
}
// 6AB42C: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_goodB2G1Global;

//----- (000000000043FC24) ----------------------------------------------------
int goodB2G2_187()
{
  CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Sink(0x7FFF);
}
// 6AB430: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_goodB2G2Global;

//----- (000000000043FC4F) ----------------------------------------------------
int goodG2B_297()
{
  CWE190_Integer_Overflow__short_max_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_max_postinc_22_goodG2BSink(2);
}
// 6AB434: using guessed type int CWE190_Integer_Overflow__short_max_postinc_22_goodG2BGlobal;

//----- (000000000043FC7A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_22_good()
{
  goodB2G1_187();
  goodB2G2_187();
  return goodG2B_297();
}

//----- (000000000043FC9E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_18_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000043FCFB) ----------------------------------------------------
int goodB2G_272()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000043FD6A) ----------------------------------------------------
int goodG2B_298()
{
  return printHexCharLine(3);
}

//----- (000000000043FD9A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_18_good()
{
  goodB2G_272();
  return goodG2B_298();
}

//----- (000000000043FDB4) ----------------------------------------------------
__int64 badSource_13()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000043FE13) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_13();
  return printIntLine(v0 + 1);
}

//----- (000000000043FE45) ----------------------------------------------------
__int64 goodG2BSource_13()
{
  return 2LL;
}

//----- (000000000043FE58) ----------------------------------------------------
int goodG2B_299()
{
  int v0; // eax

  v0 = goodG2BSource_13();
  return printIntLine(v0 + 1);
}

//----- (000000000043FE8A) ----------------------------------------------------
__int64 goodB2GSource_13()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000043FEE9) ----------------------------------------------------
int goodB2G_273()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_13();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043FF30) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_42_good()
{
  goodB2G_273();
  return goodG2B_299();
}

//----- (000000000043FF4A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FF8A) ----------------------------------------------------
int goodG2B_300()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043FFB4) ----------------------------------------------------
int goodB2G_274()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043FFF4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_66_good()
{
  goodG2B_300();
  return goodB2G_274();
}

//----- (000000000044000E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_32_bad()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFF;
  v1 = 0x7FFF;
  v3 = -32768;
  v2 = -32768;
  return printIntLine(0xFFFF8000);
}

//----- (0000000000440073) ----------------------------------------------------
int goodG2B_301()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (00000000004400D8) ----------------------------------------------------
int goodB2G_275()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  __int16 v3; // [rsp+Eh] [rbp-12h]
  __int16 *v4; // [rsp+10h] [rbp-10h]
  __int16 *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFF;
  v1 = 0x7FFF;
  v2 = 0x7FFF;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000440151) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_32_good()
{
  goodG2B_301();
  return goodB2G_275();
}

//----- (000000000044016B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_04_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (00000000004401D8) ----------------------------------------------------
int goodB2G1_188()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (0000000000440263) ----------------------------------------------------
int goodB2G2_188()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (00000000004402E2) ----------------------------------------------------
int goodG2B1_162()
{
  return printHexCharLine(3);
}

//----- (000000000044032E) ----------------------------------------------------
int goodG2B2_162()
{
  return printHexCharLine(3);
}

//----- (000000000044036E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_04_good()
{
  goodB2G1_188();
  goodB2G2_188();
  goodG2B1_162();
  return goodG2B2_162();
}

//----- (000000000044039C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_12 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v4 + 1);
  return result;
}
// 6AB188: using guessed type int staticTrue_12;

//----- (0000000000440422) ----------------------------------------------------
int goodB2G1_189()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_12 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_12 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6AB188: using guessed type int staticTrue_12;
// 6AB438: using guessed type int staticFalse_12;

//----- (00000000004404C9) ----------------------------------------------------
int goodB2G2_189()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_12 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_12;
  if ( staticTrue_12 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6AB188: using guessed type int staticTrue_12;

//----- (0000000000440564) ----------------------------------------------------
int goodG2B1_163()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_12 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB188: using guessed type int staticTrue_12;
// 6AB438: using guessed type int staticFalse_12;

//----- (00000000004405B0) ----------------------------------------------------
int goodG2B2_163()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_12 )
    v1 = 2;
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB188: using guessed type int staticTrue_12;

//----- (00000000004405F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_05_good()
{
  goodB2G1_189();
  goodB2G2_189();
  goodG2B1_163();
  return goodG2B2_163();
}

//----- (000000000044061E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_max_postinc_61b_badSource()
{
  return 127LL;
}

//----- (0000000000440631) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_max_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000440644) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_max_postinc_61b_goodB2GSource()
{
  return 127LL;
}

//----- (0000000000440657) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_postinc_68_badData + 1);
}
// 6AB5C8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_badData;

//----- (0000000000440685) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodG2BData + 1);
}
// 6AB5B8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodG2BData;

//----- (00000000004406B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5C0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodB2GData;

//----- (00000000004406FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_478B60, &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440756) ----------------------------------------------------
int goodB2G1_190()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_478B60, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004407D1) ----------------------------------------------------
int goodB2G2_190()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_478B60, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440840) ----------------------------------------------------
int goodG2B1_164()
{
  return printIntLine(3u);
}

//----- (000000000044088A) ----------------------------------------------------
int goodG2B2_164()
{
  return printIntLine(3u);
}

//----- (00000000004408C8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_04_good()
{
  goodB2G1_190();
  goodB2G2_190();
  goodG2B1_164();
  return goodG2B2_164();
}

//----- (00000000004408F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440944) ----------------------------------------------------
int goodG2B_302()
{
  return printIntLine(3u);
}

//----- (000000000044097C) ----------------------------------------------------
int goodB2G_276()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004409DF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_31_good()
{
  goodG2B_302();
  return goodB2G_276();
}

//----- (00000000004409F9) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_badSink(&v1);
}

//----- (0000000000440A1D) ----------------------------------------------------
int goodG2B_303()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000440A41) ----------------------------------------------------
int goodB2G_277()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_goodB2GSink(&v1);
}

//----- (0000000000440A65) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_63_good()
{
  goodG2B_303();
  return goodB2G_277();
}

//----- (0000000000440A7F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_13_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000440AC9) ----------------------------------------------------
int goodB2G1_191()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFF;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000440B33) ----------------------------------------------------
int goodB2G2_191()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000440B91) ----------------------------------------------------
int goodG2B1_165()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000440BE7) ----------------------------------------------------
int goodG2B2_165()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000440C31) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_13_good()
{
  goodB2G1_191();
  goodB2G2_191();
  goodG2B1_165();
  return goodG2B2_165();
}

//----- (0000000000440C5F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_52c_badSink(a1);
}

//----- (0000000000440C79) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_52c_goodG2BSink(a1);
}

//----- (0000000000440C93) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_52c_goodB2GSink(a1);
}

//----- (0000000000440CAD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 440CAD: using guessed type char buf[16];

//----- (0000000000440DA1) ----------------------------------------------------
int goodB2G_278()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 440DA1: using guessed type char buf[16];

//----- (0000000000440EAA) ----------------------------------------------------
int goodG2B_304()
{
  return printIntLine(3u);
}

//----- (0000000000440ED8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_18_good()
{
  goodB2G_278();
  return goodG2B_304();
}

//----- (0000000000440EF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000440F19) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000440F40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000440F83) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_61_bad()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_max_postinc_61b_badSource();
  return printHexCharLine(v0 + 1);
}

//----- (0000000000440FBB) ----------------------------------------------------
int goodG2B_305()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_max_postinc_61b_goodG2BSource();
  return printHexCharLine(v0 + 1);
}

//----- (0000000000440FF3) ----------------------------------------------------
int goodB2G_279()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE190_Integer_Overflow__char_max_postinc_61b_goodB2GSource();
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (000000000044103D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_61_good()
{
  goodG2B_305();
  return goodB2G_279();
}

//----- (0000000000441057) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000044108A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004410BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000441105) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000044117B) ----------------------------------------------------
int goodB2G1_192()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000441206) ----------------------------------------------------
int goodB2G2_192()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000441291) ----------------------------------------------------
int goodG2B1_166()
{
  return printIntLine(3u);
}

//----- (00000000004412BF) ----------------------------------------------------
int goodG2B2_166()
{
  return printIntLine(3u);
}

//----- (00000000004412ED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_15_good()
{
  goodB2G1_192();
  goodB2G2_192();
  goodG2B1_166();
  return goodG2B2_166();
}

//----- (000000000044131B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_68_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_68_badData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_68b_badSink();
}
// 6AB5C8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_badData;

//----- (00000000004413E1) ----------------------------------------------------
int goodG2B_306()
{
  CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_68b_goodG2BSink();
}
// 6AB5B8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodG2BData;

//----- (0000000000441410) ----------------------------------------------------
int goodB2G_280()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_68b_goodB2GSink();
}
// 6AB5C0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_68_goodB2GData;

//----- (00000000004414D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_68_good()
{
  goodG2B_306();
  return goodB2G_280();
}

//----- (00000000004414F0) ----------------------------------------------------
int __fastcall badSink_52(__int16 a1)
{
  int result; // eax

  result = badStatic_12;
  if ( badStatic_12 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB43C: using guessed type int badStatic_12;

//----- (0000000000441528) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_21_bad()
{
  badStatic_12 = 1;
  return badSink_52(0x7FFF);
}
// 6AB43C: using guessed type int badStatic_12;

//----- (0000000000441553) ----------------------------------------------------
int __fastcall goodB2G1Sink_12(__int16 a1)
{
  if ( goodB2G1Static_12 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6AB440: using guessed type int goodB2G1Static_12;

//----- (00000000004415AB) ----------------------------------------------------
int goodB2G1_193()
{
  goodB2G1Static_12 = 0;
  return goodB2G1Sink_12(0x7FFF);
}
// 6AB440: using guessed type int goodB2G1Static_12;

//----- (00000000004415D6) ----------------------------------------------------
int __fastcall goodB2G2Sink_12(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_12;
  if ( goodB2G2Static_12 )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6AB444: using guessed type int goodB2G2Static_12;

//----- (0000000000441622) ----------------------------------------------------
int goodB2G2_193()
{
  goodB2G2Static_12 = 1;
  return goodB2G2Sink_12(0x7FFF);
}
// 6AB444: using guessed type int goodB2G2Static_12;

//----- (000000000044164D) ----------------------------------------------------
int __fastcall goodG2BSink_52(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_12;
  if ( goodG2BStatic_12 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB448: using guessed type int goodG2BStatic_12;

//----- (0000000000441685) ----------------------------------------------------
int goodG2B_307()
{
  goodG2BStatic_12 = 1;
  return goodG2BSink_52(2);
}
// 6AB448: using guessed type int goodG2BStatic_12;

//----- (00000000004416B0) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_21_good()
{
  goodB2G1_193();
  goodB2G2_193();
  return goodG2B_307();
}

//----- (00000000004416D4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_03_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000441708) ----------------------------------------------------
int goodB2G1_194()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000441750) ----------------------------------------------------
int goodB2G2_194()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000441798) ----------------------------------------------------
int goodG2B1_167()
{
  return printIntLine(3u);
}

//----- (00000000004417CC) ----------------------------------------------------
int goodG2B2_167()
{
  return printIntLine(3u);
}

//----- (0000000000441800) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_03_good()
{
  goodB2G1_194();
  goodB2G2_194();
  goodG2B1_167();
  return goodG2B2_167();
}

//----- (000000000044182E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (00000000004418AE) ----------------------------------------------------
int goodG2B_308()
{
  return printIntLine(3u);
}

//----- (00000000004418E6) ----------------------------------------------------
int goodB2G_281()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000044197B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_34_good()
{
  goodG2B_308();
  return goodB2G_281();
}

//----- (0000000000441995) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_07_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = 127;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB18C: using guessed type int staticFive_11;

//----- (00000000004419D9) ----------------------------------------------------
int goodB2G1_195()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = 127;
  if ( staticFive_11 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6AB18C: using guessed type int staticFive_11;

//----- (0000000000441A3B) ----------------------------------------------------
int goodB2G2_195()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = 127;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6AB18C: using guessed type int staticFive_11;

//----- (0000000000441A91) ----------------------------------------------------
int goodG2B1_168()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB18C: using guessed type int staticFive_11;

//----- (0000000000441AE1) ----------------------------------------------------
int goodG2B2_168()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = 2;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB18C: using guessed type int staticFive_11;

//----- (0000000000441B25) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_07_good()
{
  goodB2G1_195();
  goodB2G2_195();
  goodG2B1_168();
  return goodG2B2_168();
}

//----- (0000000000441B53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_65b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000441B7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000441BA9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000441BE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000441C14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000441C42) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000441C84) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_53_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53b_badSink(v4);
}

//----- (0000000000441D41) ----------------------------------------------------
int goodG2B_309()
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53b_goodG2BSink(2LL);
}

//----- (0000000000441D67) ----------------------------------------------------
int goodB2G_282()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_53b_goodB2GSink(v4);
}

//----- (0000000000441E24) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_53_good()
{
  goodG2B_309();
  return goodB2G_282();
}

//----- (0000000000441E3E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54d_badSink(a1);
}

//----- (0000000000441E58) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000441E72) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000441E8C) ----------------------------------------------------
void CWE190_Integer_Overflow__short_rand_postinc_17_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine(++v3);
}

//----- (0000000000441F26) ----------------------------------------------------
void goodB2G_283()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v3 == 0x7FFF )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine(++v3);
  }
}

//----- (0000000000441FD4) ----------------------------------------------------
int goodG2B_310()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (000000000044202E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_17_good()
{
  goodB2G_283();
  return goodG2B_310();
}

//----- (0000000000442048) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_postinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB44C: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_badGlobal;

//----- (000000000044208A) ----------------------------------------------------
int goodB2G1_196()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB450: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Global;

//----- (00000000004420CC) ----------------------------------------------------
int goodB2G2_196()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB454: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Global;

//----- (000000000044210E) ----------------------------------------------------
int goodG2B_311()
{
  CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BSink(2);
}
// 6AB458: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BGlobal;

//----- (000000000044213A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_22_good()
{
  goodB2G1_196();
  goodB2G2_196();
  return goodG2B_311();
}

//----- (000000000044215E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_64b_badSink(&v1);
}

//----- (0000000000442182) ----------------------------------------------------
int goodG2B_312()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_max_postinc_64b_goodG2BSink(&v1);
}

//----- (00000000004421A6) ----------------------------------------------------
int goodB2G_284()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0x7FFFFFFF;
  return CWE190_Integer_Overflow__int_max_postinc_64b_goodB2GSink(&v1);
}

//----- (00000000004421CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_64_good()
{
  goodG2B_312();
  return goodB2G_284();
}

//----- (00000000004421E4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_12_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFF;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v1 + 1));
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000442270) ----------------------------------------------------
int goodB2G_285()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000442310) ----------------------------------------------------
int goodG2B_313()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000442388) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_12_good()
{
  goodB2G_285();
  return goodG2B_313();
}

//----- (00000000004423A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_badSink(a1);
}

//----- (00000000004423B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_goodG2BSink(a1);
}

//----- (00000000004423D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_goodB2GSink(a1);
}

//----- (00000000004423E7) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_65_bad()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__char_fscanf_postinc_65b_badSink;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000442429) ----------------------------------------------------
int goodG2B_314()
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_65b_goodG2BSink(2);
}

//----- (000000000044244F) ----------------------------------------------------
__int64 goodB2G_286()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__char_fscanf_postinc_65b_goodB2GSink;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000442491) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_65_good()
{
  goodG2B_314();
  return goodB2G_286();
}

//----- (00000000004424AB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_06_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000442533) ----------------------------------------------------
int goodB2G1_197()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004425DB) ----------------------------------------------------
int goodB2G2_197()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000442677) ----------------------------------------------------
int goodG2B1_169()
{
  return printIntLine(3u);
}

//----- (00000000004426CB) ----------------------------------------------------
int goodG2B2_169()
{
  return printIntLine(3u);
}

//----- (0000000000442713) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_06_good()
{
  goodB2G1_197();
  goodB2G2_197();
  goodG2B1_169();
  return goodG2B2_169();
}

//----- (0000000000442741) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_64b_badSink(&v4);
}

//----- (00000000004427AB) ----------------------------------------------------
int goodG2B_315()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_postinc_64b_goodG2BSink(&v1);
}

//----- (00000000004427CF) ----------------------------------------------------
int goodB2G_287()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_64b_goodB2GSink(&v4);
}

//----- (0000000000442839) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_64_good()
{
  goodG2B_315();
  return goodB2G_287();
}

//----- (0000000000442853) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004428B0) ----------------------------------------------------
int goodB2G1_198()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044292F) ----------------------------------------------------
int goodB2G2_198()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004429A2) ----------------------------------------------------
int goodG2B1_170()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004429F0) ----------------------------------------------------
int goodG2B2_170()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000442A32) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_13_good()
{
  goodB2G1_198();
  goodB2G2_198();
  goodG2B1_170();
  return goodG2B2_170();
}

//----- (0000000000442A60) ----------------------------------------------------
__int64 staticReturnsTrue_12()
{
  return 1LL;
}

//----- (0000000000442A6B) ----------------------------------------------------
__int64 staticReturnsFalse_12()
{
  return 0LL;
}

//----- (0000000000442A76) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_08_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_12() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticReturnsTrue_12();
  if ( result )
    result = printHexCharLine(v2 + 1);
  return result;
}

//----- (0000000000442AED) ----------------------------------------------------
int goodB2G1_199()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_12() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( (unsigned int)staticReturnsFalse_12() )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}

//----- (0000000000442B82) ----------------------------------------------------
int goodB2G2_199()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_12() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticReturnsTrue_12();
  if ( result )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}

//----- (0000000000442C0B) ----------------------------------------------------
int goodG2B1_171()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_12() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_12();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000442C61) ----------------------------------------------------
int goodG2B2_171()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_12() )
    v1 = 2;
  result = staticReturnsTrue_12();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000442CAB) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_08_good()
{
  goodB2G1_199();
  goodB2G2_199();
  goodG2B1_171();
  return goodG2B2_171();
}

//----- (0000000000442CD9) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_63_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_63b_badSink(&v4);
}

//----- (0000000000442D3B) ----------------------------------------------------
int goodG2B_316()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_rand_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000442D5D) ----------------------------------------------------
int goodB2G_288()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE190_Integer_Overflow__short_rand_postinc_63b_goodB2GSink(&v4);
}

//----- (0000000000442DBF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_63_good()
{
  goodG2B_316();
  return goodB2G_288();
}

//----- (0000000000442DD9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000442E0C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000442E3F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000442E87) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54d_badSink(a1);
}

//----- (0000000000442E9E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000442EB5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000442ECC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_11_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFF;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000442F1C) ----------------------------------------------------
int goodB2G1_200()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFF;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000442F8C) ----------------------------------------------------
int goodB2G2_200()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFF;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}

//----- (0000000000442FF0) ----------------------------------------------------
int goodG2B1_172()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000044304C) ----------------------------------------------------
int goodG2B2_172()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (000000000044309C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_11_good()
{
  goodB2G1_200();
  goodB2G2_200();
  goodG2B1_172();
  return goodG2B2_172();
}

//----- (00000000004430CA) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_02_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (00000000004430FE) ----------------------------------------------------
int goodB2G1_201()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000443146) ----------------------------------------------------
int goodB2G2_201()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000044318E) ----------------------------------------------------
int goodG2B1_173()
{
  return printIntLine(3u);
}

//----- (00000000004431C2) ----------------------------------------------------
int goodG2B2_173()
{
  return printIntLine(3u);
}

//----- (00000000004431F6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_02_good()
{
  goodB2G1_201();
  goodB2G2_201();
  goodG2B1_173();
  return goodG2B2_173();
}

//----- (0000000000443224) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000443245) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000443266) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044329C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004432C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004432EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000443326) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000443347) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000443368) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044339B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_10_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFF;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004433E3) ----------------------------------------------------
int goodB2G1_202()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFF;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044344B) ----------------------------------------------------
int goodB2G2_202()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 0x7FFF;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004434A7) ----------------------------------------------------
int goodG2B1_174()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004434FB) ----------------------------------------------------
int goodG2B2_174()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000443543) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_10_good()
{
  goodB2G1_202();
  goodB2G2_202();
  goodG2B1_174();
  return goodG2B2_174();
}

//----- (0000000000443571) ----------------------------------------------------
int __fastcall badSink_53(int a1)
{
  int result; // eax

  result = badStatic_13;
  if ( badStatic_13 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB45C: using guessed type int badStatic_13;

//----- (000000000044359C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_13 = 1;
  return badSink_53(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB45C: using guessed type int badStatic_13;

//----- (00000000004435DE) ----------------------------------------------------
int __fastcall goodB2G1Sink_13(int a1)
{
  if ( goodB2G1Static_13 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB460: using guessed type int goodB2G1Static_13;

//----- (000000000044362A) ----------------------------------------------------
int goodB2G1_203()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_13 = 0;
  return goodB2G1Sink_13(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB460: using guessed type int goodB2G1Static_13;

//----- (000000000044366C) ----------------------------------------------------
int __fastcall goodB2G2Sink_13(int a1)
{
  int result; // eax

  result = goodB2G2Static_13;
  if ( goodB2G2Static_13 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB464: using guessed type int goodB2G2Static_13;

//----- (00000000004436AC) ----------------------------------------------------
int goodB2G2_203()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_13 = 1;
  return goodB2G2Sink_13(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB464: using guessed type int goodB2G2Static_13;

//----- (00000000004436EE) ----------------------------------------------------
int __fastcall goodG2BSink_53(int a1)
{
  int result; // eax

  result = goodG2BStatic_13;
  if ( goodG2BStatic_13 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB468: using guessed type int goodG2BStatic_13;

//----- (0000000000443719) ----------------------------------------------------
int goodG2B_317()
{
  goodG2BStatic_13 = 1;
  return goodG2BSink_53(2);
}
// 6AB468: using guessed type int goodG2BStatic_13;

//----- (0000000000443745) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_21_good()
{
  goodB2G1_203();
  goodB2G2_203();
  return goodG2B_317();
}

//----- (0000000000443769) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54c_badSink(a1);
}

//----- (0000000000443783) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54c_goodG2BSink(a1);
}

//----- (000000000044379D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_54b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_54c_goodB2GSink(a1);
}

//----- (00000000004437B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_52_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_52b_badSink(v4);
}

//----- (0000000000443874) ----------------------------------------------------
int goodG2B_318()
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_52b_goodG2BSink(2LL);
}

//----- (000000000044389A) ----------------------------------------------------
int goodB2G_289()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_52b_goodB2GSink(v4);
}

//----- (0000000000443957) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_52_good()
{
  goodG2B_318();
  return goodB2G_289();
}

//----- (0000000000443971) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004439AC) ----------------------------------------------------
int goodG2B_319()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_goodG2BSink(&v1);
}

//----- (00000000004439D2) ----------------------------------------------------
int goodB2G_290()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000443A0D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_64_good()
{
  goodG2B_319();
  return goodB2G_290();
}

//----- (0000000000443A27) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000443A4E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000443A75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000443AB8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_51_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_51b_badSink(v4);
}

//----- (0000000000443B75) ----------------------------------------------------
int goodG2B_320()
{
  return CWE190_Integer_Overflow__int64_t_rand_postinc_51b_goodG2BSink(2LL);
}

//----- (0000000000443B9B) ----------------------------------------------------
int goodB2G_291()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_postinc_51b_goodB2GSink(v4);
}

//----- (0000000000443C58) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_51_good()
{
  goodG2B_320();
  return goodB2G_291();
}

//----- (0000000000443C72) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_16_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000443D3E) ----------------------------------------------------
int goodB2G_292()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000443E26) ----------------------------------------------------
int goodG2B_321()
{
  return printLongLongLine(3LL);
}

//----- (0000000000443E5B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_16_good()
{
  goodB2G_292();
  return goodG2B_321();
}

//----- (0000000000443E75) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_01_bad()
{
  return printIntLine(0xFFFF8000);
}

//----- (0000000000443EA9) ----------------------------------------------------
int goodG2B_322()
{
  return printIntLine(3u);
}

//----- (0000000000443EDD) ----------------------------------------------------
int goodB2G_293()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000443F25) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_01_good()
{
  goodG2B_322();
  return goodB2G_293();
}

//----- (0000000000443F3F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000443F9C) ----------------------------------------------------
int goodB2G1_204()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000444019) ----------------------------------------------------
int goodB2G2_204()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044408A) ----------------------------------------------------
int goodG2B1_175()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004440D8) ----------------------------------------------------
int goodG2B2_175()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044411A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_14_good()
{
  goodB2G1_204();
  goodB2G2_204();
  goodG2B1_175();
  return goodG2B2_175();
}

//----- (0000000000444148) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v4 = v1;
  return printUnsignedLine(*v3 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004441B5) ----------------------------------------------------
int goodG2B_323()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printUnsignedLine(3u);
}

//----- (000000000044420C) ----------------------------------------------------
int goodB2G_294()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v3 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044428B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_good()
{
  goodG2B_323();
  return goodB2G_294();
}

//----- (00000000004442A5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_67b_badSink(v2);
}

//----- (0000000000444315) ----------------------------------------------------
int goodG2B_324()
{
  return CWE190_Integer_Overflow__int_rand_postinc_67b_goodG2BSink(2);
}

//----- (000000000044433D) ----------------------------------------------------
int goodB2G_295()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_67b_goodB2GSink(v2);
}

//----- (00000000004443AD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_67_good()
{
  goodG2B_324();
  return goodB2G_295();
}

//----- (00000000004443C7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 127;
  v2 = 127;
  return CWE190_Integer_Overflow__char_max_postinc_66b_badSink((__int64)&v1);
}

//----- (00000000004443EC) ----------------------------------------------------
int goodG2B_325()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__char_max_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000444411) ----------------------------------------------------
int goodB2G_296()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 127;
  v2 = 127;
  return CWE190_Integer_Overflow__char_max_postinc_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000444436) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_66_good()
{
  goodG2B_325();
  return goodB2G_296();
}

//----- (0000000000444450) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_12_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 + 1);
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004444ED) ----------------------------------------------------
int goodB2G_297()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  else if ( v1 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004445B6) ----------------------------------------------------
int goodG2B_326()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000044461D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_12_good()
{
  goodB2G_297();
  return goodG2B_326();
}

//----- (0000000000444637) ----------------------------------------------------
int __fastcall badSink_54(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000444658) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_54;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 444658: using guessed type char buf[16];

//----- (000000000044478F) ----------------------------------------------------
int __fastcall goodG2BSink_54(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004447B0) ----------------------------------------------------
int goodG2B_327()
{
  return goodG2BSink_54(2);
}

//----- (00000000004447DB) ----------------------------------------------------
int __fastcall goodB2GSink_39(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000444811) ----------------------------------------------------
__int64 goodB2G_298()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_39;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 444811: using guessed type char buf[16];

//----- (0000000000444948) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_listen_socket_postinc_44_good()
{
  goodG2B_327();
  return goodB2G_298();
}

//----- (0000000000444962) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_54_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_54b_badSink(v0);
}

//----- (00000000004449AC) ----------------------------------------------------
int goodG2B_328()
{
  return CWE190_Integer_Overflow__char_rand_postinc_54b_goodG2BSink(2);
}

//----- (00000000004449C9) ----------------------------------------------------
int goodB2G_299()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_54b_goodB2GSink(v0);
}

//----- (0000000000444A13) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_54_good()
{
  goodG2B_328();
  return goodB2G_299();
}

//----- (0000000000444A2D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54c_badSink(a1);
}

//----- (0000000000444A44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54c_goodG2BSink(a1);
}

//----- (0000000000444A5B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000444A72) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_09_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000444ABA) ----------------------------------------------------
int goodB2G1_205()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFF;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000444B22) ----------------------------------------------------
int goodB2G2_205()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFF;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000444B7E) ----------------------------------------------------
int goodG2B1_176()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000444BD2) ----------------------------------------------------
int goodG2B2_176()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000444C1A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_09_good()
{
  goodB2G1_205();
  goodB2G2_205();
  goodG2B1_176();
  return goodG2B2_176();
}

//----- (0000000000444C48) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444C82) ----------------------------------------------------
int goodG2B_329()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fscanf_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000444CA6) ----------------------------------------------------
int goodB2G_300()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE190_Integer_Overflow__int_fscanf_postinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444CE0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_64_good()
{
  goodG2B_329();
  return goodB2G_300();
}

//----- (0000000000444CFA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000444D25) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000444D50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000444D90) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4794C8, &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444DE9) ----------------------------------------------------
int goodB2G1_206()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4794C8, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444E62) ----------------------------------------------------
int goodB2G2_206()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4794C8, &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444ECF) ----------------------------------------------------
int goodG2B1_177()
{
  return printUnsignedLine(3u);
}

//----- (0000000000444F19) ----------------------------------------------------
int goodG2B2_177()
{
  return printUnsignedLine(3u);
}

//----- (0000000000444F57) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_good()
{
  goodB2G1_206();
  goodB2G2_206();
  goodG2B1_177();
  return goodG2B2_177();
}

//----- (0000000000444F85) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444FD3) ----------------------------------------------------
int goodG2B_330()
{
  return printUnsignedLine(3u);
}

//----- (000000000044500B) ----------------------------------------------------
int goodB2G_301()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044506B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_good()
{
  goodG2B_330();
  return goodB2G_301();
}

//----- (0000000000445085) ----------------------------------------------------
int badSink_55()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_postinc_45_badData + 1);
}
// 6AB470: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_badData;

//----- (00000000004450B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_45_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_45_badData = v4;
  return badSink_55();
}
// 6AB470: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_badData;

//----- (0000000000445179) ----------------------------------------------------
int goodG2BSink_55()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodG2BData + 1);
}
// 6AB478: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodG2BData;

//----- (00000000004451A7) ----------------------------------------------------
int goodG2B_331()
{
  CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodG2BData = 2LL;
  return goodG2BSink_55();
}
// 6AB478: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodG2BData;

//----- (00000000004451D6) ----------------------------------------------------
int goodB2GSink_40()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB480: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodB2GData;

//----- (0000000000445220) ----------------------------------------------------
int goodB2G_302()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodB2GData = v4;
  return goodB2GSink_40();
}
// 6AB480: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_postinc_45_goodB2GData;

//----- (00000000004452E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_45_good()
{
  goodG2B_331();
  return goodB2G_302();
}

//----- (0000000000445300) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (00000000004453E2) ----------------------------------------------------
int goodB2G1_207()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004454EC) ----------------------------------------------------
int goodB2G2_207()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004455EA) ----------------------------------------------------
int goodG2B1_178()
{
  return printLongLongLine(3LL);
}

//----- (000000000044563D) ----------------------------------------------------
int goodG2B2_178()
{
  return printLongLongLine(3LL);
}

//----- (0000000000445684) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_06_good()
{
  goodB2G1_207();
  goodB2G2_207();
  goodG2B1_178();
  return goodG2B2_178();
}

//----- (00000000004456B2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004456F9) ----------------------------------------------------
int goodB2G1_208()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445756) ----------------------------------------------------
int goodB2G2_208()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004457B3) ----------------------------------------------------
int goodG2B1_179()
{
  return printIntLine(3u);
}

//----- (00000000004457DF) ----------------------------------------------------
int goodG2B2_179()
{
  return printIntLine(3u);
}

//----- (000000000044580B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_02_good()
{
  goodB2G1_208();
  goodB2G2_208();
  goodG2B1_179();
  return goodG2B2_179();
}

//----- (0000000000445839) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_13_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v2 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004458AA) ----------------------------------------------------
int goodB2G1_209()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000445939) ----------------------------------------------------
int goodB2G2_209()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v2 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004459BC) ----------------------------------------------------
int goodG2B1_180()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000445A0C) ----------------------------------------------------
int goodG2B2_180()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000445A50) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_13_good()
{
  goodB2G1_209();
  goodB2G2_209();
  goodG2B1_180();
  return goodG2B2_180();
}

//----- (0000000000445A7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_53d_badSink(a1);
}

//----- (0000000000445A98) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_53d_goodG2BSink(a1);
}

//----- (0000000000445AB2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000445ACC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54b_badSink(v7);
}
// 445ACC: using guessed type char buf[16];

//----- (0000000000445BB4) ----------------------------------------------------
int goodG2B_332()
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54b_goodG2BSink(2);
}

//----- (0000000000445BD6) ----------------------------------------------------
int goodB2G_303()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_54b_goodB2GSink(v7);
}
// 445BD6: using guessed type char buf[16];

//----- (0000000000445CBE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_54_good()
{
  goodG2B_332();
  return goodB2G_303();
}

//----- (0000000000445CD8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000445D07) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000445D36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000445D81) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_61_bad()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_rand_postinc_61b_badSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000445DBE) ----------------------------------------------------
int goodG2B_333()
{
  __int16 v0; // ax

  v0 = CWE190_Integer_Overflow__short_rand_postinc_61b_goodG2BSource();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000445DFB) ----------------------------------------------------
int goodB2G_304()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE190_Integer_Overflow__short_rand_postinc_61b_goodB2GSource();
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000445E4C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_61_good()
{
  goodG2B_333();
  return goodB2G_304();
}

//----- (0000000000445E66) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000445EC1) ----------------------------------------------------
int goodB2G1_210()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000445F3E) ----------------------------------------------------
int goodB2G2_210()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000445FAF) ----------------------------------------------------
int goodG2B1_181()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000445FFB) ----------------------------------------------------
int goodG2B2_181()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044603B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_10_good()
{
  goodB2G1_210();
  goodB2G2_210();
  goodG2B1_181();
  return goodG2B2_181();
}

//----- (0000000000446069) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB520: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badGlobal;

//----- (0000000000446094) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6AB524: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Global;

//----- (00000000004460DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Global )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6AB528: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Global;

//----- (000000000044611A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BGlobal )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB52C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BGlobal;

//----- (0000000000446145) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000446166) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000446187) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004461BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54e_badSink(a1);
}

//----- (00000000004461D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54e_goodG2BSink(a1);
}

//----- (00000000004461E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54e_goodB2GSink(a1);
}

//----- (00000000004461FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_54b_badSink(v4);
}

//----- (0000000000446267) ----------------------------------------------------
int goodG2B_334()
{
  return CWE190_Integer_Overflow__int_fgets_postinc_54b_goodG2BSink(2);
}

//----- (0000000000446289) ----------------------------------------------------
int goodB2G_305()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_54b_goodB2GSink(v4);
}

//----- (00000000004462F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_54_good()
{
  goodG2B_334();
  return goodB2G_305();
}

//----- (000000000044630B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000044633E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (0000000000446371) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (00000000004463B6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_15_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446403) ----------------------------------------------------
int goodB2G1_211()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446466) ----------------------------------------------------
int goodB2G2_211()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004464C9) ----------------------------------------------------
int goodG2B1_182()
{
  return printIntLine(3u);
}

//----- (00000000004464FF) ----------------------------------------------------
int goodG2B2_182()
{
  return printIntLine(3u);
}

//----- (0000000000446535) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_15_good()
{
  goodB2G1_211();
  goodB2G2_211();
  goodG2B1_182();
  return goodG2B2_182();
}

//----- (0000000000446563) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_badSink(a1);
}

//----- (000000000044657A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_goodG2BSink(a1);
}

//----- (0000000000446591) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_goodB2GSink(a1);
}

//----- (00000000004465A8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_07_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_12 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6AB190: using guessed type int staticFive_12;

//----- (0000000000446632) ----------------------------------------------------
int goodB2G1_212()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_12 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFive_12 != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6AB190: using guessed type int staticFive_12;

//----- (00000000004466DC) ----------------------------------------------------
int goodB2G2_212()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_12 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive_12;
  if ( staticFive_12 == 5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6AB190: using guessed type int staticFive_12;

//----- (000000000044677A) ----------------------------------------------------
int goodG2B1_183()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB190: using guessed type int staticFive_12;

//----- (00000000004467D0) ----------------------------------------------------
int goodG2B2_183()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = 2;
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB190: using guessed type int staticFive_12;

//----- (000000000044681A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_07_good()
{
  goodB2G1_212();
  goodB2G2_212();
  goodG2B1_183();
  return goodG2B2_183();
}

//----- (0000000000446848) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044688F) ----------------------------------------------------
int goodG2B_335()
{
  return printIntLine(3u);
}

//----- (00000000004468BB) ----------------------------------------------------
int goodB2G_306()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446918) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_01_good()
{
  goodG2B_335();
  return goodB2G_306();
}

//----- (0000000000446932) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_postinc_68_badData + 1);
}
// 6AB5F0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_badData;

//----- (0000000000446960) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_postinc_68_goodG2BData + 1);
}
// 6AB600: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_goodG2BData;

//----- (000000000044698E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_max_postinc_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_max_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5F8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_goodB2GData;

//----- (00000000004469D8) ----------------------------------------------------
__int64 __fastcall badSource_14(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446A09) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_42_bad()
{
  __int16 v0; // ax

  v0 = badSource_14(0);
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000446A46) ----------------------------------------------------
__int64 goodG2BSource_14()
{
  return 2LL;
}

//----- (0000000000446A5C) ----------------------------------------------------
int goodG2B_336()
{
  __int16 v0; // ax

  v0 = goodG2BSource_14();
  return printIntLine((__int16)(v0 + 1));
}

//----- (0000000000446A99) ----------------------------------------------------
__int64 __fastcall goodB2GSource_14(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446ACA) ----------------------------------------------------
int goodB2G_307()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_14(0);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000446B1B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_42_good()
{
  goodB2G_307();
  return goodG2B_336();
}

//----- (0000000000446B35) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_03_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000446BFF) ----------------------------------------------------
int goodB2G1_213()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000446CE5) ----------------------------------------------------
int goodB2G2_213()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000446DCB) ----------------------------------------------------
int goodG2B1_184()
{
  return printLongLongLine(3LL);
}

//----- (0000000000446DFE) ----------------------------------------------------
int goodG2B2_184()
{
  return printLongLongLine(3LL);
}

//----- (0000000000446E31) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_03_good()
{
  goodB2G1_213();
  goodB2G2_213();
  goodG2B1_184();
  return goodG2B2_184();
}

//----- (0000000000446E5F) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_badSink(v2);
}

//----- (0000000000446EC9) ----------------------------------------------------
int goodG2B_337()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_goodG2BSink(2);
}

//----- (0000000000446EEB) ----------------------------------------------------
int goodB2G_308()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_goodB2GSink(v2);
}

//----- (0000000000446F55) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_54_good()
{
  goodG2B_337();
  return goodB2G_308();
}

//----- (0000000000446F6F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_15_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000446F9F) ----------------------------------------------------
int goodB2G1_214()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000446FE1) ----------------------------------------------------
int goodB2G2_214()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000447023) ----------------------------------------------------
int goodG2B1_185()
{
  return printHexCharLine(3);
}

//----- (0000000000447053) ----------------------------------------------------
int goodG2B2_185()
{
  return printHexCharLine(3);
}

//----- (0000000000447083) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_15_good()
{
  goodB2G1_214();
  goodB2G2_214();
  goodG2B1_185();
  return goodG2B2_185();
}

//----- (00000000004470B1) ----------------------------------------------------
int __fastcall badSink_56(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004470DC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_44_bad()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = badSink_56;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044711E) ----------------------------------------------------
int __fastcall goodG2BSink_56(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000447149) ----------------------------------------------------
int goodG2B_338()
{
  return goodG2BSink_56(2);
}

//----- (000000000044716F) ----------------------------------------------------
int __fastcall goodB2GSink_41(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004471AC) ----------------------------------------------------
__int64 goodB2G_309()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_41;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004471EE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_44_good()
{
  goodG2B_338();
  return goodB2G_309();
}

//----- (0000000000447208) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_63b_badSink(&v4);
}

//----- (0000000000447272) ----------------------------------------------------
int goodG2B_339()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000447296) ----------------------------------------------------
int goodB2G_310()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_postinc_63b_goodB2GSink(&v4);
}

//----- (0000000000447300) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_63_good()
{
  goodG2B_339();
  return goodB2G_310();
}

//----- (000000000044731A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_postinc_68_badData + 1);
}
// 6AB5B0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_68_badData;

//----- (0000000000447341) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodG2BData + 1);
}
// 6AB5AC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodG2BData;

//----- (0000000000447368) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5B4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_68_goodB2GData;

//----- (00000000004473A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (00000000004473D6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000447408) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000447456) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_67_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_67b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044748A) ----------------------------------------------------
int goodG2B_340()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_67b_goodG2BSink(2LL);
}

//----- (00000000004474B8) ----------------------------------------------------
int goodB2G_311()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_67b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004474EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_67_good()
{
  goodG2B_340();
  return goodB2G_311();
}

//----- (0000000000447506) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_68b_badSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_postinc_68_badData + 1);
}
// 6AB5D0: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_68_badData;

//----- (0000000000447536) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_68b_goodG2BSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_postinc_68_goodG2BData + 1);
}
// 6AB5D2: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_68_goodG2BData;

//----- (0000000000447566) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5D1: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData;

//----- (00000000004475A8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_badSink(&v1);
}

//----- (00000000004475CC) ----------------------------------------------------
int goodG2B_341()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_goodG2BSink(&v1);
}

//----- (00000000004475F0) ----------------------------------------------------
int goodB2G_312()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_64b_goodB2GSink(&v1);
}

//----- (0000000000447614) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_64_good()
{
  goodG2B_341();
  return goodB2G_312();
}

//----- (000000000044762E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53d_badSink(a1);
}

//----- (0000000000447645) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53d_goodG2BSink(a1);
}

//----- (000000000044765C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000447673) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004476CE) ----------------------------------------------------
int goodB2G1_215()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000044774B) ----------------------------------------------------
int goodB2G2_215()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004477BC) ----------------------------------------------------
int goodG2B1_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000447808) ----------------------------------------------------
int goodG2B2_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000447848) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_09_good()
{
  goodB2G1_215();
  goodB2G2_215();
  goodG2B1_186();
  return goodG2B2_186();
}

//----- (0000000000447876) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000447897) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004478B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004478EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000447912) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000447939) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000447975) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004479A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004479D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000447A13) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_05_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_13 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB194: using guessed type int staticTrue_13;

//----- (0000000000447A72) ----------------------------------------------------
int goodB2G1_216()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_13 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( staticFalse_13 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB194: using guessed type int staticTrue_13;
// 6AB488: using guessed type int staticFalse_13;

//----- (0000000000447AF3) ----------------------------------------------------
int goodB2G2_216()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_13 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticTrue_13;
  if ( staticTrue_13 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB194: using guessed type int staticTrue_13;

//----- (0000000000447B68) ----------------------------------------------------
int goodG2B1_187()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_13 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB194: using guessed type int staticTrue_13;
// 6AB488: using guessed type int staticFalse_13;

//----- (0000000000447BBC) ----------------------------------------------------
int goodG2B2_187()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_13 )
    v1 = 2;
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB194: using guessed type int staticTrue_13;

//----- (0000000000447C04) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_05_good()
{
  goodB2G1_216();
  goodB2G2_216();
  goodG2B1_187();
  return goodG2B2_187();
}

//----- (0000000000447C32) ----------------------------------------------------
int __fastcall badSink_57(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000447C60) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_41_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return badSink_57(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447C99) ----------------------------------------------------
int __fastcall goodG2BSink_57(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000447CC7) ----------------------------------------------------
int goodG2B_342()
{
  return goodG2BSink_57(2);
}

//----- (0000000000447CE8) ----------------------------------------------------
int __fastcall goodB2GSink_42(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (0000000000447D2A) ----------------------------------------------------
int goodB2G_313()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return goodB2GSink_42(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447D63) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_41_good()
{
  goodB2G_313();
  return goodG2B_342();
}

//----- (0000000000447D7D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000447DCF) ----------------------------------------------------
int goodB2G_314()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0x7FFFFFFF;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(++v1);
  }
  return result;
}

//----- (0000000000447E36) ----------------------------------------------------
int goodG2B_343()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000447E88) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_17_good()
{
  goodB2G_314();
  return goodG2B_343();
}

//----- (0000000000447EA2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447EDD) ----------------------------------------------------
int goodG2B_344()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000447F03) ----------------------------------------------------
int goodB2G_315()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447F3E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_63_good()
{
  goodG2B_344();
  return goodB2G_315();
}

//----- (0000000000447F58) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_53c_badSink(a1);
}

//----- (0000000000447F72) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000447F8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_53b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_rand_postinc_53c_goodB2GSink(a1);
}

//----- (0000000000447FA6) ----------------------------------------------------
int __fastcall badSink_58(__int64 a1)
{
  int result; // eax

  result = badStatic_14;
  if ( badStatic_14 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB48C: using guessed type int badStatic_14;

//----- (0000000000447FD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_21_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  badStatic_14 = 1;
  return badSink_58(v4);
}
// 6AB48C: using guessed type int badStatic_14;

//----- (000000000044809E) ----------------------------------------------------
int __fastcall goodB2G1Sink_14(__int64 a1)
{
  if ( goodB2G1Static_14 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6AB490: using guessed type int goodB2G1Static_14;

//----- (00000000004480F7) ----------------------------------------------------
int goodB2G1_217()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G1Static_14 = 0;
  return goodB2G1Sink_14(v4);
}
// 6AB490: using guessed type int goodB2G1Static_14;

//----- (00000000004481BE) ----------------------------------------------------
int __fastcall goodB2G2Sink_14(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_14;
  if ( goodB2G2Static_14 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6AB494: using guessed type int goodB2G2Static_14;

//----- (000000000044820B) ----------------------------------------------------
int goodB2G2_217()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G2Static_14 = 1;
  return goodB2G2Sink_14(v4);
}
// 6AB494: using guessed type int goodB2G2Static_14;

//----- (00000000004482D2) ----------------------------------------------------
int __fastcall goodG2BSink_58(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_14;
  if ( goodG2BStatic_14 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6AB498: using guessed type int goodG2BStatic_14;

//----- (0000000000448303) ----------------------------------------------------
int goodG2B_345()
{
  goodG2BStatic_14 = 1;
  return goodG2BSink_58(2LL);
}
// 6AB498: using guessed type int goodG2BStatic_14;

//----- (0000000000448333) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_21_good()
{
  goodB2G1_217();
  goodB2G2_217();
  return goodG2B_345();
}

//----- (0000000000448357) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54e_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000448382) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (00000000004483AD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (00000000004483EA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000448447) ----------------------------------------------------
int goodB2G1_218()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004484C4) ----------------------------------------------------
int goodB2G2_218()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000448535) ----------------------------------------------------
int goodG2B1_188()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000448583) ----------------------------------------------------
int goodG2B2_188()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004485C5) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_good()
{
  goodB2G1_218();
  goodB2G2_218();
  goodG2B1_188();
  return goodG2B2_188();
}

//----- (00000000004485F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52c_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044861E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000448649) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000448686) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_34_bad()
{
  __int16 v1; // [rsp+Ah] [rbp-6h]
  __int16 v2; // [rsp+Ch] [rbp-4h]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004486E1) ----------------------------------------------------
int goodG2B_346()
{
  return printIntLine(3u);
}

//----- (0000000000448725) ----------------------------------------------------
int goodB2G_316()
{
  int result; // eax
  __int16 v1; // [rsp+Ah] [rbp-6h]
  __int16 v2; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v2 = v1;
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000448794) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_34_good()
{
  goodG2B_346();
  return goodB2G_316();
}

//----- (00000000004487AE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_badSink(v2);
}

//----- (0000000000448818) ----------------------------------------------------
int goodG2B_347()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_goodG2BSink(2);
}

//----- (000000000044883A) ----------------------------------------------------
int goodB2G_317()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_goodB2GSink(v2);
}

//----- (00000000004488A4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_52_good()
{
  goodG2B_347();
  return goodB2G_317();
}

//----- (00000000004488BE) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_68_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_68_badData = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_68b_badSink();
}
// 6AB5D0: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_68_badData;

//----- (0000000000448911) ----------------------------------------------------
int goodG2B_348()
{
  CWE190_Integer_Overflow__char_rand_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__char_rand_postinc_68b_goodG2BSink();
}
// 6AB5D2: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_68_goodG2BData;

//----- (0000000000448937) ----------------------------------------------------
int goodB2G_318()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_68b_goodB2GSink();
}
// 6AB5D1: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData;

//----- (000000000044898A) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_68_good()
{
  goodG2B_348();
  return goodB2G_318();
}

//----- (00000000004489A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (00000000004489DC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) + 1));
}

//----- (0000000000448A14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}

//----- (0000000000448A60) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_postinc_68_badData + 1);
}
// 6AB5DC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_68_badData;

//----- (0000000000448A87) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodG2BData + 1);
}
// 6AB5D4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodG2BData;

//----- (0000000000448AAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5D8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodB2GData;

//----- (0000000000448AEA) ----------------------------------------------------
void CWE190_Integer_Overflow__int_fgets_postinc_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v3 = ++v4;
    printIntLine(v4);
  }
}

//----- (0000000000448B82) ----------------------------------------------------
void goodB2G_319()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = ++v4;
      printIntLine(v4);
    }
  }
}

//----- (0000000000448C2F) ----------------------------------------------------
int goodG2B_349()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000448C81) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_17_good()
{
  goodB2G_319();
  return goodG2B_349();
}

//----- (0000000000448C9B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_postinc_61b_badSource()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000448CAE) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000448CC1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_max_postinc_61b_goodB2GSource()
{
  return 0x7FFFFFFFLL;
}

//----- (0000000000448CD4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000448CFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000448D22) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000448D5B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_53_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_53b_badSink(v0);
}

//----- (0000000000448DA5) ----------------------------------------------------
int goodG2B_350()
{
  return CWE190_Integer_Overflow__char_rand_postinc_53b_goodG2BSink(2);
}

//----- (0000000000448DC2) ----------------------------------------------------
int goodB2G_320()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_53b_goodB2GSink(v0);
}

//----- (0000000000448E0C) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_53_good()
{
  goodG2B_350();
  return goodB2G_320();
}

//----- (0000000000448E26) ----------------------------------------------------
int __fastcall badSink_59(int a1)
{
  int result; // eax

  result = badStatic_15;
  if ( badStatic_15 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB49C: using guessed type int badStatic_15;

//----- (0000000000448E51) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  badStatic_15 = 1;
  return badSink_59(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB49C: using guessed type int badStatic_15;

//----- (0000000000448E93) ----------------------------------------------------
int __fastcall goodB2G1Sink_15(int a1)
{
  if ( goodB2G1Static_15 )
    return printLine("Benign, fixed string");
  if ( a1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(a1 + 1);
}
// 6AB4A0: using guessed type int goodB2G1Static_15;

//----- (0000000000448EDC) ----------------------------------------------------
int goodB2G1_219()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G1Static_15 = 0;
  return goodB2G1Sink_15(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4A0: using guessed type int goodB2G1Static_15;

//----- (0000000000448F1E) ----------------------------------------------------
int __fastcall goodB2G2Sink_15(int a1)
{
  int result; // eax

  result = goodB2G2Static_15;
  if ( goodB2G2Static_15 )
  {
    if ( a1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(a1 + 1);
  }
  return result;
}
// 6AB4A4: using guessed type int goodB2G2Static_15;

//----- (0000000000448F5B) ----------------------------------------------------
int goodB2G2_219()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G2Static_15 = 1;
  return goodB2G2Sink_15(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4A4: using guessed type int goodB2G2Static_15;

//----- (0000000000448F9D) ----------------------------------------------------
int __fastcall goodG2BSink_59(int a1)
{
  int result; // eax

  result = goodG2BStatic_15;
  if ( goodG2BStatic_15 )
    result = printUnsignedLine(a1 + 1);
  return result;
}
// 6AB4A8: using guessed type int goodG2BStatic_15;

//----- (0000000000448FC8) ----------------------------------------------------
int goodG2B_351()
{
  goodG2BStatic_15 = 1;
  return goodG2BSink_59(2);
}
// 6AB4A8: using guessed type int goodG2BStatic_15;

//----- (0000000000448FF4) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_21_good()
{
  goodB2G1_219();
  goodB2G2_219();
  return goodG2B_351();
}

//----- (0000000000449018) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044905F) ----------------------------------------------------
int goodB2G1_220()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004490BA) ----------------------------------------------------
int goodB2G2_220()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449115) ----------------------------------------------------
int goodG2B1_189()
{
  return printUnsignedLine(3u);
}

//----- (0000000000449141) ----------------------------------------------------
int goodG2B2_189()
{
  return printUnsignedLine(3u);
}

//----- (000000000044916D) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_03_good()
{
  goodB2G1_220();
  goodB2G2_220();
  goodG2B1_189();
  return goodG2B2_189();
}

//----- (000000000044919B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53c_badSink(a1);
}

//----- (00000000004491B2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53c_goodG2BSink(a1);
}

//----- (00000000004491C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53c_goodB2GSink(a1);
}

//----- (00000000004491E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000449201) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000449222) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000449258) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%hd", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__short_fscanf_postinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449299) ----------------------------------------------------
int goodG2B_352()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__short_fscanf_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004492C3) ----------------------------------------------------
int goodB2G_321()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%hd", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__short_fscanf_postinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449304) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_66_good()
{
  goodG2B_352();
  return goodB2G_321();
}

//----- (000000000044931E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_postinc_61b_badSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000449350) ----------------------------------------------------
int goodG2B_353()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_max_postinc_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (0000000000449382) ----------------------------------------------------
int goodB2G_322()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_max_postinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004493C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_61_good()
{
  goodG2B_353();
  return goodB2G_322();
}

//----- (00000000004493E3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_68_badData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_68b_badSink();
}
// 6AB5DC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_68_badData;
// 4493E3: using guessed type char buf[16];

//----- (00000000004494D4) ----------------------------------------------------
int goodG2B_354()
{
  CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_68b_goodG2BSink();
}
// 6AB5D4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodG2BData;

//----- (00000000004494FF) ----------------------------------------------------
int goodB2G_323()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodB2GData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_postinc_68b_goodB2GSink();
}
// 6AB5D8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_68_goodB2GData;
// 4494FF: using guessed type char buf[16];

//----- (00000000004495F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_68_good()
{
  goodG2B_354();
  return goodB2G_323();
}

//----- (000000000044960A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printLongLongLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044967F) ----------------------------------------------------
int goodB2G_324()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printLongLongLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449713) ----------------------------------------------------
int goodG2B_355()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(++v1);
  return result;
}

//----- (000000000044976C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_17_good()
{
  goodB2G_324();
  return goodG2B_355();
}

//----- (0000000000449786) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_badSink(v2);
}

//----- (00000000004497F6) ----------------------------------------------------
int goodG2B_356()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_goodG2BSink(2);
}

//----- (000000000044981E) ----------------------------------------------------
int goodB2G_325()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_67b_goodB2GSink(v2);
}

//----- (000000000044988E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_67_good()
{
  goodG2B_356();
  return goodB2G_325();
}

//----- (00000000004498A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB198: using guessed type int staticFive_13;

//----- (00000000004498EA) ----------------------------------------------------
int goodB2G1_221()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = 0x7FFFFFFF;
  if ( staticFive_13 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6AB198: using guessed type int staticFive_13;

//----- (000000000044994D) ----------------------------------------------------
int goodB2G2_221()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = 0x7FFFFFFF;
  result = staticFive_13;
  if ( staticFive_13 == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6AB198: using guessed type int staticFive_13;

//----- (00000000004499A4) ----------------------------------------------------
int goodG2B1_190()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB198: using guessed type int staticFive_13;

//----- (00000000004499F2) ----------------------------------------------------
int goodG2B2_190()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = 2;
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB198: using guessed type int staticFive_13;

//----- (0000000000449A34) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_07_good()
{
  goodB2G1_221();
  goodB2G2_221();
  goodG2B1_190();
  return goodG2B2_190();
}

//----- (0000000000449A62) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%u", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 + 1);
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449AFD) ----------------------------------------------------
int goodB2G_326()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  else if ( v1 == -1 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449BC2) ----------------------------------------------------
int goodG2B_357()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(3u);
}

//----- (0000000000449C29) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_12_good()
{
  goodB2G_326();
  return goodG2B_357();
}

//----- (0000000000449C43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000449C7F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (0000000000449CBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (0000000000449D09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000449D2A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000449D4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000449D81) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53b_badSink(v7);
}
// 449D81: using guessed type char buf[16];

//----- (0000000000449E69) ----------------------------------------------------
int goodG2B_358()
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53b_goodG2BSink(2);
}

//----- (0000000000449E8B) ----------------------------------------------------
int goodB2G_327()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53b_goodB2GSink(v7);
}
// 449E8B: using guessed type char buf[16];

//----- (0000000000449F73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_53_good()
{
  goodG2B_358();
  return goodB2G_327();
}

//----- (0000000000449F8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54d_badSink(a1);
}

//----- (0000000000449FA4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54d_goodG2BSink(a1);
}

//----- (0000000000449FBB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54d_goodB2GSink(a1);
}

//----- (0000000000449FD2) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A001) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000044A017) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_goodB2GSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A046) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044A067) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044A088) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044A0BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000044A0E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000044A114) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000044A151) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_14 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine(v4 + 1);
  return result;
}
// 6AB19C: using guessed type int staticFive_14;

//----- (000000000044A1D9) ----------------------------------------------------
int goodB2G1_222()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_14 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_14 != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 + 1);
}
// 6AB19C: using guessed type int staticFive_14;

//----- (000000000044A282) ----------------------------------------------------
int goodB2G2_222()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_14 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_14;
  if ( staticFive_14 == 5 )
  {
    if ( v4 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 + 1);
  }
  return result;
}
// 6AB19C: using guessed type int staticFive_14;

//----- (000000000044A31F) ----------------------------------------------------
int goodG2B1_191()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB19C: using guessed type int staticFive_14;

//----- (000000000044A36D) ----------------------------------------------------
int goodG2B2_191()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB19C: using guessed type int staticFive_14;

//----- (000000000044A3AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_07_good()
{
  goodB2G1_222();
  goodB2G2_222();
  goodG2B1_191();
  return goodG2B2_191();
}

//----- (000000000044A3DD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_01_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A424) ----------------------------------------------------
int goodG2B_359()
{
  return printHexCharLine(3);
}

//----- (000000000044A452) ----------------------------------------------------
int goodB2G_328()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A4AD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_01_good()
{
  goodG2B_359();
  return goodB2G_328();
}

//----- (000000000044A4C7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_18_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000044A502) ----------------------------------------------------
int goodB2G_329()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000044A559) ----------------------------------------------------
int goodG2B_360()
{
  return printLongLongLine(3LL);
}

//----- (000000000044A58E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_18_good()
{
  goodB2G_329();
  return goodG2B_360();
}

//----- (000000000044A5A8) ----------------------------------------------------
__int64 __fastcall badSource_15(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 44A5A8: using guessed type char buf[16];

//----- (000000000044A6CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_15(0);
  return printIntLine(v0 + 1);
}

//----- (000000000044A6FD) ----------------------------------------------------
__int64 goodG2BSource_15()
{
  return 2LL;
}

//----- (000000000044A710) ----------------------------------------------------
int goodG2B_361()
{
  int v0; // eax

  v0 = goodG2BSource_15();
  return printIntLine(v0 + 1);
}

//----- (000000000044A742) ----------------------------------------------------
__int64 __fastcall goodB2GSource_15(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 44A742: using guessed type char buf[16];

//----- (000000000044A865) ----------------------------------------------------
int goodB2G_330()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_15(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044A8AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_42_good()
{
  goodB2G_330();
  return goodG2B_361();
}

//----- (000000000044A8C6) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A929) ----------------------------------------------------
int goodB2G1_223()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A9AC) ----------------------------------------------------
int goodB2G2_223()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AA23) ----------------------------------------------------
int goodG2B1_192()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044AA77) ----------------------------------------------------
int goodG2B2_192()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044AABF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_11_good()
{
  goodB2G1_223();
  goodB2G2_223();
  goodG2B1_192();
  return goodG2B2_192();
}

//----- (000000000044AAED) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AB34) ----------------------------------------------------
int goodB2G1_224()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AB8F) ----------------------------------------------------
int goodB2G2_224()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044ABEA) ----------------------------------------------------
int goodG2B1_193()
{
  return printUnsignedLine(3u);
}

//----- (000000000044AC16) ----------------------------------------------------
int goodG2B2_193()
{
  return printUnsignedLine(3u);
}

//----- (000000000044AC42) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_02_good()
{
  goodB2G1_224();
  goodB2G2_224();
  goodG2B1_193();
  return goodG2B2_193();
}

//----- (000000000044AC70) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_52_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_52b_badSink(v0);
}

//----- (000000000044ACBA) ----------------------------------------------------
int goodG2B_362()
{
  return CWE190_Integer_Overflow__char_rand_postinc_52b_goodG2BSink(2);
}

//----- (000000000044ACD7) ----------------------------------------------------
int goodB2G_331()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_52b_goodB2GSink(v0);
}

//----- (000000000044AD21) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_52_good()
{
  goodG2B_362();
  return goodB2G_331();
}

//----- (000000000044AD3B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_64_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AD72) ----------------------------------------------------
int goodG2B_363()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_fscanf_postinc_64b_goodG2BSink(&v1);
}

//----- (000000000044AD90) ----------------------------------------------------
int goodB2G_332()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044ADC7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_64_good()
{
  goodG2B_363();
  return goodB2G_332();
}

//----- (000000000044ADE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_51b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044AE0C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044AE37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000044AE74) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_postinc_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AEB5) ----------------------------------------------------
int goodG2B_364()
{
  return CWE190_Integer_Overflow__int_fscanf_postinc_65b_goodG2BSink(2);
}

//----- (000000000044AEE0) ----------------------------------------------------
__int64 goodB2G_333()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int_fscanf_postinc_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AF21) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fscanf_postinc_65_good()
{
  goodG2B_364();
  return goodB2G_333();
}

//----- (000000000044AF3B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_badSource(0LL);
  return printLongLongLine(v0 + 1);
}

//----- (000000000044AF76) ----------------------------------------------------
int goodG2B_365()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000044AFB1) ----------------------------------------------------
int goodB2G_334()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_fscanf_postinc_61b_goodB2GSource(0LL);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000044B008) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_61_good()
{
  goodG2B_365();
  return goodB2G_334();
}

//----- (000000000044B022) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_16_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000044B07F) ----------------------------------------------------
int goodB2G_335()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000044B0EE) ----------------------------------------------------
int goodG2B_366()
{
  return printHexCharLine(3);
}

//----- (000000000044B11E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_16_good()
{
  goodB2G_335();
  return goodG2B_366();
}

//----- (000000000044B138) ----------------------------------------------------
__int64 staticReturnsTrue_13()
{
  return 1LL;
}

//----- (000000000044B143) ----------------------------------------------------
__int64 staticReturnsFalse_13()
{
  return 0LL;
}

//----- (000000000044B14E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v6 + 1);
  return result;
}

//----- (000000000044B1DE) ----------------------------------------------------
int goodB2G1_225()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_13() )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}

//----- (000000000044B28F) ----------------------------------------------------
int goodB2G2_225()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_13();
  if ( result )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}

//----- (000000000044B334) ----------------------------------------------------
int goodG2B1_194()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_13() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044B388) ----------------------------------------------------
int goodG2B2_194()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
    v1 = 2;
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000044B3D0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_08_good()
{
  goodB2G1_225();
  goodB2G2_225();
  goodG2B1_194();
  return goodG2B2_194();
}

//----- (000000000044B3FE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044B459) ----------------------------------------------------
int goodB2G1_226()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044B4D4) ----------------------------------------------------
int goodB2G2_226()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044B543) ----------------------------------------------------
int goodG2B1_195()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044B58F) ----------------------------------------------------
int goodG2B2_195()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044B5CF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_good()
{
  goodB2G1_226();
  goodB2G2_226();
  goodG2B1_195();
  return goodG2B2_195();
}

//----- (000000000044B5FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_badSink(a1);
}

//----- (000000000044B614) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_goodG2BSink(a1);
}

//----- (000000000044B62B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54e_goodB2GSink(a1);
}

//----- (000000000044B642) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1A0: using guessed type int staticFive_15;

//----- (000000000044B6A7) ----------------------------------------------------
int goodB2G1_227()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFive_15 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1A0: using guessed type int staticFive_15;

//----- (000000000044B737) ----------------------------------------------------
int goodB2G2_227()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_15;
  if ( staticFive_15 == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1A0: using guessed type int staticFive_15;

//----- (000000000044B7BB) ----------------------------------------------------
int goodG2B1_196()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_15 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1A0: using guessed type int staticFive_15;

//----- (000000000044B810) ----------------------------------------------------
int goodG2B2_196()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_15 == 5 )
    v1 = 2LL;
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1A0: using guessed type int staticFive_15;

//----- (000000000044B859) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_07_good()
{
  goodB2G1_227();
  goodB2G2_227();
  goodG2B1_196();
  return goodG2B2_196();
}

//----- (000000000044B887) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_14 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printIntLine(v8 + 1);
  return result;
}
// 6AB1A4: using guessed type int staticTrue_14;
// 44B887: using guessed type char buf[16];

//----- (000000000044B9D7) ----------------------------------------------------
int goodB2G1_228()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_14 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( staticFalse_14 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6AB1A4: using guessed type int staticTrue_14;
// 6AB4AC: using guessed type int staticFalse_14;
// 44B9D7: using guessed type char buf[16];

//----- (000000000044BB48) ----------------------------------------------------
int goodB2G2_228()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_14 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticTrue_14;
  if ( staticTrue_14 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6AB1A4: using guessed type int staticTrue_14;
// 44BB48: using guessed type char buf[16];

//----- (000000000044BCAD) ----------------------------------------------------
int goodG2B1_197()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_14 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1A4: using guessed type int staticTrue_14;
// 6AB4AC: using guessed type int staticFalse_14;

//----- (000000000044BCF9) ----------------------------------------------------
int goodG2B2_197()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_14 )
    v1 = 2;
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1A4: using guessed type int staticTrue_14;

//----- (000000000044BD39) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_05_good()
{
  goodB2G1_228();
  goodB2G2_228();
  goodG2B1_197();
  return goodG2B2_197();
}

//----- (000000000044BD67) ----------------------------------------------------
int __fastcall badSink_60(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044BD88) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_60(v8);
}
// 44BD88: using guessed type char buf[16];

//----- (000000000044BEB6) ----------------------------------------------------
int __fastcall goodG2BSink_60(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044BED7) ----------------------------------------------------
int goodG2B_367()
{
  return goodG2BSink_60(2);
}

//----- (000000000044BEF9) ----------------------------------------------------
int __fastcall goodB2GSink_43(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044BF2F) ----------------------------------------------------
int goodB2G_336()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_43(v8);
}
// 44BF2F: using guessed type char buf[16];

//----- (000000000044C05D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_41_good()
{
  goodB2G_336();
  return goodG2B_367();
}

//----- (000000000044C077) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044C0BE) ----------------------------------------------------
int goodG2B_368()
{
  return printUnsignedLine(3u);
}

//----- (000000000044C0EA) ----------------------------------------------------
int goodB2G_337()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044C145) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_01_good()
{
  goodG2B_368();
  return goodB2G_337();
}

//----- (000000000044C15F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000044C18B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000044C1B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000044C1F8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_51_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_51b_badSink(v0);
}

//----- (000000000044C242) ----------------------------------------------------
int goodG2B_369()
{
  return CWE190_Integer_Overflow__char_rand_postinc_51b_goodG2BSink(2);
}

//----- (000000000044C25F) ----------------------------------------------------
int goodB2G_338()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE190_Integer_Overflow__char_rand_postinc_51b_goodB2GSink(v0);
}

//----- (000000000044C2A9) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_51_good()
{
  goodG2B_369();
  return goodB2G_338();
}

//----- (000000000044C2C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54e_badSink(a1);
}

//----- (000000000044C2DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54e_goodG2BSink(a1);
}

//----- (000000000044C2F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_54e_goodB2GSink(a1);
}

//----- (000000000044C308) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_52b_badSink(v7);
}
// 44C308: using guessed type char buf[16];

//----- (000000000044C3F0) ----------------------------------------------------
int goodG2B_370()
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_52b_goodG2BSink(2);
}

//----- (000000000044C412) ----------------------------------------------------
int goodB2G_339()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_postinc_52b_goodB2GSink(v7);
}
// 44C412: using guessed type char buf[16];

//----- (000000000044C4FA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_52_good()
{
  goodG2B_370();
  return goodB2G_339();
}

//----- (000000000044C514) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54c_badSink(a1);
}

//----- (000000000044C52B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54c_goodG2BSink(a1);
}

//----- (000000000044C542) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_54c_goodB2GSink(a1);
}

//----- (000000000044C559) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044C57A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044C59B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044C5D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000044C5FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000044C629) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000044C66A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 44C66A: using guessed type char buf[16];

//----- (000000000044C75E) ----------------------------------------------------
int goodB2G_340()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 44C75E: using guessed type char buf[16];

//----- (000000000044C867) ----------------------------------------------------
int goodG2B_371()
{
  return printIntLine(3u);
}

//----- (000000000044C895) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_16_good()
{
  goodB2G_340();
  return goodG2B_371();
}

//----- (000000000044C8AF) ----------------------------------------------------
int badSink_61()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_postinc_45_badData + 1);
}
// 6AB4B0: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_45_badData;

//----- (000000000044C8DF) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_45_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_45_badData = v0;
  return badSink_61();
}
// 6AB4B0: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_45_badData;

//----- (000000000044C932) ----------------------------------------------------
int goodG2BSink_61()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_rand_postinc_45_goodG2BData + 1);
}
// 6AB4B1: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_45_goodG2BData;

//----- (000000000044C962) ----------------------------------------------------
int goodG2B_372()
{
  CWE190_Integer_Overflow__char_rand_postinc_45_goodG2BData = 2;
  return goodG2BSink_61();
}
// 6AB4B1: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_45_goodG2BData;

//----- (000000000044C988) ----------------------------------------------------
int goodB2GSink_44()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB4B2: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData;

//----- (000000000044C9CA) ----------------------------------------------------
int goodB2G_341()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData = v0;
  return goodB2GSink_44();
}
// 6AB4B2: using guessed type char CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData;

//----- (000000000044CA1D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_45_good()
{
  goodG2B_372();
  return goodB2G_341();
}

//----- (000000000044CA37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000044CA63) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000044CA8F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000044CACD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044CB28) ----------------------------------------------------
int goodB2G1_229()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000044CBA3) ----------------------------------------------------
int goodB2G2_229()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044CC12) ----------------------------------------------------
int goodG2B1_198()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000044CC5E) ----------------------------------------------------
int goodG2B2_198()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044CC9E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_good()
{
  goodB2G1_229();
  goodB2G2_229();
  goodG2B1_198();
  return goodG2B2_198();
}

//----- (000000000044CCCC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044CCED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044CD0E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044CD41) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_06_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000044CDB0) ----------------------------------------------------
int goodB2G1_230()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000044CE3D) ----------------------------------------------------
int goodB2G2_230()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000044CEBE) ----------------------------------------------------
int goodG2B1_199()
{
  return printHexCharLine(3);
}

//----- (000000000044CF0C) ----------------------------------------------------
int goodG2B2_199()
{
  return printHexCharLine(3);
}

//----- (000000000044CF4E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_06_good()
{
  goodB2G1_230();
  goodB2G2_230();
  goodG2B1_199();
  return goodG2B2_199();
}

//----- (000000000044CF7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54d_badSink(a1);
}

//----- (000000000044CF96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54d_goodG2BSink(a1);
}

//----- (000000000044CFB0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54d_goodB2GSink(a1);
}

//----- (000000000044CFCA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (000000000044D01C) ----------------------------------------------------
int goodB2G_342()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -1;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(++v1);
  }
  return result;
}

//----- (000000000044D080) ----------------------------------------------------
int goodG2B_373()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(++v1);
  return result;
}

//----- (000000000044D0D2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_17_good()
{
  goodB2G_342();
  return goodG2B_373();
}

//----- (000000000044D0EC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D133) ----------------------------------------------------
int goodB2G1_231()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D190) ----------------------------------------------------
int goodB2G2_231()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D1ED) ----------------------------------------------------
int goodG2B1_200()
{
  return printIntLine(3u);
}

//----- (000000000044D219) ----------------------------------------------------
int goodG2B2_200()
{
  return printIntLine(3u);
}

//----- (000000000044D245) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_03_good()
{
  goodB2G1_231();
  goodB2G2_231();
  goodG2B1_200();
  return goodG2B2_200();
}

//----- (000000000044D273) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044D29A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044D2C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000044D304) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044D332) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044D360) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000044D3A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_67b_badSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044D3D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044D404) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000044D447) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 + 1);
}

//----- (000000000044D4BD) ----------------------------------------------------
int goodB2G_343()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v2 + 1);
  return result;
}

//----- (000000000044D545) ----------------------------------------------------
int goodG2B_374()
{
  return printUnsignedLine(3u);
}

//----- (000000000044D573) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_18_good()
{
  goodB2G_343();
  return goodG2B_374();
}

//----- (000000000044D58D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_54b_badSink(v2);
}

//----- (000000000044D5F7) ----------------------------------------------------
int goodG2B_375()
{
  return CWE190_Integer_Overflow__int_rand_postinc_54b_goodG2BSink(2);
}

//----- (000000000044D619) ----------------------------------------------------
int goodB2G_344()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_54b_goodB2GSink(v2);
}

//----- (000000000044D683) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_54_good()
{
  goodG2B_375();
  return goodB2G_344();
}

//----- (000000000044D69D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_66b_badSink((__int64)&v5);
}
// 44D69D: using guessed type char buf[16];

//----- (000000000044D7D3) ----------------------------------------------------
int goodG2B_376()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000044D7FD) ----------------------------------------------------
int goodB2G_345()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_66b_goodB2GSink((__int64)&v5);
}
// 44D7FD: using guessed type char buf[16];

//----- (000000000044D933) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_66_good()
{
  goodG2B_376();
  return goodB2G_345();
}

//----- (000000000044D94D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_68b_badSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_postinc_68_badData + 1);
}
// 6AB574: using guessed type char CWE190_Integer_Overflow__char_max_postinc_68_badData;

//----- (000000000044D97D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_68b_goodG2BSink()
{
  return printHexCharLine(CWE190_Integer_Overflow__char_max_postinc_68_goodG2BData + 1);
}
// 6AB576: using guessed type char CWE190_Integer_Overflow__char_max_postinc_68_goodG2BData;

//----- (000000000044D9AD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__char_max_postinc_68_goodB2GData == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE190_Integer_Overflow__char_max_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB575: using guessed type char CWE190_Integer_Overflow__char_max_postinc_68_goodB2GData;

//----- (000000000044D9EF) ----------------------------------------------------
int __fastcall badSink_62(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044DA16) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_44_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))badSink_62)(v4);
}

//----- (000000000044DADC) ----------------------------------------------------
int __fastcall goodG2BSink_62(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000044DB03) ----------------------------------------------------
int goodG2B_377()
{
  return goodG2BSink_62(2LL);
}

//----- (000000000044DB32) ----------------------------------------------------
int __fastcall goodB2GSink_45(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000044DB75) ----------------------------------------------------
__int64 goodB2G_346()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))goodB2GSink_45)(v4);
}

//----- (000000000044DC3B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_postinc_44_good()
{
  goodG2B_377();
  return goodB2G_346();
}

//----- (000000000044DC55) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_badSource()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000044DC68) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000044DC7B) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_goodB2GSource()
{
  return 0xFFFFFFFFLL;
}

//----- (000000000044DC8E) ----------------------------------------------------
int badSink_63()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_postinc_45_badData + 1);
}
// 6AB4B4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_45_badData;

//----- (000000000044DCB5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_45_badData = v7;
  return badSink_63();
}
// 6AB4B4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_45_badData;
// 44DCB5: using guessed type char buf[16];

//----- (000000000044DDA6) ----------------------------------------------------
int goodG2BSink_63()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodG2BData + 1);
}
// 6AB4B8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodG2BData;

//----- (000000000044DDCD) ----------------------------------------------------
int goodG2B_378()
{
  CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodG2BData = 2;
  return goodG2BSink_63();
}
// 6AB4B8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodG2BData;

//----- (000000000044DDF8) ----------------------------------------------------
int goodB2GSink_46()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB4BC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodB2GData;

//----- (000000000044DE34) ----------------------------------------------------
int goodB2G_347()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodB2GData = v7;
  return goodB2GSink_46();
}
// 6AB4BC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_postinc_45_goodB2GData;
// 44DE34: using guessed type char buf[16];

//----- (000000000044DF25) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_45_good()
{
  goodG2B_378();
  return goodB2G_347();
}

//----- (000000000044DF3F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_14_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044DFA0) ----------------------------------------------------
int goodB2G1_232()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044E023) ----------------------------------------------------
int goodB2G2_232()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044E09A) ----------------------------------------------------
int goodG2B1_201()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044E0F0) ----------------------------------------------------
int goodG2B2_201()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044E13A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_14_good()
{
  goodB2G1_232();
  goodB2G2_232();
  goodG2B1_201();
  return goodG2B2_201();
}

//----- (000000000044E168) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 + 1);
}
// 44E168: using guessed type char buf[16];

//----- (000000000044E272) ----------------------------------------------------
int goodB2G1_233()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 44E272: using guessed type char buf[16];

//----- (000000000044E39D) ----------------------------------------------------
int goodB2G2_233()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 + 1);
  return result;
}
// 44E39D: using guessed type char buf[16];

//----- (000000000044E4BC) ----------------------------------------------------
int goodG2B1_202()
{
  return printIntLine(3u);
}

//----- (000000000044E508) ----------------------------------------------------
int goodG2B2_202()
{
  return printIntLine(3u);
}

//----- (000000000044E548) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_postinc_06_good()
{
  goodB2G1_233();
  goodB2G2_233();
  goodG2B1_202();
  return goodG2B2_202();
}

//----- (000000000044E576) ----------------------------------------------------
__int64 staticReturnsTrue_14()
{
  return 1LL;
}

//----- (000000000044E581) ----------------------------------------------------
__int64 staticReturnsFalse_14()
{
  return 0LL;
}

//----- (000000000044E58C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000044E5E1) ----------------------------------------------------
int goodB2G1_234()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)staticReturnsFalse_14() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (000000000044E65E) ----------------------------------------------------
int goodB2G2_234()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_14();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (000000000044E6CF) ----------------------------------------------------
int goodG2B1_203()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_14() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000044E72A) ----------------------------------------------------
int goodG2B2_203()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    v1 = 2LL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000044E779) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_08_good()
{
  goodB2G1_234();
  goodB2G2_234();
  goodG2B1_203();
  return goodG2B2_203();
}

//----- (000000000044E7A7) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_32_bad()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 *v3; // [rsp+10h] [rbp-10h]
  __int16 *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  *v4 = v1;
  return printIntLine((__int16)(*v3 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E823) ----------------------------------------------------
int goodG2B_379()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000044E888) ----------------------------------------------------
int goodB2G_348()
{
  int result; // eax
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Eh] [rbp-12h]
  __int16 *v4; // [rsp+10h] [rbp-10h]
  __int16 *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v3 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E918) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_32_good()
{
  goodG2B_379();
  return goodB2G_348();
}

//----- (000000000044E932) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000044E965) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 + 1);
}

//----- (000000000044E998) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(*a1 + 1);
  return result;
}

//----- (000000000044E9DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000044EA11) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000044EA45) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (000000000044EA8B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_67_bad()
{
  return CWE190_Integer_Overflow__char_max_postinc_67b_badSink(127);
}

//----- (000000000044EAAF) ----------------------------------------------------
int goodG2B_380()
{
  return CWE190_Integer_Overflow__char_max_postinc_67b_goodG2BSink(2);
}

//----- (000000000044EAD3) ----------------------------------------------------
int goodB2G_349()
{
  return CWE190_Integer_Overflow__char_max_postinc_67b_goodB2GSink(127);
}

//----- (000000000044EAF7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_67_good()
{
  goodG2B_380();
  return goodB2G_349();
}

//----- (000000000044EB11) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_53d_badSink(a1);
}

//----- (000000000044EB28) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_53d_goodG2BSink(a1);
}

//----- (000000000044EB3F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_53d_goodB2GSink(a1);
}

//----- (000000000044EB56) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_badSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000044EB88) ----------------------------------------------------
int goodG2B_381()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_goodG2BSource();
  return printUnsignedLine(v0 + 1);
}

//----- (000000000044EBBA) ----------------------------------------------------
int goodB2G_350()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__unsigned_int_max_postinc_61b_goodB2GSource();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044EBFE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_61_good()
{
  goodG2B_381();
  return goodB2G_350();
}

//----- (000000000044EC18) ----------------------------------------------------
int __fastcall badSink_64(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044EC43) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_44_bad()
{
  return badSink_64(127);
}

//----- (000000000044EC69) ----------------------------------------------------
int __fastcall goodG2BSink_64(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (000000000044EC94) ----------------------------------------------------
int goodG2B_382()
{
  return goodG2BSink_64(2);
}

//----- (000000000044ECBA) ----------------------------------------------------
int __fastcall goodB2GSink_47(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (000000000044ECF7) ----------------------------------------------------
int goodB2G_351()
{
  return goodB2GSink_47(127);
}

//----- (000000000044ED1D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_44_good()
{
  goodG2B_382();
  return goodB2G_351();
}

//----- (000000000044ED37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54c_badSink(a1);
}

//----- (000000000044ED51) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54c_goodG2BSink(a1);
}

//----- (000000000044ED6B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54c_goodB2GSink(a1);
}

//----- (000000000044ED85) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_04_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47AC40, &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044EDE2) ----------------------------------------------------
int goodB2G1_235()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47AC40, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044EE61) ----------------------------------------------------
int goodB2G2_235()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47AC40, &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044EED4) ----------------------------------------------------
int goodG2B1_204()
{
  return printIntLine(3u);
}

//----- (000000000044EF26) ----------------------------------------------------
int goodG2B2_204()
{
  return printIntLine(3u);
}

//----- (000000000044EF6C) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_04_good()
{
  goodB2G1_235();
  goodB2G2_235();
  goodG2B1_204();
  return goodG2B2_204();
}

//----- (000000000044EF9A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_31_bad()
{
  __int16 v1; // [rsp+8h] [rbp-8h]
  __int16 v2; // [rsp+Ah] [rbp-6h]
  __int16 v3; // [rsp+Ch] [rbp-4h]
  __int16 v4; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v4 = v1;
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044EFF5) ----------------------------------------------------
int goodG2B_383()
{
  return printIntLine(3u);
}

//----- (000000000044F039) ----------------------------------------------------
int goodB2G_352()
{
  int result; // eax
  __int16 v1; // [rsp+8h] [rbp-8h]
  __int16 v2; // [rsp+Ch] [rbp-4h]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F0A8) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_31_good()
{
  goodG2B_383();
  return goodB2G_352();
}

//----- (000000000044F0C2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = -1;
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1A8: using guessed type int staticFive_16;

//----- (000000000044F104) ----------------------------------------------------
int goodB2G1_236()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = -1;
  if ( staticFive_16 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6AB1A8: using guessed type int staticFive_16;

//----- (000000000044F164) ----------------------------------------------------
int goodB2G2_236()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = -1;
  result = staticFive_16;
  if ( staticFive_16 == 5 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6AB1A8: using guessed type int staticFive_16;

//----- (000000000044F1B8) ----------------------------------------------------
int goodG2B1_205()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1A8: using guessed type int staticFive_16;

//----- (000000000044F206) ----------------------------------------------------
int goodG2B2_205()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = 2;
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1A8: using guessed type int staticFive_16;

//----- (000000000044F248) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_07_good()
{
  goodB2G1_236();
  goodB2G2_236();
  goodG2B1_205();
  return goodG2B2_205();
}

//----- (000000000044F276) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_63_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F2AD) ----------------------------------------------------
int goodG2B_384()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_fscanf_postinc_63b_goodG2BSink(&v1);
}

//----- (000000000044F2CB) ----------------------------------------------------
int goodB2G_353()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE190_Integer_Overflow__char_fscanf_postinc_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F302) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_63_good()
{
  goodG2B_384();
  return goodB2G_353();
}

//----- (000000000044F31C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044F33D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044F35E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044F391) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044F3BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (000000000044F3ED) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (000000000044F42F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_badSink(a1);
}

//----- (000000000044F446) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_goodG2BSink(a1);
}

//----- (000000000044F45D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54d_goodB2GSink(a1);
}

//----- (000000000044F474) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_postinc_68_badData + 1);
}
// 6AB5E8: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_68_badData;

//----- (000000000044F49B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_postinc_68_goodG2BData + 1);
}
// 6AB5E4: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_68_goodG2BData;

//----- (000000000044F4C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_rand_postinc_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_rand_postinc_68_goodB2GData + 1);
  return result;
}
// 6AB5E0: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_68_goodB2GData;

//----- (000000000044F4FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044F51F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (000000000044F540) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (000000000044F573) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_52c_badSink(a1);
}

//----- (000000000044F58A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_52c_goodG2BSink(a1);
}

//----- (000000000044F5A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_52c_goodB2GSink(a1);
}

//----- (000000000044F5B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_fscanf_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_fscanf_postinc_22_badGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB4C0: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_badGlobal;

//----- (000000000044F5F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6AB4C4: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Global;

//----- (000000000044F648) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6AB4C8: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Global;

//----- (000000000044F694) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB4CC: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BGlobal;

//----- (000000000044F6CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_54_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044F6F8) ----------------------------------------------------
int goodG2B_385()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54b_goodG2BSink(2LL);
}

//----- (000000000044F71E) ----------------------------------------------------
int goodB2G_354()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044F74A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_54_good()
{
  goodG2B_385();
  return goodB2G_354();
}

//----- (000000000044F764) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000044F7A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (000000000044F7E2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (000000000044F835) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54d_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54e_badSink(a1);
}

//----- (000000000044F84F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54d_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54e_goodG2BSink(a1);
}

//----- (000000000044F869) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54d_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54e_goodB2GSink(a1);
}

//----- (000000000044F883) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F8C4) ----------------------------------------------------
int goodG2B_386()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_goodG2BSink(2);
}

//----- (000000000044F8EF) ----------------------------------------------------
__int64 goodB2G_355()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F930) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_65_good()
{
  goodG2B_386();
  return goodB2G_355();
}

//----- (000000000044F94A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_53c_badSink(a1);
}

//----- (000000000044F961) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_53c_goodG2BSink(a1);
}

//----- (000000000044F978) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_rand_postinc_53c_goodB2GSink(a1);
}

//----- (000000000044F98F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044F9B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044F9D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044FA07) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044FA28) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000044FA49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000044FA7F) ----------------------------------------------------
__int64 staticReturnsTrue_15()
{
  return 1LL;
}

//----- (000000000044FA8A) ----------------------------------------------------
__int64 staticReturnsFalse_15()
{
  return 0LL;
}

//----- (000000000044FA95) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_15();
  if ( result )
    result = printUnsignedLine(v6 + 1);
  return result;
}

//----- (000000000044FB25) ----------------------------------------------------
int goodB2G1_237()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_15() )
    return printLine("Benign, fixed string");
  if ( v6 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v6 + 1);
}

//----- (000000000044FBD3) ----------------------------------------------------
int goodB2G2_237()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_15();
  if ( result )
  {
    if ( v6 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v6 + 1);
  }
  return result;
}

//----- (000000000044FC75) ----------------------------------------------------
int goodG2B1_206()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_15() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_15();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044FCC9) ----------------------------------------------------
int goodG2B2_206()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = 2;
  result = staticReturnsTrue_15();
  if ( result )
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (000000000044FD11) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_good()
{
  goodB2G1_237();
  goodB2G2_237();
  goodG2B1_206();
  return goodG2B2_206();
}

//----- (000000000044FD3F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_badSink(a1);
}

//----- (000000000044FD56) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_goodG2BSink(a1);
}

//----- (000000000044FD6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_goodB2GSink(a1);
}

//----- (000000000044FD84) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_17_bad()
{
  int result; // eax
  char v1; // [rsp+6h] [rbp-Ah]
  char v2; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%c", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = ++v1;
    result = printHexCharLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FDF1) ----------------------------------------------------
int goodB2G_356()
{
  int result; // eax
  char v1; // [rsp+6h] [rbp-Ah]
  char v2; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%c", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 127 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = ++v1;
      result = printHexCharLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FE72) ----------------------------------------------------
int goodG2B_387()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (000000000044FEC6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_17_good()
{
  goodB2G_356();
  return goodG2B_387();
}

//----- (000000000044FEE0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_68_badData = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_68b_badSink();
}
// 6AB5E8: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_68_badData;

//----- (000000000044FF53) ----------------------------------------------------
int goodG2B_388()
{
  CWE190_Integer_Overflow__int_rand_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_rand_postinc_68b_goodG2BSink();
}
// 6AB5E4: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_68_goodG2BData;

//----- (000000000044FF7E) ----------------------------------------------------
int goodB2G_357()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__int_rand_postinc_68b_goodB2GSink();
}
// 6AB5E0: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_68_goodB2GData;

//----- (000000000044FFF1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_68_good()
{
  goodG2B_388();
  return goodB2G_357();
}

//----- (000000000045000B) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450045) ----------------------------------------------------
int goodG2B_389()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000450069) ----------------------------------------------------
int goodB2G_358()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004500A3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_64_good()
{
  goodG2B_389();
  return goodB2G_358();
}

//----- (00000000004500BD) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_22_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_fscanf_postinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4C0: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_badGlobal;

//----- (0000000000450100) ----------------------------------------------------
int goodB2G1_238()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4C4: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G1Global;

//----- (0000000000450143) ----------------------------------------------------
int goodB2G2_238()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4C8: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodB2G2Global;

//----- (0000000000450186) ----------------------------------------------------
int goodG2B_390()
{
  CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BSink(2);
}
// 6AB4CC: using guessed type int CWE190_Integer_Overflow__short_fscanf_postinc_22_goodG2BGlobal;

//----- (00000000004501B1) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_22_good()
{
  goodB2G1_238();
  goodB2G2_238();
  return goodG2B_390();
}

//----- (00000000004501D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450210) ----------------------------------------------------
int goodG2B_391()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_goodG2BSink(2LL);
}

//----- (0000000000450236) ----------------------------------------------------
int goodB2G_359()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450271) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_53_good()
{
  goodG2B_391();
  return goodB2G_359();
}

//----- (000000000045028B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000045030B) ----------------------------------------------------
int goodG2B_392()
{
  return printIntLine(3u);
}

//----- (0000000000450343) ----------------------------------------------------
int goodB2G_360()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004503D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_31_good()
{
  goodG2B_392();
  return goodB2G_360();
}

//----- (00000000004503F2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_64_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_64b_badSink(&v1);
}

//----- (0000000000450414) ----------------------------------------------------
int goodG2B_393()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_max_postinc_64b_goodG2BSink(&v1);
}

//----- (0000000000450436) ----------------------------------------------------
int goodB2G_361()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_64b_goodB2GSink(&v1);
}

//----- (0000000000450458) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_64_good()
{
  goodG2B_393();
  return goodB2G_361();
}

//----- (0000000000450472) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53d_badSink(a1);
}

//----- (000000000045048C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53d_goodG2BSink(a1);
}

//----- (00000000004504A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004504C0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004504E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000450502) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000450538) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_53b_badSink(v2);
}

//----- (00000000004505A2) ----------------------------------------------------
int goodG2B_394()
{
  return CWE190_Integer_Overflow__int_rand_postinc_53b_goodG2BSink(2);
}

//----- (00000000004505C4) ----------------------------------------------------
int goodB2G_362()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_53b_goodB2GSink(v2);
}

//----- (000000000045062E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_53_good()
{
  goodG2B_394();
  return goodB2G_362();
}

//----- (0000000000450648) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_61b_badSource(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450678) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_fscanf_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000045068B) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_61b_goodB2GSource(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004506BB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_badSink(a1);
}

//----- (00000000004506D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_goodG2BSink(a1);
}

//----- (00000000004506E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000450700) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54e_badSink(a1);
}

//----- (000000000045071A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54e_goodG2BSink(a1);
}

//----- (0000000000450734) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_54e_goodB2GSink(a1);
}

//----- (000000000045074E) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_13_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004507AF) ----------------------------------------------------
int goodB2G1_239()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000450832) ----------------------------------------------------
int goodB2G2_239()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004508A9) ----------------------------------------------------
int goodG2B1_207()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004508FF) ----------------------------------------------------
int goodG2B2_207()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000450949) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_13_good()
{
  goodB2G1_239();
  goodB2G2_239();
  goodG2B1_207();
  return goodG2B2_207();
}

//----- (0000000000450977) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_18_bad()
{
  return printHexCharLine(-128);
}

//----- (00000000004509A7) ----------------------------------------------------
int goodB2G_363()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004509E9) ----------------------------------------------------
int goodG2B_395()
{
  return printHexCharLine(3);
}

//----- (0000000000450A19) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_18_good()
{
  goodB2G_363();
  return goodG2B_395();
}

//----- (0000000000450A33) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450A96) ----------------------------------------------------
int goodB2G1_240()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450B1B) ----------------------------------------------------
int goodB2G2_240()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000450B94) ----------------------------------------------------
int goodG2B1_208()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000450BE8) ----------------------------------------------------
int goodG2B2_208()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000450C30) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_11_good()
{
  goodB2G1_240();
  goodB2G2_240();
  goodG2B1_208();
  return goodG2B2_208();
}

//----- (0000000000450C5E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_63_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_63b_badSink(&v10);
}

//----- (0000000000450D1B) ----------------------------------------------------
int goodG2B_396()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000450D41) ----------------------------------------------------
int goodB2G_364()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_63b_goodB2GSink(&v10);
}

//----- (0000000000450DFE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_63_good()
{
  goodG2B_396();
  return goodB2G_364();
}

//----- (0000000000450E18) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v8 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 450E18: using guessed type char buf[16];

//----- (0000000000450F6A) ----------------------------------------------------
int goodB2G1_241()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 + 1);
}
// 6AB1B8: using guessed type int globalFive;
// 450F6A: using guessed type char buf[16];

//----- (00000000004510DD) ----------------------------------------------------
int goodB2G2_241()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 4510DD: using guessed type char buf[16];

//----- (0000000000451244) ----------------------------------------------------
int goodG2B1_209()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000451292) ----------------------------------------------------
int goodG2B2_209()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004512D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_14_good()
{
  goodB2G1_241();
  goodB2G2_241();
  goodG2B1_209();
  return goodG2B2_209();
}

//----- (0000000000451302) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v6 = recv(v10, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  *v9 = v11;
  return printIntLine(*v8 + 1);
}
// 451302: using guessed type char buf[16];

//----- (0000000000451465) ----------------------------------------------------
int goodG2B_397()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (00000000004514BC) ----------------------------------------------------
int goodB2G_365()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+48h] [rbp-8h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  v11 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v11 = accept(fd, 0LL, 0LL);
      if ( v11 != -1 )
      {
        v7 = recv(v11, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v11 != -1 )
    close(v11);
  *v10 = v12;
  v6 = *v9;
  if ( v6 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 + 1);
  return result;
}
// 4514BC: using guessed type char buf[16];

//----- (0000000000451634) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_32_good()
{
  goodG2B_397();
  return goodB2G_365();
}

//----- (000000000045164E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (0000000000451682) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 + 1));
}

//----- (00000000004516B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 + 1));
  return result;
}

//----- (00000000004516FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000451725) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000045174C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000045178F) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_61_bad()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_fscanf_postinc_61b_badSource(0x20u);
  return printHexCharLine(v0 + 1);
}

//----- (00000000004517C7) ----------------------------------------------------
int goodG2B_398()
{
  char v0; // al

  v0 = CWE190_Integer_Overflow__char_fscanf_postinc_61b_goodG2BSource();
  return printHexCharLine(v0 + 1);
}

//----- (00000000004517FF) ----------------------------------------------------
int goodB2G_366()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE190_Integer_Overflow__char_fscanf_postinc_61b_goodB2GSource(0x20u);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000451849) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_61_good()
{
  goodG2B_398();
  return goodB2G_366();
}

//----- (0000000000451863) ----------------------------------------------------
int __fastcall badSink_65(__int16 a1)
{
  int result; // eax

  result = badStatic_16;
  if ( badStatic_16 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB4D0: using guessed type int badStatic_16;

//----- (000000000045189B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_21_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  badStatic_16 = 1;
  return badSink_65(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4D0: using guessed type int badStatic_16;

//----- (00000000004518DE) ----------------------------------------------------
int __fastcall goodB2G1Sink_16(__int16 a1)
{
  if ( goodB2G1Static_16 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6AB4D4: using guessed type int goodB2G1Static_16;

//----- (0000000000451936) ----------------------------------------------------
int goodB2G1_242()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  goodB2G1Static_16 = 0;
  return goodB2G1Sink_16(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4D4: using guessed type int goodB2G1Static_16;

//----- (0000000000451979) ----------------------------------------------------
int __fastcall goodB2G2Sink_16(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_16;
  if ( goodB2G2Static_16 )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6AB4D8: using guessed type int goodB2G2Static_16;

//----- (00000000004519C5) ----------------------------------------------------
int goodB2G2_242()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  goodB2G2Static_16 = 1;
  return goodB2G2Sink_16(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4D8: using guessed type int goodB2G2Static_16;

//----- (0000000000451A08) ----------------------------------------------------
int __fastcall goodG2BSink_65(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_16;
  if ( goodG2BStatic_16 )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB4DC: using guessed type int goodG2BStatic_16;

//----- (0000000000451A40) ----------------------------------------------------
int goodG2B_399()
{
  goodG2BStatic_16 = 1;
  return goodG2BSink_65(2);
}
// 6AB4DC: using guessed type int goodG2BStatic_16;

//----- (0000000000451A6B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_21_good()
{
  goodB2G1_242();
  goodB2G2_242();
  return goodG2B_399();
}

//----- (0000000000451A8F) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_03_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451ADA) ----------------------------------------------------
int goodB2G1_243()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451B3B) ----------------------------------------------------
int goodB2G2_243()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451B9C) ----------------------------------------------------
int goodG2B1_210()
{
  return printIntLine(3u);
}

//----- (0000000000451BD0) ----------------------------------------------------
int goodG2B2_210()
{
  return printIntLine(3u);
}

//----- (0000000000451C04) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_03_good()
{
  goodB2G1_243();
  goodB2G2_243();
  goodG2B1_210();
  return goodG2B2_210();
}

//----- (0000000000451C32) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451C83) ----------------------------------------------------
int goodB2G_367()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451CF3) ----------------------------------------------------
int goodG2B_400()
{
  return printLongLongLine(3LL);
}

//----- (0000000000451D28) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_16_good()
{
  goodB2G_367();
  return goodG2B_400();
}

//----- (0000000000451D42) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_63_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_63b_badSink(&v2);
}

//----- (0000000000451D8D) ----------------------------------------------------
int goodG2B_401()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 2;
  return CWE190_Integer_Overflow__char_rand_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000451DAB) ----------------------------------------------------
int goodB2G_368()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_63b_goodB2GSink(&v2);
}

//----- (0000000000451DF6) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_63_good()
{
  goodG2B_401();
  return goodB2G_368();
}

//----- (0000000000451E10) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53c_badSink(a1);
}

//----- (0000000000451E2A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000451E44) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53c_goodB2GSink(a1);
}

//----- (0000000000451E5E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 451E5E: using guessed type char buf[16];

//----- (0000000000451FAC) ----------------------------------------------------
int goodB2G1_244()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 451FAC: using guessed type char buf[16];

//----- (000000000045211B) ----------------------------------------------------
int goodB2G2_244()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 45211B: using guessed type char buf[16];

//----- (000000000045227E) ----------------------------------------------------
int goodG2B1_211()
{
  return printIntLine(3u);
}

//----- (00000000004522C8) ----------------------------------------------------
int goodG2B2_211()
{
  return printIntLine(3u);
}

//----- (0000000000452306) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_04_good()
{
  goodB2G1_244();
  goodB2G2_244();
  goodG2B1_211();
  return goodG2B2_211();
}

//----- (0000000000452334) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11 + 1;
  v5 = v11 + 1;
  return printIntLine(v11 + 1);
}
// 452334: using guessed type char buf[16];

//----- (0000000000452478) ----------------------------------------------------
int goodG2B_402()
{
  return printIntLine(3u);
}

//----- (00000000004524B0) ----------------------------------------------------
int goodB2G_369()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  v5 = v10;
  if ( v10 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 + 1);
  return result;
}
// 4524B0: using guessed type char buf[16];

//----- (0000000000452609) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_31_good()
{
  goodG2B_402();
  return goodB2G_369();
}

//----- (0000000000452623) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000045264A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000452671) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004526B4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_badSink(a1);
}

//----- (00000000004526CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_goodG2BSink(a1);
}

//----- (00000000004526E2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004526F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 4526F9: using guessed type char buf[16];

//----- (0000000000452833) ----------------------------------------------------
int goodB2G1_245()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 452833: using guessed type char buf[16];

//----- (0000000000452982) ----------------------------------------------------
int goodB2G2_245()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 452982: using guessed type char buf[16];

//----- (0000000000452AD1) ----------------------------------------------------
int goodG2B1_212()
{
  return printIntLine(3u);
}

//----- (0000000000452AFF) ----------------------------------------------------
int goodG2B2_212()
{
  return printIntLine(3u);
}

//----- (0000000000452B2D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_15_good()
{
  goodB2G1_245();
  goodB2G2_245();
  goodG2B1_212();
  return goodG2B2_212();
}

//----- (0000000000452B5B) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_67_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_67b_badSink(v1);
}

//----- (0000000000452BC4) ----------------------------------------------------
int goodG2B_403()
{
  return CWE190_Integer_Overflow__short_rand_postinc_67b_goodG2BSink(2);
}

//----- (0000000000452BED) ----------------------------------------------------
int goodB2G_370()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE190_Integer_Overflow__short_rand_postinc_67b_goodB2GSink(v1);
}

//----- (0000000000452C56) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_67_good()
{
  goodG2B_403();
  return goodB2G_370();
}

//----- (0000000000452C70) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_68_bad()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_68_badData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_68b_badSink();
}
// 6AB5F0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_badData;

//----- (0000000000452CA5) ----------------------------------------------------
int goodG2B_404()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_68b_goodG2BSink();
}
// 6AB600: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_goodG2BData;

//----- (0000000000452CD4) ----------------------------------------------------
int goodB2G_371()
{
  CWE190_Integer_Overflow__int64_t_max_postinc_68_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_postinc_68b_goodB2GSink();
}
// 6AB5F8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_postinc_68_goodB2GData;

//----- (0000000000452D09) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_68_good()
{
  goodG2B_404();
  return goodB2G_371();
}

//----- (0000000000452D23) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_52b_badSink(v2);
}

//----- (0000000000452D8D) ----------------------------------------------------
int goodG2B_405()
{
  return CWE190_Integer_Overflow__int_rand_postinc_52b_goodG2BSink(2);
}

//----- (0000000000452DAF) ----------------------------------------------------
int goodB2G_372()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_52b_goodB2GSink(v2);
}

//----- (0000000000452E19) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_52_good()
{
  goodG2B_405();
  return goodB2G_372();
}

//----- (0000000000452E33) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000452E54) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000452E75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_rand_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000452EAB) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_12_bad()
{
  __int16 v1; // [rsp+Ah] [rbp-6h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v1 + 1));
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452F50) ----------------------------------------------------
int goodB2G_373()
{
  int result; // eax
  __int16 v1; // [rsp+Ah] [rbp-6h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  else if ( v1 == 0x7FFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000453022) ----------------------------------------------------
int goodG2B_406()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (000000000045309A) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_12_good()
{
  goodB2G_373();
  return goodG2B_406();
}

//----- (00000000004530B4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_badSink(a1);
}

//----- (00000000004530CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_goodG2BSink(a1);
}

//----- (00000000004530E2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53d_goodB2GSink(a1);
}

//----- (00000000004530F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (000000000045316F) ----------------------------------------------------
int goodB2G_374()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (00000000004531FA) ----------------------------------------------------
int goodG2B_407()
{
  return printIntLine(3u);
}

//----- (0000000000453228) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_16_good()
{
  goodB2G_374();
  return goodG2B_407();
}

//----- (0000000000453242) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_16_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045328B) ----------------------------------------------------
int goodB2G_375()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004532E8) ----------------------------------------------------
int goodG2B_408()
{
  return printHexCharLine(3);
}

//----- (0000000000453318) ----------------------------------------------------
int CWE190_Integer_Overflow__char_fscanf_postinc_16_good()
{
  goodB2G_375();
  return goodG2B_408();
}

//----- (0000000000453332) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_postinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB4E4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_badGlobal;

//----- (000000000045335D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB4E8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Global;

//----- (00000000004533A9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB4EC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Global;

//----- (00000000004533E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB4F0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BGlobal;

//----- (0000000000453414) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_53_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000453440) ----------------------------------------------------
int goodG2B_409()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53b_goodG2BSink(2LL);
}

//----- (0000000000453466) ----------------------------------------------------
int goodB2G_376()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_53b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000453492) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_53_good()
{
  goodG2B_409();
  return goodB2G_376();
}

//----- (00000000004534AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54d_badSink(a1);
}

//----- (00000000004534C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54d_goodG2BSink(a1);
}

//----- (00000000004534E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54d_goodB2GSink(a1);
}

//----- (00000000004534FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000453531) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 + 1));
}

//----- (0000000000453568) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_max_postinc_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 + 1));
  return result;
}

//----- (00000000004535B3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53b_badSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53c_badSink(a1);
}

//----- (00000000004535CE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53b_goodG2BSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53c_goodG2BSink(a1);
}

//----- (00000000004535E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_fscanf_postinc_53b_goodB2GSink(__int16 a1)
{
  return CWE190_Integer_Overflow__short_fscanf_postinc_53c_goodB2GSink(a1);
}

//----- (0000000000453604) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_51b_badSink(v2);
}

//----- (000000000045366E) ----------------------------------------------------
int goodG2B_410()
{
  return CWE190_Integer_Overflow__int_rand_postinc_51b_goodG2BSink(2);
}

//----- (0000000000453690) ----------------------------------------------------
int goodB2G_377()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE190_Integer_Overflow__int_rand_postinc_51b_goodB2GSink(v2);
}

//----- (00000000004536FA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_51_good()
{
  goodG2B_410();
  return goodB2G_377();
}

//----- (0000000000453714) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_05_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_15 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;

//----- (00000000004537F6) ----------------------------------------------------
int goodB2G1_246()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_15 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFalse_15 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 6AB1AC: using guessed type int staticTrue_15;
// 6AB4E0: using guessed type int staticFalse_15;

//----- (0000000000453900) ----------------------------------------------------
int goodB2G2_246()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_15 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_15;
  if ( staticTrue_15 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;

//----- (00000000004539FE) ----------------------------------------------------
int goodG2B1_213()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_15 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;
// 6AB4E0: using guessed type int staticFalse_15;

//----- (0000000000453A51) ----------------------------------------------------
int goodG2B2_213()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_15 )
    v1 = 2LL;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;

//----- (0000000000453A98) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_05_good()
{
  goodB2G1_246();
  goodB2G2_246();
  goodG2B1_213();
  return goodG2B2_213();
}

//----- (0000000000453AC6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_11_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000453B2D) ----------------------------------------------------
int goodB2G1_247()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000453BB6) ----------------------------------------------------
int goodB2G2_247()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000453C33) ----------------------------------------------------
int goodG2B1_214()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000453C8F) ----------------------------------------------------
int goodG2B2_214()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000453CDF) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_11_good()
{
  goodB2G1_247();
  goodB2G2_247();
  goodG2B1_214();
  return goodG2B2_214();
}

//----- (0000000000453D0D) ----------------------------------------------------
int __fastcall badSink_66(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000453D38) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_44_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_66)((unsigned int)(char)v0);
}

//----- (0000000000453D8B) ----------------------------------------------------
int __fastcall goodG2BSink_66(char a1)
{
  return printHexCharLine(a1 + 1);
}

//----- (0000000000453DB6) ----------------------------------------------------
int goodG2B_411()
{
  return goodG2BSink_66(2);
}

//----- (0000000000453DDC) ----------------------------------------------------
int __fastcall goodB2GSink_48(char a1)
{
  int result; // eax

  if ( a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 + 1);
  return result;
}

//----- (0000000000453E19) ----------------------------------------------------
__int64 goodB2G_378()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_48)((unsigned int)(char)v0);
}

//----- (0000000000453E6C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_44_good()
{
  goodG2B_411();
  return goodB2G_378();
}

//----- (0000000000453E86) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000453EA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000453EC8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_listen_socket_postinc_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000453EFE) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_badSink((__int64)&v1);
}

//----- (0000000000453F28) ----------------------------------------------------
int goodG2B_412()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000453F52) ----------------------------------------------------
int goodB2G_379()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  v2 = -1;
  return CWE190_Integer_Overflow__unsigned_int_max_postinc_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000453F7C) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_66_good()
{
  goodG2B_412();
  return goodB2G_379();
}

//----- (0000000000453F96) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_22_badSink(v8);
}
// 6AB4E4: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_badGlobal;
// 453F96: using guessed type char buf[16];

//----- (00000000004540CE) ----------------------------------------------------
int goodB2G1_248()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Sink(v8);
}
// 6AB4E8: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G1Global;
// 4540CE: using guessed type char buf[16];

//----- (0000000000454206) ----------------------------------------------------
int goodB2G2_248()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Sink(v8);
}
// 6AB4EC: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodB2G2Global;
// 454206: using guessed type char buf[16];

//----- (000000000045433E) ----------------------------------------------------
int goodG2B_413()
{
  CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BSink(2);
}
// 6AB4F0: using guessed type int CWE190_Integer_Overflow__int_listen_socket_postinc_22_goodG2BGlobal;

//----- (000000000045436A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_22_good()
{
  goodB2G1_248();
  goodB2G2_248();
  return goodG2B_413();
}

//----- (000000000045438E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_18_bad()
{
  return printUnsignedLine(0);
}

//----- (00000000004543BC) ----------------------------------------------------
int goodB2G_380()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004543FC) ----------------------------------------------------
int goodG2B_414()
{
  return printUnsignedLine(3u);
}

//----- (000000000045442A) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_18_good()
{
  goodB2G_380();
  return goodG2B_414();
}

//----- (0000000000454444) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_34_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000045451E) ----------------------------------------------------
int goodG2B_415()
{
  return printLongLongLine(3LL);
}

//----- (0000000000454561) ----------------------------------------------------
int goodB2G_381()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000454657) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_34_good()
{
  goodG2B_415();
  return goodB2G_381();
}

//----- (0000000000454671) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_10_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004546D0) ----------------------------------------------------
int goodB2G1_249()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000454751) ----------------------------------------------------
int goodB2G2_249()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004547C6) ----------------------------------------------------
int goodG2B1_215()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000045481A) ----------------------------------------------------
int goodG2B2_215()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000454862) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_10_good()
{
  goodB2G1_249();
  goodB2G2_249();
  goodG2B1_215();
  return goodG2B2_215();
}

//----- (0000000000454890) ----------------------------------------------------
int badSink_67()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_postinc_45_badData + 1);
}
// 6AB4F4: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_45_badData;

//----- (00000000004548B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_45_badData = v2;
  return badSink_67();
}
// 6AB4F4: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_45_badData;

//----- (000000000045492A) ----------------------------------------------------
int goodG2BSink_67()
{
  return printIntLine(CWE190_Integer_Overflow__int_rand_postinc_45_goodG2BData + 1);
}
// 6AB4F8: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_45_goodG2BData;

//----- (0000000000454951) ----------------------------------------------------
int goodG2B_416()
{
  CWE190_Integer_Overflow__int_rand_postinc_45_goodG2BData = 2;
  return goodG2BSink_67();
}
// 6AB4F8: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_45_goodG2BData;

//----- (000000000045497C) ----------------------------------------------------
int goodB2GSink_49()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_rand_postinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_rand_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB4FC: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_45_goodB2GData;

//----- (00000000004549B8) ----------------------------------------------------
int goodB2G_382()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__int_rand_postinc_45_goodB2GData = v2;
  return goodB2GSink_49();
}
// 6AB4FC: using guessed type int CWE190_Integer_Overflow__int_rand_postinc_45_goodB2GData;

//----- (0000000000454A2B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_45_good()
{
  goodG2B_416();
  return goodB2G_382();
}

//----- (0000000000454A45) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000454A78) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000454AAB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (0000000000454AFA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v6 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000454B84) ----------------------------------------------------
int goodB2G1_250()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000454C2F) ----------------------------------------------------
int goodB2G2_250()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000454CCE) ----------------------------------------------------
int goodG2B1_216()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000454D1C) ----------------------------------------------------
int goodG2B2_216()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000454D5E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_13_good()
{
  goodB2G1_250();
  goodB2G2_250();
  goodG2B1_216();
  return goodG2B2_216();
}

//----- (0000000000454D8C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_52c_badSink(a1);
}

//----- (0000000000454DA6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_52c_goodG2BSink(a1);
}

//----- (0000000000454DC0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_52c_goodB2GSink(a1);
}

//----- (0000000000454DDA) ----------------------------------------------------
__int64 staticReturnsTrue_16()
{
  return 1LL;
}

//----- (0000000000454DE5) ----------------------------------------------------
__int64 staticReturnsFalse_16()
{
  return 0LL;
}

//----- (0000000000454DF0) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_08_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = 127;
  result = staticReturnsTrue_16();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000454E3A) ----------------------------------------------------
int goodB2G1_251()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = 127;
  if ( (unsigned int)staticReturnsFalse_16() )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}

//----- (0000000000454EA2) ----------------------------------------------------
int goodB2G2_251()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = 127;
  result = staticReturnsTrue_16();
  if ( result )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}

//----- (0000000000454EFE) ----------------------------------------------------
int goodG2B1_217()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_16() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_16();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000454F54) ----------------------------------------------------
int goodG2B2_217()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = 2;
  result = staticReturnsTrue_16();
  if ( result )
    result = printHexCharLine(v1 + 1);
  return result;
}

//----- (0000000000454F9E) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_08_good()
{
  goodB2G1_251();
  goodB2G2_251();
  goodG2B1_217();
  return goodG2B2_217();
}

//----- (0000000000454FCC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_63_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_63b_badSink(&v1);
}

//----- (0000000000454FEE) ----------------------------------------------------
int goodG2B_417()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 2;
  return CWE190_Integer_Overflow__short_max_postinc_63b_goodG2BSink(&v1);
}

//----- (0000000000455010) ----------------------------------------------------
int goodB2G_383()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0x7FFF;
  return CWE190_Integer_Overflow__short_max_postinc_63b_goodB2GSink(&v1);
}

//----- (0000000000455032) ----------------------------------------------------
int CWE190_Integer_Overflow__short_max_postinc_63_good()
{
  goodG2B_417();
  return goodB2G_383();
}

//----- (000000000045504C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 + 1);
}

//----- (00000000004550D4) ----------------------------------------------------
int goodB2G1_252()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000045517D) ----------------------------------------------------
int goodB2G2_252()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000045521A) ----------------------------------------------------
int goodG2B1_218()
{
  return printIntLine(3u);
}

//----- (0000000000455266) ----------------------------------------------------
int goodG2B2_218()
{
  return printIntLine(3u);
}

//----- (00000000004552A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_06_good()
{
  goodB2G1_252();
  goodB2G2_252();
  goodG2B1_218();
  return goodG2B2_218();
}

//----- (00000000004552D4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_01_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045531F) ----------------------------------------------------
int goodG2B_418()
{
  return printIntLine(3u);
}

//----- (0000000000455353) ----------------------------------------------------
int goodB2G_384()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004553B4) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_01_good()
{
  goodG2B_418();
  return goodB2G_384();
}

//----- (00000000004553CE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004553F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000045541C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_max_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000455458) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_badSink(a1);
}

//----- (000000000045546F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_goodG2BSink(a1);
}

//----- (0000000000455486) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_53c_goodB2GSink(a1);
}

//----- (000000000045549D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004554BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (00000000004554DF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_max_postinc_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000455512) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000455533) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000455554) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_rand_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000455587) ----------------------------------------------------
int __fastcall badSink_68(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004555A8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_68;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 4555A8: using guessed type char buf[16];

//----- (0000000000455699) ----------------------------------------------------
int __fastcall goodG2BSink_68(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004556BA) ----------------------------------------------------
int goodG2B_419()
{
  return goodG2BSink_68(2);
}

//----- (00000000004556E5) ----------------------------------------------------
int __fastcall goodB2GSink_50(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000045571B) ----------------------------------------------------
__int64 goodB2G_385()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_50;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 45571B: using guessed type char buf[16];

//----- (000000000045580C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_postinc_44_good()
{
  goodG2B_419();
  return goodB2G_385();
}

//----- (0000000000455826) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_03_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (000000000045589A) ----------------------------------------------------
int goodB2G1_253()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000455922) ----------------------------------------------------
int goodB2G2_253()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004559AA) ----------------------------------------------------
int goodG2B1_219()
{
  return printIntLine(3u);
}

//----- (00000000004559DE) ----------------------------------------------------
int goodG2B2_219()
{
  return printIntLine(3u);
}

//----- (0000000000455A12) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_03_good()
{
  goodB2G1_253();
  goodB2G2_253();
  goodG2B1_219();
  return goodG2B2_219();
}

//----- (0000000000455A40) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53d_badSink(a1);
}

//----- (0000000000455A57) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53d_goodG2BSink(a1);
}

//----- (0000000000455A6E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000455A85) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_badData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_badSink();
}
// 6AB610: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_badData;

//----- (0000000000455AF8) ----------------------------------------------------
int goodG2B_420()
{
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_goodG2BSink();
}
// 6AB608: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodG2BData;

//----- (0000000000455B23) ----------------------------------------------------
int goodB2G_386()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodB2GData = v2;
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_68b_goodB2GSink();
}
// 6AB60C: using guessed type int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_goodB2GData;

//----- (0000000000455B96) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_rand_postinc_68_good()
{
  goodG2B_420();
  return goodB2G_386();
}

//----- (0000000000455BB0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_max_postinc_61b_badSource()
{
  return 0x7FFFLL;
}

//----- (0000000000455BC6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_max_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000455BDC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_max_postinc_61b_goodB2GSource()
{
  return 0x7FFFLL;
}

//----- (0000000000455BF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54b_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54c_badSink(a1);
}

//----- (0000000000455C0C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54b_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54c_goodG2BSink(a1);
}

//----- (0000000000455C26) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_max_postinc_54b_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_max_postinc_54c_goodB2GSink(a1);
}

//----- (0000000000455C40) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_52_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_52b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000455C6C) ----------------------------------------------------
int goodG2B_421()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_52b_goodG2BSink(2LL);
}

//----- (0000000000455C92) ----------------------------------------------------
int goodB2G_387()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_52b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000455CBE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_52_good()
{
  goodG2B_421();
  return goodB2G_387();
}

//----- (0000000000455CD8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_66_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_66b_badSink((__int64)&v10);
}

//----- (0000000000455D9D) ----------------------------------------------------
int goodG2B_422()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000455DCB) ----------------------------------------------------
int goodB2G_388()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_postinc_66b_goodB2GSink((__int64)&v10);
}

//----- (0000000000455E90) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_66_good()
{
  goodG2B_422();
  return goodB2G_388();
}

//----- (0000000000455EAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000455ED1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000455EF8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_postinc_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000455F3B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000455F62) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000455F89) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_postinc_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000455FC5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_16_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000456000) ----------------------------------------------------
int goodB2G_389()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000456057) ----------------------------------------------------
int goodG2B_423()
{
  return printLongLongLine(3LL);
}

//----- (000000000045608C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_16_good()
{
  goodB2G_389();
  return goodG2B_423();
}

//----- (00000000004560A6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_09_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000456105) ----------------------------------------------------
int goodB2G1_254()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000456186) ----------------------------------------------------
int goodB2G2_254()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 + 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004561FB) ----------------------------------------------------
int goodG2B1_220()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000045624F) ----------------------------------------------------
int goodG2B2_220()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000456297) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_09_good()
{
  goodB2G1_254();
  goodB2G2_254();
  goodG2B1_220();
  return goodG2B2_220();
}

//----- (00000000004562C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1 + 1;
  v2 = v1 + 1;
  return printLongLongLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045631D) ----------------------------------------------------
int goodG2B_424()
{
  return printLongLongLine(3LL);
}

//----- (0000000000456360) ----------------------------------------------------
int goodB2G_390()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1;
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004563D4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_34_good()
{
  goodG2B_424();
  return goodB2G_390();
}

//----- (00000000004563EE) ----------------------------------------------------
int badSink_69()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_postinc_45_badData + 1);
}
// 6AB500: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_45_badData;

//----- (0000000000456415) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_45_badData = v1;
  return badSink_69();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB500: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_45_badData;

//----- (0000000000456456) ----------------------------------------------------
int goodG2BSink_69()
{
  return printIntLine(CWE190_Integer_Overflow__int_fscanf_postinc_45_goodG2BData + 1);
}
// 6AB504: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_45_goodG2BData;

//----- (000000000045647D) ----------------------------------------------------
int goodG2B_425()
{
  CWE190_Integer_Overflow__int_fscanf_postinc_45_goodG2BData = 2;
  return goodG2BSink_69();
}
// 6AB504: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_45_goodG2BData;

//----- (00000000004564A8) ----------------------------------------------------
int goodB2GSink_51()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fscanf_postinc_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fscanf_postinc_45_goodB2GData + 1);
  return result;
}
// 6AB508: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_45_goodB2GData;

//----- (00000000004564E4) ----------------------------------------------------
int goodB2G_391()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE190_Integer_Overflow__int_fscanf_postinc_45_goodB2GData = v1;
  return goodB2GSink_51();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB508: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_45_goodB2GData;

//----- (0000000000456525) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_45_good()
{
  goodG2B_425();
  return goodB2G_391();
}

//----- (000000000045653F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_postinc_66b_badSink((__int64)&v4);
}

//----- (00000000004565AF) ----------------------------------------------------
int goodG2B_426()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fgets_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004565D9) ----------------------------------------------------
int goodB2G_392()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_postinc_66b_goodB2GSink((__int64)&v4);
}

//----- (0000000000456649) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_postinc_66_good()
{
  goodG2B_426();
  return goodB2G_392();
}

//----- (0000000000456663) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000456696) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (00000000004566C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (0000000000456718) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47BC04, &v1);
  return printIntLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000456773) ----------------------------------------------------
int goodB2G1_255()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47BC04, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004567F0) ----------------------------------------------------
int goodB2G2_255()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47BC04, &v1);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000456861) ----------------------------------------------------
int goodG2B1_221()
{
  return printIntLine(3u);
}

//----- (00000000004568AD) ----------------------------------------------------
int goodG2B2_221()
{
  return printIntLine(3u);
}

//----- (00000000004568ED) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fscanf_postinc_06_good()
{
  goodB2G1_255();
  goodB2G2_255();
  goodG2B1_221();
  return goodG2B2_221();
}

//----- (000000000045691B) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_03_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000456949) ----------------------------------------------------
int goodB2G1_256()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000456989) ----------------------------------------------------
int goodB2G2_256()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004569C9) ----------------------------------------------------
int goodG2B1_222()
{
  return printHexCharLine(3);
}

//----- (00000000004569F7) ----------------------------------------------------
int goodG2B2_222()
{
  return printHexCharLine(3);
}

//----- (0000000000456A25) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_03_good()
{
  goodB2G1_256();
  goodB2G2_256();
  goodG2B1_222();
  return goodG2B2_222();
}

//----- (0000000000456A53) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_61b_badSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000456AAD) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000456AC3) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__short_rand_postinc_61b_goodB2GSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (0000000000456B1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_65_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_65b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000456B52) ----------------------------------------------------
int goodG2B_427()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_65b_goodG2BSink(2LL);
}

//----- (0000000000456B81) ----------------------------------------------------
int goodB2G_393()
{
  return CWE190_Integer_Overflow__int64_t_max_postinc_65b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000456BB6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_65_good()
{
  goodG2B_427();
  return goodB2G_393();
}

//----- (0000000000456BD0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_postinc_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB44C: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_badGlobal;

//----- (0000000000456BFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6AB450: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G1Global;

//----- (0000000000456C47) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6AB454: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodB2G2Global;

//----- (0000000000456C87) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6AB458: using guessed type int CWE190_Integer_Overflow__int_fscanf_postinc_22_goodG2BGlobal;

//----- (0000000000456CB2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_14_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v4 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456D3C) ----------------------------------------------------
int goodB2G1_257()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 + 1));
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456DE6) ----------------------------------------------------
int goodB2G2_257()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 + 1));
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456E84) ----------------------------------------------------
int goodG2B1_223()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456EDA) ----------------------------------------------------
int goodG2B2_223()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456F24) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_14_good()
{
  goodB2G1_257();
  goodB2G2_257();
  goodG2B1_223();
  return goodG2B2_223();
}

//----- (0000000000456F52) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_32_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Eh] [rbp-22h]
  __int16 *v6; // [rsp+10h] [rbp-20h]
  __int16 *v7; // [rsp+18h] [rbp-18h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v5 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v5 = v1;
  *v7 = v1;
  return printIntLine((__int16)(*v6 + 1));
}

//----- (0000000000456FF7) ----------------------------------------------------
int goodG2B_428()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000045705C) ----------------------------------------------------
int goodB2G_394()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Ch] [rbp-24h]
  __int16 v6; // [rsp+Eh] [rbp-22h]
  __int16 *v7; // [rsp+10h] [rbp-20h]
  __int16 *v8; // [rsp+18h] [rbp-18h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  *v8 = v1;
  v5 = *v7;
  if ( v5 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v5 + 1));
  return result;
}

//----- (0000000000457115) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_32_good()
{
  goodG2B_428();
  return goodB2G_394();
}

//----- (000000000045712F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000457150) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000457171) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (00000000004571A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (00000000004571D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 + 1);
}

//----- (000000000045720C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_rand_postinc_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 + 1);
  return result;
}

//----- (0000000000457252) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_badData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB61C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_badData;

//----- (0000000000457293) ----------------------------------------------------
int goodG2B_429()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_goodG2BSink();
}
// 6AB618: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodG2BData;

//----- (00000000004572BE) ----------------------------------------------------
int goodB2G_395()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB614: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_goodB2GData;

//----- (00000000004572FF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_68_good()
{
  goodG2B_429();
  return goodB2G_395();
}

//----- (0000000000457319) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045735C) ----------------------------------------------------
int goodG2B_430()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000045738A) ----------------------------------------------------
int goodB2G_396()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int64_t_fscanf_postinc_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004573CD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_postinc_66_good()
{
  goodG2B_430();
  return goodB2G_396();
}

//----- (00000000004573E7) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_12_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 127;
  else
    v1 = 2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v1 + 1);
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}

//----- (0000000000457467) ----------------------------------------------------
int goodB2G_397()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004574F9) ----------------------------------------------------
int goodG2B_431()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(3);
}

//----- (0000000000457567) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_12_good()
{
  goodB2G_397();
  return goodG2B_431();
}

//----- (0000000000457581) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_13_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000457665) ----------------------------------------------------
int goodB2G1_258()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000457771) ----------------------------------------------------
int goodB2G2_258()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000457871) ----------------------------------------------------
int goodG2B1_224()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004578C6) ----------------------------------------------------
int goodG2B2_224()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 47C494: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000045790F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_13_good()
{
  goodB2G1_258();
  goodB2G2_258();
  goodG2B1_224();
  return goodG2B2_224();
}

//----- (000000000045793D) ----------------------------------------------------
void CWE190_Integer_Overflow__int_rand_postinc_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine(++v5);
}

//----- (00000000004579D7) ----------------------------------------------------
void goodB2G_398()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 == 0x7FFFFFFF )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine(++v5);
  }
}

//----- (0000000000457A86) ----------------------------------------------------
int goodG2B_432()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(++v1);
  return result;
}

//----- (0000000000457AD8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_rand_postinc_17_good()
{
  goodB2G_398();
  return goodG2B_432();
}

//----- (0000000000457AF2) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000457B2A) ----------------------------------------------------
int goodG2B_433()
{
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_goodG2BSink(2);
}

//----- (0000000000457B4C) ----------------------------------------------------
int goodB2G_399()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000457B84) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_53_good()
{
  goodG2B_433();
  return goodB2G_399();
}

//----- (0000000000457B9E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_15_bad()
{
  return printUnsignedLine(0);
}

//----- (0000000000457BCC) ----------------------------------------------------
int goodB2G1_259()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000457C0C) ----------------------------------------------------
int goodB2G2_259()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000457C4C) ----------------------------------------------------
int goodG2B1_225()
{
  return printUnsignedLine(3u);
}

//----- (0000000000457C7A) ----------------------------------------------------
int goodG2B2_225()
{
  return printUnsignedLine(3u);
}

//----- (0000000000457CA8) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_15_good()
{
  goodB2G1_259();
  goodB2G2_259();
  goodG2B1_225();
  return goodG2B2_225();
}

//----- (0000000000457CD6) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_04_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000457D5C) ----------------------------------------------------
int goodB2G1_260()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000457E02) ----------------------------------------------------
int goodB2G2_260()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (0000000000457E9C) ----------------------------------------------------
int goodG2B1_226()
{
  return printIntLine(3u);
}

//----- (0000000000457EEE) ----------------------------------------------------
int goodG2B2_226()
{
  return printIntLine(3u);
}

//----- (0000000000457F34) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_04_good()
{
  goodB2G1_260();
  goodB2G2_260();
  goodG2B1_226();
  return goodG2B2_226();
}

//----- (0000000000457F62) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_31_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 + 1));
}

//----- (0000000000457FE6) ----------------------------------------------------
int goodG2B_434()
{
  return printIntLine(3u);
}

//----- (000000000045802A) ----------------------------------------------------
int goodB2G_400()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}

//----- (00000000004580C2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_31_good()
{
  goodG2B_434();
  return goodB2G_400();
}

//----- (00000000004580DC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_18_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 + 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458129) ----------------------------------------------------
int goodB2G_401()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == 0x7FFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 + 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045818C) ----------------------------------------------------
int goodG2B_435()
{
  return printIntLine(3u);
}

//----- (00000000004581C2) ----------------------------------------------------
int CWE190_Integer_Overflow__short_fscanf_postinc_18_good()
{
  goodB2G_401();
  return goodG2B_435();
}

//----- (00000000004581DC) ----------------------------------------------------
__int64 badSource_16()
{
  return 0xFFFFFFFFLL;
}

//----- (00000000004581EF) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_42_bad()
{
  int v0; // eax

  v0 = badSource_16();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000458221) ----------------------------------------------------
__int64 goodG2BSource_16()
{
  return 2LL;
}

//----- (0000000000458234) ----------------------------------------------------
int goodG2B_436()
{
  int v0; // eax

  v0 = goodG2BSource_16();
  return printUnsignedLine(v0 + 1);
}

//----- (0000000000458266) ----------------------------------------------------
__int64 goodB2GSource_16()
{
  return 0xFFFFFFFFLL;
}

//----- (0000000000458279) ----------------------------------------------------
int goodB2G_402()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_16();
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}

//----- (00000000004582BD) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_42_good()
{
  goodB2G_402();
  return goodG2B_436();
}

//----- (00000000004582D7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000458302) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000045832D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_postinc_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000045836D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_67b_badSink(v9);
}
// 45836D: using guessed type char buf[16];

//----- (00000000004584A1) ----------------------------------------------------
int goodG2B_437()
{
  return CWE190_Integer_Overflow__int_listen_socket_postinc_67b_goodG2BSink(2);
}

//----- (00000000004584C9) ----------------------------------------------------
int goodB2G_403()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE190_Integer_Overflow__int_listen_socket_postinc_67b_goodB2GSink(v9);
}
// 4584C9: using guessed type char buf[16];

//----- (00000000004585FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_67_good()
{
  goodG2B_437();
  return goodB2G_403();
}

//----- (0000000000458617) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal;
  if ( CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB510: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal;

//----- (000000000045864F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 + 1));
}
// 6AB514: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Global;

//----- (00000000004586A7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 + 1));
  }
  return result;
}
// 6AB518: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global;

//----- (00000000004586F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 + 1));
  return result;
}
// 6AB51C: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BGlobal;

//----- (000000000045872B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000458752) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000458779) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_postinc_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004587BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_postinc_61b_badSource();
  return printLongLongLine(v0 + 1);
}

//----- (00000000004587F7) ----------------------------------------------------
int goodG2B_438()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_postinc_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000458832) ----------------------------------------------------
int goodB2G_404()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_max_postinc_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000458889) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_postinc_61_good()
{
  goodG2B_438();
  return goodB2G_404();
}

//----- (00000000004588A3) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_10_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 127;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004588E5) ----------------------------------------------------
int goodB2G1_261()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 127;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000458945) ----------------------------------------------------
int goodB2G2_261()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 127;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000458999) ----------------------------------------------------
int goodG2B1_227()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004589E7) ----------------------------------------------------
int goodG2B2_227()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000458A29) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_10_good()
{
  goodB2G1_261();
  goodB2G2_261();
  goodG2B1_227();
  return goodG2B2_227();
}

//----- (0000000000458A57) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_05_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_16 )
    v1 = -1;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;

//----- (0000000000458A97) ----------------------------------------------------
int goodB2G1_262()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_16 )
    v1 = -1;
  if ( staticFalse_16 )
    return printLine("Benign, fixed string");
  if ( v1 == -1 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printUnsignedLine(v1 + 1);
}
// 6AB1B0: using guessed type int staticTrue_16;
// 6AB50C: using guessed type int staticFalse_16;

//----- (0000000000458AF5) ----------------------------------------------------
int goodB2G2_262()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_16 )
    v1 = -1;
  result = staticTrue_16;
  if ( staticTrue_16 )
  {
    if ( v1 == -1 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printUnsignedLine(v1 + 1);
  }
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;

//----- (0000000000458B47) ----------------------------------------------------
int goodG2B1_228()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_16 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;
// 6AB50C: using guessed type int staticFalse_16;

//----- (0000000000458B93) ----------------------------------------------------
int goodG2B2_228()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_16 )
    v1 = 2;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;

//----- (0000000000458BD3) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_05_good()
{
  goodB2G1_262();
  goodB2G2_262();
  goodG2B1_228();
  return goodG2B2_228();
}

//----- (0000000000458C01) ----------------------------------------------------
int __fastcall badSink_70(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000458C22) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_41_bad()
{
  return badSink_70(-1);
}

//----- (0000000000458C44) ----------------------------------------------------
int __fastcall goodG2BSink_70(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000458C65) ----------------------------------------------------
int goodG2B_439()
{
  return goodG2BSink_70(2);
}

//----- (0000000000458C87) ----------------------------------------------------
int __fastcall goodB2GSink_52(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000458CBA) ----------------------------------------------------
int goodB2G_405()
{
  return goodB2GSink_52(-1);
}

//----- (0000000000458CDC) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_max_postinc_41_good()
{
  goodB2G_405();
  return goodG2B_439();
}

//----- (0000000000458CF6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_badSink)(v2);
}

//----- (0000000000458D69) ----------------------------------------------------
int goodG2B_440()
{
  return CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_goodG2BSink(2);
}

//----- (0000000000458D94) ----------------------------------------------------
__int64 goodB2G_406()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE190_Integer_Overflow__unsigned_int_rand_postinc_65b_goodB2GSink)(v2);
}

//----- (0000000000458E07) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__unsigned_int_rand_postinc_65_good()
{
  goodG2B_440();
  return goodB2G_406();
}

//----- (0000000000458E21) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_01_bad()
{
  return printHexCharLine(-128);
}

//----- (0000000000458E4F) ----------------------------------------------------
int goodG2B_441()
{
  return printHexCharLine(3);
}

//----- (0000000000458E7D) ----------------------------------------------------
int goodB2G_407()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000458EBD) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_01_good()
{
  goodG2B_441();
  return goodB2G_407();
}

//----- (0000000000458ED7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_15_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000458FA3) ----------------------------------------------------
int goodB2G1_263()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000045908B) ----------------------------------------------------
int goodB2G2_263()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000459173) ----------------------------------------------------
int goodG2B1_229()
{
  return printLongLongLine(3LL);
}

//----- (00000000004591A8) ----------------------------------------------------
int goodG2B2_229()
{
  return printLongLongLine(3LL);
}

//----- (00000000004591DD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_postinc_15_good()
{
  goodB2G1_263();
  goodB2G2_263();
  goodG2B1_229();
  return goodG2B2_229();
}

//----- (000000000045920B) ----------------------------------------------------
void CWE190_Integer_Overflow__char_rand_postinc_17_bad()
{
  int v0; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v1 = v0;
  }
  for ( j = 0; j <= 0; ++j )
    printHexCharLine(++v1);
}

//----- (000000000045928C) ----------------------------------------------------
void goodB2G_408()
{
  int v0; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v1 = v0;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 127 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printHexCharLine(++v1);
  }
}

//----- (000000000045931F) ----------------------------------------------------
int goodG2B_442()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(++v1);
  return result;
}

//----- (0000000000459373) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_17_good()
{
  goodB2G_408();
  return goodG2B_442();
}

//----- (000000000045938D) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_66_bad()
{
  int v0; // eax
  char v2; // [rsp+0h] [rbp-10h]
  char v3; // [rsp+2h] [rbp-Eh]
  char v4; // [rsp+Fh] [rbp-1h]

  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  v3 = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_66b_badSink((__int64)&v2);
}

//----- (00000000004593DF) ----------------------------------------------------
int goodG2B_443()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__char_rand_postinc_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000459404) ----------------------------------------------------
int goodB2G_409()
{
  int v0; // eax
  char v2; // [rsp+0h] [rbp-10h]
  char v3; // [rsp+2h] [rbp-Eh]
  char v4; // [rsp+Fh] [rbp-1h]

  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  v3 = v0;
  return CWE190_Integer_Overflow__char_rand_postinc_66b_goodB2GSink((__int64)&v2);
}

//----- (0000000000459456) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_66_good()
{
  goodG2B_443();
  return goodB2G_409();
}

//----- (0000000000459470) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_22_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__short_rand_postinc_22_badSink(v1);
}
// 6AB510: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal;

//----- (00000000004594DB) ----------------------------------------------------
int goodB2G1_264()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Sink(v1);
}
// 6AB514: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Global;

//----- (0000000000459546) ----------------------------------------------------
int goodB2G2_264()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Sink(v1);
}
// 6AB518: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global;

//----- (00000000004595B1) ----------------------------------------------------
int goodG2B_444()
{
  CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BSink(2);
}
// 6AB51C: using guessed type int CWE190_Integer_Overflow__short_rand_postinc_22_goodG2BGlobal;

//----- (00000000004595DC) ----------------------------------------------------
int CWE190_Integer_Overflow__short_rand_postinc_22_good()
{
  goodB2G1_264();
  goodB2G2_264();
  return goodG2B_444();
}

//----- (0000000000459600) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_badSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000459621) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 + 1);
}

//----- (0000000000459642) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(a1 + 1);
  return result;
}

//----- (0000000000459675) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 + 1);
}
// 459675: using guessed type char buf[16];

//----- (00000000004597AF) ----------------------------------------------------
int goodB2G_410()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 + 1);
  return result;
}
// 4597AF: using guessed type char buf[16];

//----- (00000000004598FE) ----------------------------------------------------
int goodG2B_445()
{
  return printIntLine(3u);
}

//----- (000000000045992C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_listen_socket_postinc_16_good()
{
  goodB2G_410();
  return goodG2B_445();
}

//----- (0000000000459946) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53c_badSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53d_badSink(a1);
}

//----- (0000000000459960) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53c_goodG2BSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53d_goodG2BSink(a1);
}

//----- (000000000045997A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__char_fscanf_postinc_53c_goodB2GSink(char a1)
{
  return CWE190_Integer_Overflow__char_fscanf_postinc_53d_goodB2GSink(a1);
}

//----- (0000000000459994) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB520: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_badGlobal;

//----- (00000000004599D6) ----------------------------------------------------
int goodB2G1_265()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB524: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G1Global;

//----- (0000000000459A18) ----------------------------------------------------
int goodB2G2_265()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB528: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodB2G2Global;

//----- (0000000000459A5A) ----------------------------------------------------
int goodG2B_446()
{
  CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BSink(2);
}
// 6AB52C: using guessed type int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_goodG2BGlobal;

//----- (0000000000459A86) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_22_good()
{
  goodB2G1_265();
  goodB2G2_265();
  return goodG2B_446();
}

//----- (0000000000459AAA) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 + 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459AF3) ----------------------------------------------------
int goodB2G_411()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 == -1 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printUnsignedLine(v1 + 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459B50) ----------------------------------------------------
int goodG2B_447()
{
  return printUnsignedLine(3u);
}

//----- (0000000000459B7E) ----------------------------------------------------
int CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_good()
{
  goodB2G_411();
  return goodG2B_447();
}

//----- (0000000000459B98) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_14_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000459BDA) ----------------------------------------------------
int goodB2G1_266()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 + 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000459C3D) ----------------------------------------------------
int goodB2G2_266()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFF;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 + 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000459C94) ----------------------------------------------------
int goodG2B1_230()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000459CE2) ----------------------------------------------------
int goodG2B2_230()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000459D24) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_14_good()
{
  goodB2G1_266();
  goodB2G2_266();
  goodG2B1_230();
  return goodG2B2_230();
}

//----- (0000000000459D52) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_09_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 127;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000459D94) ----------------------------------------------------
int goodB2G1_267()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 127;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 127 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 + 1);
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000459DF4) ----------------------------------------------------
int goodB2G2_267()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 127;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 127 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 + 1);
  }
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000459E48) ----------------------------------------------------
int goodG2B1_231()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;
// 47C490: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000459E96) ----------------------------------------------------
int goodG2B2_231()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 + 1);
  return result;
}
// 47C48C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000459ED8) ----------------------------------------------------
int CWE190_Integer_Overflow__char_max_postinc_09_good()
{
  goodB2G1_267();
  goodB2G2_267();
  goodG2B1_231();
  return goodG2B2_231();
}

//----- (0000000000459F06) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v3 = 2147483648;
  v2 = 2147483648;
  return printIntLine(0x80000000);
}

//----- (0000000000459F5D) ----------------------------------------------------
int goodG2B_448()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 3;
  v2 = 3;
  return printIntLine(3u);
}

//----- (0000000000459FB4) ----------------------------------------------------
int goodB2G_412()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFF;
  v1 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000045A020) ----------------------------------------------------
int CWE190_Integer_Overflow__int_max_postinc_32_good()
{
  goodG2B_448();
  return goodB2G_412();
}

//----- (000000000045A03A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_61b_badSource()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (000000000045A07E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000045A091) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__char_rand_postinc_61b_goodB2GSource()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (000000000045A0D5) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_15_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 + 1);
}

//----- (000000000045A132) ----------------------------------------------------
int goodB2G1_268()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000045A1A1) ----------------------------------------------------
int goodB2G2_268()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == 127 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 + 1);
  return result;
}

//----- (000000000045A210) ----------------------------------------------------
int goodG2B1_232()
{
  return printHexCharLine(3);
}

//----- (000000000045A240) ----------------------------------------------------
int goodG2B2_232()
{
  return printHexCharLine(3);
}

//----- (000000000045A270) ----------------------------------------------------
int CWE190_Integer_Overflow__char_rand_postinc_15_good()
{
  goodB2G1_268();
  goodB2G2_268();
  goodG2B1_232();
  return goodG2B2_232();
}

//----- (000000000045A29E) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000045A2BF) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000045A2EA) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000045A30B) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000045A330) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000045A356) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045A37A) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045A39E) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000045A3C2) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000045A3E6) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000045A416) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000045A437) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000045A45B) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000045A486) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000045A4B2) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000045A509) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400C60: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A5E2) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400D70: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A696) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000045A6A1) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000045A6AC) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000045A6C2) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000045A6C8) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000045A6CE) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000045A6D4) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000045A6DA) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000045A6E0) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000045A6E6) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000045A6EC) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000045A6F2) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000045A6F8) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000045A6FE) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000045A704) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000045A70A) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000045A710) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000045A716) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000045A71C) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000045A722) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000045A728) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000045A72E) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000045A761) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000045A805) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000045A839) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000045A858) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000045A8CD) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000045A8E7) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000045A901) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000045A930) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 6AADD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 6AADD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000045A9A4) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 4610 function(s) have been successfully decompiled
