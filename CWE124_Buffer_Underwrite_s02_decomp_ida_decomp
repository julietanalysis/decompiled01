/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_4009E0();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void __noreturn exit(int status);
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// void *memmove(void *dest, const void *src, size_t n);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// char *strcpy(char *dest, const char *src);
// void srand(unsigned int seed);
// char *strncpy(char *dest, const char *src, size_t n);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE124_Buffer_Underwrite__malloc_char_loop_68_bad();
int goodG2B();
int CWE124_Buffer_Underwrite__malloc_char_loop_68_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_52_bad();
int goodG2B_0();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_52_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_05_bad();
int goodG2B1();
int goodG2B2();
int CWE124_Buffer_Underwrite__malloc_char_memmove_05_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_41_badSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_41_bad();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_41_goodG2BSink(_BYTE *a1);
int goodG2B_1();
int CWE124_Buffer_Underwrite__malloc_char_memmove_41_good();
int CWE124_Buffer_Underwrite__CWE839_negative_15_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1_0();
int goodG2B2_0();
int CWE124_Buffer_Underwrite__CWE839_negative_15_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_51_bad();
int goodG2B_2();
int CWE124_Buffer_Underwrite__malloc_char_loop_51_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54e_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54e_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54e_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_16_bad();
int goodG2B_3();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_16_good();
int CWE124_Buffer_Underwrite__CWE839_rand_66_bad();
int goodG2B_4();
int goodB2G();
int CWE124_Buffer_Underwrite__CWE839_rand_66_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_09_bad();
int goodG2B1_1();
int goodG2B2_1();
int CWE124_Buffer_Underwrite__malloc_char_loop_09_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_53_bad();
int goodG2B_5();
int CWE124_Buffer_Underwrite__malloc_char_loop_53_good();
__int64 badSource();
int CWE124_Buffer_Underwrite__CWE839_negative_42_bad();
__int64 goodG2BSource();
int goodG2B_6();
__int64 goodB2GSource();
int goodB2G_0();
int CWE124_Buffer_Underwrite__CWE839_negative_42_good();
__int64 badSource_0();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_42_bad();
_BYTE *goodG2BSource_0();
int goodG2B_7();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_42_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_34_bad();
int goodG2B_8();
int CWE124_Buffer_Underwrite__malloc_char_memmove_34_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_66b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_13_bad();
int goodG2B1_2();
int goodG2B2_2();
int CWE124_Buffer_Underwrite__malloc_char_loop_13_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_51_bad();
int goodG2B_9();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_51_good();
int CWE124_Buffer_Underwrite__CWE839_rand_06_bad();
int goodB2G1_0();
int goodB2G2_0();
int goodG2B1_3();
int goodG2B2_3();
int CWE124_Buffer_Underwrite__CWE839_rand_06_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_63b_badSink(char **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_63b_goodG2BSink(char **a1);
int CWE124_Buffer_Underwrite__CWE839_negative_05_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_4();
int goodG2B2_4();
int CWE124_Buffer_Underwrite__CWE839_negative_05_good();
int __fastcall badSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_negative_41_bad();
int __fastcall goodG2BSink(int a1);
int goodG2B_10();
int __fastcall goodB2GSink(int a1);
int goodB2G_1();
int CWE124_Buffer_Underwrite__CWE839_negative_41_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52b_goodG2BSink(__int64 a1);
int badSink_0();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_45_bad();
int goodG2BSink_0();
int goodG2B_11();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_45_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54e_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54e_goodG2BSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_66_bad();
int goodG2B_12();
int CWE124_Buffer_Underwrite__malloc_char_memmove_66_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_06_bad();
int goodG2B1_5();
int goodG2B2_5();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_06_good();
int CWE124_Buffer_Underwrite__CWE839_negative_34_bad();
int goodG2B_13();
int goodB2G_2();
int CWE124_Buffer_Underwrite__CWE839_negative_34_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_66b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_66b_goodB2GSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_63_bad();
int goodG2B_14();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_63_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_63b_badSink(char **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_63b_goodG2BSink(char **a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_17_bad();
int goodG2B_15();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_17_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_52_bad();
int goodG2B_16();
int CWE124_Buffer_Underwrite__malloc_char_loop_52_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_51b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_51b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_16_bad();
int goodG2B_17();
int CWE124_Buffer_Underwrite__malloc_char_loop_16_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE124_Buffer_Underwrite__CWE839_negative_08_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_6();
int goodG2B2_6();
int CWE124_Buffer_Underwrite__CWE839_negative_08_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_64b_badSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_64b_goodG2BSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54e_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54e_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54e_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_negative_66_bad();
int goodG2B_18();
int goodB2G_3();
int CWE124_Buffer_Underwrite__CWE839_negative_66_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68b_badSink();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68b_goodG2BSink();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE124_Buffer_Underwrite__CWE839_rand_08_bad();
int goodB2G1_3();
int goodB2G2_3();
int goodG2B1_7();
int goodG2B2_7();
int CWE124_Buffer_Underwrite__CWE839_rand_08_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68_bad();
int goodG2B_19();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_63_bad();
int goodG2B_20();
int CWE124_Buffer_Underwrite__malloc_char_memmove_63_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_12_bad();
int goodG2B_21();
int CWE124_Buffer_Underwrite__malloc_char_loop_12_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54e_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54e_goodG2BSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_63b_badSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_63b_goodG2BSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_63b_goodB2GSink(int *a1);
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_08_bad();
int goodG2B1_8();
int goodG2B2_8();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_08_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_53_bad();
int goodG2B_22();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_53_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__CWE839_negative_67_bad();
int goodG2B_23();
int goodB2G_4();
int CWE124_Buffer_Underwrite__CWE839_negative_67_good();
__int64 CWE124_Buffer_Underwrite__CWE839_rand_61b_badSource();
__int64 CWE124_Buffer_Underwrite__CWE839_rand_61b_goodG2BSource();
__int64 CWE124_Buffer_Underwrite__CWE839_rand_61b_goodB2GSource();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52c_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52c_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_02_bad();
int goodG2B1_9();
int goodG2B2_9();
int CWE124_Buffer_Underwrite__malloc_char_loop_02_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_51_bad();
int goodG2B_24();
int CWE124_Buffer_Underwrite__malloc_char_memmove_51_good();
int CWE124_Buffer_Underwrite__CWE839_negative_63_bad();
int goodG2B_25();
int goodB2G_5();
int CWE124_Buffer_Underwrite__CWE839_negative_63_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_17_bad();
int goodG2B_26();
int CWE124_Buffer_Underwrite__malloc_char_memmove_17_good();
int __fastcall badSink_1(_BYTE *a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_44_bad();
int __fastcall goodG2BSink_1(_BYTE *a1);
__int64 goodG2B_27();
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_44_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_53_bad();
int goodG2B_28();
int CWE124_Buffer_Underwrite__malloc_char_cpy_53_good();
int CWE124_Buffer_Underwrite__CWE839_rand_61_bad();
int goodG2B_29();
int goodB2G_6();
int CWE124_Buffer_Underwrite__CWE839_rand_61_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54c_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54c_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_01_bad();
int goodG2B_30();
int CWE124_Buffer_Underwrite__malloc_char_loop_01_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53d_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53d_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__CWE839_rand_07_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_10();
int goodG2B2_10();
int CWE124_Buffer_Underwrite__CWE839_rand_07_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_61b_badSource();
_BYTE *CWE124_Buffer_Underwrite__malloc_char_memmove_61b_goodG2BSource();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_04_bad();
int goodG2B1_11();
int goodG2B2_11();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_04_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_54_bad();
int goodG2B_31();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_54_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_52_bad();
int goodG2B_32();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_52_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_51b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_51b_goodG2BSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__CWE839_negative_17_bad();
int goodB2G_7();
int goodG2B_33();
int CWE124_Buffer_Underwrite__CWE839_negative_17_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_16_bad();
int goodG2B_34();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_16_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE124_Buffer_Underwrite__malloc_char_loop_08_bad();
int goodG2B1_12();
int goodG2B2_12();
int CWE124_Buffer_Underwrite__malloc_char_loop_08_good();
int __fastcall badSink_2(int a1);
int CWE124_Buffer_Underwrite__CWE839_negative_44_bad();
int __fastcall goodG2BSink_2(int a1);
int goodG2B_35();
int __fastcall goodB2GSink_0(int a1);
int goodB2G_8();
int CWE124_Buffer_Underwrite__CWE839_negative_44_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_61_bad();
int goodG2B_36();
int CWE124_Buffer_Underwrite__malloc_char_memmove_61_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_18_bad();
int goodG2B_37();
int CWE124_Buffer_Underwrite__malloc_char_memmove_18_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53c_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53c_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_63_bad();
int goodG2B_38();
int CWE124_Buffer_Underwrite__malloc_char_cpy_63_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_51_bad();
int goodG2B_39();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_51_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_52_bad();
int goodG2B_40();
int CWE124_Buffer_Underwrite__malloc_char_cpy_52_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_51b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_51b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad();
int goodG2B_41();
int CWE124_Buffer_Underwrite__malloc_char_cpy_16_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_65_bad();
__int64 goodG2B_42();
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_65_good();
int badSink_3();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_45_bad();
int goodG2BSink_3();
int goodG2B_43();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_45_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_06_bad();
int goodG2B1_13();
int goodG2B2_13();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_06_good();
int CWE124_Buffer_Underwrite__CWE839_negative_61_bad();
int goodG2B_44();
int goodB2G_9();
int CWE124_Buffer_Underwrite__CWE839_negative_61_good();
int CWE124_Buffer_Underwrite__CWE839_negative_51_bad();
int goodG2B_45();
int goodB2G_10();
int CWE124_Buffer_Underwrite__CWE839_negative_51_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_65b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_65b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_51_bad();
int goodG2B_46();
int CWE124_Buffer_Underwrite__malloc_char_cpy_51_good();
int badSink_4();
int CWE124_Buffer_Underwrite__malloc_char_cpy_45_bad();
int goodG2BSink_4();
int goodG2B_47();
int CWE124_Buffer_Underwrite__malloc_char_cpy_45_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_64b_badSink(char **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_64b_goodG2BSink(char **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52c_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52c_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68_bad();
int goodG2B_48();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68_good();
int CWE124_Buffer_Underwrite__CWE839_rand_15_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_14();
int goodG2B2_14();
int CWE124_Buffer_Underwrite__CWE839_rand_15_good();
__int64 badSource_1();
int CWE124_Buffer_Underwrite__CWE839_rand_42_bad();
__int64 goodG2BSource_1();
int goodG2B_49();
__int64 goodB2GSource_0();
int goodB2G_11();
int CWE124_Buffer_Underwrite__CWE839_rand_42_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_64_bad();
int goodG2B_50();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_64_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_53_bad();
int goodG2B_51();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_53_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_64b_badSink(char **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_64b_goodG2BSink(char **a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_64b_badSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_64b_goodG2BSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_64b_goodB2GSink(int *a1);
int CWE124_Buffer_Underwrite__CWE839_rand_05_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_15();
int goodG2B2_15();
int CWE124_Buffer_Underwrite__CWE839_rand_05_good();
int __fastcall badSink_5(int a1);
int CWE124_Buffer_Underwrite__CWE839_rand_41_bad();
int __fastcall goodG2BSink_5(int a1);
int goodG2B_52();
int __fastcall goodB2GSink_1(int a1);
int goodB2G_12();
int CWE124_Buffer_Underwrite__CWE839_rand_41_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_61b_badSource();
_BYTE *CWE124_Buffer_Underwrite__malloc_char_cpy_61b_goodG2BSource();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_64_bad();
int goodG2B_53();
int CWE124_Buffer_Underwrite__malloc_char_cpy_64_good();
int CWE124_Buffer_Underwrite__CWE839_rand_34_bad();
int goodG2B_54();
int goodB2G_13();
int CWE124_Buffer_Underwrite__CWE839_rand_34_good();
__int64 badSource_2();
int CWE124_Buffer_Underwrite__malloc_char_memmove_42_bad();
_BYTE *goodG2BSource_2();
int goodG2B_55();
int CWE124_Buffer_Underwrite__malloc_char_memmove_42_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_11_bad();
int goodG2B1_16();
int goodG2B2_16();
int CWE124_Buffer_Underwrite__malloc_char_loop_11_good();
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE124_Buffer_Underwrite__malloc_char_memmove_08_bad();
int goodG2B1_17();
int goodG2B2_17();
int CWE124_Buffer_Underwrite__malloc_char_memmove_08_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_66b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_66b_goodB2GSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52b_goodB2GSink(int a1);
int __fastcall badSink_6(__int64 a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_44_bad();
int __fastcall goodG2BSink_6(__int64 a1);
__int64 goodG2B_56();
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_44_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_68_bad();
int goodG2B_57();
int CWE124_Buffer_Underwrite__malloc_char_memmove_68_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52c_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52c_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53c_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53c_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53c_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_05_bad();
int goodG2B1_18();
int goodG2B2_18();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_05_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_61b_badSource();
_BYTE *CWE124_Buffer_Underwrite__malloc_char_ncpy_61b_goodG2BSource();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_14_bad();
int goodG2B1_19();
int goodG2B2_19();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_14_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54b_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_32_bad();
int goodG2B_58();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_32_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_66b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_65b_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_65b_goodG2BSink(_BYTE *a1);
int __fastcall badSink_7(int a1);
int CWE124_Buffer_Underwrite__CWE839_negative_21_bad();
int __fastcall goodB2G1Sink(int a1);
int goodB2G1_7();
int __fastcall goodB2G2Sink(int a1);
int goodB2G2_7();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_59();
int CWE124_Buffer_Underwrite__CWE839_negative_21_good();
int CWE124_Buffer_Underwrite__CWE839_rand_68b_badSink();
int CWE124_Buffer_Underwrite__CWE839_rand_68b_goodG2BSink();
int CWE124_Buffer_Underwrite__CWE839_rand_68b_goodB2GSink();
__int64 __fastcall badSource_3(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_21_bad();
_BYTE *__fastcall goodG2B1Source(_BYTE *a1);
int goodG2B1_20();
_BYTE *__fastcall goodG2B2Source(_BYTE *a1);
int goodG2B2_20();
int CWE124_Buffer_Underwrite__malloc_char_loop_21_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_15_bad();
int goodG2B1_21();
int goodG2B2_21();
int CWE124_Buffer_Underwrite__malloc_char_loop_15_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53c_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53c_goodG2BSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_31_bad();
int goodG2B_60();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_31_good();
int CWE124_Buffer_Underwrite__CWE839_negative_54_bad();
int goodG2B_61();
int goodB2G_14();
int CWE124_Buffer_Underwrite__CWE839_negative_54_good();
__int64 badSource_4();
int CWE124_Buffer_Underwrite__malloc_char_loop_42_bad();
_BYTE *goodG2BSource_3();
int goodG2B_62();
int CWE124_Buffer_Underwrite__malloc_char_loop_42_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_14_bad();
int goodG2B1_22();
int goodG2B2_22();
int CWE124_Buffer_Underwrite__malloc_char_cpy_14_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_32_bad();
int goodG2B_63();
int CWE124_Buffer_Underwrite__malloc_char_cpy_32_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_66_bad();
int goodG2B_64();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_66_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53b_goodB2GSink(int a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_65_bad();
__int64 goodG2B_65();
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_65_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_67_bad();
int goodG2B_66();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_67_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_67b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_67b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_54_bad();
int goodG2B_67();
int CWE124_Buffer_Underwrite__malloc_char_memmove_54_good();
int CWE124_Buffer_Underwrite__CWE839_negative_07_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_23();
int goodG2B2_23();
int CWE124_Buffer_Underwrite__CWE839_negative_07_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_65b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_65b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_65b_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_rand_68_bad();
int goodG2B_68();
int goodB2G_15();
int CWE124_Buffer_Underwrite__CWE839_rand_68_good();
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badSource(__int64 a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Source(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_05_bad();
int goodG2B1_24();
int goodG2B2_24();
int CWE124_Buffer_Underwrite__malloc_char_loop_05_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_bad();
int goodG2B1_25();
int goodG2B2_25();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_03_bad();
int goodG2B1_26();
int goodG2B2_26();
int CWE124_Buffer_Underwrite__malloc_char_memmove_03_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_41_bad();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_41_goodG2BSink(__int64 a1);
int goodG2B_69();
int CWE124_Buffer_Underwrite__malloc_char_loop_41_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_68b_badSink();
int CWE124_Buffer_Underwrite__malloc_char_memmove_68b_goodG2BSink();
int CWE124_Buffer_Underwrite__malloc_char_cpy_04_bad();
int goodG2B1_27();
int goodG2B2_27();
int CWE124_Buffer_Underwrite__malloc_char_cpy_04_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_31_bad();
int goodG2B_70();
int CWE124_Buffer_Underwrite__malloc_char_cpy_31_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53c_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53c_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53c_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_rand_53_bad();
int goodG2B_71();
int goodB2G_16();
int CWE124_Buffer_Underwrite__CWE839_rand_53_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_34_bad();
int goodG2B_72();
int CWE124_Buffer_Underwrite__malloc_char_loop_34_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_66b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__CWE839_negative_65_bad();
int goodG2B_73();
int goodB2G_17();
int CWE124_Buffer_Underwrite__CWE839_negative_65_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_bad();
int goodG2B1_28();
int goodG2B2_28();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_65_bad();
__int64 goodG2B_74();
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_65_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53b_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53b_goodG2BSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__CWE839_rand_67_bad();
int goodG2B_75();
int goodB2G_18();
int CWE124_Buffer_Underwrite__CWE839_rand_67_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Sink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Sink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BSink(int a1);
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_22_badSource(__int64 a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Source(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52c_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52c_goodG2BSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__CWE839_rand_11_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_29();
int goodG2B2_29();
int CWE124_Buffer_Underwrite__CWE839_rand_11_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54d_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54d_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__CWE839_negative_68b_badSink();
int CWE124_Buffer_Underwrite__CWE839_negative_68b_goodG2BSink();
int CWE124_Buffer_Underwrite__CWE839_negative_68b_goodB2GSink();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52b_goodB2GSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_63b_badSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_63b_goodG2BSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54e_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54e_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_66_bad();
int goodG2B_76();
int CWE124_Buffer_Underwrite__malloc_char_loop_66_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_13_bad();
int goodG2B1_30();
int goodG2B2_30();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_13_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_53_bad();
int goodG2B_77();
int CWE124_Buffer_Underwrite__malloc_char_memmove_53_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_bad();
int goodG2B1_31();
int goodG2B2_31();
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53b_goodB2GSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52c_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52c_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52c_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_rand_52_bad();
int goodG2B_78();
int goodB2G_19();
int CWE124_Buffer_Underwrite__CWE839_rand_52_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__CWE839_negative_68_bad();
int goodG2B_79();
int goodB2G_20();
int CWE124_Buffer_Underwrite__CWE839_negative_68_good();
int CWE124_Buffer_Underwrite__CWE839_rand_16_bad();
int goodB2G_21();
int goodG2B_80();
int CWE124_Buffer_Underwrite__CWE839_rand_16_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_03_bad();
int goodG2B1_32();
int goodG2B2_32();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_03_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_14_bad();
int goodG2B1_33();
int goodG2B2_33();
int CWE124_Buffer_Underwrite__malloc_char_memmove_14_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_13_bad();
int goodG2B1_34();
int goodG2B2_34();
int CWE124_Buffer_Underwrite__malloc_char_cpy_13_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52b_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52b_goodG2BSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_18_bad();
int goodG2B_81();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_18_good();
int CWE124_Buffer_Underwrite__CWE839_negative_53_bad();
int goodG2B_82();
int goodB2G_22();
int CWE124_Buffer_Underwrite__CWE839_negative_53_good();
int CWE124_Buffer_Underwrite__CWE839_rand_51_bad();
int goodG2B_83();
int goodB2G_23();
int CWE124_Buffer_Underwrite__CWE839_rand_51_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_12_bad();
int goodG2B_84();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_12_good();
__int64 __fastcall badSource_5(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_21_bad();
_BYTE *__fastcall goodG2B1Source_0(_BYTE *a1);
int goodG2B1_35();
_BYTE *__fastcall goodG2B2Source_0(_BYTE *a1);
int goodG2B2_35();
int CWE124_Buffer_Underwrite__malloc_char_cpy_21_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad();
int goodG2B1_36();
int goodG2B2_36();
int CWE124_Buffer_Underwrite__malloc_char_cpy_03_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_14_bad();
int goodG2B1_37();
int goodG2B2_37();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_14_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_52_bad();
int goodG2B_85();
int CWE124_Buffer_Underwrite__malloc_char_memmove_52_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_32_bad();
int goodG2B_86();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_32_good();
int badSink_8();
int CWE124_Buffer_Underwrite__CWE839_rand_45_bad();
int goodG2BSink_8();
int goodG2B_87();
int goodB2GSink_2();
int goodB2G_24();
int CWE124_Buffer_Underwrite__CWE839_rand_45_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_09_bad();
int goodG2B1_38();
int goodG2B2_38();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_09_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad();
int goodG2B_88();
int CWE124_Buffer_Underwrite__malloc_char_cpy_18_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_67b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_67b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_02_bad();
int goodG2B1_39();
int goodG2B2_39();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_02_good();
__int64 __fastcall badSource_6(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_21_bad();
_BYTE *__fastcall goodG2B1Source_1(_BYTE *a1);
int goodG2B1_40();
_BYTE *__fastcall goodG2B2Source_1(_BYTE *a1);
int goodG2B2_40();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_21_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_12_bad();
int goodG2B_89();
int CWE124_Buffer_Underwrite__malloc_char_cpy_12_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_63b_badSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_63b_goodG2BSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_63b_goodB2GSink(int *a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_04_bad();
int goodG2B1_41();
int goodG2B2_41();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_04_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad();
int goodG2B_90();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_10_bad();
int goodG2B1_42();
int goodG2B2_42();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_10_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53c_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53c_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__CWE839_negative_52_bad();
int goodG2B_91();
int goodB2G_25();
int CWE124_Buffer_Underwrite__CWE839_negative_52_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54c_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54c_goodG2BSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54e_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54e_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_67_bad();
int goodG2B_92();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_67_good();
int CWE124_Buffer_Underwrite__CWE839_negative_16_bad();
int goodB2G_26();
int goodG2B_93();
int CWE124_Buffer_Underwrite__CWE839_negative_16_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_68b_badSink();
int CWE124_Buffer_Underwrite__malloc_char_cpy_68b_goodG2BSink();
int badSink_9();
int CWE124_Buffer_Underwrite__malloc_char_memmove_45_bad();
int goodG2BSink_9();
int goodG2B_94();
int CWE124_Buffer_Underwrite__malloc_char_memmove_45_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53d_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53d_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_06_bad();
int goodG2B1_43();
int goodG2B2_43();
int CWE124_Buffer_Underwrite__malloc_char_memmove_06_good();
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badSource(__int64 a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Source(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53c_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53c_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_10_bad();
int goodG2B1_44();
int goodG2B2_44();
int CWE124_Buffer_Underwrite__malloc_char_cpy_10_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_54_bad();
int goodG2B_95();
int CWE124_Buffer_Underwrite__malloc_char_loop_54_good();
int CWE124_Buffer_Underwrite__CWE839_rand_64_bad();
int goodG2B_96();
int goodB2G_27();
int CWE124_Buffer_Underwrite__CWE839_rand_64_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_14_bad();
int goodG2B1_45();
int goodG2B2_45();
int CWE124_Buffer_Underwrite__malloc_char_loop_14_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_32_bad();
int goodG2B_97();
int CWE124_Buffer_Underwrite__malloc_char_loop_32_good();
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_08_bad();
int goodG2B1_46();
int goodG2B2_46();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_08_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54c_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54c_goodG2BSink(char *a1);
__int64 CWE124_Buffer_Underwrite__CWE839_rand_65_bad();
int goodG2B_98();
__int64 goodB2G_28();
__int64 CWE124_Buffer_Underwrite__CWE839_rand_65_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53d_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53d_goodG2BSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_64b_badSink(void **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_64b_goodG2BSink(void **a1);
int badSink_10();
int CWE124_Buffer_Underwrite__CWE839_negative_45_bad();
int goodG2BSink_10();
int goodG2B_99();
int goodB2GSink_3();
int goodB2G_29();
int CWE124_Buffer_Underwrite__CWE839_negative_45_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_09_bad();
int goodG2B1_47();
int goodG2B2_47();
int CWE124_Buffer_Underwrite__malloc_char_cpy_09_good();
int CWE124_Buffer_Underwrite__CWE839_negative_06_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_48();
int goodG2B2_48();
int CWE124_Buffer_Underwrite__CWE839_negative_06_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_32_bad();
int goodG2B_100();
int CWE124_Buffer_Underwrite__malloc_char_memmove_32_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54d_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54d_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53c_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53c_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_04_bad();
int goodG2B1_49();
int goodG2B2_49();
int CWE124_Buffer_Underwrite__malloc_char_loop_04_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_31_bad();
int goodG2B_101();
int CWE124_Buffer_Underwrite__malloc_char_loop_31_good();
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad();
int goodG2B1_50();
int goodG2B2_50();
int CWE124_Buffer_Underwrite__malloc_char_cpy_08_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_64_bad();
int goodG2B_102();
int CWE124_Buffer_Underwrite__malloc_char_memmove_64_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_61b_badSource();
_BYTE *CWE124_Buffer_Underwrite__malloc_char_memcpy_61b_goodG2BSource();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_64b_badSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_64b_goodG2BSink(int *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_64b_goodB2GSink(int *a1);
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_22_badSource(__int64 a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Source(_BYTE *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_68_bad();
int goodG2B_103();
int CWE124_Buffer_Underwrite__malloc_char_cpy_68_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_54_bad();
int goodG2B_104();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_54_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad();
int goodG2B1_51();
int goodG2B2_51();
int CWE124_Buffer_Underwrite__malloc_char_cpy_02_good();
__int64 __fastcall badSource_7(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_21_bad();
_BYTE *__fastcall goodG2B1Source_2(_BYTE *a1);
int goodG2B1_52();
_BYTE *__fastcall goodG2B2Source_2(_BYTE *a1);
int goodG2B2_52();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_21_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_03_bad();
int goodG2B1_53();
int goodG2B2_53();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_03_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_67_bad();
int goodG2B_105();
int CWE124_Buffer_Underwrite__malloc_char_cpy_67_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_18_bad();
int goodG2B_106();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_18_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__CWE839_negative_64_bad();
int goodG2B_107();
int goodB2G_30();
int CWE124_Buffer_Underwrite__CWE839_negative_64_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_11_bad();
int goodG2B1_54();
int goodG2B2_54();
int CWE124_Buffer_Underwrite__malloc_char_cpy_11_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_22_bad();
int goodG2B1_55();
int goodG2B2_55();
int CWE124_Buffer_Underwrite__malloc_char_loop_22_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_12_bad();
int goodG2B_108();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_12_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54d_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54d_goodG2BSink(__int64 a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_65_bad();
__int64 goodG2B_109();
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_65_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_11_bad();
int goodG2B1_56();
int goodG2B2_56();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_11_good();
int CWE124_Buffer_Underwrite__CWE839_rand_63_bad();
int goodG2B_110();
int goodB2G_31();
int CWE124_Buffer_Underwrite__CWE839_rand_63_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_34_bad();
int goodG2B_111();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_34_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_11_bad();
int goodG2B1_57();
int goodG2B2_57();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_11_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_02_bad();
int goodG2B1_58();
int goodG2B2_58();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_02_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54d_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54d_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_10_bad();
int goodG2B1_59();
int goodG2B2_59();
int CWE124_Buffer_Underwrite__malloc_char_memmove_10_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_01_bad();
int goodG2B_112();
int CWE124_Buffer_Underwrite__malloc_char_memmove_01_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_63b_badSink(void **a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_63b_goodG2BSink(void **a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad();
int goodG2B_113();
int CWE124_Buffer_Underwrite__malloc_char_cpy_01_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_10_bad();
int goodG2B1_60();
int goodG2B2_60();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_10_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_03_bad();
int goodG2B1_61();
int goodG2B2_61();
int CWE124_Buffer_Underwrite__malloc_char_loop_03_good();
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_65_bad();
__int64 goodG2B_114();
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_65_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54c_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54c_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_loop_18_bad();
int goodG2B_115();
int CWE124_Buffer_Underwrite__malloc_char_loop_18_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_41_badSink(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_41_bad();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_41_goodG2BSink(__int64 a1);
int goodG2B_116();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_41_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_01_bad();
int goodG2B_117();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_01_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53d_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53d_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52c_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52c_goodG2BSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_51b_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_51b_goodG2BSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52c_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52c_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52c_goodB2GSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_67b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_67b_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_64_bad();
int goodG2B_118();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_64_good();
int badSink_11();
int CWE124_Buffer_Underwrite__malloc_char_loop_45_bad();
int goodG2BSink_11();
int goodG2B_119();
int CWE124_Buffer_Underwrite__malloc_char_loop_45_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_06_bad();
int goodG2B1_62();
int goodG2B2_62();
int CWE124_Buffer_Underwrite__malloc_char_loop_06_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_68b_badSink();
int CWE124_Buffer_Underwrite__malloc_char_loop_68b_goodG2BSink();
int __fastcall badSink_12(char *a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_44_bad();
int __fastcall goodG2BSink_12(char *a1);
__int64 goodG2B_120();
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_44_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_17_bad();
int goodG2B_121();
int CWE124_Buffer_Underwrite__malloc_char_cpy_17_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_67b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_67b_goodG2BSink(__int64 a1);
int __fastcall badSink_13(char *a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad();
int __fastcall goodG2BSink_13(char *a1);
__int64 goodG2B_122();
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_44_good();
int CWE124_Buffer_Underwrite__CWE839_rand_14_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_63();
int goodG2B2_63();
int CWE124_Buffer_Underwrite__CWE839_rand_14_good();
int CWE124_Buffer_Underwrite__CWE839_rand_32_bad();
int goodG2B_123();
int goodB2G_32();
int CWE124_Buffer_Underwrite__CWE839_rand_32_good();
int __fastcall badSink_14(int a1);
__int64 CWE124_Buffer_Underwrite__CWE839_rand_44_bad();
int __fastcall goodG2BSink_14(int a1);
int goodG2B_124();
int __fastcall goodB2GSink_4(int a1);
__int64 goodB2G_33();
__int64 CWE124_Buffer_Underwrite__CWE839_rand_44_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_61_bad();
int goodG2B_125();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_61_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_64b_badSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_64b_goodG2BSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_67b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_67b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_67b_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_07_bad();
int goodG2B1_64();
int goodG2B2_64();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_07_good();
int CWE124_Buffer_Underwrite__CWE839_rand_04_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_65();
int goodG2B2_65();
int CWE124_Buffer_Underwrite__CWE839_rand_04_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_54_bad();
int goodG2B_126();
int CWE124_Buffer_Underwrite__malloc_char_cpy_54_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_64_bad();
int goodG2B_127();
int CWE124_Buffer_Underwrite__malloc_char_loop_64_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_61_bad();
int goodG2B_128();
int CWE124_Buffer_Underwrite__malloc_char_cpy_61_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_51b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_51b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_65b_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_65b_goodG2BSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_67b_badSink(void *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_67b_goodG2BSink(void *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad();
int goodG2B1_66();
int goodG2B2_66();
int CWE124_Buffer_Underwrite__malloc_char_cpy_07_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_04_bad();
int goodG2B1_67();
int goodG2B2_67();
int CWE124_Buffer_Underwrite__malloc_char_memmove_04_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_31_bad();
int goodG2B_129();
int CWE124_Buffer_Underwrite__malloc_char_memmove_31_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_67_bad();
int goodG2B_130();
int CWE124_Buffer_Underwrite__malloc_char_loop_67_good();
int CWE124_Buffer_Underwrite__CWE839_negative_14_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_68();
int goodG2B2_68();
int CWE124_Buffer_Underwrite__CWE839_negative_14_good();
int CWE124_Buffer_Underwrite__CWE839_rand_22_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B_131();
int CWE124_Buffer_Underwrite__CWE839_rand_22_good();
int CWE124_Buffer_Underwrite__CWE839_negative_32_bad();
int goodG2B_132();
int goodB2G_34();
int CWE124_Buffer_Underwrite__CWE839_negative_32_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_67_bad();
int goodG2B_133();
int CWE124_Buffer_Underwrite__malloc_char_memmove_67_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_63_bad();
int goodG2B_134();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_63_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_67b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_67b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_67b_goodB2GSink(int a1);
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_22_badSource(__int64 a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Source(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54d_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54d_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54d_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_rand_13_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_69();
int goodG2B2_69();
int CWE124_Buffer_Underwrite__CWE839_rand_13_good();
int CWE124_Buffer_Underwrite__CWE839_negative_04_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_70();
int goodG2B2_70();
int CWE124_Buffer_Underwrite__CWE839_negative_04_good();
int CWE124_Buffer_Underwrite__CWE839_negative_31_bad();
int goodG2B_135();
int goodB2G_35();
int CWE124_Buffer_Underwrite__CWE839_negative_31_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_15_bad();
int goodG2B1_71();
int goodG2B2_71();
int CWE124_Buffer_Underwrite__malloc_char_memmove_15_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad();
int goodG2B1_72();
int goodG2B2_72();
int CWE124_Buffer_Underwrite__malloc_char_cpy_06_good();
int CWE124_Buffer_Underwrite__CWE839_rand_31_bad();
int goodG2B_136();
int goodB2G_36();
int CWE124_Buffer_Underwrite__CWE839_rand_31_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_bad();
int goodG2B1_73();
int goodG2B2_73();
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_10_bad();
int goodG2B1_74();
int goodG2B2_74();
int CWE124_Buffer_Underwrite__malloc_char_loop_10_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_15_bad();
int goodG2B1_75();
int goodG2B2_75();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_15_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_17_bad();
int goodG2B_137();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_17_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Sink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Sink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BSink(int a1);
int __fastcall badSink_15(__int64 a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_44_bad();
int __fastcall goodG2BSink_15(__int64 a1);
__int64 goodG2B_138();
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_44_good();
int __fastcall badSink_16(int a1);
int CWE124_Buffer_Underwrite__CWE839_rand_21_bad();
int __fastcall goodB2G1Sink_0(int a1);
int goodB2G1_17();
int __fastcall goodB2G2Sink_0(int a1);
int goodB2G2_17();
int __fastcall goodG2BSink_16(int a1);
int goodG2B_139();
int CWE124_Buffer_Underwrite__CWE839_rand_21_good();
int CWE124_Buffer_Underwrite__CWE839_rand_03_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B1_76();
int goodG2B2_76();
int CWE124_Buffer_Underwrite__CWE839_rand_03_good();
__int64 badSource_8();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_42_bad();
_BYTE *goodG2BSource_4();
int goodG2B_140();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_42_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54d_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54d_goodG2BSink(_BYTE *a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_13_bad();
int goodG2B1_77();
int goodG2B2_77();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_13_good();
int CWE124_Buffer_Underwrite__CWE839_rand_18_bad();
int goodB2G_37();
int goodG2B_141();
int CWE124_Buffer_Underwrite__CWE839_rand_18_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_51b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_51b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_51b_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_13_bad();
int goodG2B1_78();
int goodG2B2_78();
int CWE124_Buffer_Underwrite__malloc_char_memmove_13_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_63_bad();
int goodG2B_142();
int CWE124_Buffer_Underwrite__malloc_char_loop_63_good();
int CWE124_Buffer_Underwrite__CWE839_negative_22_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B_143();
int CWE124_Buffer_Underwrite__CWE839_negative_22_good();
int CWE124_Buffer_Underwrite__CWE839_rand_12_bad();
int goodB2G_38();
int goodG2B_144();
int CWE124_Buffer_Underwrite__CWE839_rand_12_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_15_bad();
int goodG2B1_79();
int goodG2B2_79();
int CWE124_Buffer_Underwrite__malloc_char_cpy_15_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_05_bad();
int goodG2B1_80();
int goodG2B2_80();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_05_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_07_bad();
int goodG2B1_81();
int goodG2B2_81();
int CWE124_Buffer_Underwrite__malloc_char_memmove_07_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_41_badSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_41_bad();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_41_goodG2BSink(char *a1);
int goodG2B_145();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_41_good();
__int64 badSource_9();
int CWE124_Buffer_Underwrite__malloc_char_cpy_42_bad();
_BYTE *goodG2BSource_5();
int goodG2B_146();
int CWE124_Buffer_Underwrite__malloc_char_cpy_42_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54d_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54d_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54d_goodB2GSink(int a1);
__int64 __fastcall badSource_10(__int64 a1);
int CWE124_Buffer_Underwrite__malloc_char_memmove_21_bad();
_BYTE *__fastcall goodG2B1Source_3(_BYTE *a1);
int goodG2B1_82();
_BYTE *__fastcall goodG2B2Source_3(_BYTE *a1);
int goodG2B2_82();
int CWE124_Buffer_Underwrite__malloc_char_memmove_21_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_34_bad();
int goodG2B_147();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_34_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_61_bad();
int goodG2B_148();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_61_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_51b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_51b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_51b_goodB2GSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_goodG2BSink(__int64 a1);
int CWE124_Buffer_Underwrite__CWE839_negative_13_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_83();
int goodG2B2_83();
int CWE124_Buffer_Underwrite__CWE839_negative_13_good();
int CWE124_Buffer_Underwrite__CWE839_rand_02_bad();
int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_84();
int goodG2B2_84();
int CWE124_Buffer_Underwrite__CWE839_rand_02_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_63b_badSink(__int64 *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_63b_goodG2BSink(__int64 *a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_07_bad();
int goodG2B1_85();
int goodG2B2_85();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_07_good();
int CWE124_Buffer_Underwrite__malloc_char_cpy_05_bad();
int goodG2B1_86();
int goodG2B2_86();
int CWE124_Buffer_Underwrite__malloc_char_cpy_05_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_41_badSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_41_bad();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_41_goodG2BSink(char *a1);
int goodG2B_149();
int CWE124_Buffer_Underwrite__malloc_char_cpy_41_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_17_bad();
int goodG2B_150();
int CWE124_Buffer_Underwrite__malloc_char_loop_17_good();
int CWE124_Buffer_Underwrite__CWE839_rand_10_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_87();
int goodG2B2_87();
int CWE124_Buffer_Underwrite__CWE839_rand_10_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_16_bad();
int goodG2B_151();
int CWE124_Buffer_Underwrite__malloc_char_memmove_16_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_12_bad();
int goodG2B_152();
int CWE124_Buffer_Underwrite__malloc_char_memmove_12_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54c_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54c_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54c_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_34_bad();
int goodG2B_153();
int CWE124_Buffer_Underwrite__malloc_char_cpy_34_good();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad();
int goodG2B_154();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good();
int CWE124_Buffer_Underwrite__CWE839_rand_01_bad();
int goodG2B_155();
int goodB2G_39();
int CWE124_Buffer_Underwrite__CWE839_rand_01_good();
int CWE124_Buffer_Underwrite__CWE839_negative_03_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B1_88();
int goodG2B2_88();
int CWE124_Buffer_Underwrite__CWE839_negative_03_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_66b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_66b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53d_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53d_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53d_goodB2GSink(int a1);
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_61b_badSource();
_BYTE *CWE124_Buffer_Underwrite__malloc_char_loop_61b_goodG2BSource();
int CWE124_Buffer_Underwrite__CWE839_negative_18_bad();
int goodB2G_40();
int goodG2B_156();
int CWE124_Buffer_Underwrite__CWE839_negative_18_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_11_bad();
int goodG2B1_89();
int goodG2B2_89();
int CWE124_Buffer_Underwrite__malloc_char_memmove_11_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_02_bad();
int goodG2B1_90();
int goodG2B2_90();
int CWE124_Buffer_Underwrite__malloc_char_memmove_02_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68b_badSink();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68b_goodG2BSink();
int CWE124_Buffer_Underwrite__CWE839_negative_12_bad();
int goodB2G_41();
int goodG2B_157();
int CWE124_Buffer_Underwrite__CWE839_negative_12_good();
int CWE124_Buffer_Underwrite__CWE839_rand_09_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_91();
int goodG2B2_91();
int CWE124_Buffer_Underwrite__CWE839_rand_09_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54e_badSink(char *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54e_goodG2BSink(char *a1);
int CWE124_Buffer_Underwrite__malloc_char_cpy_66_bad();
int goodG2B_158();
int CWE124_Buffer_Underwrite__malloc_char_cpy_66_good();
int CWE124_Buffer_Underwrite__malloc_char_loop_61_bad();
int goodG2B_159();
int CWE124_Buffer_Underwrite__malloc_char_loop_61_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54c_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54c_goodG2BSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53d_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53d_goodG2BSink(_BYTE *a1);
__int64 CWE124_Buffer_Underwrite__CWE839_negative_61b_badSource();
__int64 CWE124_Buffer_Underwrite__CWE839_negative_61b_goodG2BSource();
__int64 CWE124_Buffer_Underwrite__CWE839_negative_61b_goodB2GSource();
int CWE124_Buffer_Underwrite__malloc_char_loop_07_bad();
int goodG2B1_92();
int goodG2B2_92();
int CWE124_Buffer_Underwrite__malloc_char_loop_07_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54b_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_negative_11_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_93();
int goodG2B2_93();
int CWE124_Buffer_Underwrite__CWE839_negative_11_good();
int CWE124_Buffer_Underwrite__CWE839_negative_02_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_94();
int goodG2B2_94();
int CWE124_Buffer_Underwrite__CWE839_negative_02_good();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_09_bad();
int goodG2B1_95();
int goodG2B2_95();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_09_good();
int CWE124_Buffer_Underwrite__CWE839_negative_10_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B1_96();
int goodG2B2_96();
int CWE124_Buffer_Underwrite__CWE839_negative_10_good();
int CWE124_Buffer_Underwrite__malloc_char_memmove_09_bad();
int goodG2B1_97();
int goodG2B2_97();
int CWE124_Buffer_Underwrite__malloc_char_memmove_09_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54c_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54c_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54c_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__CWE839_negative_01_bad();
int goodG2B_160();
int goodB2G_42();
int CWE124_Buffer_Underwrite__CWE839_negative_01_good();
int CWE124_Buffer_Underwrite__CWE839_rand_54_bad();
int goodG2B_161();
int goodB2G_43();
int CWE124_Buffer_Underwrite__CWE839_rand_54_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53d_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53d_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53d_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad();
int goodG2B1_98();
int goodG2B2_98();
int CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good();
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_65b_badSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_65b_goodG2BSink(__int64 a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54b_badSink(_BYTE *a1);
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54b_goodG2BSink(_BYTE *a1);
void CWE124_Buffer_Underwrite__CWE839_rand_17_bad();
void goodB2G_44();
int goodG2B_162();
int CWE124_Buffer_Underwrite__CWE839_rand_17_good();
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_65b_badSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_65b_goodG2BSink(int a1);
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_65b_goodB2GSink(int a1);
int CWE124_Buffer_Underwrite__malloc_char_ncpy_01_bad();
int goodG2B_163();
int CWE124_Buffer_Underwrite__malloc_char_ncpy_01_good();
int CWE124_Buffer_Underwrite__CWE839_negative_09_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_99();
int goodG2B2_99();
int CWE124_Buffer_Underwrite__CWE839_negative_09_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_643010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive = 5; // weak
int staticTrue_1 = 1; // weak
int staticTrue_2 = 1; // weak
int staticFive_0 = 5; // weak
int staticTrue_3 = 1; // weak
int staticFive_1 = 5; // weak
int staticFive_2 = 5; // weak
int staticTrue_4 = 1; // weak
int staticFive_3 = 5; // weak
int staticFive_4 = 5; // weak
int staticTrue_5 = 1; // weak
int staticFive_5 = 5; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
int staticFalse; // weak
int staticFalse_0; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_45_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_45_goodG2BData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_45_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_45_goodG2BData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_45_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_45_goodG2BData; // weak
int staticFalse_1; // weak
int staticFalse_2; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int badStatic_0; // weak
int goodG2B1Static; // weak
int goodG2B2Static; // weak
int staticFalse_3; // weak
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Global; // weak
int badStatic_1; // weak
int goodG2B1Static_0; // weak
int goodG2B2Static_0; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_45_badData; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_45_goodG2BData; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_45_goodB2GData; // weak
int badStatic_2; // weak
int goodG2B1Static_1; // weak
int goodG2B2Static_1; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_45_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_45_goodG2BData; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_45_badData; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData; // weak
int badStatic_3; // weak
int goodG2B1Static_2; // weak
int goodG2B2Static_2; // weak
int CWE124_Buffer_Underwrite__malloc_char_loop_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Global; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_45_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_45_goodG2BData; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Global; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Global; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BGlobal; // weak
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Global; // weak
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Global; // weak
int badStatic_4; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal; // weak
int staticFalse_4; // weak
int badStatic_5; // weak
int goodG2B1Static_3; // weak
int goodG2B2Static_3; // weak
int staticFalse_5; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_68_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_68_goodG2BData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_68_goodG2BData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_68_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_68_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_68_goodG2BData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_68_goodG2BData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_68_badData; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_68_goodG2BData; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_68_badData; // weak
int CWE124_Buffer_Underwrite__CWE839_rand_68_goodB2GData; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_68_badData; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_68_goodG2BData; // weak
int CWE124_Buffer_Underwrite__CWE839_negative_68_goodB2GData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_68_badData; // weak
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_68_goodG2BData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (00000000004009C0) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400B80: using guessed type __int64 _gmon_start__(void);

//----- (00000000004009E0) ----------------------------------------------------
__int64 sub_4009E0()
{
  return qword_643010();
}
// 643010: using guessed type __int64 (*qword_643010)(void);

//----- (0000000000400B90) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400B96: positive sp value 8 has been found

//----- (0000000000400BC0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6566191LL - (_QWORD)&completed_6355;
  if ( (unsigned __int64)(6566191LL - (_QWORD)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 643128: using guessed type char completed_6355;

//----- (0000000000400BF0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400C30) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 643128: using guessed type char completed_6355;

//----- (0000000000400C50) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400C50: could not find valid save-restore pair for rbp

//----- (0000000000400C7D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_44_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_15_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_07_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_21_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_03_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_11_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_45_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_34_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_52_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_10_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_52_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_08_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_04_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_17_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_15_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_42_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_03_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_07_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_02_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_11_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_52_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_44_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_17_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_14_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_31_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_54_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_05_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_07_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_32_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_51_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_12_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_65_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_53_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_31_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_13_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_32_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_54_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_12_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_02_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_51_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_12_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_12_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_07_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_11_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_14_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_13_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_13_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_68_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_03_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_16_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_09_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_51_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_10_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_05_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_09_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_42_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_64_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_18_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_52_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_06_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_41_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_41_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_32_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_02_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_68_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_32_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_34_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_32_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_64_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_06_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_11_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_42_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_66_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_66_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_13_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_14_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_02_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_15_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_21_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_61_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_65_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_34_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_45_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_04_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_42_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_53_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_09_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_14_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_42_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_08_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_07_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_02_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_06_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_65_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_31_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_68_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_01_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_31_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_63_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_12_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_18_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_63_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_52_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_53_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_22_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_45_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_22_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_51_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_64_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_18_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_64_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_03_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_22_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_66_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_63_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_17_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_09_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_05_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_64_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_45_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_14_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_63_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_44_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_05_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_18_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_61_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_31_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_18_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_08_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_42_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_18_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_32_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_61_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_08_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_12_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_04_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_66_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_53_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_68_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_10_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_07_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_14_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_21_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_07_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_07_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_34_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_52_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_06_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_11_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_67_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_21_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_08_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_44_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_45_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_03_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_41_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_45_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_31_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_01_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_61_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_06_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_17_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_05_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_16_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_67_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_51_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_42_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_42_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_17_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_67_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_45_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_45_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_54_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_67_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_41_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_68_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_04_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_52_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_52_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_67_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_44_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_22_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_22_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_41_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_53_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_16_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_51_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_22_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_15_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_06_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_53_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_01_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_65_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_54_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_09_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_09_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_32_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_32_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_54_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_04_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_06_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_06_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_51_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_51_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_02_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_01_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_09_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_09_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_12_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_12_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_66_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_18_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_18_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_61_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_22_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_22_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_10_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_04_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_34_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_67_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_10_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_54_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_16_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_53_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_53_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_68_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_64_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_63_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_01_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_21_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_01_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_68_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_68_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_65_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_17_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_04_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_04_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_65_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_63_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_10_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_15_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_61_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_11_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_16_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_01_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_01_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_41_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_17_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_17_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_54_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_54_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_14_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_14_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_13_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_03_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_15_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_15_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_16_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_41_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_41_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_34_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_13_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_13_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_13_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_34_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_34_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_03_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_03_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_63_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_63_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_67_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_67_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_08_good();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_66_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_66_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_11_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_11_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_05_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_16_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_16_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_44_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_05_good();");
  CWE124_Buffer_Underwrite__CWE839_rand_05_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_02_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_02_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_21_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_21_good();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_21_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_65_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_65_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_64_good();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_64_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_10_good();");
  CWE124_Buffer_Underwrite__CWE839_negative_10_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_44_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_44_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_08_good();");
  CWE124_Buffer_Underwrite__malloc_char_loop_08_good();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_61_good();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_61_good();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_44_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_15_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_21_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_03_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_11_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_45_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_34_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_52_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_10_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_52_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_08_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_04_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_17_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_15_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_42_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_03_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_07_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_11_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_52_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_17_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_14_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_31_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_54_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_05_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_07_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_32_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_51_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_12_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_65_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_53_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_31_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_13_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_32_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_54_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_12_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_02_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_51_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_12_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_12_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_07_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_11_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_14_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_13_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_13_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_68_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_03_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_16_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_09_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_51_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_10_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_05_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_09_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_42_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_64_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_18_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_52_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_41_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_41_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_32_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_02_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_68_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_32_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_34_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_32_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_64_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_06_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_11_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_42_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_66_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_66_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_13_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_14_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_02_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_15_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_21_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_61_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_61_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_65_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_34_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_45_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_04_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_42_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_53_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_09_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_14_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_42_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_08_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_07_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_02_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_06_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_65_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_31_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_68_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_01_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_31_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_63_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_12_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_18_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_63_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_52_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_53_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_22_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_45_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_22_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_51_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_64_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_18_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_64_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_03_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_22_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_66_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_63_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_17_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_09_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_05_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_64_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_45_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_14_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_63_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_44_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_05_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_18_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_61_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_61_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_31_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_18_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_08_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_42_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_18_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_32_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_61_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_61_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_08_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_12_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_04_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_66_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_53_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_68_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_10_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_07_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_14_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_21_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_07_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_07_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_34_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_52_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_06_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_11_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_67_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_21_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_08_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_44_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_45_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_41_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_45_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_31_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_01_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_61_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_61_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_06_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_17_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_05_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_16_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_67_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_51_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_42_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_42_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_17_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_67_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_45_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_45_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_54_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_67_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_41_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_68_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_04_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_52_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_52_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_67_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_44_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_22_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_22_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_41_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_53_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_51_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_22_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_15_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_06_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_53_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_01_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_65_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_54_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_09_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_09_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_32_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_32_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_54_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_04_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_06_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_06_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_51_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_51_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_02_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_01_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_09_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_09_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_12_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_12_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_66_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_61_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_61_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_22_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_22_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_10_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_04_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_34_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_67_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_10_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_54_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_16_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_53_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_53_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_68_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_64_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_63_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_01_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_21_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_01_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_68_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_68_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_65_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_17_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_04_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_04_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_65_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_63_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_10_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_15_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_61_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_61_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_11_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_16_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_41_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_17_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_17_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_54_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_54_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_14_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_14_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_13_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_03_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_15_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_15_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_16_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_41_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_41_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_34_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_13_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_13_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_13_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_34_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_34_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_03_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_03_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_63_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_63_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_67_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_67_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad();");
  CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_66_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_66_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_11_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_11_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_05_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_16_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_16_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_44_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_rand_05_bad();");
  CWE124_Buffer_Underwrite__CWE839_rand_05_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_02_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_02_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_21_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memmove_21_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memmove_21_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_65_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_65_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_ncpy_64_bad();");
  CWE124_Buffer_Underwrite__malloc_char_ncpy_64_bad();
  printLine("Calling CWE124_Buffer_Underwrite__CWE839_negative_10_bad();");
  CWE124_Buffer_Underwrite__CWE839_negative_10_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_44_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_44_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_loop_08_bad();");
  CWE124_Buffer_Underwrite__malloc_char_loop_08_bad();
  printLine("Calling CWE124_Buffer_Underwrite__malloc_char_memcpy_61_bad();");
  CWE124_Buffer_Underwrite__malloc_char_memcpy_61_bad();
  return 0;
}
// 643274: using guessed type int globalArgc;
// 643278: using guessed type __int64 globalArgv;

//----- (0000000000403648) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_68_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_loop_68_badData = (__int64)(s - 8);
  return CWE124_Buffer_Underwrite__malloc_char_loop_68b_badSink();
}
// 643280: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_68_badData;

//----- (00000000004036BB) ----------------------------------------------------
int goodG2B()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_loop_68_goodG2BData = (__int64)s;
  return CWE124_Buffer_Underwrite__malloc_char_loop_68b_goodG2BSink();
}
// 643288: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_68_goodG2BData;

//----- (000000000040372A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_68_good()
{
  return goodG2B();
}

//----- (000000000040373A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_52_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_52b_badSink((__int64)(s - 8));
}

//----- (00000000004037A4) ----------------------------------------------------
int goodG2B_0()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_52b_goodG2BSink((__int64)s);
}

//----- (000000000040380A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_52_good()
{
  return goodG2B_0();
}

//----- (000000000040381A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_05_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 6430E4: using guessed type int staticTrue;

//----- (00000000004038CB) ----------------------------------------------------
int goodG2B1()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 64312C: using guessed type int staticFalse;

//----- (0000000000403984) ----------------------------------------------------
int goodG2B2()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 6430E4: using guessed type int staticTrue;

//----- (0000000000403A31) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_05_good()
{
  goodG2B1();
  return goodG2B2();
}

//----- (0000000000403A4B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_41_badSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000403AA2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_41_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_41_badSink(s - 8);
}

//----- (0000000000403B0C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_41_goodG2BSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000403B63) ----------------------------------------------------
int goodG2B_1()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_41_goodG2BSink(s);
}

//----- (0000000000403BC9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_41_good()
{
  return goodG2B_1();
}

//----- (0000000000403BD9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_15_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000403C5D) ----------------------------------------------------
int goodB2G1()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000403CE7) ----------------------------------------------------
int goodB2G2()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000403D71) ----------------------------------------------------
int goodG2B1_0()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000403DF5) ----------------------------------------------------
int goodG2B2_0()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000403E79) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_15_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (0000000000403EA7) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_51_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_51b_badSink((__int64)(s - 8));
}

//----- (0000000000403F11) ----------------------------------------------------
int goodG2B_2()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_51b_goodG2BSink((__int64)s);
}

//----- (0000000000403F77) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_51_good()
{
  return goodG2B_2();
}

//----- (0000000000403F87) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54e_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000403FFE) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54e_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000404075) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54e_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004040F2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_16_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (00000000004041EB) ----------------------------------------------------
int goodG2B_3()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (00000000004042E0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_16_good()
{
  return goodG2B_3();
}

//----- (00000000004042F0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_66b_badSink((__int64)&v6);
}

//----- (0000000000404362) ----------------------------------------------------
int goodG2B_4()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 7;
  v2 = 7;
  return CWE124_Buffer_Underwrite__CWE839_rand_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040438C) ----------------------------------------------------
int goodB2G()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_66b_goodB2GSink((__int64)&v6);
}

//----- (00000000004043FE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_66_good()
{
  goodG2B_4();
  return goodB2G();
}

//----- (0000000000404418) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_09_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;
// 404418: using guessed type char var_80[99];

//----- (00000000004044E2) ----------------------------------------------------
int goodG2B1_1()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 433F64: using guessed type int GLOBAL_CONST_FALSE;
// 4044E2: using guessed type char var_80[99];

//----- (00000000004045B4) ----------------------------------------------------
int goodG2B2_1()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;
// 4045B4: using guessed type char var_80[99];

//----- (000000000040467A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_09_good()
{
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (0000000000404694) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_53_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_53b_badSink((__int64)(s - 8));
}

//----- (00000000004046FE) ----------------------------------------------------
int goodG2B_5()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_53b_goodG2BSink((__int64)s);
}

//----- (0000000000404764) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_53_good()
{
  return goodG2B_5();
}

//----- (0000000000404774) ----------------------------------------------------
__int64 badSource()
{
  return 4294967291LL;
}

//----- (0000000000404787) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_42_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = badSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040480F) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 7LL;
}

//----- (0000000000404822) ----------------------------------------------------
int goodG2B_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004048AA) ----------------------------------------------------
__int64 goodB2GSource()
{
  return 4294967291LL;
}

//----- (00000000004048BD) ----------------------------------------------------
int goodB2G_0()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = goodB2GSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040494B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_42_good()
{
  goodB2G_0();
  return goodG2B_6();
}

//----- (0000000000404965) ----------------------------------------------------
__int64 badSource_0()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (00000000004049C3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_42_bad()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  v15 = badSource_0();
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}

//----- (0000000000404A7F) ----------------------------------------------------
_BYTE *goodG2BSource_0()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (0000000000404AD9) ----------------------------------------------------
int goodG2B_7()
{
  _BYTE *v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  _BYTE *v15; // [rsp+68h] [rbp-8h]

  v15 = goodG2BSource_0();
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}

//----- (0000000000404B95) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_42_good()
{
  return goodG2B_7();
}

//----- (0000000000404BA5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_34_bad()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *v3; // [rsp+70h] [rbp-20h]
  void *dest; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v3 = (char *)s - 8;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000404C65) ----------------------------------------------------
int goodG2B_8()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *v3; // [rsp+70h] [rbp-20h]
  void *dest; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v3 = s;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000404D21) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_34_good()
{
  return goodG2B_8();
}

//----- (0000000000404D31) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = *(void **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000404D94) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = *(void **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000404DF7) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_13_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;
// 404DF7: using guessed type char var_80[99];

//----- (0000000000404EC2) ----------------------------------------------------
int goodG2B1_2()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;
// 404EC2: using guessed type char var_80[99];

//----- (0000000000404F95) ----------------------------------------------------
int goodG2B2_2()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;
// 404F95: using guessed type char var_80[99];

//----- (000000000040505C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_13_good()
{
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000405076) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_51_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_51b_badSink((__int64)(s - 8));
}

//----- (00000000004050E0) ----------------------------------------------------
int goodG2B_9()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_51b_goodG2BSink((__int64)s);
}

//----- (0000000000405146) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_51_good()
{
  return goodG2B_9();
}

//----- (0000000000405156) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000405234) ----------------------------------------------------
int goodB2G1_0()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000405324) ----------------------------------------------------
int goodB2G2_0()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000405408) ----------------------------------------------------
int goodG2B1_3()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004054AA) ----------------------------------------------------
int goodG2B2_3()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000405540) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_06_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (000000000040556E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_63b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004055D0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_63b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000405632) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_0 )
    v7 = -5;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430E8: using guessed type int staticTrue_0;

//----- (00000000004056C8) ----------------------------------------------------
int goodB2G1_1()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_0 )
    v7 = -5;
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6430E8: using guessed type int staticTrue_0;
// 643130: using guessed type int staticFalse_0;

//----- (0000000000405770) ----------------------------------------------------
int goodB2G2_1()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_0 )
    v7 = -5;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430E8: using guessed type int staticTrue_0;

//----- (000000000040580C) ----------------------------------------------------
int goodG2B1_4()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430E8: using guessed type int staticTrue_0;
// 643130: using guessed type int staticFalse_0;

//----- (00000000004058AE) ----------------------------------------------------
int goodG2B2_4()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_0 )
    v7 = 7;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430E8: using guessed type int staticTrue_0;

//----- (0000000000405944) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_05_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (0000000000405972) ----------------------------------------------------
int __fastcall badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004059E9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_41_bad()
{
  return badSink(-5);
}

//----- (0000000000405A0B) ----------------------------------------------------
int __fastcall goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000405A82) ----------------------------------------------------
int goodG2B_10()
{
  return goodG2BSink(7);
}

//----- (0000000000405AA4) ----------------------------------------------------
int __fastcall goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000405B21) ----------------------------------------------------
int goodB2G_1()
{
  return goodB2GSink(-5);
}

//----- (0000000000405B43) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_41_good()
{
  goodB2G_1();
  return goodG2B_10();
}

//----- (0000000000405B5D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52b_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_52c_badSink(a1);
}

//----- (0000000000405B77) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52b_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_52c_goodG2BSink(a1);
}

//----- (0000000000405B91) ----------------------------------------------------
int badSink_0()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_45_badData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}
// 643138: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_45_badData;

//----- (0000000000405C40) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_45_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memcpy_45_badData = (__int64)(s - 8);
  return badSink_0();
}
// 643138: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_45_badData;

//----- (0000000000405CB3) ----------------------------------------------------
int goodG2BSink_0()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}
// 643140: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_45_goodG2BData;

//----- (0000000000405D62) ----------------------------------------------------
int goodG2B_11()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memcpy_45_goodG2BData = (__int64)s;
  return goodG2BSink_0();
}
// 643140: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_45_goodG2BData;

//----- (0000000000405DD1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_45_good()
{
  return goodG2B_11();
}

//----- (0000000000405DE1) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54e_badSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000405E38) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54e_goodG2BSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000405E8F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_66_bad()
{
  char v1; // [rsp+0h] [rbp-40h]
  char *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  char *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  v2 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_66b_badSink((__int64)&v1);
}

//----- (0000000000405F01) ----------------------------------------------------
int goodG2B_12()
{
  char v1; // [rsp+0h] [rbp-40h]
  void *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  void *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  v2 = s;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000405F6F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_66_good()
{
  return goodG2B_12();
}

//----- (0000000000405F7F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_06_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (0000000000406081) ----------------------------------------------------
int goodG2B1_5()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000040618B) ----------------------------------------------------
int goodG2B2_5()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000406289) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_06_good()
{
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (00000000004062A3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_34_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = -5;
  v6 = -5;
  v7 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000406331) ----------------------------------------------------
int goodG2B_13()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 7;
  v6 = 7;
  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004063BF) ----------------------------------------------------
int goodB2G_2()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000406453) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_34_good()
{
  goodG2B_13();
  return goodB2G_2();
}

//----- (000000000040646D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_66b_badSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004064EF) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000406571) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004065F9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_63_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_63b_badSink(&v1);
}

//----- (0000000000406663) ----------------------------------------------------
int goodG2B_14()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_63b_goodG2BSink((char **)&v1);
}

//----- (00000000004066C9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_63_good()
{
  return goodG2B_14();
}

//----- (00000000004066D9) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_63b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000040672B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_63b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000040677D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_17_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000406837) ----------------------------------------------------
int goodG2B_15()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004068ED) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_17_good()
{
  return goodG2B_15();
}

//----- (00000000004068FD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_52_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_52b_badSink((__int64)(s - 8));
}

//----- (0000000000406967) ----------------------------------------------------
int goodG2B_16()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_52b_goodG2BSink((__int64)s);
}

//----- (00000000004069CD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_52_good()
{
  return goodG2B_16();
}

//----- (00000000004069DD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_51b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 4069DD: using guessed type char s[99];

//----- (0000000000406A4D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_51b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 406A4D: using guessed type char s[99];

//----- (0000000000406ABD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_16_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 406ABD: using guessed type char var_80[99];

//----- (0000000000406B7E) ----------------------------------------------------
int goodG2B_17()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 406B7E: using guessed type char var_80[99];

//----- (0000000000406C3B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_16_good()
{
  return goodG2B_17();
}

//----- (0000000000406C4B) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000406C56) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000406C61) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue() )
    v7 = -5;
  result = staticReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000406CFF) ----------------------------------------------------
int goodB2G1_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue() )
    v7 = -5;
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000406DAF) ----------------------------------------------------
int goodB2G2_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue() )
    v7 = -5;
  result = staticReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000406E53) ----------------------------------------------------
int goodG2B1_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = staticReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000406EFD) ----------------------------------------------------
int goodG2B2_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue() )
    v7 = 7;
  result = staticReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000406F9B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_08_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (0000000000406FC9) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_64b_badSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-80h]
  __int64 v4; // [rsp+18h] [rbp-78h]
  __int64 v5; // [rsp+20h] [rbp-70h]
  __int64 v6; // [rsp+28h] [rbp-68h]
  __int64 v7; // [rsp+30h] [rbp-60h]
  __int64 v8; // [rsp+38h] [rbp-58h]
  __int64 v9; // [rsp+40h] [rbp-50h]
  __int64 v10; // [rsp+48h] [rbp-48h]
  __int64 v11; // [rsp+50h] [rbp-40h]
  __int64 v12; // [rsp+58h] [rbp-38h]
  __int64 v13; // [rsp+60h] [rbp-30h]
  __int64 v14; // [rsp+68h] [rbp-28h]
  int v15; // [rsp+70h] [rbp-20h]
  __int64 v16; // [rsp+80h] [rbp-10h]
  __int64 *v17; // [rsp+88h] [rbp-8h]

  v17 = a1;
  v16 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000040708D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_64b_goodG2BSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-80h]
  __int64 v4; // [rsp+18h] [rbp-78h]
  __int64 v5; // [rsp+20h] [rbp-70h]
  __int64 v6; // [rsp+28h] [rbp-68h]
  __int64 v7; // [rsp+30h] [rbp-60h]
  __int64 v8; // [rsp+38h] [rbp-58h]
  __int64 v9; // [rsp+40h] [rbp-50h]
  __int64 v10; // [rsp+48h] [rbp-48h]
  __int64 v11; // [rsp+50h] [rbp-40h]
  __int64 v12; // [rsp+58h] [rbp-38h]
  __int64 v13; // [rsp+60h] [rbp-30h]
  __int64 v14; // [rsp+68h] [rbp-28h]
  int v15; // [rsp+70h] [rbp-20h]
  __int64 v16; // [rsp+80h] [rbp-10h]
  __int64 *v17; // [rsp+88h] [rbp-8h]

  v17 = a1;
  v16 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000407151) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54e_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004071C8) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54e_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040723F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54e_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004072BC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -5;
  v2 = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_66b_badSink((__int64)&v1);
}

//----- (00000000004072E6) ----------------------------------------------------
int goodG2B_18()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 7;
  v2 = 7;
  return CWE124_Buffer_Underwrite__CWE839_negative_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000407310) ----------------------------------------------------
int goodB2G_3()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -5;
  v2 = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040733A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_66_good()
{
  goodG2B_18();
  return goodB2G_3();
}

//----- (0000000000407354) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_ncpy_68_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643298: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_68_badData;

//----- (00000000004073B2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_ncpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643290: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_68_goodG2BData;

//----- (0000000000407410) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (000000000040741B) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000407426) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}

//----- (000000000040750C) ----------------------------------------------------
int goodB2G1_3()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000407604) ----------------------------------------------------
int goodB2G2_3()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}

//----- (00000000004076F0) ----------------------------------------------------
int goodG2B1_7()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (000000000040779A) ----------------------------------------------------
int goodG2B2_7()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
    v7 = 7;
  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000407838) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_08_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (0000000000407866) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_ncpy_68_badData = (__int64)(s - 8);
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_68b_badSink();
}
// 643298: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_68_badData;

//----- (00000000004078D9) ----------------------------------------------------
int goodG2B_19()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_ncpy_68_goodG2BData = (__int64)s;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_68b_goodG2BSink();
}
// 643290: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_68_goodG2BData;

//----- (0000000000407948) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_68_good()
{
  return goodG2B_19();
}

//----- (0000000000407958) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_63_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_63b_badSink((void **)&v1);
}

//----- (00000000004079C2) ----------------------------------------------------
int goodG2B_20()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_63b_goodG2BSink(&v1);
}

//----- (0000000000407A28) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_63_good()
{
  return goodG2B_20();
}

//----- (0000000000407A38) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_12_bad()
{
  char v1[99]; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *v3; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]
  unsigned __int64 i; // [rsp+80h] [rbp-10h]
  const char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v6 = (char *)s - 8;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    v6 = (const char *)v3;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v6[i] = v1[i];
  *((_BYTE *)v6 + 99) = 0;
  return printLine(v6);
}
// 407A38: using guessed type char var_90[99];

//----- (0000000000407B59) ----------------------------------------------------
int goodG2B_21()
{
  char v1[99]; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *v3; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]
  unsigned __int64 i; // [rsp+80h] [rbp-10h]
  const char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v6 = (const char *)s;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    v6 = (const char *)v3;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v6[i] = v1[i];
  *((_BYTE *)v6 + 99) = 0;
  return printLine(v6);
}
// 407B59: using guessed type char var_90[99];

//----- (0000000000407C76) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_12_good()
{
  return goodG2B_21();
}

//----- (0000000000407C86) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54e_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000407CDD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54e_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000407D34) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_63b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000407DB5) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_63b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000407E36) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_63b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000407EBD) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (0000000000407EC8) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (0000000000407ED3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_08_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (0000000000407FD9) ----------------------------------------------------
int goodG2B1_8()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( (unsigned int)staticReturnsFalse_1() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (00000000004080E7) ----------------------------------------------------
int goodG2B2_8()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (00000000004081E9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_08_good()
{
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (0000000000408203) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_53_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_53b_badSink(s - 8);
}

//----- (000000000040826D) ----------------------------------------------------
int goodG2B_22()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_53b_goodG2BSink(s);
}

//----- (00000000004082D3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_53_good()
{
  return goodG2B_22();
}

//----- (00000000004082E3) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53b_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_53c_badSink(a1);
}

//----- (00000000004082FD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53b_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_53c_goodG2BSink(a1);
}

//----- (0000000000408317) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_67_bad()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_67b_badSink(-5);
}

//----- (000000000040833F) ----------------------------------------------------
int goodG2B_23()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_67b_goodG2BSink(7);
}

//----- (0000000000408367) ----------------------------------------------------
int goodB2G_4()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_67b_goodB2GSink(-5);
}

//----- (000000000040838F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_67_good()
{
  goodG2B_23();
  return goodB2G_4();
}

//----- (00000000004083A9) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000408408) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_61b_goodG2BSource()
{
  return 7LL;
}

//----- (000000000040841B) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040847A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52c_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (00000000004084C1) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52c_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (0000000000408508) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_02_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 408508: using guessed type char var_80[99];

//----- (00000000004085C8) ----------------------------------------------------
int goodG2B1_9()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 4085C8: using guessed type char var_80[99];

//----- (0000000000408684) ----------------------------------------------------
int goodG2B2_9()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 408684: using guessed type char var_80[99];

//----- (0000000000408740) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_02_good()
{
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (000000000040875A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_51_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_51b_badSink(s - 8);
}

//----- (00000000004087C4) ----------------------------------------------------
int goodG2B_24()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_51b_goodG2BSink(s);
}

//----- (000000000040882A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_51_good()
{
  return goodG2B_24();
}

//----- (000000000040883A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_63b_badSink(&v1);
}

//----- (000000000040885E) ----------------------------------------------------
int goodG2B_25()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE124_Buffer_Underwrite__CWE839_negative_63b_goodG2BSink(&v1);
}

//----- (0000000000408882) ----------------------------------------------------
int goodB2G_5()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_63b_goodB2GSink(&v1);
}

//----- (00000000004088A6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_63_good()
{
  goodG2B_25();
  return goodB2G_5();
}

//----- (00000000004088C0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54b_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54c_badSink(a1);
}

//----- (00000000004088DA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54b_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54c_goodG2BSink(a1);
}

//----- (00000000004088F4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_17_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  void *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004089AE) ----------------------------------------------------
int goodG2B_26()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  void *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000408A64) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_17_good()
{
  return goodG2B_26();
}

//----- (0000000000408A74) ----------------------------------------------------
int __fastcall badSink_1(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000408ACB) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_44_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_1)(s - 8);
}

//----- (0000000000408B3E) ----------------------------------------------------
int __fastcall goodG2BSink_1(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000408B95) ----------------------------------------------------
__int64 goodG2B_27()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_1)(s);
}

//----- (0000000000408C04) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_44_good()
{
  return goodG2B_27();
}

//----- (0000000000408C14) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52b_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_52c_badSink(a1);
}

//----- (0000000000408C2E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52b_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_52c_goodG2BSink(a1);
}

//----- (0000000000408C48) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_53_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_53b_badSink(s - 8);
}

//----- (0000000000408CB2) ----------------------------------------------------
int goodG2B_28()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_53b_goodG2BSink(s);
}

//----- (0000000000408D18) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_53_good()
{
  return goodG2B_28();
}

//----- (0000000000408D28) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_61_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_61b_badSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000408DB0) ----------------------------------------------------
int goodG2B_29()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_61b_goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000408E38) ----------------------------------------------------
int goodB2G_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_61b_goodB2GSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000408EC6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_61_good()
{
  goodG2B_29();
  return goodB2G_6();
}

//----- (0000000000408EE0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54c_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_54d_badSink(a1);
}

//----- (0000000000408EFA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54c_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_54d_goodG2BSink(a1);
}

//----- (0000000000408F14) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_01_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 408F14: using guessed type char var_80[99];

//----- (0000000000408FD4) ----------------------------------------------------
int goodG2B_30()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 408FD4: using guessed type char var_80[99];

//----- (0000000000409090) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_01_good()
{
  return goodG2B_30();
}

//----- (00000000004090A0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53d_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 4090A0: using guessed type char s[99];

//----- (0000000000409110) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53d_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 409110: using guessed type char s[99];

//----- (0000000000409180) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 6430EC: using guessed type int staticFive;

//----- (0000000000409260) ----------------------------------------------------
int goodB2G1_4()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}
// 6430EC: using guessed type int staticFive;

//----- (0000000000409352) ----------------------------------------------------
int goodB2G2_4()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 6430EC: using guessed type int staticFive;

//----- (0000000000409438) ----------------------------------------------------
int goodG2B1_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive == 5 )
    v7 = 7;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430EC: using guessed type int staticFive;

//----- (00000000004094DC) ----------------------------------------------------
int goodG2B2_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive == 5 )
    v7 = 7;
  result = staticFive;
  if ( staticFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430EC: using guessed type int staticFive;

//----- (0000000000409574) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_07_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (00000000004095A2) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_61b_badSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (0000000000409600) ----------------------------------------------------
_BYTE *CWE124_Buffer_Underwrite__malloc_char_memmove_61b_goodG2BSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (000000000040965A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_04_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040970A) ----------------------------------------------------
int goodG2B1_11()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004097C2) ----------------------------------------------------
int goodG2B2_11()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040986E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_04_good()
{
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (0000000000409888) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_54_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54b_badSink((__int64)(s - 8));
}

//----- (00000000004098F2) ----------------------------------------------------
int goodG2B_31()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54b_goodG2BSink((__int64)s);
}

//----- (0000000000409958) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_54_good()
{
  return goodG2B_31();
}

//----- (0000000000409968) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_52_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_52b_badSink(s - 8);
}

//----- (00000000004099D2) ----------------------------------------------------
int goodG2B_32()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_52b_goodG2BSink(s);
}

//----- (0000000000409A38) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_52_good()
{
  return goodG2B_32();
}

//----- (0000000000409A48) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_51b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000409A9F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_51b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000409AF6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52b_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_52c_badSink(a1);
}

//----- (0000000000409B10) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_52b_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_52c_goodG2BSink(a1);
}

//----- (0000000000409B2A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int k; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  for ( i = 0; i <= 0; ++i )
    v7 = -5;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( k = 0; k <= 9; ++k )
        result = printIntLine(*((_DWORD *)&v1 + k));
    }
  }
  return result;
}

//----- (0000000000409BD2) ----------------------------------------------------
int goodB2G_7()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int k; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  for ( i = 0; i <= 0; ++i )
    v7 = -5;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( k = 0; k <= 9; ++k )
        result = printIntLine(*((_DWORD *)&v1 + k));
    }
  }
  return result;
}

//----- (0000000000409C80) ----------------------------------------------------
int goodG2B_33()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int k; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  for ( i = 0; i <= 0; ++i )
    v7 = 7;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( k = 0; k <= 9; ++k )
        result = printIntLine(*((_DWORD *)&v1 + k));
    }
  }
  return result;
}

//----- (0000000000409D28) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_17_good()
{
  goodB2G_7();
  return goodG2B_33();
}

//----- (0000000000409D42) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_16_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000409DEA) ----------------------------------------------------
int goodG2B_34()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000409E8E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_16_good()
{
  return goodG2B_34();
}

//----- (0000000000409E9E) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (0000000000409EA9) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (0000000000409EB4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_08_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 409EB4: using guessed type char var_80[99];

//----- (0000000000409F82) ----------------------------------------------------
int goodG2B1_12()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( (unsigned int)staticReturnsFalse_2() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 409F82: using guessed type char var_80[99];

//----- (000000000040A058) ----------------------------------------------------
int goodG2B2_12()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 40A058: using guessed type char var_80[99];

//----- (000000000040A122) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_08_good()
{
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040A13C) ----------------------------------------------------
int __fastcall badSink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040A1B3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_44_bad()
{
  return badSink_2(-5);
}

//----- (000000000040A1DE) ----------------------------------------------------
int __fastcall goodG2BSink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040A255) ----------------------------------------------------
int goodG2B_35()
{
  return goodG2BSink_2(7);
}

//----- (000000000040A280) ----------------------------------------------------
int __fastcall goodB2GSink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040A2FD) ----------------------------------------------------
int goodB2G_8()
{
  return goodB2GSink_0(-5);
}

//----- (000000000040A328) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_44_good()
{
  goodG2B_35();
  return goodB2G_8();
}

//----- (000000000040A342) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_61_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = (void *)CWE124_Buffer_Underwrite__malloc_char_memmove_61b_badSource();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040A3AD) ----------------------------------------------------
int goodG2B_36()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = CWE124_Buffer_Underwrite__malloc_char_memmove_61b_goodG2BSource();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040A418) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_61_good()
{
  return goodG2B_36();
}

//----- (000000000040A428) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_18_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040A4D0) ----------------------------------------------------
int goodG2B_37()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040A574) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_18_good()
{
  return goodG2B_37();
}

//----- (000000000040A584) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53c_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_53d_badSink(a1);
}

//----- (000000000040A59E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53c_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_53d_goodG2BSink(a1);
}

//----- (000000000040A5B8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_63_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_63b_badSink(&v1);
}

//----- (000000000040A622) ----------------------------------------------------
int goodG2B_38()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_63b_goodG2BSink((char **)&v1);
}

//----- (000000000040A688) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_63_good()
{
  return goodG2B_38();
}

//----- (000000000040A698) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_51_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_51b_badSink(s - 8);
}

//----- (000000000040A702) ----------------------------------------------------
int goodG2B_39()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_51b_goodG2BSink(s);
}

//----- (000000000040A768) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_51_good()
{
  return goodG2B_39();
}

//----- (000000000040A778) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_52_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_52b_badSink(s - 8);
}

//----- (000000000040A7E2) ----------------------------------------------------
int goodG2B_40()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_52b_goodG2BSink(s);
}

//----- (000000000040A848) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_52_good()
{
  return goodG2B_40();
}

//----- (000000000040A858) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54b_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_54c_badSink(a1);
}

//----- (000000000040A872) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54b_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_54c_goodG2BSink(a1);
}

//----- (000000000040A88C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_51b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (000000000040A8D3) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_51b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (000000000040A91A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000040A9B2) ----------------------------------------------------
int goodG2B_41()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000040AA46) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_16_good()
{
  return goodG2B_41();
}

//----- (000000000040AA56) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_65_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_memcpy_65b_badSink)(s - 8);
}

//----- (000000000040AAC9) ----------------------------------------------------
__int64 goodG2B_42()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_memcpy_65b_goodG2BSink)(s);
}

//----- (000000000040AB38) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_65_good()
{
  return goodG2B_42();
}

//----- (000000000040AB48) ----------------------------------------------------
int badSink_3()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_ncpy_45_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643148: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_45_badData;

//----- (000000000040ABA6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_45_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_ncpy_45_badData = (__int64)(s - 8);
  return badSink_3();
}
// 643148: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_45_badData;

//----- (000000000040AC19) ----------------------------------------------------
int goodG2BSink_3()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_ncpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643150: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_45_goodG2BData;

//----- (000000000040AC77) ----------------------------------------------------
int goodG2B_43()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_ncpy_45_goodG2BData = (__int64)s;
  return goodG2BSink_3();
}
// 643150: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_45_goodG2BData;

//----- (000000000040ACE6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_45_good()
{
  return goodG2B_43();
}

//----- (000000000040ACF6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_06_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040ADA7) ----------------------------------------------------
int goodG2B1_13()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040AE60) ----------------------------------------------------
int goodG2B2_13()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040AF0D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_06_good()
{
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040AF27) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_61_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_61b_badSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040AFAF) ----------------------------------------------------
int goodG2B_44()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_61b_goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040B037) ----------------------------------------------------
int goodB2G_9()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_61b_goodB2GSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040B0C5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_61_good()
{
  goodG2B_44();
  return goodB2G_9();
}

//----- (000000000040B0DF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_51_bad()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_51b_badSink(-5);
}

//----- (000000000040B101) ----------------------------------------------------
int goodG2B_45()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_51b_goodG2BSink(7);
}

//----- (000000000040B123) ----------------------------------------------------
int goodB2G_10()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_51b_goodB2GSink(-5);
}

//----- (000000000040B145) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_51_good()
{
  goodG2B_45();
  return goodB2G_10();
}

//----- (000000000040B15F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_65b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000040B207) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_65b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000040B2AF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_51_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_51b_badSink(s - 8);
}

//----- (000000000040B319) ----------------------------------------------------
int goodG2B_46()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_51b_goodG2BSink(s);
}

//----- (000000000040B37F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_51_good()
{
  return goodG2B_46();
}

//----- (000000000040B38F) ----------------------------------------------------
int badSink_4()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_cpy_45_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 643158: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_45_badData;

//----- (000000000040B3DD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_45_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_cpy_45_badData = (__int64)(s - 8);
  return badSink_4();
}
// 643158: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_45_badData;

//----- (000000000040B450) ----------------------------------------------------
int goodG2BSink_4()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_cpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 643160: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_45_goodG2BData;

//----- (000000000040B49E) ----------------------------------------------------
int goodG2B_47()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_cpy_45_goodG2BData = (__int64)s;
  return goodG2BSink_4();
}
// 643160: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_45_goodG2BData;

//----- (000000000040B50D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_45_good()
{
  return goodG2B_47();
}

//----- (000000000040B51D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_64b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040B590) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_64b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040B603) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52c_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000040B6AB) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52c_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000040B753) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memcpy_68_badData = (__int64)(s - 8);
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_68b_badSink();
}
// 6432A0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_68_badData;

//----- (000000000040B7C6) ----------------------------------------------------
int goodG2B_48()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memcpy_68_goodG2BData = (__int64)s;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_68b_goodG2BSink();
}
// 6432A8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_68_goodG2BData;

//----- (000000000040B835) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68_good()
{
  return goodG2B_48();
}

//----- (000000000040B845) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000040B911) ----------------------------------------------------
int goodB2G1_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000040B9E3) ----------------------------------------------------
int goodB2G2_5()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000040BAB5) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040BB39) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040BBBD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_15_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040BBEB) ----------------------------------------------------
__int64 badSource_1()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040BC4A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_42_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = badSource_1();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040BCD2) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 7LL;
}

//----- (000000000040BCE5) ----------------------------------------------------
int goodG2B_49()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = goodG2BSource_1();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040BD6D) ----------------------------------------------------
__int64 goodB2GSource_0()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000040BDCC) ----------------------------------------------------
int goodB2G_11()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = goodB2GSource_0();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040BE5A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_42_good()
{
  goodB2G_11();
  return goodG2B_49();
}

//----- (000000000040BE74) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_64_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_64b_badSink(&v1);
}

//----- (000000000040BEDE) ----------------------------------------------------
int goodG2B_50()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_64b_goodG2BSink((char **)&v1);
}

//----- (000000000040BF44) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_64_good()
{
  return goodG2B_50();
}

//----- (000000000040BF54) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_53_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_53b_badSink((__int64)(s - 8));
}

//----- (000000000040BFBE) ----------------------------------------------------
int goodG2B_51()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_53b_goodG2BSink((__int64)s);
}

//----- (000000000040C024) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_53_good()
{
  return goodG2B_51();
}

//----- (000000000040C034) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_64b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000040C097) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_64b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000040C0FA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_64b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+3Ch] [rbp-14h]
  int *v8; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040C183) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_64b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+3Ch] [rbp-14h]
  int *v8; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040C20C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_64b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+3Ch] [rbp-14h]
  int *v8; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040C29B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( staticTrue_1 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 6430F0: using guessed type int staticTrue_1;

//----- (000000000040C379) ----------------------------------------------------
int goodB2G1_6()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( staticTrue_1 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}
// 6430F0: using guessed type int staticTrue_1;
// 643168: using guessed type int staticFalse_1;

//----- (000000000040C469) ----------------------------------------------------
int goodB2G2_6()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( staticTrue_1 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 6430F0: using guessed type int staticTrue_1;

//----- (000000000040C54D) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430F0: using guessed type int staticTrue_1;
// 643168: using guessed type int staticFalse_1;

//----- (000000000040C5EF) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_1 )
    v7 = 7;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430F0: using guessed type int staticTrue_1;

//----- (000000000040C685) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_05_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040C6B3) ----------------------------------------------------
int __fastcall badSink_5(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040C72A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_5(v2);
}

//----- (000000000040C794) ----------------------------------------------------
int __fastcall goodG2BSink_5(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040C80B) ----------------------------------------------------
int goodG2B_52()
{
  return goodG2BSink_5(7);
}

//----- (000000000040C82D) ----------------------------------------------------
int __fastcall goodB2GSink_1(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040C8AA) ----------------------------------------------------
int goodB2G_12()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_1(v2);
}

//----- (000000000040C914) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_41_good()
{
  goodB2G_12();
  return goodG2B_52();
}

//----- (000000000040C92E) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_61b_badSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (000000000040C98C) ----------------------------------------------------
_BYTE *CWE124_Buffer_Underwrite__malloc_char_cpy_61b_goodG2BSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (000000000040C9E6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52b_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_52c_badSink(a1);
}

//----- (000000000040CA00) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_52b_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_52c_goodG2BSink(a1);
}

//----- (000000000040CA1A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_64_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_64b_badSink(&v1);
}

//----- (000000000040CA84) ----------------------------------------------------
int goodG2B_53()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_64b_goodG2BSink((char **)&v1);
}

//----- (000000000040CAEA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_64_good()
{
  return goodG2B_53();
}

//----- (000000000040CAFA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-50h]
  __int64 v7; // [rsp+8h] [rbp-48h]
  __int64 v8; // [rsp+10h] [rbp-40h]
  __int64 v9; // [rsp+18h] [rbp-38h]
  __int64 v10; // [rsp+20h] [rbp-30h]
  int v11; // [rsp+30h] [rbp-20h]
  int v12; // [rsp+34h] [rbp-1Ch]
  int v13; // [rsp+38h] [rbp-18h]
  int i; // [rsp+3Ch] [rbp-14h]

  v13 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v13 = v2;
  v11 = v2;
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000040CBD0) ----------------------------------------------------
int goodG2B_54()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 7;
  v6 = 7;
  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000040CC5E) ----------------------------------------------------
int goodB2G_13()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-50h]
  __int64 v7; // [rsp+8h] [rbp-48h]
  __int64 v8; // [rsp+10h] [rbp-40h]
  __int64 v9; // [rsp+18h] [rbp-38h]
  __int64 v10; // [rsp+20h] [rbp-30h]
  int v11; // [rsp+30h] [rbp-20h]
  int v12; // [rsp+34h] [rbp-1Ch]
  int v13; // [rsp+38h] [rbp-18h]
  int i; // [rsp+3Ch] [rbp-14h]

  v13 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v13 = v2;
  v11 = v2;
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000040CD3A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_34_good()
{
  goodG2B_54();
  return goodB2G_13();
}

//----- (000000000040CD54) ----------------------------------------------------
__int64 badSource_2()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (000000000040CDB2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_42_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = (void *)badSource_2();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040CE1D) ----------------------------------------------------
_BYTE *goodG2BSource_2()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (000000000040CE77) ----------------------------------------------------
int goodG2B_55()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = goodG2BSource_2();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040CEE2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_42_good()
{
  return goodG2B_55();
}

//----- (000000000040CEF2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_11_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 40CEF2: using guessed type char var_80[99];

//----- (000000000040CFC0) ----------------------------------------------------
int goodG2B1_16()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 40CFC0: using guessed type char var_80[99];

//----- (000000000040D096) ----------------------------------------------------
int goodG2B2_16()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 40D096: using guessed type char var_80[99];

//----- (000000000040D160) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_11_good()
{
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040D17A) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (000000000040D185) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (000000000040D190) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_08_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040D245) ----------------------------------------------------
int goodG2B1_17()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsFalse_3() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040D302) ----------------------------------------------------
int goodG2B2_17()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000040D3B3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_08_good()
{
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040D3CD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_66b_badSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040D44F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040D4D1) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040D559) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52b_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_52c_badSink(a1);
}

//----- (000000000040D570) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52b_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_52c_goodG2BSink(a1);
}

//----- (000000000040D587) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52b_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_52c_goodB2GSink(a1);
}

//----- (000000000040D59E) ----------------------------------------------------
int __fastcall badSink_6(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 40D59E: using guessed type char s[99];

//----- (000000000040D60E) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_44_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_6)(s - 8);
}

//----- (000000000040D681) ----------------------------------------------------
int __fastcall goodG2BSink_6(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 40D681: using guessed type char s[99];

//----- (000000000040D6F1) ----------------------------------------------------
__int64 goodG2B_56()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_6)(s);
}

//----- (000000000040D760) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_44_good()
{
  return goodG2B_56();
}

//----- (000000000040D770) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53b_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_53c_badSink(a1);
}

//----- (000000000040D78A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53b_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_53c_goodG2BSink(a1);
}

//----- (000000000040D7A4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_68_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memmove_68_badData = (__int64)(s - 8);
  return CWE124_Buffer_Underwrite__malloc_char_memmove_68b_badSink();
}
// 6432B8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_68_badData;

//----- (000000000040D817) ----------------------------------------------------
int goodG2B_57()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memmove_68_goodG2BData = (__int64)s;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_68b_goodG2BSink();
}
// 6432B0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_68_goodG2BData;

//----- (000000000040D886) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_68_good()
{
  return goodG2B_57();
}

//----- (000000000040D896) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52c_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 40D896: using guessed type char s[99];

//----- (000000000040D906) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_52c_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 40D906: using guessed type char s[99];

//----- (000000000040D976) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53c_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53d_badSink(a1);
}

//----- (000000000040D98D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53c_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53d_goodG2BSink(a1);
}

//----- (000000000040D9A4) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53c_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53d_goodB2GSink(a1);
}

//----- (000000000040D9BB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_05_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( staticTrue_2 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}
// 6430F4: using guessed type int staticTrue_2;

//----- (000000000040DABD) ----------------------------------------------------
int goodG2B1_18()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( staticFalse_2 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 64316C: using guessed type int staticFalse_2;

//----- (000000000040DBC7) ----------------------------------------------------
int goodG2B2_18()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( staticTrue_2 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 6430F4: using guessed type int staticTrue_2;

//----- (000000000040DCC5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_05_good()
{
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040DCDF) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_61b_badSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (000000000040DD3D) ----------------------------------------------------
_BYTE *CWE124_Buffer_Underwrite__malloc_char_ncpy_61b_goodG2BSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (000000000040DD97) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_14_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643120: using guessed type int globalFive;

//----- (000000000040DE49) ----------------------------------------------------
int goodG2B1_19()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643120: using guessed type int globalFive;

//----- (000000000040DF03) ----------------------------------------------------
int goodG2B2_19()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643120: using guessed type int globalFive;

//----- (000000000040DFB1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_14_good()
{
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040DFCB) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54b_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54c_badSink(a1);
}

//----- (000000000040DFE2) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54b_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54c_goodG2BSink(a1);
}

//----- (000000000040DFF9) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54b_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54c_goodB2GSink(a1);
}

//----- (000000000040E010) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_32_bad()
{
  char src; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+70h] [rbp-30h]
  char *dest; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  char *v6; // [rsp+88h] [rbp-18h]
  char **v7; // [rsp+90h] [rbp-10h]
  __int64 *v8; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = (char **)&v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  *v8 = (__int64)s - 8;
  dest = *v7;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040E0F1) ----------------------------------------------------
int goodG2B_58()
{
  char src; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+70h] [rbp-30h]
  char *dest; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  void *v6; // [rsp+88h] [rbp-18h]
  char **v7; // [rsp+90h] [rbp-10h]
  __int64 *v8; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = (char **)&v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  *v8 = (__int64)s;
  dest = *v7;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040E1CE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_32_good()
{
  return goodG2B_58();
}

//----- (000000000040E1DE) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_66b_badSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  __int64 v6; // [rsp+28h] [rbp-58h]
  __int64 v7; // [rsp+30h] [rbp-50h]
  __int64 v8; // [rsp+38h] [rbp-48h]
  __int64 v9; // [rsp+40h] [rbp-40h]
  __int64 v10; // [rsp+48h] [rbp-38h]
  __int64 v11; // [rsp+50h] [rbp-30h]
  __int64 v12; // [rsp+58h] [rbp-28h]
  __int64 v13; // [rsp+60h] [rbp-20h]
  __int64 v14; // [rsp+68h] [rbp-18h]
  int v15; // [rsp+70h] [rbp-10h]
  __int64 v16; // [rsp+78h] [rbp-8h]

  v16 = *(_QWORD *)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000040E292) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_66b_goodG2BSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  __int64 v6; // [rsp+28h] [rbp-58h]
  __int64 v7; // [rsp+30h] [rbp-50h]
  __int64 v8; // [rsp+38h] [rbp-48h]
  __int64 v9; // [rsp+40h] [rbp-40h]
  __int64 v10; // [rsp+48h] [rbp-38h]
  __int64 v11; // [rsp+50h] [rbp-30h]
  __int64 v12; // [rsp+58h] [rbp-28h]
  __int64 v13; // [rsp+60h] [rbp-20h]
  __int64 v14; // [rsp+68h] [rbp-18h]
  int v15; // [rsp+70h] [rbp-10h]
  __int64 v16; // [rsp+78h] [rbp-8h]

  v16 = *(_QWORD *)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000040E346) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_65b_badSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000040E39D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_65b_goodG2BSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000040E3F4) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = badStatic;
  if ( badStatic )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643170: using guessed type int badStatic;

//----- (000000000040E475) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_21_bad()
{
  badStatic = 1;
  return badSink_7(-5);
}
// 643170: using guessed type int badStatic;

//----- (000000000040E4A1) ----------------------------------------------------
int __fastcall goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}
// 643174: using guessed type int goodB2G1Static;

//----- (000000000040E534) ----------------------------------------------------
int goodB2G1_7()
{
  goodB2G1Static = 0;
  return goodB2G1Sink(-5);
}
// 643174: using guessed type int goodB2G1Static;

//----- (000000000040E560) ----------------------------------------------------
int __fastcall goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = goodB2G2Static;
  if ( goodB2G2Static )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643178: using guessed type int goodB2G2Static;

//----- (000000000040E5E7) ----------------------------------------------------
int goodB2G2_7()
{
  goodB2G2Static = 1;
  return goodB2G2Sink(-5);
}
// 643178: using guessed type int goodB2G2Static;

//----- (000000000040E613) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = goodG2BStatic;
  if ( goodG2BStatic )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 64317C: using guessed type int goodG2BStatic;

//----- (000000000040E694) ----------------------------------------------------
int goodG2B_59()
{
  goodG2BStatic = 1;
  return goodG2BSink_7(7);
}
// 64317C: using guessed type int goodG2BStatic;

//----- (000000000040E6C0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_21_good()
{
  goodB2G1_7();
  goodB2G2_7();
  return goodG2B_59();
}

//----- (000000000040E6E4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_68b_badSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_68_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_68_badData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6432C4: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_68_badData;

//----- (000000000040E761) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_68b_goodG2BSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_68_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_68_goodG2BData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6432C0: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_68_goodG2BData;

//----- (000000000040E7DE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_68b_goodB2GSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_68_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_68_goodB2GData < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6432C8: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_68_goodB2GData;

//----- (000000000040E861) ----------------------------------------------------
__int64 __fastcall badSource_3(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( badStatic_0 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 643180: using guessed type int badStatic_0;

//----- (000000000040E8C9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_21_bad()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  badStatic_0 = 1;
  v3 = badSource_3(0LL);
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 643180: using guessed type int badStatic_0;
// 40E8C9: using guessed type char s[99];

//----- (000000000040E957) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643184: using guessed type int goodG2B1Static;

//----- (000000000040E9C7) ----------------------------------------------------
int goodG2B1_20()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  const char *v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  goodG2B1Static = 0;
  v3 = goodG2B1Source(0LL);
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = s[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 643184: using guessed type int goodG2B1Static;
// 40E9C7: using guessed type char s[99];

//----- (000000000040EA55) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643188: using guessed type int goodG2B2Static;

//----- (000000000040EAB9) ----------------------------------------------------
int goodG2B2_20()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  const char *v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  goodG2B2Static = 1;
  v3 = goodG2B2Source(0LL);
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = s[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 643188: using guessed type int goodG2B2Static;
// 40EAB9: using guessed type char s[99];

//----- (000000000040EB47) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_21_good()
{
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040EB61) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_15_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 40EB61: using guessed type char var_80[99];

//----- (000000000040EC22) ----------------------------------------------------
int goodG2B1_21()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 40EC22: using guessed type char var_80[99];

//----- (000000000040ECDF) ----------------------------------------------------
int goodG2B2_21()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 40ECDF: using guessed type char var_80[99];

//----- (000000000040ED9C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_15_good()
{
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040EDB6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53c_badSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_53d_badSink(a1);
}

//----- (000000000040EDD0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53c_goodG2BSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_53d_goodG2BSink(a1);
}

//----- (000000000040EDEA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_31_bad()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *dest; // [rsp+70h] [rbp-20h]
  char *v4; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v4 = (char *)s - 8;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040EEAA) ----------------------------------------------------
int goodG2B_60()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *dest; // [rsp+70h] [rbp-20h]
  void *v4; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v4 = s;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000040EF66) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_31_good()
{
  return goodG2B_60();
}

//----- (000000000040EF76) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_54_bad()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54b_badSink(-5);
}

//----- (000000000040EF98) ----------------------------------------------------
int goodG2B_61()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54b_goodG2BSink(7);
}

//----- (000000000040EFBA) ----------------------------------------------------
int goodB2G_14()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54b_goodB2GSink(-5);
}

//----- (000000000040EFDC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_54_good()
{
  goodG2B_61();
  return goodB2G_14();
}

//----- (000000000040EFF6) ----------------------------------------------------
__int64 badSource_4()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (000000000040F054) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_42_bad()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = badSource_4();
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 40F054: using guessed type char s[99];

//----- (000000000040F0D8) ----------------------------------------------------
_BYTE *goodG2BSource_3()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (000000000040F132) ----------------------------------------------------
int goodG2B_62()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  const char *v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = goodG2BSource_3();
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = s[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 40F132: using guessed type char s[99];

//----- (000000000040F1B6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_42_good()
{
  return goodG2B_62();
}

//----- (000000000040F1C6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_14_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643120: using guessed type int globalFive;

//----- (000000000040F268) ----------------------------------------------------
int goodG2B1_22()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643120: using guessed type int globalFive;

//----- (000000000040F312) ----------------------------------------------------
int goodG2B2_22()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643120: using guessed type int globalFive;

//----- (000000000040F3B0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_14_good()
{
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040F3CA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_32_bad()
{
  char src; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+70h] [rbp-30h]
  char *dest; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  char *v6; // [rsp+88h] [rbp-18h]
  char **v7; // [rsp+90h] [rbp-10h]
  __int64 *v8; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = (char **)&v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  *v8 = (__int64)s - 8;
  dest = *v7;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000040F49B) ----------------------------------------------------
int goodG2B_63()
{
  char src; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+70h] [rbp-30h]
  char *dest; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  void *v6; // [rsp+88h] [rbp-18h]
  char **v7; // [rsp+90h] [rbp-10h]
  __int64 *v8; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = (char **)&v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  *v8 = (__int64)s;
  dest = *v7;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000040F568) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_32_good()
{
  return goodG2B_63();
}

//----- (000000000040F578) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_66_bad()
{
  char v1; // [rsp+0h] [rbp-40h]
  char *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  char *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  v2 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_66b_badSink((__int64)&v1);
}

//----- (000000000040F5EA) ----------------------------------------------------
int goodG2B_64()
{
  char v1; // [rsp+0h] [rbp-40h]
  void *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  void *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  v2 = s;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040F658) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_66_good()
{
  return goodG2B_64();
}

//----- (000000000040F668) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53b_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53c_badSink(a1);
}

//----- (000000000040F67F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53b_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53c_goodG2BSink(a1);
}

//----- (000000000040F696) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53b_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53c_goodB2GSink(a1);
}

//----- (000000000040F6AD) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_65_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_memmove_65b_badSink)(s - 8);
}

//----- (000000000040F720) ----------------------------------------------------
__int64 goodG2B_65()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_memmove_65b_goodG2BSink)(s);
}

//----- (000000000040F78F) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memmove_65_good()
{
  return goodG2B_65();
}

//----- (000000000040F79F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_67_bad()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_67b_badSink(s - 8);
}

//----- (000000000040F811) ----------------------------------------------------
int goodG2B_66()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_67b_goodG2BSink(s);
}

//----- (000000000040F87F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_67_good()
{
  return goodG2B_66();
}

//----- (000000000040F88F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_67b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000040F8DE) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_67b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000040F92D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_54_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54b_badSink(s - 8);
}

//----- (000000000040F997) ----------------------------------------------------
int goodG2B_67()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54b_goodG2BSink(s);
}

//----- (000000000040F9FD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_54_good()
{
  return goodG2B_67();
}

//----- (000000000040FA0D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_0 == 5 )
    v7 = -5;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430F8: using guessed type int staticFive_0;

//----- (000000000040FAA5) ----------------------------------------------------
int goodB2G1_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_0 == 5 )
    v7 = -5;
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6430F8: using guessed type int staticFive_0;

//----- (000000000040FB4F) ----------------------------------------------------
int goodB2G2_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_0 == 5 )
    v7 = -5;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430F8: using guessed type int staticFive_0;

//----- (000000000040FBED) ----------------------------------------------------
int goodG2B1_23()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_0 == 5 )
    v7 = 7;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430F8: using guessed type int staticFive_0;

//----- (000000000040FC91) ----------------------------------------------------
int goodG2B2_23()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_0 == 5 )
    v7 = 7;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 6430F8: using guessed type int staticFive_0;

//----- (000000000040FD29) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_07_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000040FD57) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_65b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040FDCE) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_65b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040FE45) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_65b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000040FEC2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_68_badData = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_68b_badSink();
}
// 6432C4: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_68_badData;

//----- (000000000040FF35) ----------------------------------------------------
int goodG2B_68()
{
  CWE124_Buffer_Underwrite__CWE839_rand_68_goodG2BData = 7;
  return CWE124_Buffer_Underwrite__CWE839_rand_68b_goodG2BSink();
}
// 6432C0: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_68_goodG2BData;

//----- (000000000040FF60) ----------------------------------------------------
int goodB2G_15()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_68_goodB2GData = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_68b_goodB2GSink();
}
// 6432C8: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_68_goodB2GData;

//----- (000000000040FFD3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_68_good()
{
  goodG2B_68();
  return goodB2G_15();
}

//----- (000000000040FFED) ----------------------------------------------------
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badGlobal )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 64319C: using guessed type int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badGlobal;

//----- (0000000000410055) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431A0: using guessed type int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Global;

//----- (00000000004100C5) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Global )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431A4: using guessed type int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Global;

//----- (0000000000410129) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54b_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54c_badSink(a1);
}

//----- (0000000000410143) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54b_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54c_goodG2BSink(a1);
}

//----- (000000000041015D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_05_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( staticTrue_3 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 6430FC: using guessed type int staticTrue_3;
// 41015D: using guessed type char var_80[99];

//----- (0000000000410227) ----------------------------------------------------
int goodG2B1_24()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( staticFalse_3 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 64318C: using guessed type int staticFalse_3;
// 410227: using guessed type char var_80[99];

//----- (00000000004102F9) ----------------------------------------------------
int goodG2B2_24()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( staticTrue_3 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 6430FC: using guessed type int staticTrue_3;
// 4102F9: using guessed type char var_80[99];

//----- (00000000004103BF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_05_good()
{
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (00000000004103D9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_bad()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badGlobal = 1;
  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badSource(0LL);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}
// 643190: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badGlobal;

//----- (000000000041049F) ----------------------------------------------------
int goodG2B1_25()
{
  _BYTE *v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  _BYTE *v15; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Global = 0;
  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Source(0LL);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}
// 643194: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Global;

//----- (0000000000410565) ----------------------------------------------------
int goodG2B2_25()
{
  _BYTE *v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  _BYTE *v15; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Global = 1;
  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Source(0LL);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}
// 643198: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Global;

//----- (000000000041062B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_good()
{
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (0000000000410645) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_03_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004106EC) ----------------------------------------------------
int goodG2B1_26()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041078F) ----------------------------------------------------
int goodG2B2_26()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000410832) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_03_good()
{
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (000000000041084C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 41084C: using guessed type char s[99];

//----- (00000000004108BC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_41_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink((__int64)(s - 8));
}

//----- (0000000000410926) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_41_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 410926: using guessed type char s[99];

//----- (0000000000410996) ----------------------------------------------------
int goodG2B_69()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_41_goodG2BSink((__int64)s);
}

//----- (00000000004109FC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_41_good()
{
  return goodG2B_69();
}

//----- (0000000000410A0C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = (void *)CWE124_Buffer_Underwrite__malloc_char_memmove_68_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 6432B8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_68_badData;

//----- (0000000000410A6A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = (void *)CWE124_Buffer_Underwrite__malloc_char_memmove_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 6432B0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_68_goodG2BData;

//----- (0000000000410AC8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_04_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000410B68) ----------------------------------------------------
int goodG2B1_27()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000410C10) ----------------------------------------------------
int goodG2B2_27()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000410CAC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_04_good()
{
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (0000000000410CC6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_31_bad()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *dest; // [rsp+70h] [rbp-20h]
  char *v4; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v4 = (char *)s - 8;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000410D76) ----------------------------------------------------
int goodG2B_70()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *dest; // [rsp+70h] [rbp-20h]
  void *v4; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v4 = s;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000410E22) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_31_good()
{
  return goodG2B_70();
}

//----- (0000000000410E32) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53c_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53d_badSink(a1);
}

//----- (0000000000410E49) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53c_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53d_goodG2BSink(a1);
}

//----- (0000000000410E60) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53c_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53d_goodB2GSink(a1);
}

//----- (0000000000410E77) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_53b_badSink(v2);
}

//----- (0000000000410EE1) ----------------------------------------------------
int goodG2B_71()
{
  return CWE124_Buffer_Underwrite__CWE839_rand_53b_goodG2BSink(7);
}

//----- (0000000000410F03) ----------------------------------------------------
int goodB2G_16()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_53b_goodB2GSink(v2);
}

//----- (0000000000410F6D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_53_good()
{
  goodG2B_71();
  return goodB2G_16();
}

//----- (0000000000410F87) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_34_bad()
{
  char v1[99]; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char *v3; // [rsp+70h] [rbp-30h]
  const char *v4; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]
  char *v6; // [rsp+90h] [rbp-10h]
  unsigned __int64 i; // [rsp+98h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v3 = (char *)s - 8;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 410F87: using guessed type char var_A0[99];

//----- (0000000000411060) ----------------------------------------------------
int goodG2B_72()
{
  char v1[99]; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  void *v3; // [rsp+70h] [rbp-30h]
  const char *v4; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]
  void *v6; // [rsp+90h] [rbp-10h]
  unsigned __int64 i; // [rsp+98h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v3 = s;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 411060: using guessed type char var_A0[99];

//----- (0000000000411135) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_34_good()
{
  return goodG2B_72();
}

//----- (0000000000411145) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_66b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *(_QWORD *)(a1 + 16);
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 411145: using guessed type char s[99];

//----- (00000000004111CA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_66b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *(_QWORD *)(a1 + 16);
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 4111CA: using guessed type char s[99];

//----- (000000000041124F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_65_bad()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_65b_badSink(-5);
}

//----- (000000000041127A) ----------------------------------------------------
int goodG2B_73()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_65b_goodG2BSink(7);
}

//----- (00000000004112A5) ----------------------------------------------------
int goodB2G_17()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_65b_goodB2GSink(-5);
}

//----- (00000000004112D0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_65_good()
{
  goodG2B_73();
  return goodB2G_17();
}

//----- (00000000004112EA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badGlobal = 1;
  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badSource(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 64319C: using guessed type int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_badGlobal;

//----- (000000000041135F) ----------------------------------------------------
int goodG2B1_28()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Global = 0;
  dest = CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Source(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 6431A0: using guessed type int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B1Global;

//----- (00000000004113D4) ----------------------------------------------------
int goodG2B2_28()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Global = 1;
  dest = CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Source(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 6431A4: using guessed type int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_goodG2B2Global;

//----- (0000000000411449) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_22_good()
{
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (0000000000411463) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_65_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_loop_65b_badSink)(s - 8);
}

//----- (00000000004114D6) ----------------------------------------------------
__int64 goodG2B_74()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_loop_65b_goodG2BSink)(s);
}

//----- (0000000000411545) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_65_good()
{
  return goodG2B_74();
}

//----- (0000000000411555) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53b_badSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_53c_badSink(a1);
}

//----- (000000000041156F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53b_goodG2BSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_53c_goodG2BSink(a1);
}

//----- (0000000000411589) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_67b_badSink(v2);
}

//----- (00000000004115F9) ----------------------------------------------------
int goodG2B_75()
{
  return CWE124_Buffer_Underwrite__CWE839_rand_67b_goodG2BSink(7);
}

//----- (0000000000411621) ----------------------------------------------------
int goodB2G_18()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_67b_goodB2GSink(v2);
}

//----- (0000000000411691) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_67_good()
{
  goodG2B_75();
  return goodB2G_18();
}

//----- (00000000004116AB) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = CWE124_Buffer_Underwrite__CWE839_rand_22_badGlobal;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_22_badGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643220: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_badGlobal;

//----- (000000000041172C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  if ( CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}
// 643224: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Global;

//----- (00000000004117BF) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Global;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Global )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643228: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Global;

//----- (0000000000411846) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BGlobal;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 64322C: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BGlobal;

//----- (00000000004118C7) ----------------------------------------------------
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_22_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_cpy_22_badGlobal )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 6431A8: using guessed type int CWE124_Buffer_Underwrite__malloc_char_cpy_22_badGlobal;

//----- (000000000041192F) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431AC: using guessed type int CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Global;

//----- (000000000041199F) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Global )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431B0: using guessed type int CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Global;

//----- (0000000000411A03) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52c_badSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000411A5A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52c_goodG2BSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000411AB1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}

//----- (0000000000411B97) ----------------------------------------------------
int goodB2G1_9()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000411C8F) ----------------------------------------------------
int goodB2G2_9()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}

//----- (0000000000411D7B) ----------------------------------------------------
int goodG2B1_29()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000411E25) ----------------------------------------------------
int goodG2B2_29()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000411EC3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_11_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (0000000000411EF1) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54d_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54e_badSink(a1);
}

//----- (0000000000411F0B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54d_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54e_goodG2BSink(a1);
}

//----- (0000000000411F25) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_68b_badSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_68_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_68_badData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6432CC: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_68_badData;

//----- (0000000000411FA2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_68b_goodG2BSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_68_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_68_goodG2BData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6432D0: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_68_goodG2BData;

//----- (000000000041201F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_68b_goodB2GSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_68_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_68_goodB2GData < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6432D4: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_68_goodB2GData;

//----- (00000000004120A2) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52b_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_52c_badSink(a1);
}

//----- (00000000004120B9) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52b_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_52c_goodG2BSink(a1);
}

//----- (00000000004120D0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52b_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_52c_goodB2GSink(a1);
}

//----- (00000000004120E7) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_63b_badSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  __int64 v6; // [rsp+28h] [rbp-58h]
  __int64 v7; // [rsp+30h] [rbp-50h]
  __int64 v8; // [rsp+38h] [rbp-48h]
  __int64 v9; // [rsp+40h] [rbp-40h]
  __int64 v10; // [rsp+48h] [rbp-38h]
  __int64 v11; // [rsp+50h] [rbp-30h]
  __int64 v12; // [rsp+58h] [rbp-28h]
  __int64 v13; // [rsp+60h] [rbp-20h]
  __int64 v14; // [rsp+68h] [rbp-18h]
  int v15; // [rsp+70h] [rbp-10h]
  __int64 v16; // [rsp+78h] [rbp-8h]

  v16 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041219A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_63b_goodG2BSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  __int64 v6; // [rsp+28h] [rbp-58h]
  __int64 v7; // [rsp+30h] [rbp-50h]
  __int64 v8; // [rsp+38h] [rbp-48h]
  __int64 v9; // [rsp+40h] [rbp-40h]
  __int64 v10; // [rsp+48h] [rbp-38h]
  __int64 v11; // [rsp+50h] [rbp-30h]
  __int64 v12; // [rsp+58h] [rbp-28h]
  __int64 v13; // [rsp+60h] [rbp-20h]
  __int64 v14; // [rsp+68h] [rbp-18h]
  int v15; // [rsp+70h] [rbp-10h]
  __int64 v16; // [rsp+78h] [rbp-8h]

  v16 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041224D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54e_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 41224D: using guessed type char s[99];

//----- (00000000004122BD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54e_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 4122BD: using guessed type char s[99];

//----- (000000000041232D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_66_bad()
{
  char v1; // [rsp+0h] [rbp-40h]
  char *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  char *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  v2 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_loop_66b_badSink((__int64)&v1);
}

//----- (000000000041239F) ----------------------------------------------------
int goodG2B_76()
{
  char v1; // [rsp+0h] [rbp-40h]
  void *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  void *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  v2 = s;
  return CWE124_Buffer_Underwrite__malloc_char_loop_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000041240D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_66_good()
{
  return goodG2B_76();
}

//----- (000000000041241D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_13_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004124CF) ----------------------------------------------------
int goodG2B1_30()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000412589) ----------------------------------------------------
int goodG2B2_30()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000412637) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_13_good()
{
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (0000000000412651) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_53_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_53b_badSink(s - 8);
}

//----- (00000000004126BB) ----------------------------------------------------
int goodG2B_77()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_53b_goodG2BSink(s);
}

//----- (0000000000412721) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_53_good()
{
  return goodG2B_77();
}

//----- (0000000000412731) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_cpy_22_badGlobal = 1;
  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_cpy_22_badSource(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6431A8: using guessed type int CWE124_Buffer_Underwrite__malloc_char_cpy_22_badGlobal;

//----- (0000000000412796) ----------------------------------------------------
int goodG2B1_31()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Global = 0;
  dest = CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Source(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6431AC: using guessed type int CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B1Global;

//----- (00000000004127FB) ----------------------------------------------------
int goodG2B2_31()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Global = 1;
  dest = CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Source(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6431B0: using guessed type int CWE124_Buffer_Underwrite__malloc_char_cpy_22_goodG2B2Global;

//----- (0000000000412860) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_22_good()
{
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (000000000041287A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53b_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53c_badSink(a1);
}

//----- (0000000000412891) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53b_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53c_goodG2BSink(a1);
}

//----- (00000000004128A8) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53b_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53c_goodB2GSink(a1);
}

//----- (00000000004128BF) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52c_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000412936) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52c_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004129AD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_52c_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000412A2A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_52b_badSink(v2);
}

//----- (0000000000412A94) ----------------------------------------------------
int goodG2B_78()
{
  return CWE124_Buffer_Underwrite__CWE839_rand_52b_goodG2BSink(7);
}

//----- (0000000000412AB6) ----------------------------------------------------
int goodB2G_19()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_52b_goodB2GSink(v2);
}

//----- (0000000000412B20) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_52_good()
{
  goodG2B_78();
  return goodB2G_19();
}

//----- (0000000000412B3A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54b_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54c_badSink(a1);
}

//----- (0000000000412B54) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54b_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54c_goodG2BSink(a1);
}

//----- (0000000000412B6E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_68_bad()
{
  CWE124_Buffer_Underwrite__CWE839_negative_68_badData = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_68b_badSink();
}
// 6432CC: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_68_badData;

//----- (0000000000412B99) ----------------------------------------------------
int goodG2B_79()
{
  CWE124_Buffer_Underwrite__CWE839_negative_68_goodG2BData = 7;
  return CWE124_Buffer_Underwrite__CWE839_negative_68b_goodG2BSink();
}
// 6432D0: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_68_goodG2BData;

//----- (0000000000412BC4) ----------------------------------------------------
int goodB2G_20()
{
  CWE124_Buffer_Underwrite__CWE839_negative_68_goodB2GData = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_68b_goodB2GSink();
}
// 6432D4: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_68_goodB2GData;

//----- (0000000000412BEF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_68_good()
{
  goodG2B_79();
  return goodB2G_20();
}

//----- (0000000000412C09) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000412CD5) ----------------------------------------------------
int goodB2G_21()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000412DA7) ----------------------------------------------------
int goodG2B_80()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000412E2B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_16_good()
{
  goodB2G_21();
  return goodG2B_80();
}

//----- (0000000000412E45) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_03_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000412EEC) ----------------------------------------------------
int goodG2B1_32()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000412F8F) ----------------------------------------------------
int goodG2B2_32()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000413032) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_03_good()
{
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (000000000041304C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_14_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643120: using guessed type int globalFive;

//----- (00000000004130FE) ----------------------------------------------------
int goodG2B1_33()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643120: using guessed type int globalFive;

//----- (00000000004131B8) ----------------------------------------------------
int goodG2B2_33()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643120: using guessed type int globalFive;

//----- (0000000000413266) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_14_good()
{
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (0000000000413280) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_13_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413322) ----------------------------------------------------
int goodG2B1_34()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004133CC) ----------------------------------------------------
int goodG2B2_34()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041346A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_13_good()
{
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (0000000000413484) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52b_badSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_52c_badSink(a1);
}

//----- (000000000041349E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_52b_goodG2BSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_52c_goodG2BSink(a1);
}

//----- (00000000004134B8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_18_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000413560) ----------------------------------------------------
int goodG2B_81()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000413604) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_18_good()
{
  return goodG2B_81();
}

//----- (0000000000413614) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_53_bad()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53b_badSink(-5);
}

//----- (0000000000413636) ----------------------------------------------------
int goodG2B_82()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53b_goodG2BSink(7);
}

//----- (0000000000413658) ----------------------------------------------------
int goodB2G_22()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_53b_goodB2GSink(-5);
}

//----- (000000000041367A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_53_good()
{
  goodG2B_82();
  return goodB2G_22();
}

//----- (0000000000413694) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_51b_badSink(v2);
}

//----- (00000000004136FE) ----------------------------------------------------
int goodG2B_83()
{
  return CWE124_Buffer_Underwrite__CWE839_rand_51b_goodG2BSink(7);
}

//----- (0000000000413720) ----------------------------------------------------
int goodB2G_23()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_51b_goodB2GSink(v2);
}

//----- (000000000041378A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_51_good()
{
  goodG2B_83();
  return goodB2G_23();
}

//----- (00000000004137A4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_12_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *v3; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    dest = (char *)v3;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004138A3) ----------------------------------------------------
int goodG2B_84()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *v3; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    dest = (char *)v3;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041399E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_12_good()
{
  return goodG2B_84();
}

//----- (00000000004139AE) ----------------------------------------------------
__int64 __fastcall badSource_5(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( badStatic_1 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 6431B4: using guessed type int badStatic_1;

//----- (0000000000413A16) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_21_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  badStatic_1 = 1;
  dest = (char *)badSource_5(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6431B4: using guessed type int badStatic_1;

//----- (0000000000413A7B) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_0(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431B8: using guessed type int goodG2B1Static_0;

//----- (0000000000413AEB) ----------------------------------------------------
int goodG2B1_35()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B1Static_0 = 0;
  dest = goodG2B1Source_0(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6431B8: using guessed type int goodG2B1Static_0;

//----- (0000000000413B50) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_0(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_0 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431BC: using guessed type int goodG2B2Static_0;

//----- (0000000000413BB4) ----------------------------------------------------
int goodG2B2_35()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B2Static_0 = 1;
  dest = goodG2B2Source_0(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6431BC: using guessed type int goodG2B2Static_0;

//----- (0000000000413C19) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_21_good()
{
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (0000000000413C33) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000413CCA) ----------------------------------------------------
int goodG2B1_36()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000413D5D) ----------------------------------------------------
int goodG2B2_36()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000413DF0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_03_good()
{
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (0000000000413E0A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_14_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}
// 643120: using guessed type int globalFive;

//----- (0000000000413F0D) ----------------------------------------------------
int goodG2B1_37()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 643120: using guessed type int globalFive;

//----- (0000000000414018) ----------------------------------------------------
int goodG2B2_37()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 643120: using guessed type int globalFive;

//----- (0000000000414117) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_14_good()
{
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (0000000000414131) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_52_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_52b_badSink(s - 8);
}

//----- (000000000041419B) ----------------------------------------------------
int goodG2B_85()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_52b_goodG2BSink(s);
}

//----- (0000000000414201) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_52_good()
{
  return goodG2B_85();
}

//----- (0000000000414211) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_32_bad()
{
  __int64 v0; // rax
  __int64 v2; // [rsp+0h] [rbp-A0h]
  __int64 v3; // [rsp+8h] [rbp-98h]
  __int64 v4; // [rsp+10h] [rbp-90h]
  __int64 v5; // [rsp+18h] [rbp-88h]
  __int64 v6; // [rsp+20h] [rbp-80h]
  __int64 v7; // [rsp+28h] [rbp-78h]
  __int64 v8; // [rsp+30h] [rbp-70h]
  __int64 v9; // [rsp+38h] [rbp-68h]
  __int64 v10; // [rsp+40h] [rbp-60h]
  __int64 v11; // [rsp+48h] [rbp-58h]
  __int64 v12; // [rsp+50h] [rbp-50h]
  __int64 v13; // [rsp+58h] [rbp-48h]
  int v14; // [rsp+60h] [rbp-40h]
  __int64 v15; // [rsp+70h] [rbp-30h]
  __int64 v16; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  char *v18; // [rsp+88h] [rbp-18h]
  __int64 *v19; // [rsp+90h] [rbp-10h]
  __int64 *v20; // [rsp+98h] [rbp-8h]

  v20 = &v15;
  v19 = &v15;
  v15 = 0LL;
  v18 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v18 = (char *)s - 8;
  *v20 = (__int64)s - 8;
  v16 = *v19;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041434C) ----------------------------------------------------
int goodG2B_86()
{
  __int64 v0; // rax
  __int64 v2; // [rsp+0h] [rbp-A0h]
  __int64 v3; // [rsp+8h] [rbp-98h]
  __int64 v4; // [rsp+10h] [rbp-90h]
  __int64 v5; // [rsp+18h] [rbp-88h]
  __int64 v6; // [rsp+20h] [rbp-80h]
  __int64 v7; // [rsp+28h] [rbp-78h]
  __int64 v8; // [rsp+30h] [rbp-70h]
  __int64 v9; // [rsp+38h] [rbp-68h]
  __int64 v10; // [rsp+40h] [rbp-60h]
  __int64 v11; // [rsp+48h] [rbp-58h]
  __int64 v12; // [rsp+50h] [rbp-50h]
  __int64 v13; // [rsp+58h] [rbp-48h]
  int v14; // [rsp+60h] [rbp-40h]
  __int64 v15; // [rsp+70h] [rbp-30h]
  __int64 v16; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  void *v18; // [rsp+88h] [rbp-18h]
  __int64 *v19; // [rsp+90h] [rbp-10h]
  __int64 *v20; // [rsp+98h] [rbp-8h]

  v20 = &v15;
  v19 = &v15;
  v15 = 0LL;
  v18 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v18 = s;
  *v20 = (__int64)s;
  v16 = *v19;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000414483) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_32_good()
{
  return goodG2B_86();
}

//----- (0000000000414493) ----------------------------------------------------
int badSink_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_45_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_45_badData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6431C0: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_45_badData;

//----- (0000000000414510) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_45_badData = v2;
  return badSink_8();
}
// 6431C0: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_45_badData;

//----- (0000000000414583) ----------------------------------------------------
int goodG2BSink_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_45_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_45_goodG2BData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6431C4: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_45_goodG2BData;

//----- (0000000000414600) ----------------------------------------------------
int goodG2B_87()
{
  CWE124_Buffer_Underwrite__CWE839_rand_45_goodG2BData = 7;
  return goodG2BSink_8();
}
// 6431C4: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_45_goodG2BData;

//----- (000000000041462B) ----------------------------------------------------
int goodB2GSink_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_rand_45_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_rand_45_goodB2GData < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6431C8: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_45_goodB2GData;

//----- (00000000004146AE) ----------------------------------------------------
int goodB2G_24()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_45_goodB2GData = v2;
  return goodB2GSink_2();
}
// 6431C8: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_45_goodB2GData;

//----- (0000000000414721) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_45_good()
{
  goodG2B_87();
  return goodB2G_24();
}

//----- (000000000041473B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_09_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004147EC) ----------------------------------------------------
int goodG2B1_38()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004148A5) ----------------------------------------------------
int goodG2B2_38()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000414952) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_09_good()
{
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (000000000041496C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000414A04) ----------------------------------------------------
int goodG2B_88()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000414A98) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_18_good()
{
  return goodG2B_88();
}

//----- (0000000000414AA8) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_67b_badSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  __int64 v6; // [rsp+28h] [rbp-58h]
  __int64 v7; // [rsp+30h] [rbp-50h]
  __int64 v8; // [rsp+38h] [rbp-48h]
  __int64 v9; // [rsp+40h] [rbp-40h]
  __int64 v10; // [rsp+48h] [rbp-38h]
  __int64 v11; // [rsp+50h] [rbp-30h]
  __int64 v12; // [rsp+58h] [rbp-28h]
  __int64 v13; // [rsp+60h] [rbp-20h]
  __int64 v14; // [rsp+68h] [rbp-18h]
  int v15; // [rsp+70h] [rbp-10h]
  __int64 v16; // [rsp+78h] [rbp-8h]

  v16 = a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000414B58) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_67b_goodG2BSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  __int64 v6; // [rsp+28h] [rbp-58h]
  __int64 v7; // [rsp+30h] [rbp-50h]
  __int64 v8; // [rsp+38h] [rbp-48h]
  __int64 v9; // [rsp+40h] [rbp-40h]
  __int64 v10; // [rsp+48h] [rbp-38h]
  __int64 v11; // [rsp+50h] [rbp-30h]
  __int64 v12; // [rsp+58h] [rbp-28h]
  __int64 v13; // [rsp+60h] [rbp-20h]
  __int64 v14; // [rsp+68h] [rbp-18h]
  int v15; // [rsp+70h] [rbp-10h]
  __int64 v16; // [rsp+78h] [rbp-8h]

  v16 = a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v15) = 0;
  v1 = v16;
  *(_QWORD *)v16 = s;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v10;
  *(_QWORD *)(v1 + 64) = v11;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 88) = v14;
  *(_DWORD *)(v1 + 96) = v15;
  *(_BYTE *)(v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000414C08) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_02_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000414CAF) ----------------------------------------------------
int goodG2B1_39()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000414D52) ----------------------------------------------------
int goodG2B2_39()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000414DF5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_02_good()
{
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (0000000000414E0F) ----------------------------------------------------
__int64 __fastcall badSource_6(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( badStatic_2 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 6431CC: using guessed type int badStatic_2;

//----- (0000000000414E77) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_21_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  badStatic_2 = 1;
  dest = (char *)badSource_6(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 6431CC: using guessed type int badStatic_2;

//----- (0000000000414EEC) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_1(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_1 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431D0: using guessed type int goodG2B1Static_1;

//----- (0000000000414F5C) ----------------------------------------------------
int goodG2B1_40()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B1Static_1 = 0;
  dest = goodG2B1Source_1(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 6431D0: using guessed type int goodG2B1Static_1;

//----- (0000000000414FD1) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_1(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_1 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431D4: using guessed type int goodG2B2Static_1;

//----- (0000000000415035) ----------------------------------------------------
int goodG2B2_40()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B2Static_1 = 1;
  dest = goodG2B2Source_1(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 6431D4: using guessed type int goodG2B2Static_1;

//----- (00000000004150AA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_21_good()
{
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (00000000004150C4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_12_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *v3; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    dest = (char *)v3;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (00000000004151B3) ----------------------------------------------------
int goodG2B_89()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *v3; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    dest = (char *)v3;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000041529E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_12_good()
{
  return goodG2B_89();
}

//----- (00000000004152AE) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_63b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041532F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_63b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004153B0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_63b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000415437) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_04_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (0000000000415538) ----------------------------------------------------
int goodG2B1_41()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000415641) ----------------------------------------------------
int goodG2B2_41()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041573E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_04_good()
{
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000415758) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  char *v15; // [rsp+70h] [rbp-20h]
  char *v16; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v18; // [rsp+88h] [rbp-8h]

  v18 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v18 = (char *)s - 8;
  v16 = (char *)s - 8;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}

//----- (000000000041586C) ----------------------------------------------------
int goodG2B_90()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  _QWORD *v15; // [rsp+70h] [rbp-20h]
  void *v16; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v18; // [rsp+88h] [rbp-8h]

  v18 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v18 = s;
  v16 = s;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *v15 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v15 + 99) = 0;
  return printLine((const char *)v15);
}

//----- (000000000041597C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good()
{
  return goodG2B_90();
}

//----- (000000000041598C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_10_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000415A3D) ----------------------------------------------------
int goodG2B1_42()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643270: using guessed type int globalFalse;

//----- (0000000000415AF6) ----------------------------------------------------
int goodG2B2_42()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000415BA3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_10_good()
{
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (0000000000415BBD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53c_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_53d_badSink(a1);
}

//----- (0000000000415BD7) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53c_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_53d_goodG2BSink(a1);
}

//----- (0000000000415BF1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_52_bad()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_52b_badSink(-5);
}

//----- (0000000000415C13) ----------------------------------------------------
int goodG2B_91()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_52b_goodG2BSink(7);
}

//----- (0000000000415C35) ----------------------------------------------------
int goodB2G_25()
{
  return CWE124_Buffer_Underwrite__CWE839_negative_52b_goodB2GSink(-5);
}

//----- (0000000000415C57) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_52_good()
{
  goodG2B_91();
  return goodB2G_25();
}

//----- (0000000000415C71) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54c_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54d_badSink(a1);
}

//----- (0000000000415C8B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_54c_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54d_goodG2BSink(a1);
}

//----- (0000000000415CA5) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54e_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (0000000000415D4D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54e_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (0000000000415DF5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_67_bad()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_67b_badSink((__int64)(s - 8));
}

//----- (0000000000415E67) ----------------------------------------------------
int goodG2B_92()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_67b_goodG2BSink((__int64)s);
}

//----- (0000000000415ED5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_67_good()
{
  return goodG2B_92();
}

//----- (0000000000415EE5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_16_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000415F69) ----------------------------------------------------
int goodB2G_26()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000415FF3) ----------------------------------------------------
int goodG2B_93()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000416077) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_16_good()
{
  goodB2G_26();
  return goodG2B_93();
}

//----- (0000000000416091) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_cpy_68_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6432D8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_68_badData;

//----- (00000000004160DF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_cpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}
// 6432E0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_68_goodG2BData;

//----- (000000000041612D) ----------------------------------------------------
int badSink_9()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = (void *)CWE124_Buffer_Underwrite__malloc_char_memmove_45_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 6431D8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_45_badData;

//----- (000000000041618B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_45_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memmove_45_badData = (__int64)(s - 8);
  return badSink_9();
}
// 6431D8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_45_badData;

//----- (00000000004161FE) ----------------------------------------------------
int goodG2BSink_9()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  dest = (void *)CWE124_Buffer_Underwrite__malloc_char_memmove_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 6431E0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_45_goodG2BData;

//----- (000000000041625C) ----------------------------------------------------
int goodG2B_94()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_memmove_45_goodG2BData = (__int64)s;
  return goodG2BSink_9();
}
// 6431E0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memmove_45_goodG2BData;

//----- (00000000004162CB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_45_good()
{
  return goodG2B_94();
}

//----- (00000000004162DB) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53d_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000416332) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53d_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000416389) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_06_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041643A) ----------------------------------------------------
int goodG2B1_43()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004164F3) ----------------------------------------------------
int goodG2B2_43()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004165A0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_06_good()
{
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (00000000004165BA) ----------------------------------------------------
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badGlobal )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 643190: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_badGlobal;

//----- (0000000000416622) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643194: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B1Global;

//----- (0000000000416692) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Global )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643198: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memcpy_22_goodG2B2Global;

//----- (00000000004166F6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53c_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_53d_badSink(a1);
}

//----- (0000000000416710) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53c_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_53d_goodG2BSink(a1);
}

//----- (000000000041672A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_10_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 64311C: using guessed type int globalTrue;

//----- (00000000004167CB) ----------------------------------------------------
int goodG2B1_44()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643270: using guessed type int globalFalse;

//----- (0000000000416874) ----------------------------------------------------
int goodG2B2_44()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000416911) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_10_good()
{
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (000000000041692B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_54_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_54b_badSink((__int64)(s - 8));
}

//----- (0000000000416995) ----------------------------------------------------
int goodG2B_95()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_54b_goodG2BSink((__int64)s);
}

//----- (00000000004169FB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_54_good()
{
  return goodG2B_95();
}

//----- (0000000000416A0B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_64b_badSink(&v6);
}

//----- (0000000000416A77) ----------------------------------------------------
int goodG2B_96()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE124_Buffer_Underwrite__CWE839_rand_64b_goodG2BSink(&v1);
}

//----- (0000000000416A9B) ----------------------------------------------------
int goodB2G_27()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_64b_goodB2GSink(&v6);
}

//----- (0000000000416B07) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_64_good()
{
  goodG2B_96();
  return goodB2G_27();
}

//----- (0000000000416B21) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_14_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643120: using guessed type int globalFive;
// 416B21: using guessed type char var_80[99];

//----- (0000000000416BEC) ----------------------------------------------------
int goodG2B1_45()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643120: using guessed type int globalFive;
// 416BEC: using guessed type char var_80[99];

//----- (0000000000416CBF) ----------------------------------------------------
int goodG2B2_45()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( globalFive == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643120: using guessed type int globalFive;
// 416CBF: using guessed type char var_80[99];

//----- (0000000000416D86) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_14_good()
{
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (0000000000416DA0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_32_bad()
{
  char v1[99]; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+68h] [rbp-38h]
  __int64 v4; // [rsp+70h] [rbp-30h]
  void *s; // [rsp+78h] [rbp-28h]
  char *v6; // [rsp+80h] [rbp-20h]
  __int64 *v7; // [rsp+88h] [rbp-18h]
  __int64 *v8; // [rsp+90h] [rbp-10h]
  unsigned __int64 i; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = &v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  *v8 = (__int64)s - 8;
  v4 = *v7;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = v1[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 416DA0: using guessed type char var_A0[99];

//----- (0000000000416E9A) ----------------------------------------------------
int goodG2B_97()
{
  char v1[99]; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+68h] [rbp-38h]
  __int64 v4; // [rsp+70h] [rbp-30h]
  void *s; // [rsp+78h] [rbp-28h]
  void *v6; // [rsp+80h] [rbp-20h]
  __int64 *v7; // [rsp+88h] [rbp-18h]
  __int64 *v8; // [rsp+90h] [rbp-10h]
  unsigned __int64 i; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = &v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  *v8 = (__int64)s;
  v4 = *v7;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = v1[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 416E9A: using guessed type char var_A0[99];

//----- (0000000000416F90) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_32_good()
{
  return goodG2B_97();
}

//----- (0000000000416FA0) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (0000000000416FAB) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (0000000000416FB6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_08_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041706B) ----------------------------------------------------
int goodG2B1_46()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsFalse_4() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000417128) ----------------------------------------------------
int goodG2B2_46()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004171D9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_08_good()
{
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (00000000004171F3) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54c_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54d_badSink(a1);
}

//----- (000000000041720D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54c_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54d_goodG2BSink(a1);
}

//----- (0000000000417227) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE124_Buffer_Underwrite__CWE839_rand_65b_badSink)(v2);
}

//----- (000000000041729A) ----------------------------------------------------
int goodG2B_98()
{
  return CWE124_Buffer_Underwrite__CWE839_rand_65b_goodG2BSink(7);
}

//----- (00000000004172C5) ----------------------------------------------------
__int64 goodB2G_28()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE124_Buffer_Underwrite__CWE839_rand_65b_goodB2GSink)(v2);
}

//----- (0000000000417338) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_65_good()
{
  goodG2B_98();
  return goodB2G_28();
}

//----- (0000000000417352) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53d_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (0000000000417399) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_53d_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (00000000004173E0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_64b_badSink(void **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  void *dest; // [rsp+80h] [rbp-10h]
  void **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000417453) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_64b_goodG2BSink(void **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  void *dest; // [rsp+80h] [rbp-10h]
  void **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004174C6) ----------------------------------------------------
int badSink_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_45_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_45_badData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6431E8: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_45_badData;

//----- (0000000000417543) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_45_bad()
{
  CWE124_Buffer_Underwrite__CWE839_negative_45_badData = -5;
  return badSink_10();
}
// 6431E8: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_45_badData;

//----- (000000000041756E) ----------------------------------------------------
int goodG2BSink_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6431EC: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData;

//----- (00000000004175EB) ----------------------------------------------------
int goodG2B_99()
{
  CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData = 7;
  return goodG2BSink_10();
}
// 6431EC: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData;

//----- (0000000000417616) ----------------------------------------------------
int goodB2GSink_3()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData < 0 || v6 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v6;
  *((_DWORD *)&v1 + v6) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 6431F0: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData;

//----- (0000000000417699) ----------------------------------------------------
int goodB2G_29()
{
  CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData = -5;
  return goodB2GSink_3();
}
// 6431F0: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData;

//----- (00000000004176C4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_45_good()
{
  goodG2B_99();
  return goodB2G_29();
}

//----- (00000000004176DE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_09_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041777F) ----------------------------------------------------
int goodG2B1_47()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000417828) ----------------------------------------------------
int goodG2B2_47()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004178C5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_09_good()
{
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (00000000004178DF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_06_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000417975) ----------------------------------------------------
int goodB2G1_10()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000417A1D) ----------------------------------------------------
int goodB2G2_10()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000417AB9) ----------------------------------------------------
int goodG2B1_48()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000417B5B) ----------------------------------------------------
int goodG2B2_48()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000417BF1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_06_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (0000000000417C1F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_32_bad()
{
  char src; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+70h] [rbp-30h]
  void *dest; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  char *v6; // [rsp+88h] [rbp-18h]
  void **v7; // [rsp+90h] [rbp-10h]
  __int64 *v8; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = (void **)&v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  *v8 = (__int64)s - 8;
  dest = *v7;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000417D00) ----------------------------------------------------
int goodG2B_100()
{
  char src; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  __int64 v3; // [rsp+70h] [rbp-30h]
  void *dest; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  void *v6; // [rsp+88h] [rbp-18h]
  void **v7; // [rsp+90h] [rbp-10h]
  __int64 *v8; // [rsp+98h] [rbp-8h]

  v8 = &v3;
  v7 = (void **)&v3;
  v3 = 0LL;
  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  *v8 = (__int64)s;
  dest = *v7;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000417DDD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_32_good()
{
  return goodG2B_100();
}

//----- (0000000000417DED) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54d_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54e_badSink(a1);
}

//----- (0000000000417E07) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54d_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54e_goodG2BSink(a1);
}

//----- (0000000000417E21) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53c_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_53d_badSink(a1);
}

//----- (0000000000417E3B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_53c_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_53d_goodG2BSink(a1);
}

//----- (0000000000417E55) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_04_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 417E55: using guessed type char var_80[99];

//----- (0000000000417F1E) ----------------------------------------------------
int goodG2B1_49()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 417F1E: using guessed type char var_80[99];

//----- (0000000000417FEF) ----------------------------------------------------
int goodG2B2_49()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 417FEF: using guessed type char var_80[99];

//----- (00000000004180B4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_04_good()
{
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (00000000004180CE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_31_bad()
{
  char v1[99]; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  const char *v3; // [rsp+68h] [rbp-28h]
  char *v4; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]
  char *v6; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v4 = (char *)s - 8;
  v3 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = v1[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 4180CE: using guessed type char var_90[99];

//----- (00000000004181A7) ----------------------------------------------------
int goodG2B_101()
{
  char v1[99]; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  const char *v3; // [rsp+68h] [rbp-28h]
  void *v4; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]
  void *v6; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v4 = s;
  v3 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = v1[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 4181A7: using guessed type char var_90[99];

//----- (000000000041827C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_31_good()
{
  return goodG2B_101();
}

//----- (000000000041828C) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (0000000000418297) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (00000000004182A2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000418347) ----------------------------------------------------
int goodG2B1_50()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsFalse_5() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (00000000004183F4) ----------------------------------------------------
int goodG2B2_50()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000418495) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_08_good()
{
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (00000000004184AF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_64_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_64b_badSink((void **)&v1);
}

//----- (0000000000418519) ----------------------------------------------------
int goodG2B_102()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_64b_goodG2BSink(&v1);
}

//----- (000000000041857F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_64_good()
{
  return goodG2B_102();
}

//----- (000000000041858F) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_61b_badSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (00000000004185ED) ----------------------------------------------------
_BYTE *CWE124_Buffer_Underwrite__malloc_char_memcpy_61b_goodG2BSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (0000000000418647) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_64b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+3Ch] [rbp-14h]
  int *v8; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004186D0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_64b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+3Ch] [rbp-14h]
  int *v8; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000418759) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_64b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+3Ch] [rbp-14h]
  int *v8; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004187E8) ----------------------------------------------------
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_22_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_loop_22_badGlobal )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 643200: using guessed type int CWE124_Buffer_Underwrite__malloc_char_loop_22_badGlobal;

//----- (0000000000418850) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643204: using guessed type int CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Global;

//----- (00000000004188C0) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Global )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643208: using guessed type int CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Global;

//----- (0000000000418924) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_68_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_cpy_68_badData = (__int64)(s - 8);
  return CWE124_Buffer_Underwrite__malloc_char_cpy_68b_badSink();
}
// 6432D8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_68_badData;

//----- (0000000000418997) ----------------------------------------------------
int goodG2B_103()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_cpy_68_goodG2BData = (__int64)s;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_68b_goodG2BSink();
}
// 6432E0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_cpy_68_goodG2BData;

//----- (0000000000418A06) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_68_good()
{
  return goodG2B_103();
}

//----- (0000000000418A16) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_54_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54b_badSink(s - 8);
}

//----- (0000000000418A80) ----------------------------------------------------
int goodG2B_104()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_54b_goodG2BSink(s);
}

//----- (0000000000418AE6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_54_good()
{
  return goodG2B_104();
}

//----- (0000000000418AF6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000418B8D) ----------------------------------------------------
int goodG2B1_51()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000418C20) ----------------------------------------------------
int goodG2B2_51()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000418CB3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_02_good()
{
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (0000000000418CCD) ----------------------------------------------------
__int64 __fastcall badSource_7(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( badStatic_3 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 6431F4: using guessed type int badStatic_3;

//----- (0000000000418D35) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_21_bad()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  badStatic_3 = 1;
  v15 = badSource_7(0LL);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}
// 6431F4: using guessed type int badStatic_3;

//----- (0000000000418DFB) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_2(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_2 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431F8: using guessed type int goodG2B1Static_2;

//----- (0000000000418E6B) ----------------------------------------------------
int goodG2B1_52()
{
  _BYTE *v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  _BYTE *v15; // [rsp+68h] [rbp-8h]

  goodG2B1Static_2 = 0;
  v15 = goodG2B1Source_2(0LL);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}
// 6431F8: using guessed type int goodG2B1Static_2;

//----- (0000000000418F31) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_2(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_2 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 6431FC: using guessed type int goodG2B2Static_2;

//----- (0000000000418F95) ----------------------------------------------------
int goodG2B2_52()
{
  _BYTE *v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  _BYTE *v15; // [rsp+68h] [rbp-8h]

  goodG2B2Static_2 = 1;
  v15 = goodG2B2Source_2(0LL);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}
// 6431FC: using guessed type int goodG2B2Static_2;

//----- (000000000041905B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_21_good()
{
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (0000000000419075) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_03_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (000000000041916D) ----------------------------------------------------
int goodG2B1_53()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000419261) ----------------------------------------------------
int goodG2B2_53()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000419355) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_03_good()
{
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (000000000041936F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_67_bad()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_67b_badSink(s - 8);
}

//----- (00000000004193E1) ----------------------------------------------------
int goodG2B_105()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_67b_goodG2BSink(s);
}

//----- (000000000041944F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_67_good()
{
  return goodG2B_105();
}

//----- (000000000041945F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_18_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (0000000000419558) ----------------------------------------------------
int goodG2B_106()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041964D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_18_good()
{
  return goodG2B_106();
}

//----- (000000000041965D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (00000000004196B4) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041970B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_64b_badSink(&v1);
}

//----- (000000000041972F) ----------------------------------------------------
int goodG2B_107()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE124_Buffer_Underwrite__CWE839_negative_64b_goodG2BSink(&v1);
}

//----- (0000000000419753) ----------------------------------------------------
int goodB2G_30()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -5;
  return CWE124_Buffer_Underwrite__CWE839_negative_64b_goodB2GSink(&v1);
}

//----- (0000000000419777) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_64_good()
{
  goodG2B_107();
  return goodB2G_30();
}

//----- (0000000000419791) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_11_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000419836) ----------------------------------------------------
int goodG2B1_54()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (00000000004198E3) ----------------------------------------------------
int goodG2B2_54()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000419984) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_11_good()
{
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (000000000041999E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_22_bad()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_loop_22_badGlobal = 1;
  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_22_badSource(0LL);
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 643200: using guessed type int CWE124_Buffer_Underwrite__malloc_char_loop_22_badGlobal;
// 41999E: using guessed type char s[99];

//----- (0000000000419A2C) ----------------------------------------------------
int goodG2B1_55()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  const char *v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Global = 0;
  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Source(0LL);
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = s[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 643204: using guessed type int CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B1Global;
// 419A2C: using guessed type char s[99];

//----- (0000000000419ABA) ----------------------------------------------------
int goodG2B2_55()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  const char *v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Global = 1;
  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Source(0LL);
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = s[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 643208: using guessed type int CWE124_Buffer_Underwrite__malloc_char_loop_22_goodG2B2Global;
// 419ABA: using guessed type char s[99];

//----- (0000000000419B48) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_22_good()
{
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (0000000000419B62) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_12_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *v15; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v17; // [rsp+78h] [rbp-8h]

  v17 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v17 = (char *)s - 8;
  }
  else
  {
    v15 = malloc(0x64uLL);
    if ( !v15 )
      exit(-1);
    memset(v15, 65, 0x63uLL);
    *((_BYTE *)v15 + 99) = 0;
    v17 = (char *)v15;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v17;
  *(_QWORD *)v17 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v17[99] = 0;
  return printLine(v17);
}

//----- (0000000000419CB2) ----------------------------------------------------
int goodG2B_108()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *v15; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v17; // [rsp+78h] [rbp-8h]

  v17 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v17 = s;
  }
  else
  {
    v15 = malloc(0x64uLL);
    if ( !v15 )
      exit(-1);
    memset(v15, 65, 0x63uLL);
    *((_BYTE *)v15 + 99) = 0;
    v17 = v15;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v17;
  *v17 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v17 + 99) = 0;
  return printLine((const char *)v17);
}

//----- (0000000000419DFE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_12_good()
{
  return goodG2B_108();
}

//----- (0000000000419E0E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54d_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_54e_badSink(a1);
}

//----- (0000000000419E28) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_54d_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_loop_54e_goodG2BSink(a1);
}

//----- (0000000000419E42) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_65_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_badSink)(s - 8);
}

//----- (0000000000419EB5) ----------------------------------------------------
__int64 goodG2B_109()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_goodG2BSink)(s);
}

//----- (0000000000419F24) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_65_good()
{
  return goodG2B_109();
}

//----- (0000000000419F34) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_11_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000419FE9) ----------------------------------------------------
int goodG2B1_56()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041A0A6) ----------------------------------------------------
int goodG2B2_56()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041A157) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_11_good()
{
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (000000000041A171) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_63b_badSink(&v6);
}

//----- (000000000041A1DD) ----------------------------------------------------
int goodG2B_110()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE124_Buffer_Underwrite__CWE839_rand_63b_goodG2BSink(&v1);
}

//----- (000000000041A201) ----------------------------------------------------
int goodB2G_31()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE124_Buffer_Underwrite__CWE839_rand_63b_goodB2GSink(&v6);
}

//----- (000000000041A26D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_63_good()
{
  goodG2B_110();
  return goodB2G_31();
}

//----- (000000000041A287) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_34_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  char *v15; // [rsp+70h] [rbp-20h]
  char *v16; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v18; // [rsp+88h] [rbp-8h]

  v18 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v18 = (char *)s - 8;
  v15 = (char *)s - 8;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (000000000041A39B) ----------------------------------------------------
int goodG2B_111()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  void *v15; // [rsp+70h] [rbp-20h]
  _QWORD *v16; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v18; // [rsp+88h] [rbp-8h]

  v18 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v18 = s;
  v15 = s;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041A4AB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_34_good()
{
  return goodG2B_111();
}

//----- (000000000041A4BB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_11_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (000000000041A5C1) ----------------------------------------------------
int goodG2B1_57()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041A6CF) ----------------------------------------------------
int goodG2B2_57()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041A7D1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_11_good()
{
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (000000000041A7EB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_02_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (000000000041A8E3) ----------------------------------------------------
int goodG2B1_58()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041A9D7) ----------------------------------------------------
int goodG2B2_58()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041AACB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_02_good()
{
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (000000000041AAE5) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54d_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54e_badSink(a1);
}

//----- (000000000041AAFF) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54d_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54e_goodG2BSink(a1);
}

//----- (000000000041AB19) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_10_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 64311C: using guessed type int globalTrue;

//----- (000000000041ABCA) ----------------------------------------------------
int goodG2B1_59()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643270: using guessed type int globalFalse;

//----- (000000000041AC83) ----------------------------------------------------
int goodG2B2_59()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 64311C: using guessed type int globalTrue;

//----- (000000000041AD30) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_10_good()
{
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (000000000041AD4A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53b_badSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_53c_badSink(a1);
}

//----- (000000000041AD64) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_53b_goodG2BSink(char *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_53c_goodG2BSink(a1);
}

//----- (000000000041AD7E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_01_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041AE25) ----------------------------------------------------
int goodG2B_112()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041AEC8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_01_good()
{
  return goodG2B_112();
}

//----- (000000000041AED8) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_63b_badSink(void **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041AF3A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_63b_goodG2BSink(void **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041AF9C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000041B033) ----------------------------------------------------
int goodG2B_113()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000041B0C6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_01_good()
{
  return goodG2B_113();
}

//----- (000000000041B0D6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_10_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}
// 64311C: using guessed type int globalTrue;

//----- (000000000041B1D8) ----------------------------------------------------
int goodG2B1_60()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 643270: using guessed type int globalFalse;

//----- (000000000041B2E2) ----------------------------------------------------
int goodG2B2_60()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 64311C: using guessed type int globalTrue;

//----- (000000000041B3E0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_10_good()
{
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (000000000041B3FA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_03_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 41B3FA: using guessed type char var_80[99];

//----- (000000000041B4BA) ----------------------------------------------------
int goodG2B1_61()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 41B4BA: using guessed type char var_80[99];

//----- (000000000041B576) ----------------------------------------------------
int goodG2B2_61()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 41B576: using guessed type char var_80[99];

//----- (000000000041B632) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_03_good()
{
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (000000000041B64C) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_65_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_cpy_65b_badSink)(s - 8);
}

//----- (000000000041B6BF) ----------------------------------------------------
__int64 goodG2B_114()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE124_Buffer_Underwrite__malloc_char_cpy_65b_goodG2BSink)(s);
}

//----- (000000000041B72E) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_65_good()
{
  return goodG2B_114();
}

//----- (000000000041B73E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54c_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54d_badSink(a1);
}

//----- (000000000041B758) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_54c_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_54d_goodG2BSink(a1);
}

//----- (000000000041B772) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_18_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 41B772: using guessed type char var_80[99];

//----- (000000000041B833) ----------------------------------------------------
int goodG2B_115()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  const char *v4; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v4[i] = v1[i];
  *((_BYTE *)v4 + 99) = 0;
  return printLine(v4);
}
// 41B833: using guessed type char var_80[99];

//----- (000000000041B8F0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_18_good()
{
  return goodG2B_115();
}

//----- (000000000041B900) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_41_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000041B9A8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_41_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_41_badSink((__int64)(s - 8));
}

//----- (000000000041BA12) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_41_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000041BABA) ----------------------------------------------------
int goodG2B_116()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_41_goodG2BSink((__int64)s);
}

//----- (000000000041BB20) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_41_good()
{
  return goodG2B_116();
}

//----- (000000000041BB30) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_01_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (000000000041BC28) ----------------------------------------------------
int goodG2B_117()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (000000000041BD1C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_01_good()
{
  return goodG2B_117();
}

//----- (000000000041BD2C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53d_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000041BDD4) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53d_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000041BE7C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52c_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041BED3) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_52c_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041BF2A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_51b_badSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041BF81) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_51b_goodG2BSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041BFD8) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52c_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041C04F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52c_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041C0C6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_52c_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041C143) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53b_badSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_53c_badSink(a1);
}

//----- (000000000041C15D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_53b_goodG2BSink(__int64 a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_53c_goodG2BSink(a1);
}

//----- (000000000041C177) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_67b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041C1D6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_67b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041C235) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_64_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_64b_badSink((__int64 *)&v1);
}

//----- (000000000041C29F) ----------------------------------------------------
int goodG2B_118()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_64b_goodG2BSink((__int64 *)&v1);
}

//----- (000000000041C305) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_64_good()
{
  return goodG2B_118();
}

//----- (000000000041C315) ----------------------------------------------------
int badSink_11()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 643210: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;
// 41C315: using guessed type char s[99];

//----- (000000000041C38C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_45_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_loop_45_badData = (__int64)(s - 8);
  return badSink_11();
}
// 643210: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;

//----- (000000000041C3FF) ----------------------------------------------------
int goodG2BSink_11()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_45_goodG2BData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 643218: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_45_goodG2BData;
// 41C3FF: using guessed type char s[99];

//----- (000000000041C476) ----------------------------------------------------
int goodG2B_119()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE124_Buffer_Underwrite__malloc_char_loop_45_goodG2BData = (__int64)s;
  return goodG2BSink_11();
}
// 643218: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_45_goodG2BData;

//----- (000000000041C4E5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_45_good()
{
  return goodG2B_119();
}

//----- (000000000041C4F5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_06_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 41C4F5: using guessed type char var_80[99];

//----- (000000000041C5BF) ----------------------------------------------------
int goodG2B1_62()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 41C5BF: using guessed type char var_80[99];

//----- (000000000041C691) ----------------------------------------------------
int goodG2B2_62()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (const char *)s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 41C691: using guessed type char var_80[99];

//----- (000000000041C757) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_06_good()
{
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (000000000041C771) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_68b_badSink()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_68_badData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 643280: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_68_badData;
// 41C771: using guessed type char s[99];

//----- (000000000041C7E8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_68b_goodG2BSink()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_68_goodG2BData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 643288: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_loop_68_goodG2BData;
// 41C7E8: using guessed type char s[99];

//----- (000000000041C85F) ----------------------------------------------------
int __fastcall badSink_12(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041C8B6) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_44_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_12)(s - 8);
}

//----- (000000000041C929) ----------------------------------------------------
int __fastcall goodG2BSink_12(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (000000000041C980) ----------------------------------------------------
__int64 goodG2B_120()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_12)(s);
}

//----- (000000000041C9EF) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_ncpy_44_good()
{
  return goodG2B_120();
}

//----- (000000000041C9FF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_17_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000041CAA9) ----------------------------------------------------
int goodG2B_121()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000041CB4F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_17_good()
{
  return goodG2B_121();
}

//----- (000000000041CB5F) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_67b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 41CB5F: using guessed type char s[99];

//----- (000000000041CBE0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_67b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 41CBE0: using guessed type char s[99];

//----- (000000000041CC61) ----------------------------------------------------
int __fastcall badSink_13(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (000000000041CCA8) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_13)(s - 8);
}

//----- (000000000041CD1B) ----------------------------------------------------
int __fastcall goodG2BSink_13(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (000000000041CD62) ----------------------------------------------------
__int64 goodG2B_122()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_13)(s);
}

//----- (000000000041CDD1) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_cpy_44_good()
{
  return goodG2B_122();
}

//----- (000000000041CDE1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041CEC1) ----------------------------------------------------
int goodB2G1_11()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041CFB3) ----------------------------------------------------
int goodB2G2_11()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041D099) ----------------------------------------------------
int goodG2B1_63()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = 7;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041D13D) ----------------------------------------------------
int goodG2B2_63()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = 7;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041D1D5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_14_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041D203) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-60h]
  __int64 v7; // [rsp+8h] [rbp-58h]
  __int64 v8; // [rsp+10h] [rbp-50h]
  __int64 v9; // [rsp+18h] [rbp-48h]
  __int64 v10; // [rsp+20h] [rbp-40h]
  int v11; // [rsp+2Ch] [rbp-34h]
  int v12; // [rsp+30h] [rbp-30h]
  int v13; // [rsp+34h] [rbp-2Ch]
  int *v14; // [rsp+38h] [rbp-28h]
  int *v15; // [rsp+40h] [rbp-20h]
  int i; // [rsp+4Ch] [rbp-14h]

  v15 = &v11;
  v14 = &v11;
  v11 = -1;
  v13 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v13 = v2;
  *v15 = v2;
  v12 = *v14;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000041D2F8) ----------------------------------------------------
int goodG2B_123()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v10 = &v6;
  v9 = &v6;
  v8 = 7;
  v6 = 7;
  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041D3A5) ----------------------------------------------------
int goodB2G_32()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-60h]
  __int64 v7; // [rsp+8h] [rbp-58h]
  __int64 v8; // [rsp+10h] [rbp-50h]
  __int64 v9; // [rsp+18h] [rbp-48h]
  __int64 v10; // [rsp+20h] [rbp-40h]
  int v11; // [rsp+2Ch] [rbp-34h]
  int v12; // [rsp+30h] [rbp-30h]
  int v13; // [rsp+34h] [rbp-2Ch]
  int *v14; // [rsp+38h] [rbp-28h]
  int *v15; // [rsp+40h] [rbp-20h]
  int i; // [rsp+4Ch] [rbp-14h]

  v15 = &v11;
  v14 = &v11;
  v11 = -1;
  v13 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v13 = v2;
  *v15 = v2;
  v12 = *v14;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000041D4A0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_32_good()
{
  goodG2B_123();
  return goodB2G_32();
}

//----- (000000000041D4BA) ----------------------------------------------------
int __fastcall badSink_14(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041D531) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_14)(v2);
}

//----- (000000000041D5A4) ----------------------------------------------------
int __fastcall goodG2BSink_14(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041D61B) ----------------------------------------------------
int goodG2B_124()
{
  return goodG2BSink_14(7);
}

//----- (000000000041D646) ----------------------------------------------------
int __fastcall goodB2GSink_4(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041D6C3) ----------------------------------------------------
__int64 goodB2G_33()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_4)(v2);
}

//----- (000000000041D736) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_rand_44_good()
{
  goodG2B_124();
  return goodB2G_33();
}

//----- (000000000041D750) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_61_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_ncpy_61b_badSource();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041D7BB) ----------------------------------------------------
int goodG2B_125()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = CWE124_Buffer_Underwrite__malloc_char_ncpy_61b_goodG2BSource();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000041D826) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_61_good()
{
  return goodG2B_125();
}

//----- (000000000041D836) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_64b_badSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+78h] [rbp-18h]
  __int64 *v5; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v5 = a1;
  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 41D836: using guessed type char s[99];

//----- (000000000041D8C2) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_64b_goodG2BSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+78h] [rbp-18h]
  __int64 *v5; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v5 = a1;
  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 41D8C2: using guessed type char s[99];

//----- (000000000041D94E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_67b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041D9CB) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_67b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041DA48) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_67b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041DACB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_07_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_1 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643100: using guessed type int staticFive_1;

//----- (000000000041DB7D) ----------------------------------------------------
int goodG2B1_64()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_1 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643100: using guessed type int staticFive_1;

//----- (000000000041DC37) ----------------------------------------------------
int goodG2B2_64()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_1 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643100: using guessed type int staticFive_1;

//----- (000000000041DCE5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_07_good()
{
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041DCFF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000041DDDB) ----------------------------------------------------
int goodB2G1_12()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000041DEC9) ----------------------------------------------------
int goodB2G2_12()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v12 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (000000000041DFAB) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041E04B) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041E0DF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_04_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041E10D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_54_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54b_badSink(s - 8);
}

//----- (000000000041E177) ----------------------------------------------------
int goodG2B_126()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_54b_goodG2BSink(s);
}

//----- (000000000041E1DD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_54_good()
{
  return goodG2B_126();
}

//----- (000000000041E1ED) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_64_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_loop_64b_badSink((__int64 *)&v1);
}

//----- (000000000041E257) ----------------------------------------------------
int goodG2B_127()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_loop_64b_goodG2BSink((__int64 *)&v1);
}

//----- (000000000041E2BD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_64_good()
{
  return goodG2B_127();
}

//----- (000000000041E2CD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_61_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE124_Buffer_Underwrite__malloc_char_cpy_61b_badSource();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000041E328) ----------------------------------------------------
int goodG2B_128()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = CWE124_Buffer_Underwrite__malloc_char_cpy_61b_goodG2BSource();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000041E383) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_61_good()
{
  return goodG2B_128();
}

//----- (000000000041E393) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_51b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000041E43B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memcpy_51b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000041E4E3) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_65b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (000000000041E52A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_65b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (000000000041E571) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_67b_badSink(void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041E5D0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_67b_goodG2BSink(void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041E62F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_2 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643104: using guessed type int staticFive_2;

//----- (000000000041E6D1) ----------------------------------------------------
int goodG2B1_66()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_2 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643104: using guessed type int staticFive_2;

//----- (000000000041E77B) ----------------------------------------------------
int goodG2B2_66()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_2 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643104: using guessed type int staticFive_2;

//----- (000000000041E819) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_07_good()
{
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041E833) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_04_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041E8E3) ----------------------------------------------------
int goodG2B1_67()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041E99B) ----------------------------------------------------
int goodG2B2_67()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041EA47) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_04_good()
{
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000041EA61) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_31_bad()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *dest; // [rsp+70h] [rbp-20h]
  char *v4; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v4 = (char *)s - 8;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041EB21) ----------------------------------------------------
int goodG2B_129()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *dest; // [rsp+70h] [rbp-20h]
  void *v4; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v4 = s;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000041EBDD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_31_good()
{
  return goodG2B_129();
}

//----- (000000000041EBED) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_67_bad()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_67b_badSink((__int64)(s - 8));
}

//----- (000000000041EC5F) ----------------------------------------------------
int goodG2B_130()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_loop_67b_goodG2BSink((__int64)s);
}

//----- (000000000041ECCD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_67_good()
{
  return goodG2B_130();
}

//----- (000000000041ECDD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = -5;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041ED75) ----------------------------------------------------
int goodB2G1_13()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = -5;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041EE1F) ----------------------------------------------------
int goodB2G2_13()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = -5;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041EEBD) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = 7;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041EF61) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
    v7 = 7;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 643120: using guessed type int globalFive;

//----- (000000000041EFF9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_14_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000041F027) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_22_badGlobal = 1;
  return CWE124_Buffer_Underwrite__CWE839_rand_22_badSink(v2);
}
// 643220: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_badGlobal;

//----- (000000000041F09B) ----------------------------------------------------
int goodB2G1_14()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Global = 0;
  return CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Sink(v2);
}
// 643224: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G1Global;

//----- (000000000041F10F) ----------------------------------------------------
int goodB2G2_14()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Global = 1;
  return CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Sink(v2);
}
// 643228: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_goodB2G2Global;

//----- (000000000041F183) ----------------------------------------------------
int goodG2B_131()
{
  CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BGlobal = 1;
  return CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BSink(7);
}
// 64322C: using guessed type int CWE124_Buffer_Underwrite__CWE839_rand_22_goodG2BGlobal;

//----- (000000000041F1AF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_22_good()
{
  goodB2G1_14();
  goodB2G2_14();
  return goodG2B_131();
}

//----- (000000000041F1D3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_32_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v10 = &v6;
  v9 = &v6;
  v8 = -5;
  v6 = -5;
  v7 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041F280) ----------------------------------------------------
int goodG2B_132()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  v10 = &v6;
  v9 = &v6;
  v8 = 7;
  v6 = 7;
  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041F32D) ----------------------------------------------------
int goodB2G_34()
{
  int v1; // [rsp+2Ch] [rbp-24h]
  int v2; // [rsp+30h] [rbp-20h]
  int v3; // [rsp+34h] [rbp-1Ch]
  int *v4; // [rsp+38h] [rbp-18h]
  int *v5; // [rsp+40h] [rbp-10h]

  v5 = &v1;
  v4 = &v1;
  v3 = -5;
  v1 = -5;
  v2 = -5;
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (000000000041F3E0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_32_good()
{
  goodG2B_132();
  return goodB2G_34();
}

//----- (000000000041F3FA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_67_bad()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_67b_badSink(s - 8);
}

//----- (000000000041F46C) ----------------------------------------------------
int goodG2B_133()
{
  _BYTE *s; // [rsp+10h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_memmove_67b_goodG2BSink(s);
}

//----- (000000000041F4DA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_67_good()
{
  return goodG2B_133();
}

//----- (000000000041F4EA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_63_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_63b_badSink((__int64 *)&v1);
}

//----- (000000000041F554) ----------------------------------------------------
int goodG2B_134()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_memcpy_63b_goodG2BSink((__int64 *)&v1);
}

//----- (000000000041F5BA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_63_good()
{
  return goodG2B_134();
}

//----- (000000000041F5CA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_67b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041F647) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_67b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041F6C4) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_67b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v2 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000041F747) ----------------------------------------------------
__int64 __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_22_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_memmove_22_badGlobal )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 643230: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memmove_22_badGlobal;

//----- (000000000041F7AF) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643234: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Global;

//----- (000000000041F81F) ----------------------------------------------------
_BYTE *__fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Global )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643238: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Global;

//----- (000000000041F883) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54d_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54e_badSink(a1);
}

//----- (000000000041F89A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54d_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54e_goodG2BSink(a1);
}

//----- (000000000041F8B1) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54d_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54e_goodB2GSink(a1);
}

//----- (000000000041F8C8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041F9A8) ----------------------------------------------------
int goodB2G1_15()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041FA9A) ----------------------------------------------------
int goodB2G2_15()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041FB80) ----------------------------------------------------
int goodG2B1_69()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = 7;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041FC24) ----------------------------------------------------
int goodG2B2_69()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = 7;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041FCBC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_13_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (000000000041FCEA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_04_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041FD7E) ----------------------------------------------------
int goodB2G1_16()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (000000000041FE24) ----------------------------------------------------
int goodB2G2_16()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (000000000041FEBE) ----------------------------------------------------
int goodG2B1_70()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041FF5E) ----------------------------------------------------
int goodG2B2_70()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000041FFF2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_04_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (0000000000420020) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_31_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = -5;
  v7 = -5;
  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004200AE) ----------------------------------------------------
int goodG2B_135()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 7;
  v7 = 7;
  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000042013C) ----------------------------------------------------
int goodB2G_35()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (00000000004201D0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_31_good()
{
  goodG2B_135();
  return goodB2G_35();
}

//----- (00000000004201EA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_15_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000420292) ----------------------------------------------------
int goodG2B1_71()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000420336) ----------------------------------------------------
int goodG2B2_71()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004203DA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_15_good()
{
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (00000000004203F4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000420495) ----------------------------------------------------
int goodG2B1_72()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (000000000042053E) ----------------------------------------------------
int goodG2B2_72()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (00000000004205DB) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_06_good()
{
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (00000000004205F5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-50h]
  __int64 v7; // [rsp+8h] [rbp-48h]
  __int64 v8; // [rsp+10h] [rbp-40h]
  __int64 v9; // [rsp+18h] [rbp-38h]
  __int64 v10; // [rsp+20h] [rbp-30h]
  int v11; // [rsp+30h] [rbp-20h]
  int v12; // [rsp+34h] [rbp-1Ch]
  int v13; // [rsp+38h] [rbp-18h]
  int i; // [rsp+3Ch] [rbp-14h]

  v13 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v13 = v2;
  v12 = v2;
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (00000000004206CB) ----------------------------------------------------
int goodG2B_136()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 7;
  v7 = 7;
  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000420759) ----------------------------------------------------
int goodB2G_36()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-50h]
  __int64 v7; // [rsp+8h] [rbp-48h]
  __int64 v8; // [rsp+10h] [rbp-40h]
  __int64 v9; // [rsp+18h] [rbp-38h]
  __int64 v10; // [rsp+20h] [rbp-30h]
  int v11; // [rsp+30h] [rbp-20h]
  int v12; // [rsp+34h] [rbp-1Ch]
  int v13; // [rsp+38h] [rbp-18h]
  int i; // [rsp+3Ch] [rbp-14h]

  v13 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v13 = v2;
  v12 = v2;
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000420835) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_31_good()
{
  goodG2B_136();
  return goodB2G_36();
}

//----- (000000000042084F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_memmove_22_badGlobal = 1;
  dest = (void *)CWE124_Buffer_Underwrite__malloc_char_memmove_22_badSource(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643230: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memmove_22_badGlobal;

//----- (00000000004208C4) ----------------------------------------------------
int goodG2B1_73()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Global = 0;
  dest = CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Source(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643234: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B1Global;

//----- (0000000000420939) ----------------------------------------------------
int goodG2B2_73()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Global = 1;
  dest = CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Source(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643238: using guessed type int CWE124_Buffer_Underwrite__malloc_char_memmove_22_goodG2B2Global;

//----- (00000000004209AE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_22_good()
{
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (00000000004209C8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_10_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 64311C: using guessed type int globalTrue;
// 4209C8: using guessed type char var_80[99];

//----- (0000000000420A92) ----------------------------------------------------
int goodG2B1_74()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643270: using guessed type int globalFalse;
// 420A92: using guessed type char var_80[99];

//----- (0000000000420B64) ----------------------------------------------------
int goodG2B2_74()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( globalTrue )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 64311C: using guessed type int globalTrue;
// 420B64: using guessed type char var_80[99];

//----- (0000000000420C2A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_10_good()
{
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (0000000000420C44) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_15_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000420CEC) ----------------------------------------------------
int goodG2B1_75()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000420D90) ----------------------------------------------------
int goodG2B2_75()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000420E34) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_15_good()
{
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (0000000000420E4E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_17_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+68h] [rbp-18h]
  char *v16; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  v16 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (0000000000420F59) ----------------------------------------------------
int goodG2B_137()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+68h] [rbp-18h]
  _QWORD *v16; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  v16 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000421060) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_17_good()
{
  return goodG2B_137();
}

//----- (0000000000421070) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 64324C: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal;

//----- (00000000004210F1) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  if ( CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}
// 643250: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global;

//----- (0000000000421184) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643254: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global;

//----- (000000000042120B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal;
  if ( CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643258: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal;

//----- (000000000042128C) ----------------------------------------------------
int __fastcall badSink_15(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (0000000000421334) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_44_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_15)(s - 8);
}

//----- (00000000004213A7) ----------------------------------------------------
int __fastcall goodG2BSink_15(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  *(_QWORD *)a1 = s;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_DWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}

//----- (000000000042144F) ----------------------------------------------------
__int64 goodG2B_138()
{
  _BYTE *s; // [rsp+8h] [rbp-18h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_15)(s);
}

//----- (00000000004214BE) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_44_good()
{
  return goodG2B_138();
}

//----- (00000000004214CE) ----------------------------------------------------
int __fastcall badSink_16(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = badStatic_4;
  if ( badStatic_4 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 64323C: using guessed type int badStatic_4;

//----- (000000000042154F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_4 = 1;
  return badSink_16(v2);
}
// 64323C: using guessed type int badStatic_4;

//----- (00000000004215C3) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}
// 643240: using guessed type int goodB2G1Static_0;

//----- (0000000000421656) ----------------------------------------------------
int goodB2G1_17()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(v2);
}
// 643240: using guessed type int goodB2G1Static_0;

//----- (00000000004216CA) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643244: using guessed type int goodB2G2Static_0;

//----- (0000000000421751) ----------------------------------------------------
int goodB2G2_17()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(v2);
}
// 643244: using guessed type int goodB2G2Static_0;

//----- (00000000004217C5) ----------------------------------------------------
int __fastcall goodG2BSink_16(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = a1;
      *((_DWORD *)&v2 + a1) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v2 + i));
    }
  }
  return result;
}
// 643248: using guessed type int goodG2BStatic_0;

//----- (0000000000421846) ----------------------------------------------------
int goodG2B_139()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_16(7);
}
// 643248: using guessed type int goodG2BStatic_0;

//----- (0000000000421872) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_21_good()
{
  goodB2G1_17();
  goodB2G2_17();
  return goodG2B_139();
}

//----- (0000000000421896) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000421960) ----------------------------------------------------
int goodB2G1_18()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000421A30) ----------------------------------------------------
int goodB2G2_18()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000421B00) ----------------------------------------------------
int goodG2B1_76()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000421B82) ----------------------------------------------------
int goodG2B2_76()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000421C04) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_03_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (0000000000421C32) ----------------------------------------------------
__int64 badSource_8()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (0000000000421C90) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_42_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)badSource_8();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000421CFB) ----------------------------------------------------
_BYTE *goodG2BSource_4()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (0000000000421D55) ----------------------------------------------------
int goodG2B_140()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = goodG2BSource_4();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000421DC0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_42_good()
{
  return goodG2B_140();
}

//----- (0000000000421DD0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54d_badSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54e_badSink(a1);
}

//----- (0000000000421DEA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54d_goodG2BSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54e_goodG2BSink(a1);
}

//----- (0000000000421E04) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_13_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000421F07) ----------------------------------------------------
int goodG2B1_77()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422012) ----------------------------------------------------
int goodG2B2_77()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422111) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_13_good()
{
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (000000000042212B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (00000000004221F7) ----------------------------------------------------
int goodB2G_37()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (00000000004222C9) ----------------------------------------------------
int goodG2B_141()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000042234D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_18_good()
{
  goodB2G_37();
  return goodG2B_141();
}

//----- (0000000000422367) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_51b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004223DE) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_51b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000422455) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_51b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004224D2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_13_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422584) ----------------------------------------------------
int goodG2B1_78()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042263E) ----------------------------------------------------
int goodG2B2_78()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004226EC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_13_good()
{
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (0000000000422706) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_63_bad()
{
  char *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_loop_63b_badSink((__int64 *)&v1);
}

//----- (0000000000422770) ----------------------------------------------------
int goodG2B_142()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  return CWE124_Buffer_Underwrite__malloc_char_loop_63b_goodG2BSink((__int64 *)&v1);
}

//----- (00000000004227D6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_63_good()
{
  return goodG2B_142();
}

//----- (00000000004227E6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_22_bad()
{
  CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal = 1;
  return CWE124_Buffer_Underwrite__CWE839_negative_22_badSink(-5);
}
// 64324C: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal;

//----- (0000000000422812) ----------------------------------------------------
int goodB2G1_19()
{
  CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global = 0;
  return CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Sink(-5);
}
// 643250: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global;

//----- (000000000042283E) ----------------------------------------------------
int goodB2G2_19()
{
  CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global = 1;
  return CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Sink(-5);
}
// 643254: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global;

//----- (000000000042286A) ----------------------------------------------------
int goodG2B_143()
{
  CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal = 1;
  return CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BSink(7);
}
// 643258: using guessed type int CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal;

//----- (0000000000422896) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_22_good()
{
  goodB2G1_19();
  goodB2G2_19();
  return goodG2B_143();
}

//----- (00000000004228BA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-50h]
  __int64 v7; // [rsp+8h] [rbp-48h]
  __int64 v8; // [rsp+10h] [rbp-40h]
  __int64 v9; // [rsp+18h] [rbp-38h]
  __int64 v10; // [rsp+20h] [rbp-30h]
  int j; // [rsp+34h] [rbp-1Ch]
  int i; // [rsp+38h] [rbp-18h]
  int v13; // [rsp+3Ch] [rbp-14h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v13 = v2;
  }
  else
  {
    v13 = 7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v13 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v13;
      *((_DWORD *)&v6 + v13) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  else
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v13 < 0 || v13 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v13;
      *((_DWORD *)&v6 + v13) = 1;
      for ( j = 0; j <= 9; ++j )
        result = printIntLine(*((_DWORD *)&v6 + j));
    }
  }
  return result;
}

//----- (0000000000422A1B) ----------------------------------------------------
int goodB2G_38()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  __int64 v11; // [rsp+0h] [rbp-50h]
  __int64 v12; // [rsp+8h] [rbp-48h]
  __int64 v13; // [rsp+10h] [rbp-40h]
  __int64 v14; // [rsp+18h] [rbp-38h]
  __int64 v15; // [rsp+20h] [rbp-30h]
  int j; // [rsp+34h] [rbp-1Ch]
  int i; // [rsp+38h] [rbp-18h]
  int v18; // [rsp+3Ch] [rbp-14h]

  v18 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v18 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v18 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v11 = 0LL;
    v12 = 0LL;
    v13 = 0LL;
    v14 = 0LL;
    v15 = 0LL;
    if ( v18 < 0 || v18 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v18;
      *((_DWORD *)&v11 + v18) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v11 + i));
    }
  }
  else
  {
    v11 = 0LL;
    v12 = 0LL;
    v13 = 0LL;
    v14 = 0LL;
    v15 = 0LL;
    if ( v18 < 0 || v18 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v18;
      *((_DWORD *)&v11 + v18) = 1;
      for ( j = 0; j <= 9; ++j )
        result = printIntLine(*((_DWORD *)&v11 + j));
    }
  }
  return result;
}

//----- (0000000000422BC5) ----------------------------------------------------
int goodG2B_144()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int j; // [rsp+34h] [rbp-Ch]
  int i; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v8 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( j = 0; j <= 9; ++j )
        result = printIntLine(*((_DWORD *)&v1 + j));
    }
  }
  return result;
}

//----- (0000000000422CD8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_12_good()
{
  goodB2G_38();
  return goodG2B_144();
}

//----- (0000000000422CF2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_15_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000422D8A) ----------------------------------------------------
int goodG2B1_79()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000422E1E) ----------------------------------------------------
int goodG2B2_79()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000422EB2) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_15_good()
{
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (0000000000422ECC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_05_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue_4 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643108: using guessed type int staticTrue_4;

//----- (0000000000422F7D) ----------------------------------------------------
int goodG2B1_80()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFalse_4 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 64325C: using guessed type int staticFalse_4;

//----- (0000000000423036) ----------------------------------------------------
int goodG2B2_80()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue_4 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}
// 643108: using guessed type int staticTrue_4;

//----- (00000000004230E3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_05_good()
{
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (00000000004230FD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_07_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_3 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 64310C: using guessed type int staticFive_3;

//----- (00000000004231AF) ----------------------------------------------------
int goodG2B1_81()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_3 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 64310C: using guessed type int staticFive_3;

//----- (0000000000423269) ----------------------------------------------------
int goodG2B2_81()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_3 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 64310C: using guessed type int staticFive_3;

//----- (0000000000423317) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_07_good()
{
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000423331) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_41_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000423388) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_41_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_41_badSink(s - 8);
}

//----- (00000000004233F2) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_41_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(a1, &s, 0x63uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000423449) ----------------------------------------------------
int goodG2B_145()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_41_goodG2BSink(s);
}

//----- (00000000004234AF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_41_good()
{
  return goodG2B_145();
}

//----- (00000000004234BF) ----------------------------------------------------
__int64 badSource_9()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (000000000042351D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_42_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)badSource_9();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (0000000000423578) ----------------------------------------------------
_BYTE *goodG2BSource_5()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (00000000004235D2) ----------------------------------------------------
int goodG2B_146()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = goodG2BSource_5();
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (000000000042362D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_42_good()
{
  return goodG2B_146();
}

//----- (000000000042363D) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54d_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54e_badSink(a1);
}

//----- (0000000000423654) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54d_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54e_goodG2BSink(a1);
}

//----- (000000000042366B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54d_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54e_goodB2GSink(a1);
}

//----- (0000000000423682) ----------------------------------------------------
__int64 __fastcall badSource_10(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( badStatic_5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = (__int64)(s - 8);
  }
  return v2;
}
// 643260: using guessed type int badStatic_5;

//----- (00000000004236EA) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_21_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  badStatic_5 = 1;
  dest = (void *)badSource_10(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643260: using guessed type int badStatic_5;

//----- (000000000042375F) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_3(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_3 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643264: using guessed type int goodG2B1Static_3;

//----- (00000000004237CF) ----------------------------------------------------
int goodG2B1_82()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  goodG2B1Static_3 = 0;
  dest = goodG2B1Source_3(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643264: using guessed type int goodG2B1Static_3;

//----- (0000000000423844) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_3(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-18h]
  _BYTE *s; // [rsp+18h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_3 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    s[99] = 0;
    v2 = s;
  }
  return v2;
}
// 643268: using guessed type int goodG2B2Static_3;

//----- (00000000004238A8) ----------------------------------------------------
int goodG2B2_82()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *dest; // [rsp+68h] [rbp-8h]

  goodG2B2Static_3 = 1;
  dest = goodG2B2Source_3(0LL);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &s, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 643268: using guessed type int goodG2B2Static_3;

//----- (000000000042391D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_21_good()
{
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (0000000000423937) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_34_bad()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *v3; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v3 = (char *)s - 8;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004239F7) ----------------------------------------------------
int goodG2B_147()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *v3; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v3 = s;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000423AB3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_34_good()
{
  return goodG2B_147();
}

//----- (0000000000423AC3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_61_bad()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_61b_badSource();
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}

//----- (0000000000423B7F) ----------------------------------------------------
int goodG2B_148()
{
  _BYTE *v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  _BYTE *v15; // [rsp+68h] [rbp-8h]

  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_61b_goodG2BSource();
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v15[99] = 0;
  return printLine(v15);
}

//----- (0000000000423C3B) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_61_good()
{
  return goodG2B_148();
}

//----- (0000000000423C4B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_51b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000423CC2) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_51b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000423D39) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_51b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000423DB6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000423E19) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strncpy(dest, &s, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (0000000000423E7C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = -5;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423F14) ----------------------------------------------------
int goodB2G1_20()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = -5;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423FBE) ----------------------------------------------------
int goodB2G2_20()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = -5;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042405C) ----------------------------------------------------
int goodG2B1_83()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = 7;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424100) ----------------------------------------------------
int goodG2B2_83()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = 7;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F68: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424198) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_13_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (00000000004241C6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000424290) ----------------------------------------------------
int goodB2G1_21()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000424360) ----------------------------------------------------
int goodB2G2_21()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000424430) ----------------------------------------------------
int goodG2B1_84()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004244B2) ----------------------------------------------------
int goodG2B2_84()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000424534) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_02_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (0000000000424562) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_63b_badSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 424562: using guessed type char s[99];

//----- (00000000004245E6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_63b_goodG2BSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v4) = s[i];
  *(_BYTE *)(v4 + 99) = 0;
  return printLine((const char *)v4);
}
// 4245E6: using guessed type char s[99];

//----- (000000000042466A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_07_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( staticFive_4 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}
// 643110: using guessed type int staticFive_4;

//----- (000000000042476D) ----------------------------------------------------
int goodG2B1_85()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( staticFive_4 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 643110: using guessed type int staticFive_4;

//----- (0000000000424878) ----------------------------------------------------
int goodG2B2_85()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( staticFive_4 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 643110: using guessed type int staticFive_4;

//----- (0000000000424977) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_07_good()
{
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000424991) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_05_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue_5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643114: using guessed type int staticTrue_5;

//----- (0000000000424A32) ----------------------------------------------------
int goodG2B1_86()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticFalse_5 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 64326C: using guessed type int staticFalse_5;

//----- (0000000000424ADB) ----------------------------------------------------
int goodG2B2_86()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue_5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}
// 643114: using guessed type int staticTrue_5;

//----- (0000000000424B78) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_05_good()
{
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000424B92) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_41_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (0000000000424BD9) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_41_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_41_badSink(s - 8);
}

//----- (0000000000424C43) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_41_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (0000000000424C8A) ----------------------------------------------------
int goodG2B_149()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_41_goodG2BSink(s);
}

//----- (0000000000424CF0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_41_good()
{
  return goodG2B_149();
}

//----- (0000000000424D00) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_17_bad()
{
  char v1[99]; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 j; // [rsp+78h] [rbp-18h]
  const char *v5; // [rsp+80h] [rbp-10h]
  int i; // [rsp+8Ch] [rbp-4h]

  v5 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( j = 0LL; j <= 0x63; ++j )
    v5[j] = v1[j];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 424D00: using guessed type char var_90[99];

//----- (0000000000424DDC) ----------------------------------------------------
int goodG2B_150()
{
  char v1[99]; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 j; // [rsp+78h] [rbp-18h]
  const char *v5; // [rsp+80h] [rbp-10h]
  int i; // [rsp+8Ch] [rbp-4h]

  v5 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( j = 0LL; j <= 0x63; ++j )
    v5[j] = v1[j];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 424DDC: using guessed type char var_90[99];

//----- (0000000000424EB4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_17_good()
{
  return goodG2B_150();
}

//----- (0000000000424EC4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000424FA2) ----------------------------------------------------
int goodB2G1_22()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}
// 64311C: using guessed type int globalTrue;
// 643270: using guessed type int globalFalse;

//----- (0000000000425092) ----------------------------------------------------
int goodB2G2_22()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000425176) ----------------------------------------------------
int goodG2B1_87()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;
// 643270: using guessed type int globalFalse;

//----- (0000000000425218) ----------------------------------------------------
int goodG2B2_87()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
    v7 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;

//----- (00000000004252AE) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_10_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (00000000004252DC) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_16_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000425384) ----------------------------------------------------
int goodG2B_151()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000425428) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_16_good()
{
  return goodG2B_151();
}

//----- (0000000000425438) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_12_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *v3; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    dest = v3;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000425537) ----------------------------------------------------
int goodG2B_152()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *v3; // [rsp+68h] [rbp-18h]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  else
  {
    v3 = malloc(0x64uLL);
    if ( !v3 )
      exit(-1);
    memset(v3, 65, 0x63uLL);
    *((_BYTE *)v3 + 99) = 0;
    dest = v3;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000425632) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_12_good()
{
  return goodG2B_152();
}

//----- (0000000000425642) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54c_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54d_badSink(a1);
}

//----- (0000000000425659) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54c_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54d_goodG2BSink(a1);
}

//----- (0000000000425670) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54c_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54d_goodB2GSink(a1);
}

//----- (0000000000425687) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_34_bad()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  char *v3; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  char *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = (char *)s - 8;
  v3 = (char *)s - 8;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (0000000000425737) ----------------------------------------------------
int goodG2B_153()
{
  char src; // [rsp+0h] [rbp-90h]
  char v2; // [rsp+63h] [rbp-2Dh]
  void *v3; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+78h] [rbp-18h]
  void *s; // [rsp+80h] [rbp-10h]
  void *v6; // [rsp+88h] [rbp-8h]

  v6 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v6 = s;
  v3 = s;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &src);
  return printLine(dest);
}

//----- (00000000004257E3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_34_good()
{
  return goodG2B_153();
}

//----- (00000000004257F3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad()
{
  char v1; // [rsp+0h] [rbp-40h]
  char *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  char *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  v2 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_badSink((__int64)&v1);
}

//----- (0000000000425865) ----------------------------------------------------
int goodG2B_154()
{
  char v1; // [rsp+0h] [rbp-40h]
  void *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  void *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  v2 = s;
  return CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004258D3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good()
{
  return goodG2B_154();
}

//----- (00000000004258E3) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (00000000004259AD) ----------------------------------------------------
int goodG2B_155()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000425A2F) ----------------------------------------------------
int goodB2G_39()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int v11; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v11 = -1;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v11 = v2;
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v2 < 0 || v11 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v11;
  *((_DWORD *)&v6 + v11) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}

//----- (0000000000425AFF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_01_good()
{
  goodG2B_155();
  return goodB2G_39();
}

//----- (0000000000425B19) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_03_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000425B9B) ----------------------------------------------------
int goodB2G1_23()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000425C23) ----------------------------------------------------
int goodB2G2_23()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000425CAB) ----------------------------------------------------
int goodG2B1_88()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000425D2D) ----------------------------------------------------
int goodG2B2_88()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000425DAF) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_03_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (0000000000425DDD) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (0000000000425E30) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(dest, &s);
  return printLine(dest);
}

//----- (0000000000425E83) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53d_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000425EFA) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53d_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000425F71) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_53d_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000425FEE) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__malloc_char_loop_61b_badSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return (__int64)(s - 8);
}

//----- (000000000042604C) ----------------------------------------------------
_BYTE *CWE124_Buffer_Underwrite__malloc_char_loop_61b_goodG2BSource()
{
  _BYTE *s; // [rsp+18h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return s;
}

//----- (00000000004260A6) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_18_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000042612A) ----------------------------------------------------
int goodB2G_40()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (00000000004261B4) ----------------------------------------------------
int goodG2B_156()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000426238) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_18_good()
{
  goodB2G_40();
  return goodG2B_156();
}

//----- (0000000000426252) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_11_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000426307) ----------------------------------------------------
int goodG2B1_89()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004263C4) ----------------------------------------------------
int goodG2B2_89()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000426475) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_11_good()
{
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (000000000042648F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_02_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (0000000000426536) ----------------------------------------------------
int goodG2B1_90()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (00000000004265D9) ----------------------------------------------------
int goodG2B2_90()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}

//----- (000000000042667C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_02_good()
{
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (0000000000426696) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68b_badSink()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_68_badData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}
// 6432A0: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_68_badData;

//----- (0000000000426745) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_68b_goodG2BSink()
{
  __int64 v0; // rax
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v3; // [rsp+8h] [rbp-68h]
  __int64 v4; // [rsp+10h] [rbp-60h]
  __int64 v5; // [rsp+18h] [rbp-58h]
  __int64 v6; // [rsp+20h] [rbp-50h]
  __int64 v7; // [rsp+28h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-40h]
  __int64 v9; // [rsp+38h] [rbp-38h]
  __int64 v10; // [rsp+40h] [rbp-30h]
  __int64 v11; // [rsp+48h] [rbp-28h]
  __int64 v12; // [rsp+50h] [rbp-20h]
  __int64 v13; // [rsp+58h] [rbp-18h]
  int v14; // [rsp+60h] [rbp-10h]
  __int64 v15; // [rsp+68h] [rbp-8h]

  v15 = CWE124_Buffer_Underwrite__malloc_char_memcpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v15;
  *(_QWORD *)v15 = s;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v0 + 80) = v12;
  *(_QWORD *)(v0 + 88) = v13;
  *(_DWORD *)(v0 + 96) = v14;
  *(_BYTE *)(v15 + 99) = 0;
  return printLine((const char *)v15);
}
// 6432A8: using guessed type __int64 CWE124_Buffer_Underwrite__malloc_char_memcpy_68_goodG2BData;

//----- (00000000004267F4) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_12_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int j; // [rsp+34h] [rbp-Ch]
  int i; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v8 = -5;
  else
    v8 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 < 0 || v8 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( j = 0; j <= 9; ++j )
        result = printIntLine(*((_DWORD *)&v1 + j));
    }
  }
  return result;
}

//----- (000000000042690D) ----------------------------------------------------
int goodB2G_41()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int j; // [rsp+34h] [rbp-Ch]
  int i; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v8 = -5;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 < 0 || v8 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 < 0 || v8 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( j = 0; j <= 9; ++j )
        result = printIntLine(*((_DWORD *)&v1 + j));
    }
  }
  return result;
}

//----- (0000000000426A2D) ----------------------------------------------------
int goodG2B_157()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int j; // [rsp+34h] [rbp-Ch]
  int i; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v8 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v8 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v8;
      *((_DWORD *)&v1 + v8) = 1;
      for ( j = 0; j <= 9; ++j )
        result = printIntLine(*((_DWORD *)&v1 + j));
    }
  }
  return result;
}

//----- (0000000000426B40) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_12_good()
{
  goodB2G_41();
  return goodG2B_157();
}

//----- (0000000000426B5A) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000426C38) ----------------------------------------------------
int goodB2G1_24()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v6 = 0LL;
  v7 = 0LL;
  v8 = 0LL;
  v9 = 0LL;
  v10 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v12;
  *((_DWORD *)&v6 + v12) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v6 + i));
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000426D28) ----------------------------------------------------
int goodB2G2_24()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  __int64 v6; // [rsp+0h] [rbp-40h]
  __int64 v7; // [rsp+8h] [rbp-38h]
  __int64 v8; // [rsp+10h] [rbp-30h]
  __int64 v9; // [rsp+18h] [rbp-28h]
  __int64 v10; // [rsp+20h] [rbp-20h]
  int i; // [rsp+28h] [rbp-18h]
  int v12; // [rsp+2Ch] [rbp-14h]

  v12 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v12 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    v10 = 0LL;
    if ( v12 < 0 || v12 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v12;
      *((_DWORD *)&v6 + v12) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v6 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000426E0C) ----------------------------------------------------
int goodG2B1_91()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000426EAE) ----------------------------------------------------
int goodG2B2_91()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
    v7 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000426F44) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_09_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (0000000000426F72) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54e_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (0000000000426FB9) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_cpy_54e_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  strcpy(a1, &s);
  return printLine(a1);
}

//----- (0000000000427000) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_66_bad()
{
  char v1; // [rsp+0h] [rbp-40h]
  char *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  char *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = (char *)s - 8;
  v2 = (char *)s - 8;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_66b_badSink((__int64)&v1);
}

//----- (0000000000427072) ----------------------------------------------------
int goodG2B_158()
{
  char v1; // [rsp+0h] [rbp-40h]
  void *v2; // [rsp+10h] [rbp-30h]
  void *s; // [rsp+30h] [rbp-10h]
  void *v4; // [rsp+38h] [rbp-8h]

  v4 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  v2 = s;
  return CWE124_Buffer_Underwrite__malloc_char_cpy_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004270E0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_cpy_66_good()
{
  return goodG2B_158();
}

//----- (00000000004270F0) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_61_bad()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_61b_badSource();
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + v3) = s[i];
  *(_BYTE *)(v3 + 99) = 0;
  return printLine((const char *)v3);
}
// 4270F0: using guessed type char s[99];

//----- (0000000000427174) ----------------------------------------------------
int goodG2B_159()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  const char *v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE124_Buffer_Underwrite__malloc_char_loop_61b_goodG2BSource();
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v3[i] = s[i];
  *((_BYTE *)v3 + 99) = 0;
  return printLine(v3);
}
// 427174: using guessed type char s[99];

//----- (00000000004271F8) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_61_good()
{
  return goodG2B_159();
}

//----- (0000000000427208) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54c_badSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54d_badSink(a1);
}

//----- (0000000000427222) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54c_goodG2BSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54d_goodG2BSink(a1);
}

//----- (000000000042723C) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53d_badSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (0000000000427293) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_53d_goodG2BSink(_BYTE *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(a1, &s, 0x64uLL);
  a1[99] = 0;
  return printLine(a1);
}

//----- (00000000004272EA) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_negative_61b_badSource()
{
  return 4294967291LL;
}

//----- (00000000004272FD) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_negative_61b_goodG2BSource()
{
  return 7LL;
}

//----- (0000000000427310) ----------------------------------------------------
__int64 CWE124_Buffer_Underwrite__CWE839_negative_61b_goodB2GSource()
{
  return 4294967291LL;
}

//----- (0000000000427323) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_07_bad()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( staticFive_5 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (char *)s - 8;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643118: using guessed type int staticFive_5;
// 427323: using guessed type char var_80[99];

//----- (00000000004273EE) ----------------------------------------------------
int goodG2B1_92()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( staticFive_5 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643118: using guessed type int staticFive_5;
// 4273EE: using guessed type char var_80[99];

//----- (00000000004274C1) ----------------------------------------------------
int goodG2B2_92()
{
  char v1[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+68h] [rbp-18h]
  unsigned __int64 i; // [rsp+70h] [rbp-10h]
  const char *v5; // [rsp+78h] [rbp-8h]

  v5 = 0LL;
  if ( staticFive_5 == 5 )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v5 = (const char *)s;
  }
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v5[i] = v1[i];
  *((_BYTE *)v5 + 99) = 0;
  return printLine(v5);
}
// 643118: using guessed type int staticFive_5;
// 4274C1: using guessed type char var_80[99];

//----- (0000000000427588) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_loop_07_good()
{
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (00000000004275A2) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54b_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54c_badSink(a1);
}

//----- (00000000004275B9) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54b_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54c_goodG2BSink(a1);
}

//----- (00000000004275D0) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_54b_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54c_goodB2GSink(a1);
}

//----- (00000000004275E7) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = -5;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000427685) ----------------------------------------------------
int goodB2G1_25()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = -5;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000427735) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = -5;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (00000000004277D9) ----------------------------------------------------
int goodG2B1_93()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000427883) ----------------------------------------------------
int goodG2B2_93()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}

//----- (0000000000427921) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_11_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (000000000042794F) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_02_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004279D1) ----------------------------------------------------
int goodB2G1_26()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000427A59) ----------------------------------------------------
int goodB2G2_26()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000427AE1) ----------------------------------------------------
int goodG2B1_94()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000427B63) ----------------------------------------------------
int goodG2B2_94()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (0000000000427BE5) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_02_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (0000000000427C13) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_09_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = (char *)s - 8;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427D15) ----------------------------------------------------
int goodG2B1_95()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000427E1F) ----------------------------------------------------
int goodG2B2_95()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    v16 = s;
  }
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427F1D) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_09_good()
{
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (0000000000427F37) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
    v7 = -5;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000427FCD) ----------------------------------------------------
int goodB2G1_27()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
    v7 = -5;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 64311C: using guessed type int globalTrue;
// 643270: using guessed type int globalFalse;

//----- (0000000000428075) ----------------------------------------------------
int goodB2G2_27()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
    v7 = -5;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000428111) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;
// 643270: using guessed type int globalFalse;

//----- (00000000004281B3) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
    v7 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 64311C: using guessed type int globalTrue;

//----- (0000000000428249) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_10_good()
{
  goodB2G1_27();
  goodB2G2_27();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (0000000000428277) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_09_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = (char *)s - 8;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000428328) ----------------------------------------------------
int goodG2B1_97()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004283E1) ----------------------------------------------------
int goodG2B2_97()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  void *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    s = malloc(0x64uLL);
    if ( !s )
      exit(-1);
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
    dest = s;
  }
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  memmove(dest, &src, 0x64uLL);
  *((_BYTE *)dest + 99) = 0;
  return printLine((const char *)dest);
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042848E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memmove_09_good()
{
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (00000000004284A8) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54c_badSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54d_badSink(a1);
}

//----- (00000000004284BF) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54c_goodG2BSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54d_goodG2BSink(a1);
}

//----- (00000000004284D6) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_54c_goodB2GSink(int a1)
{
  return CWE124_Buffer_Underwrite__CWE839_negative_54d_goodB2GSink(a1);
}

//----- (00000000004284ED) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_01_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = -5;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  result = -5;
  *((_DWORD *)&v1 - 5) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (000000000042856F) ----------------------------------------------------
int goodG2B_160()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v6 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0x100000000LL;
  v5 = 0LL;
  result = 7;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}

//----- (00000000004285F1) ----------------------------------------------------
int goodB2G_42()
{
  return printLine("ERROR: Array index is out-of-bounds");
}

//----- (0000000000428679) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_01_good()
{
  goodG2B_160();
  return goodB2G_42();
}

//----- (0000000000428693) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_54b_badSink(v2);
}

//----- (00000000004286FD) ----------------------------------------------------
int goodG2B_161()
{
  return CWE124_Buffer_Underwrite__CWE839_rand_54b_goodG2BSink(7);
}

//----- (000000000042871F) ----------------------------------------------------
int goodB2G_43()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE124_Buffer_Underwrite__CWE839_rand_54b_goodB2GSink(v2);
}

//----- (0000000000428789) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_54_good()
{
  goodG2B_161();
  return goodB2G_43();
}

//----- (00000000004287A3) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53d_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000042881A) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53d_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000428891) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_negative_53d_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000042890E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad()
{
  char *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v0 + 1) = v3;
  *((_QWORD *)v0 + 2) = v4;
  *((_QWORD *)v0 + 3) = v5;
  *((_QWORD *)v0 + 4) = v6;
  *((_QWORD *)v0 + 5) = v7;
  *((_QWORD *)v0 + 6) = v8;
  *((_QWORD *)v0 + 7) = v9;
  *((_QWORD *)v0 + 8) = v10;
  *((_QWORD *)v0 + 9) = v11;
  *((_QWORD *)v0 + 10) = v12;
  *((_QWORD *)v0 + 11) = v13;
  *((_DWORD *)v0 + 24) = v14;
  v16[99] = 0;
  return printLine(v16);
}

//----- (0000000000428A07) ----------------------------------------------------
int goodG2B1_98()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000428AFC) ----------------------------------------------------
int goodG2B2_98()
{
  _QWORD *v0; // rax
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v16 = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v0 = v16;
  *v16 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v9;
  v0[8] = v10;
  v0[9] = v11;
  v0[10] = v12;
  v0[11] = v13;
  *((_DWORD *)v0 + 24) = v14;
  *((_BYTE *)v16 + 99) = 0;
  return printLine((const char *)v16);
}

//----- (0000000000428BF1) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good()
{
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (0000000000428C0B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_65b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 428C0B: using guessed type char s[99];

//----- (0000000000428C7B) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_loop_65b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    *(_BYTE *)(i + a1) = s[i];
  *(_BYTE *)(a1 + 99) = 0;
  return printLine((const char *)a1);
}
// 428C7B: using guessed type char s[99];

//----- (0000000000428CEB) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54b_badSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54c_badSink(a1);
}

//----- (0000000000428D05) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__malloc_char_memmove_54b_goodG2BSink(_BYTE *a1)
{
  return CWE124_Buffer_Underwrite__malloc_char_memmove_54c_goodG2BSink(a1);
}

//----- (0000000000428D1F) ----------------------------------------------------
void CWE124_Buffer_Underwrite__CWE839_rand_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  __int64 v5; // [rsp+0h] [rbp-50h]
  __int64 v6; // [rsp+8h] [rbp-48h]
  __int64 v7; // [rsp+10h] [rbp-40h]
  __int64 v8; // [rsp+18h] [rbp-38h]
  __int64 v9; // [rsp+20h] [rbp-30h]
  int k; // [rsp+30h] [rbp-20h]
  int v11; // [rsp+34h] [rbp-1Ch]
  int j; // [rsp+38h] [rbp-18h]
  int i; // [rsp+3Ch] [rbp-14h]

  v11 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    v5 = 0LL;
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    if ( v11 > 9 )
    {
      printLine("ERROR: Array index is negative.");
    }
    else
    {
      *((_DWORD *)&v5 + v11) = 1;
      for ( k = 0; k <= 9; ++k )
        printIntLine(*((_DWORD *)&v5 + k));
    }
  }
}

//----- (0000000000428E0F) ----------------------------------------------------
void goodB2G_44()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  __int64 v5; // [rsp+0h] [rbp-50h]
  __int64 v6; // [rsp+8h] [rbp-48h]
  __int64 v7; // [rsp+10h] [rbp-40h]
  __int64 v8; // [rsp+18h] [rbp-38h]
  __int64 v9; // [rsp+20h] [rbp-30h]
  int k; // [rsp+30h] [rbp-20h]
  int v11; // [rsp+34h] [rbp-1Ch]
  int j; // [rsp+38h] [rbp-18h]
  int i; // [rsp+3Ch] [rbp-14h]

  v11 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    v5 = 0LL;
    v6 = 0LL;
    v7 = 0LL;
    v8 = 0LL;
    v9 = 0LL;
    if ( v11 < 0 || v11 > 9 )
    {
      printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      *((_DWORD *)&v5 + v11) = 1;
      for ( k = 0; k <= 9; ++k )
        printIntLine(*((_DWORD *)&v5 + k));
    }
  }
}

//----- (0000000000428F05) ----------------------------------------------------
int goodG2B_162()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int k; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  for ( i = 0; i <= 0; ++i )
    v7 = 7;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( k = 0; k <= 9; ++k )
        result = printIntLine(*((_DWORD *)&v1 + k));
    }
  }
  return result;
}

//----- (0000000000428FAD) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_rand_17_good()
{
  goodB2G_44();
  return goodG2B_162();
}

//----- (0000000000428FC7) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_65b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (000000000042903E) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_65b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    return printLine("ERROR: Array index is negative.");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (00000000004290B5) ----------------------------------------------------
int __fastcall CWE124_Buffer_Underwrite__CWE839_rand_65b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = a1;
  *((_DWORD *)&v2 + a1) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v2 + i));
  return result;
}

//----- (0000000000429132) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_01_bad()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s - 8;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (00000000004291D9) ----------------------------------------------------
int goodG2B_163()
{
  char src; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  void *s; // [rsp+70h] [rbp-10h]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = 0LL;
  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  dest = (char *)s;
  memset(&src, 67, 0x63uLL);
  v2 = 0;
  strncpy(dest, &src, 0x63uLL);
  dest[99] = 0;
  return printLine(dest);
}

//----- (000000000042927C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__malloc_char_ncpy_01_good()
{
  return goodG2B_163();
}

//----- (000000000042928C) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
    v7 = -5;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000429322) ----------------------------------------------------
int goodB2G1_28()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
    v7 = -5;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    return printLine("ERROR: Array index is out-of-bounds");
  result = v7;
  *((_DWORD *)&v1 + v7) = 1;
  for ( i = 0; i <= 9; ++i )
    result = printIntLine(*((_DWORD *)&v1 + i));
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004293CA) ----------------------------------------------------
int goodB2G2_28()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
    v7 = -5;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 < 0 || v7 > 9 )
    {
      result = printLine("ERROR: Array index is out-of-bounds");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000429466) ----------------------------------------------------
int goodG2B1_99()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v7 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;
// 433F64: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000429508) ----------------------------------------------------
int goodG2B2_99()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int i; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
    v7 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v7 > 9 )
    {
      result = printLine("ERROR: Array index is negative.");
    }
    else
    {
      result = v7;
      *((_DWORD *)&v1 + v7) = 1;
      for ( i = 0; i <= 9; ++i )
        result = printIntLine(*((_DWORD *)&v1 + i));
    }
  }
  return result;
}
// 433F60: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042959E) ----------------------------------------------------
int CWE124_Buffer_Underwrite__CWE839_negative_09_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (00000000004295CC) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (00000000004295ED) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (0000000000429618) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (0000000000429639) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000042965E) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (0000000000429684) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004296A8) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004296CC) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (00000000004296F0) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000429714) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000429744) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000429765) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (0000000000429789) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (00000000004297B4) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (00000000004297E0) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (0000000000429837) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400A20: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429910) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400AF0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004299C4) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (00000000004299CF) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (00000000004299DA) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (00000000004299F0) ----------------------------------------------------
void good1()
{
  ;
}

//----- (00000000004299F6) ----------------------------------------------------
void good2()
{
  ;
}

//----- (00000000004299FC) ----------------------------------------------------
void good3()
{
  ;
}

//----- (0000000000429A02) ----------------------------------------------------
void good4()
{
  ;
}

//----- (0000000000429A08) ----------------------------------------------------
void good5()
{
  ;
}

//----- (0000000000429A0E) ----------------------------------------------------
void good6()
{
  ;
}

//----- (0000000000429A14) ----------------------------------------------------
void good7()
{
  ;
}

//----- (0000000000429A1A) ----------------------------------------------------
void good8()
{
  ;
}

//----- (0000000000429A20) ----------------------------------------------------
void good9()
{
  ;
}

//----- (0000000000429A26) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (0000000000429A2C) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (0000000000429A32) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (0000000000429A38) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (0000000000429A3E) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (0000000000429A44) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (0000000000429A4A) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (0000000000429A50) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (0000000000429A56) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (0000000000429A5C) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (0000000000429A8F) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (0000000000429B33) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (0000000000429B67) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000429B86) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (0000000000429BFB) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (0000000000429C15) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (0000000000429C2F) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (0000000000429C60) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 642DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 642DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (0000000000429CD4) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 1457 function(s) have been successfully decompiled
